<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<HostPackage>
		<Host autoClearCommandLineAfterSend="no" HighlightHistory="yes" printCommand="no" USE_IRE_DRIVER_BUGFIX="yes" mUSE_FORCE_LF_AFTER_PROMPT="no" mUSE_UNIX_EOL="no" mNoAntiAlias="no" mEchoLuaErrors="no" runAllKeyMatches="no" AmbigousWidthGlyphsToBeWide="auto" mRawStreamDump="yes" mIsLoggingTimestamps="yes" logDirectory="" logFileName="" logFileNameFormat="yyyy-MM-dd#HH-mm-ss" mAlertOnNewData="yes" mFORCE_NO_COMPRESSION="no" mFORCE_GA_OFF="no" mFORCE_SAVE_ON_EXIT="yes" mEnableGMCP="yes" mEnableMSSP="yes" mEnableMSP="yes" mEnableMSDP="no" mMapStrongHighlight="no" mEnableSpellCheck="no" mEnableUserDictionary="yes" mUseSharedDictionary="yes" mShowInfo="no" mAcceptServerGUI="yes" mAcceptServerMedia="yes" mMapperUseAntiAlias="yes" mMapperShowRoomBorders="yes" mFORCE_MXP_NEGOTIATION_OFF="no" mFORCE_CHARSET_NEGOTIATION_OFF="no" enableTextAnalyzer="no" mRoomSize="0.5" mLineSize="10.0" mBubbleMode="no" mMapViewOnly="yes" mShowRoomIDs="no" mShowPanel="no" mHaveMapperScript="no" mEditorAutoComplete="no" mEditorShowBidi="yes" mEditorTheme="3024 (Night)" mEditorThemeFile="3024_Night.tmTheme" mThemePreviewItemID="5" mThemePreviewType="trigger" mSearchEngineName="Google" mTimerSupressionInterval="00:00:00.000" mUseProxy="no" mProxyAddress="" mProxyPort="0" mProxyUsername="" mProxyPassword="" mSslTsl="no" mSslIgnoreExpired="no" mSslIgnoreSelfSigned="no" mSslIgnoreAll="no" mAskTlsAvailable="no" mDiscordAccessFlags="2495" mRequiredDiscordUserName="" mRequiredDiscordUserDiscriminator="" mSGRCodeHasColSpaceId="no" mServerMayRedefineColors="no" playerRoomPrimaryColor="#ffff0000" playerRoomSecondaryColor="#ffffffff" playerRoomStyle="0" playerRoomOuterDiameter="120" playerRoomInnerDiameter="70" CompactInputLine="no" mDoubleClickIgnore="'&quot;" EditorSearchOptions="0" DebugShowAllProblemCodepoints="no" announceIncomingText="yes" caretShortcut="None" blankLineBehaviour="Show" NetworkPacketTimeout="300" Large2DMapAreaExitArrows="yes">
			<name>Achaea</name>
			<mInstalledPackages>
				<string>deleteOldProfiles</string>
				<string>echo</string>
				<string>run-lua-code-v4</string>
				<string>zGUI</string>
				<string>zGUI</string>
				<string>zGUI</string>
				<string>zGUI</string>
				<string>zGUI</string>
				<string>battriggers</string>
				<string>batalias</string>
				<string>batscripts</string>
				<string>battimers</string>
				<string>batkeys</string>
				<string>AK Opponent Tracking</string>
				<string>zData</string>
				<string>zData</string>
				<string>zData</string>
			</mInstalledPackages>
			<mInstalledModules>
				<key>svo (actions dictionary)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (actions dictionary).xml</filepath>
				<globalSave>1</globalSave>
				<priority>0</priority>
				<key>svo (alias and defence functions)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (alias and defence functions).xml</filepath>
				<globalSave>1</globalSave>
				<priority>0</priority>
				<key>svo (aliases, triggers)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (aliases, triggers).xml</filepath>
				<globalSave>1</globalSave>
				<priority>0</priority>
				<key>svo (burncounter)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (burncounter).xml</filepath>
				<globalSave>1</globalSave>
				<priority>0</priority>
				<key>svo (curing skeleton, controllers, action system)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (curing skeleton, controllers, action system).xml</filepath>
				<globalSave>1</globalSave>
				<priority>0</priority>
				<key>svo (custom prompt, serverside)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (custom prompt, serverside).xml</filepath>
				<globalSave>1</globalSave>
				<priority>0</priority>
				<key>svo (elistsorter)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (elistsorter).xml</filepath>
				<globalSave>1</globalSave>
				<priority>0</priority>
				<key>svo (enchanter)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (enchanter).xml</filepath>
				<globalSave>1</globalSave>
				<priority>0</priority>
				<key>svo (fishdist)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (fishdist).xml</filepath>
				<globalSave>1</globalSave>
				<priority>0</priority>
				<key>svo (inker)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (inker).xml</filepath>
				<globalSave>1</globalSave>
				<priority>0</priority>
				<key>svo (install me in module manager)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (install me in module manager).xml</filepath>
				<globalSave>1</globalSave>
				<priority>0</priority>
				<key>svo (install, config, pipes, rift, parry, prios)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (install, config, pipes, rift, parry, prios).xml</filepath>
				<globalSave>1</globalSave>
				<priority>0</priority>
				<key>svo (limbcounter)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (limbcounter).xml</filepath>
				<globalSave>1</globalSave>
				<priority>0</priority>
				<key>svo (logger)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (logger).xml</filepath>
				<globalSave>1</globalSave>
				<priority>1</priority>
				<key>svo (mindnet)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (mindnet).xml</filepath>
				<globalSave>1</globalSave>
				<priority>0</priority>
				<key>svo (namedb)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (namedb).xml</filepath>
				<globalSave>1</globalSave>
				<priority>1</priority>
				<key>svo (offering)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (offering).xml</filepath>
				<globalSave>1</globalSave>
				<priority>1</priority>
				<key>svo (peopletracker)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (peopletracker).xml</filepath>
				<globalSave>1</globalSave>
				<priority>0</priority>
				<key>svo (priestreport)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (priestreport).xml</filepath>
				<globalSave>1</globalSave>
				<priority>0</priority>
				<key>svo (reboundingsileristracker)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (reboundingsileristracker).xml</filepath>
				<globalSave>1</globalSave>
				<priority>0</priority>
				<key>svo (refiller)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (refiller).xml</filepath>
				<globalSave>1</globalSave>
				<priority>0</priority>
				<key>svo (runeidentifier)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (runeidentifier).xml</filepath>
				<globalSave>1</globalSave>
				<priority>0</priority>
				<key>svo (setup, misc, empty, funnies, dor)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (setup, misc, empty, funnies, dor).xml</filepath>
				<globalSave>1</globalSave>
				<priority>0</priority>
				<key>svo (stormhammertarget)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (stormhammertarget).xml</filepath>
				<globalSave>1</globalSave>
				<priority>0</priority>
				<key>svo (trigger functions)</key>
				<filepath>/home/hbn/mudlet-data/svof-in-client-svof/svo (trigger functions).xml</filepath>
				<globalSave>1</globalSave>
				<priority>0</priority>
			</mInstalledModules>
			<url>achaea.com</url>
			<serverPackageName>nothing</serverPackageName>
			<serverPackageVersion>-1</serverPackageVersion>
			<port>23</port>
			<borderTopHeight>0</borderTopHeight>
			<borderBottomHeight>18</borderBottomHeight>
			<borderLeftWidth>0</borderLeftWidth>
			<borderRightWidth>0</borderRightWidth>
			<wrapAt>104</wrapAt>
			<wrapIndentCount>0</wrapIndentCount>
			<mFgColor>#c0c0c0</mFgColor>
			<mBgColor>#000000</mBgColor>
			<mCommandFgColor>#717100</mCommandFgColor>
			<mCommandBgColor>#000000</mCommandBgColor>
			<mCommandLineFgColor>#808080</mCommandLineFgColor>
			<mCommandLineBgColor>#000000</mCommandLineBgColor>
			<mBlack>#000000</mBlack>
			<mLightBlack>#808080</mLightBlack>
			<mRed>#800000</mRed>
			<mLightRed>#ff0000</mLightRed>
			<mBlue>#000080</mBlue>
			<mLightBlue>#0000ff</mLightBlue>
			<mGreen>#008000</mGreen>
			<mLightGreen>#00ff00</mLightGreen>
			<mYellow>#808000</mYellow>
			<mLightYellow>#ffff00</mLightYellow>
			<mCyan>#008080</mCyan>
			<mLightCyan>#00ffff</mLightCyan>
			<mMagenta>#800080</mMagenta>
			<mLightMagenta>#ff00ff</mLightMagenta>
			<mWhite>#c0c0c0</mWhite>
			<mLightWhite>#ffffff</mLightWhite>
			<mDisplayFont>Liberation Mono,11,-1,5,50,0,0,0,1,0</mDisplayFont>
			<mCommandLineFont>Bitstream Vera Sans Mono,14,-1,5,50,0,0,0,0,0</mCommandLineFont>
			<mCommandSeparator>;;</mCommandSeparator>
			<commandLineMinimumHeight>20</commandLineMinimumHeight>
			<mFgColor2>#c0c0c0</mFgColor2>
			<mBgColor2>#000000</mBgColor2>
			<mRoomBorderColor>#c0c0c0</mRoomBorderColor>
			<mMapInfoBg alpha="255">#969696</mMapInfoBg>
			<mBlack2>#000000</mBlack2>
			<mLightBlack2>#808080</mLightBlack2>
			<mRed2>#800000</mRed2>
			<mLightRed2>#ff0000</mLightRed2>
			<mBlue2>#000080</mBlue2>
			<mLightBlue2>#0000ff</mLightBlue2>
			<mGreen2>#008000</mGreen2>
			<mLightGreen2>#00ff00</mLightGreen2>
			<mYellow2>#808000</mYellow2>
			<mLightYellow2>#ffff00</mLightYellow2>
			<mCyan2>#008080</mCyan2>
			<mLightCyan2>#00ffff</mLightCyan2>
			<mMagenta2>#800080</mMagenta2>
			<mLightMagenta2>#ff00ff</mLightMagenta2>
			<mWhite2>#c0c0c0</mWhite2>
			<mLightWhite2>#ffffff</mLightWhite2>
			<mSpellDic>en_US</mSpellDic>
			<mLineSize>10.0</mLineSize>
			<mRoomSize>0.5</mRoomSize>
			<profileShortcut key="Script editor">Alt+E</profileShortcut>
			<profileShortcut key="Show Map">Alt+M</profileShortcut>
			<profileShortcut key="Compact input line">Alt+L</profileShortcut>
			<profileShortcut key="Preferences">Alt+P</profileShortcut>
			<profileShortcut key="Notepad">Alt+N</profileShortcut>
			<profileShortcut key="Package manager">Alt+O</profileShortcut>
			<profileShortcut key="Module manager">Alt+I</profileShortcut>
			<profileShortcut key="MultiView">Alt+V</profileShortcut>
			<profileShortcut key="Play">Alt+C</profileShortcut>
			<profileShortcut key="Disconnect">Alt+D</profileShortcut>
			<profileShortcut key="Reconnect">Alt+R</profileShortcut>
			<profileShortcut key="Close profile">Alt+W</profileShortcut>
			<stopwatches />
		</Host>
	</HostPackage>
	<TriggerPackage>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>imported systems **</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>zGUI</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName>zGUI</packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>zGUI</name>
					<script>zgui = zgui or {}</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Logger</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Health Sip</name>
							<script>zgui.sendLogger("green", "Health Sipped")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The elixir heals and soothes you.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Mana Sip</name>
							<script>zgui.sendLogger("blue", "Mana Sipped")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your mind feels stronger and more alert.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Wilderness Map</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>GMCP Map Catchers</name>
							<script>if not zgui.map then
  zgui.buildMap()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return gmcp.Room</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>GMCP Rooms</name>
								<script>if zgui.map.current ~= "Mapper" then
  zgui.map[zgui.map.current]:hide()
end
zgui.map.current = "Mapper"
zgui.map["Mapper"]:show()
zgui.ship = zgui.ship or {}
zgui.shipmode = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>return gmcp.Room.Info.num &lt; 2121028</string>
									<string>return gmcp.Room.Info.num &gt; 0</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>4</integer>
									<integer>4</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>GMCP Wilderness</name>
								<script>if zgui.map.current ~= "Wilderness" then
  zgui.map[zgui.map.current]:hide()
end
zgui.map.current = "Wilderness"
zgui.map["Wilderness"]:show()
zgui.ship = zgui.ship or {}
zgui.shipmode = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>return gmcp.Room.Info.num &gt; 2121028</string>
									<string>return gmcp.Room.Info.coords==""</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>4</integer>
									<integer>4</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Catch All</name>
									<script>selectCurrentLine()
copy()
appendBuffer("Wilderness")
deleteLine()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^[ wnmjSIMXWYx',;#=@~%!\.\^\|\*\?\+\(]+$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>GMCP Oceans</name>
								<script>if zgui.map.current ~= "Ocean" then
  zgui.map[zgui.map.current]:hide()
end
zgui.map.current = "Ocean"
zgui.map["Ocean"]:show() 
zgui.ship = zgui.ship or {}
zgui.shipmode = true</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>return gmcp.Room.Info.environment=='Vessel'</string>
									<string>return gmcp.Room.Info.num==-2</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>4</integer>
									<integer>4</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Catch All</name>
									<script>selectCurrentLine()
copy()
appendBuffer("Ocean")
deleteLine()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^[ wnmjSIMXWYx',;#=@~%!\.\^\|\*\?\+\(]+$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ship Room Detected</name>
							<script>clearWindow("Ocean") 
zgui.ship = zgui.ship or {}
zgui.shipmode = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The ship moves</string>
								<string>The ship drifts</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Allies</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ally Start</name>
							<script>zgui.allies = {}
enableTrigger("AllyReport")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have the following allies:</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ally End</name>
							<script>zgui.showAllies()
disableTrigger("AllyReport")
--allyString = table.concat(zgui.allies, ", ")
--send("pt My Allies: "..allyString)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have currently used (\w+) ally slots of your (\w+) maximum.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>AllyReport</name>
							<script>table.insert(zgui.allies, 1, matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You feel an unusually strong lust for (\w+).$</string>
								<string>^(\w+) is an ally.$</string>
								<string>^(\w+) is an ally \(M\).$</string>
								<string>^You feel an unusually strong lust for (\w+) \(M\).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>No Allies</name>
							<script>zgui.allies = {}
zgui.showAllies()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>With an indignant grunt, you remove everyone from your list of allies.</string>
								<string>You have no allies.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Add Ally</name>
							<script>table.insert(zgui.allies, 1, matches[2])
zgui.showAllies()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) is now one of your allies.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Remove Ally</name>
							<script>local removeThisAlly = table.index_of(zgui.allies, matches[2])
table.remove(zgui.allies, removeThisAlly) 		
zgui.showAllies()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You declare that (\w+) will no longer be one of your allies.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Enemies</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Enemy Start</name>
							<script>zgui.enemies = {}
enableTrigger("EnemyReport")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have the following enemies:$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Enemy End</name>
							<script>zgui.showEnemies()
disableTrigger("EnemyReport")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have currently used (\d+) enemy slots of your (\d+) maximum.$</string>
								<string>^You have currently used (\d+) enemy slot of your (\d+) maximum.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>EnemyReport</name>
							<script>table.insert(zgui.enemies, 1, matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>No Enemies</name>
							<script>disableTrigger("EnemyReport")
zgui.enemies = {}
zgui.showEnemies()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have no enemies.</string>
								<string>In a moment of forgiveness, you declare that you have no enemies.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Add Enemy</name>
							<script>table.insert(zgui.enemies, 1, matches[2])
zgui.showEnemies()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) is now one of your enemies.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Remove Enemy</name>
							<script>local removeThisEnemy = table.index_of(zgui.enemies, matches[2])
table.remove(zgui.enemies, removeThisEnemy) 	
zgui.showEnemies()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You declare that (\w+) will no longer be one of your enemies.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Balances</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>wsys balance prompt</name>
							<script>if zgui.balances and wsys then zgui.showBals() end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Who here</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Who here</name>
							<script>zgui.whoRoomList={}
enableTrigger("whoHereCatch")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You see the following people here:</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>whoHereCatch</name>
							<script>local tempI = 0
for k,v in pairs(mmp.pdb_lastupdate) do
	tempI = tempI + 1
	zgui.whoRoomList[tempI] = k
end	
tempI = 0
disableTrigger("whoHereCatch")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Prompt Window</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Got Prompt</name>
							<script>if zgui.prompt then
  selectCurrentLine()
  copy()
  appendBuffer("myPrompt")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Enemy Afflictions</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Enemy Afflictions Update</name>
							<script>if ak then zgui.showTarAffs() end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Log In/Out</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Log In</name>
							<script>zgui.running = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your last login was from domain</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Log Out</name>
							<script>Adjustable.Container:saveAll("default")
zgui.windows = "default"
zgui.echo("Saving zGUI Window Layout As: default")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You grow still and begin to silently pray for preservation of your soul while you are out of the land.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>DeathCape</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Death Cape Growing</name>
							<script>deleteLine()
if not zgui.cape then zgui.buildCape() end
if zgui.cape then zgui.renewCape() end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You feel a surge of energy course through your body as a sycophantic shoulder cape feeds upon the lifeforce of your fallen foe.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Battlerage</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Rage Gag</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Rage Gains</name>
								<script>deleteFull()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\[Rage\]\: \+(.*) Total\: (.*)$</string>
									<string>You must wait a short time before you can use a battlerage ability again.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Battlerage Skill Ready</name>
								<script>if string.lower(matches[2]) == zgui.RageTable[zgui.useRageClass][2][1] then zgui.RageTable[zgui.useRageClass][2][5] = 1 end
if string.lower(matches[2]) == zgui.RageTable[zgui.useRageClass][3][1] then zgui.RageTable[zgui.useRageClass][3][5] = 1 end
if string.lower(matches[2]) == zgui.RageTable[zgui.useRageClass][4][1] then zgui.RageTable[zgui.useRageClass][4][5] = 1 end
if string.lower(matches[2]) == zgui.RageTable[zgui.useRageClass][5][1] then zgui.RageTable[zgui.useRageClass][5][5] = 1 end
if string.lower(matches[2]) == zgui.RageTable[zgui.useRageClass][6][1] then zgui.RageTable[zgui.useRageClass][6][5] = 1 end
if string.lower(matches[2]) == zgui.RageTable[zgui.useRageClass][7][1] then zgui.RageTable[zgui.useRageClass][7][5] = 1 end
deleteFull()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your (.*) ability could be used again but you lack the necessary Rage.$</string>
									<string>^You can use (.*) again.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Can Use Rage Skils Again</name>
								<script>deleteFull()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You can use another Battlerage ability again, but none of your abilities are currently available.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Rage Fade</name>
								<script>deleteFull()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your rage fades away.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Air Lord</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Lightning (1)</name>
								<script>zgui.rage1SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You call down a lightning bolt to destroy (.*).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Pressure(4)</name>
								<script>zgui.rage4SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You send a crushing wave of pressurised air at (.*), pulverising (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Alchemist</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Miasma (1 alchemist)</name>
								<script>zgui.rage1SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You quickly mix together several chemical by\-products and fling the toxic mixture into (.+)\t's face\, causing (him|her) to cough and choke\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Cadmium (2 alchemist)</name>
								<script>zgui.rage2SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You sketch a bisected triangle in the air and direct the energy of cadmium to pierce (.+)\'s skin\, weakening (him|her)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Caustic (3 alchemist)</name>
								<script>zgui.rage3SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You mix together the ingredients of the caustic chemical and fling it at .+\'s shield\, watching as it is consumed\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Magnesium (4 alchemist)</name>
								<script>zgui.rage4SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You sketch out the symbol for magnesium and direct the energy of iron to sear (.+)\'s flesh\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Pathogen (5 alchemist)</name>
								<script>zgui.rage5SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You quickly combine and throw the virulent pathogen at (.+)\. The chemical seeps through (his|her) skin but (he|she) is able to fight off the worst of its effects\.$</string>
									<string>^You quickly combine and throw the virulent pathogen at (.+)\. The chemical seeps through (his|her) skin and wreaks havoc on (his|her) weakened regeneration\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Hypnotic (6 alchemist)</name>
								<script>zgui.rage6SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Taking care to avoid the fumes\, you quickly form the hypnotic chemical and throw it into (.+)\'s face\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bard</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Moulinet</name>
								<script>zgui.rage1SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You twist your wrist swiftly\, slicing (.+) with a long slash of your sweeping blade\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Trill</name>
								<script>zgui.rage2SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You direct your voice in a high\-pitched trill at (.+)\, dazing (him|her)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Resonance</name>
								<script>zgui.rage3SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You hum a low note at .+\, causing (?:his|her|its) translucent shield to shatter as it resonates with the power of your voice\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Howlslash</name>
								<script>zgui.rage4SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You use your powerful voice to distract (.+) with a ululating howl before stepping in with a vicious slash\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Cyclone</name>
								<script>zgui.rage5SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your careful footwork leads you in a tight spin past .+\, but (?:he|she|it) is able to avoid the worst of your slashing blade\.$</string>
									<string>^Your careful footwork leads you in a tight spin past .+\, (?:his|her|its) stunned state preventing (?:him|her|it) from dodging your slashing blade\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Charm</name>
								<script>zgui.rage6SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You direct a soothing song at (.+)\, enticing (him|her) into defending you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Blademaster</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Leapstrike</name>
								<script>zgui.rage1SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A Shin-enhanced leap flings you high into the air. You extend one knee downwards as you begin to fall, squarely striking (.*) and driving h(im|er) to the ground as you land.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Daze</name>
								<script>zgui.rage2SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You hurl a precise blast of Shin energy at (.*) eyes.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shatter</name>
								<script>zgui.rage3SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You unleash a burst of Shin energy at (.*), tearing apart h(is|er) translucent shield.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Spinslash</name>
								<script>zgui.rage4SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You twist in a tight circle, slashing (.*) with each spin.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Headstrike</name>
								<script>zgui.rage5SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You deliver a glancing blow to (.*) head.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Nerveslash</name>
								<script>zgui.rage6SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You lightly stab (.*) in several key locations with your blade, causing h(im|er) to slump weakly.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Depthswalker</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Drain</name>
								<script>zgui.rage1SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You command the shadow of (.*) to begin siphoning away the life of its host.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Lash</name>
								<script>zgui.rage2SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You summon whips of shadow to viciously lash the form of (.*).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Dragon</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Dragon Rage 1</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Dragonspit (1 black / green)</name>
									<script>zgui.rage1SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You spit a stream of acidic venom at (.+) who writhes in agony as the spittle seeps into (his|her) skin\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Dragonchill (1 blue)</name>
									<script>zgui.rage1SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You form small chunks of ice in your enormous maw\, then spit them at (.+) in a barrage\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Overwhelm (1 gold /  red / silver)</name>
									<script>zgui.rage1SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You charge quickly at (.+)\, throwing your mighty form into (him|her) and sending (him|her) staggering back\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Dragon Rage 2</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Dragonsting (2 black)</name>
									<script>zgui.rage2SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You swing your mighty tail around\, stabbing (.+) with an acid\-covered spine\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Glaciate (2 blue)</name>
									<script>zgui.rage2SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You breathe a column of icy air at (.+)\'s head\, stunning (him|her)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Deaden (2 gold)</name>
									<script>zgui.rage2SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You psychically slam your mind into (.+)\'s\, deadening (his|her) reactions\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Scour (2 green)</name>
									<script>zgui.rage2SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You spit a thick gob of slime at (.+)\, coating (him|her) and inhibiting (his|her) ability to heal\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Dragontaunt (2 red)</name>
									<script>zgui.rage2SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You slap your tail on the ground while growling at (.+)\, forcing (him|her) to recklessly attack\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Sizzle (2 silver)</name>
									<script>zgui.rage2SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You breathe at (.+)\, small bolts of lightning crackling around (him|her) and sensitizing (his|her) skin\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Dragon Rage 3</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Shieldbreak (3 all colour)</name>
									<script>zgui.rage3SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You bathe .+\'s translucent shield in your noxious breath\, dissolving it\.$</string>
										<string>^.+\'s translucent shield cracks and fades away as you breathe an icy blast at it\.$</string>
										<string>^.+\'s translucent shield fades away as you cover it with your deadly wyrmvenom\.$</string>
										<string>^You blast .+ with psychic energy\, demolishing (?:his|her|its) translucent shield\.$</string>
										<string>^You breathe a white\-hot blast of flame at .+ and burn away (?:his|her|its) translucent shield\.$</string>
										<string>^A bolt of lightning cracks out from your maw and obliterates .+\'s translucent shield\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Dragon Rage 4</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Override (4 black / blue / green)</name>
									<script>zgui.rage4SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You barrel into (.+) and knock (him|her) to the ground before stomping over (his|her) prone form\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Psiblast (4 gold)</name>
									<script>zgui.rage4SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You level your draconic gaze at (.+)\, assaulting (him|her) with psychic waves of force\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Dragonblaze (4 red)</name>
									<script>zgui.rage4SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You breathe a long torrent of flame at (.+), igniting (his|her) skin\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Dragonspark (4 silver)</name>
									<script>zgui.rage4SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You open your cavernous maw and summon a blast of lightning to pulverize (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Dragon Rage 5</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Frostwave (5 blue)</name>
									<script>zgui.rage5SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You breathe a wave of icy air at (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Psistorm (5 gold)</name>
									<script>zgui.rage5SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You summon a psychic storm around (.+)\, but (he|she) stands strong against the buffeting winds\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Slaver (5 green)</name>
									<script>zgui.rage5SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Positioning your mighty head over (.+)\, you let your acidic saliva flow over (him|her)\. (He|She) screams in agony as some of the poison splashes over (him|her)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Flamebath (5 red)</name>
									<script>zgui.rage5SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You blast (.+) with a bath of flame\, but (he|she) is able to avoid the brunt of the blast\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Stormflare (5 silver)</name>
									<script>zgui.rage5SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You breathe a series of lightning strikes in a lattice around (.+)\, but (he|she) is able to quickly dart through the lattice and avoid the bulk of the lightning strikes\.$</string>
										<string>^You breathe a series of lightning strikes in a lattice around (.+)\.(\s+)(He|She) absent\-mindedly strides into the lattice as the lightning crackles into (his|her) skin\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Corrode (5 black)</name>
									<script>zgui.rage5SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You open your gigantic maw and spew acid on (.+)\. (He|She) dodges to the side and is only partially covered by the corrosive slime\.$</string>
										<string>^You open your gigantic maw and spew acid on (.+)\. (She|He) is too clumsy to dodge the deluge and is coated in the corrosive slime\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Dragon Rage 6</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Dragonfear (6 black)</name>
									<script>zgui.rage6SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You open your enormous maw and let loose a mighty roar at (.+)\, causing (him|her) to quail in fear\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Ague (6 blue)</name>
									<script>zgui.rage6SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You let loose a steady stream of cold air around (.+)\, who begins to shiver uncontrollably\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Psidaze (6 gold)</name>
									<script>zgui.rage6SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You summon sparkles of psi energy around (.+)\, causing (him|her) to forget (his|her) actions as the sparkles distract (him|her)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Dragonsap (6 green)</name>
									<script>zgui.rage6SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You snap your head forward and sink your teeth into (.+)\, your poisonous teeth injecting (him|her) with a weakening toxin\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Scorch (6 red)</name>
									<script>zgui.rage6SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You blacken (.+)\'s flesh with a quick blast of flame\, slowing (his|her) healing process\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Galvanize (6 silver)</name>
									<script>zgui.rage6SkillUsed()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You puff small bolts of lightning at (.+)\, enraging (him|her) and causing (him|her) to attack recklessly\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Druid</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Strangle (1 druid)</name>
								<script>zgui.rage1SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Gesturing at (.*), you whisper a prayer to Gaia, the Earthmother. Rising in response to your incantation, vines burst forth from the very earth to strangle (her|him).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Redeem (2 druid)</name>
								<script>zgui.rage2SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^At your command\, undergrowth rises from the ground under (.+) and pierces (his|her) skin\, stealing (his|her) energy and making (him|her) weak\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Vinecrack (3 druid)</name>
								<script>zgui.rage3SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You clench one fist before .+ and vines grow up to entangle (his|her|its) translucent shield\, shattering it as they constrict\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ravage (4 druid)</name>
								<script>zgui.rage4SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You roar in rage and spring upon (.+) and ravage (him|her) with your fangs and claws\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Sear (5 druid)</name>
								<script>zgui.rage5SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You hold your quarterstaff aloft and focus a beam of intense sunlight on the stunned form of (.+) who hastily averts (his|her) eyes before any significant damage can be done to them\.$</string>
									<string>^You hold your quarterstaff aloft and focus a beam of intense sunlight on (.+)\. Foolishly\, (.+) stares straight at the dazzling light and screams as (his|her) eyes are seared\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Glare (6 druid)</name>
								<script>zgui.rage6SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You cause the tip of your quarterstaff to glow brightly before thrusting it at the face of (.+)\. (.+) recoils from the blinding light and begins to stagger about clumsily\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Magi</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Windlash (1 magi)</name>
								<script>zgui.rage1SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You draw upon the power of air to summon sharp gusts of wind which begin to whip across (.*)'s exposed flesh\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Dilation (2 magi)</name>
								<script>zgui.rage2SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You summon a polar vortex in a tight field around (.*)\, chilling the small pocket so intensely that time itself begins to slow\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Disinitegrate (3 magi)</name>
								<script>zgui.rage3SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You summon a whirlwind of flame around .+ which consumes (?:his|her|its) translucent shield\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Squeeze (4 magi)</name>
								<script>zgui.rage4SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^At your command\, a crystalline golem stomps over to (.*) and wraps (him|her) in a tight embrace\, squeezing the life from (him|her)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Firefall (5 magi)</name>
								<script>zgui.rage5SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You raise your hands dramatically and summon a mighty flaming rock from the sky down at (.*)\, but (he|she) dodges aside and is only dealt a glancing blow\.$</string>
									<string>^You raise your hands dramatically and summon a mighty flaming rock from the sky that slams into the clumsy form of (.*)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Stormbolt (6 magi)</name>
								<script>zgui.rage6SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A bolt of lightning roars out from your hands as you cast a powerful spell at (.*)\, inciting sensitive nerves across (his|her) skin\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Monk</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Spinningbackfist (1 monk)</name>
								<script>zgui.rage1SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You spin and strike .+ with the back of your fist\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Scramble (2 monk)</name>
								<script>zgui.rage2SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You rummage quickly through .+\'s mind\, finding the link to fine motor control before exerting a small amount of psychic force and deadening it\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Splinterkick (3 monk)</name>
								<script>zgui.rage3SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You focus your rage in a single powerful sidekick\, shattering .+\'s translucent shield\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Tornadokick (4 monk)</name>
								<script>zgui.rage4SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You leap and spin in the air\, striking .+ repeatedly with an outstretched foot\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Mindblast (5 monk)</name>
								<script>zgui.rage5SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Marshalling your psychic reserves\, you hurl them in a blast at .+\.$</string>
									<string>^Marshalling your psychic reserves\, you hurl them in a blast at .+\. (?:His|Her|Its) weakened body recoils from the psychic assault\.$</string>
									<string>^Marshalling your psychic reserves\, you hurl them in a blast at .+\, clamping on the already jangled nerves of your target\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ripplestrike (6 monk)</name>
								<script>zgui.rage6SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You quickly strike .+ with the tips of your fingers\, targeting specific nerves\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Runewarden</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Collide (1 runewarden)</name>
								<script>zgui.rage1SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You charge at .+?, slamming into (?:him|her) and throwing (?:him|her) back\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Bulwark (2 runewarden)</name>
								<script>zgui.rage2SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>The runes on your armour flare brightly as you adopt a defensive stance.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Fragment (3 runewarden)</name>
								<script>zgui.rage3SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You strike at .+\'s translucent shield with .+\, drawing the outline of a rough rune that detonates\, consuming the shield\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Onslaught (4 runewarden)</name>
								<script>zgui.rage4SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You unleash a ferocious onslaught on .+?, relentlessly pounding (?:him|her) with .+?\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Etch (5 runewarden)</name>
								<script>zgui.rage5SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You trace the outline of a rune in the air with .+?\. The edges catch fire as it hurtles towards .+?(?:, clipping (?:him|her) slightly as it dissipates|and s?he is unable to dodge the explosive blast)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Safeguard (6 runewarden)</name>
								<script>zgui.rage6SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You quickly sketch a shimmering rune in the air and send it to settle around (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sentinel</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Pester (1 sentinel)</name>
								<script>zgui.rage1SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You give out a chittering call and a small squirrel appears and leaps at .+ and bites (?:her|him|it)\, continuing to scamper around (?:her|him|it)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Tame (2 sentinel)</name>
								<script>zgui.rage2SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Making soothing noises\, you carefully approach .+\, assuring (?:her|him|it) that you are a friend and urging (?:her|him|it) to fight for you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Bore (3 sentinel)</name>
								<script>zgui.rage3SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You thrust forward with .+\, piercing through .+\'s shield\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Skewer (4 sentinel)</name>
								<script>zgui.rage4SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You leap high into the air, (.*) held high above your head as you land on top of (.*), skewering (\w+) with your weapon.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Swarm (5 sentinel)</name>
								<script>zgui.rage5SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You utter a loud, buzzing call, and a swarm of wasps rushes in but they do little more than annoy (.*).$</string>
									<string>^You utter a loud\, buzzing call and a swarm of wasps rushes in\, swarming over .+\'s form and stinging (?:her|his|it's) slow\-healing flesh\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Goad (6 sentinel)</name>
								<script>zgui.rage6SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You cower before .+\, causing (?:her|him|it) to recklessly attack you with no regard for (?:her|his|it) own safety\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Jester</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Noogie</name>
								<script>zgui.rage1SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You wrap (.*) in a tight headlock and repeatedly rub your knuckles painfully across (his|her) scalp.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Dustthrow</name>
								<script>zgui.rage2SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You take a pinch of diamond dust and flick it at (.*) face. (He|She) begins to cough and retch to expel the fine dust.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Jacks</name>
								<script>zgui.rage3SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You throw a handful of small metallic jacks at (.*), the sharpened points shredding (his|her) translucent shield.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ensconce</name>
								<script>zgui.rage4SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You discreetly secret a lit firecracker to (.*). After a few moments, the firecracker explodes, leaving a blistering wound.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Befuddle</name>
								<script>zgui.rage5SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You strike up a bantering dialogue with .+\, but you\'re only able to cause a minor headache\.$</string>
									<string>^You strike up a dialogue with .+\, gleefully mocking (?:his|her|its) forgetfulness and causing a great headache as (?:he|she|it) is not able to keep up\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Rap</name>
								<script>zgui.rage6SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You whistle innocuously as you saunter by (.*), then suddenly spin and whip (her|him) in the back of the head with your blackjack, stunning (her|him).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Occultist</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Harry</name>
								<script>zgui.rage1SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Raising your hands in the air, you summon horrific visions to torment (.*).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Temper (2 occultist)</name>
								<script>zgui.rage2SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Multicolored rays burst forth from your outstretched hands and strike .+ in the head, forcing (?:her|him|it) to obey your will\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ruin (3 occultist)</name>
								<script>zgui.rage3SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You gesture in a slashing motion at .+\, and small tears form in (?:his|her|its) translucent shield as chaos rips it apart\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Chaosgate (4 occultist)</name>
								<script>zgui.rage4SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You cup your hands together and fling them outwards sending a spiral of shimmering portals into .+\'s body\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Fluctuate (5 occultist)</name>
								<script>zgui.rage5SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You concentrate intently on .+ and watch as grotesque mutations sprout all over (?:her|his|its) body\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Stagnate (6 occultist)</name>
								<script>zgui.rage6SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You wave one arm at .+?\, causing a small time rift to form around (?:him|her|it)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Pariah</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Boil (1 Pariah)</name>
								<script>zgui.rage1SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You reach out and claw at the air, heating the body of (.*) from within.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Feast (2 Pariah)</name>
								<script>zgui.rage2SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You croon to the myriad minds that surround you, and send them to feast upon (.*) in a wave of chittering hunger.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Psion</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Barbedblade</name>
								<script>zgui.rage1SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You weave a jagged blade into being and viciously hack at (.*), opening bleeding wounds.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Devastate</name>
								<script>zgui.rage2SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You hammer the mind of (.*) with a devastating psionic onslaught.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Regrowth</name>
								<script>zgui.rage3SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You direct nature to restrain (.*), and vines flash from nothingness into being tobind h(im|er)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Pulverise</name>
								<script>zgui.rage4SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You weave a great warhammer into being and with an overhand swing obliterate the magical shield surrounding (.*).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Whirlwind</name>
								<script>zgui.rage5SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You burst into motion, blades materialising in your hands as you deliver a relentless flurry of blows against (.*).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Terror</name>
								<script>zgui.rage6SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You inspire abject terror in the mind of (.*), coaxing h(is|er) darkest fears to the surface.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Serpent</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Thrash</name>
								<script>zgui.rage1SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You crack .+ over your head before repeatedly lashing .+ with it.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Flagellate</name>
								<script>zgui.rage2SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You crack (.*) lightly against (.*) flesh, awakening sensitive nerves.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Excoriate</name>
								<script>zgui.rage3SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You lash out at (.*) with your whip, stripping h(is|er) translucent shield.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Throatrip</name>
								<script>zgui.rage4SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You leap upon (.*) and sink your fangs into (.*) throat before leaping away, blood gushing from the horrific wound.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Snare</name>
								<script>zgui.rage5SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You step behind (.*) and trip (.*) into your waiting whip. After choking against it for a few moments,(.*) is able to slip free.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Obliviate</name>
								<script>zgui.rage6SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You draw(.*) attention with the wavering tip of one finger, then quickly snap your fingers in front of (.*) face, the sudden sound temporarily blanking (.*) mind.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Shaman</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Corruption</name>
								<script>zgui.rage1SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You point an imperious finger at (.*). H(er|is) flesh blackens and sloughs off.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Korkma</name>
								<script>zgui.rage2SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You call upon the spirit of Korkma, sending his many-tentacled form to torment (.*).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Vulnerability</name>
								<script>zgui.rage3SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You point an imperious finger at (.*) and h(er|is) translucent shield fades away.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Haemorrhage</name>
								<script>zgui.rage4SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You point an imperious finger at (.*). Blood spurts out of (.*) eyes, ears, nose, and mouth.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Vurus</name>
								<script>zgui.rage5SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You call upon the spirit of Vurus and form an ethereal dagger in your hand. You dash behind (.*), but are only able to strike a glancing blow as (she|he) dodges aside.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Cesaret</name>
								<script>zgui.rage6SkillUsed()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Warmth spreads up your arm as you gesture at (.*), filling h(er|im) with foolish bloodlust.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>MapExplorer</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>FixColors</name>
							<script>local game = matches[2]
local func = MapExporter.colorFixers[game]
if func then
  func()
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Password correct. Welcome to (\w+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ship</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Cryptic Prompt</name>
							<script>if matches[3] == "++" 
	then zgui.ship.sailHealth = 100
		else zgui.ship.sailHealth = tonumber(matches[3])
end
if matches[4] == "++" 
	then zgui.ship.hullHealth = 100
		else zgui.ship.hullHealth = tonumber(matches[4])
end

zgui.ship.shiphpbar:setValue(zgui.ship.hullHealth, 100, "&lt;b&gt;Hull: ".. zgui.ship.hullHealth .." / " .. "100" .. "&lt;/b&gt;")
zgui.ship.shipshpbar:setValue(zgui.ship.sailHealth, 100, "&lt;b&gt;Sails: ".. zgui.ship.sailHealth .." / " .. "100" .. "&lt;/b&gt;")

zgui.ship.windDirection = matches[5]
zgui.ship.windSpeed = matches[6]

zgui.ship.direction = matches[7]
zgui.ship.speed = matches[8]

deleteLine()
zgui.showShip()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\= S(.*)\@h(.*),H(.*),W\&lt;\-(.*)\@(.*)kts\,C\/S\-\&gt;(.*)\@(\d+)\,(.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Gags</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Movement Gags</name>
							<script>deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You are not fallen or kneeling</string>
								<string>There is no door to the</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Tradeskills</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Harvest / Gather</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Plants</name>
								<script>deleteLine()
zTrade.harvest = {}
zTrade.gather = {}

zTrade.autoHarvest = zTrade.autoHarvest or {}
zTrade.autoGather = zTrade.autoGather or {}

zTrade.harvestActive = true</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>20</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>The following plants are growing in this room:</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Plant</name>
									<script>deleteLine()
if zTrade.autoHarvesting and table.contains(zTrade.autoHarvest, matches[3]) then
  table.insert(zTrade.harvest, matches[3])
elseif zTrade.autoGathering and table.contains(zTrade.autoGather, matches[3]) then
  table.insert(zTrade.gather, matches[3])
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(.*)\((\w+)\)\s+(\w+)$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Prompt End</name>
									<script>if zTrade.harvestActive then
  if zTrade.autoHarvesting and #zTrade.harvest &gt; 0 then
    zTrade.harvesting()
  elseif zTrade.autoGathering and #zTrade.gather &gt; 0 then
    zTrade.gathering()
  end
end
zTrade.harvestActive = false</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string></string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>7</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Harvested</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Harvested</name>
									<script>--deleteLine()
if matches[3] then
  zTrade.echo(matches[2].." : "..matches[3])
elseif matches[2] then
  zTrade.echo("1 : "..matches[2])
else
  zTrade.echo("1 : Elm")
end

if zTrade.autoHarvesting and #zTrade.harvest &gt; 0 then
  table.remove(zTrade.harvest, 1)
  if #zTrade.harvest &gt; 0 then
    zTrade.harvesting()
  elseif zTrade.autoGathering and #zTrade.gather &gt; 0 then
    zTrade.gathering()
  end  
elseif zTrade.autoGathering and #zTrade.gather &gt; 0 then
  table.remove(zTrade.gather, 1)
  if #zTrade.gather &gt; 0 then
    zTrade.gathering()
  elseif zTrade.autoHarvesting and #zTrade.harvest &gt; 0 then
    zTrade.harvesting()
  end  
end
if #zTrade.harvest &lt; 1 then
  zTrade.echo("Room Harvest DONE")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#00ff00</mFgColor>
									<mBgColor>#000000</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You reach out and carefully harvest (\d+) (.*).$</string>
										<string>You reach out and carefully harvest slippery elm.</string>
										<string>^You reach out and carefully harvest a (.*).$</string>
										<string>^You reach out and carefully harvest an (.*).$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Seeds</name>
									<script>deleteLine()
send("inr all seed")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>With your keen eyes, you spot some additional edibles and you gather (\d+) handfuls of seeds to supplement your collection.</string>
										<string>With your keen eyes, you spot some additional edibles and you gather a handful of seeds to supplement your collection.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Full</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#000000</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You may not store any more of that type of thing.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>In Rift</name>
									<script>deleteLine()
zTrade.echo("Rift: "..matches[4])</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You store (\d+) (.*), bringing the total in the rift to (\d+).$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Already Harvested</name>
									<script>deleteLine()
zTrade.echo("Already Harvested "..zTrade.harvest[1])
if zTrade.autoHarvesting and #zTrade.harvest &gt; 0 then
  table.remove(zTrade.harvest, 1)
  zTrade.harvesting()
elseif zTrade.autoGathering and #zTrade.gather &gt; 0 then
  table.remove(zTrade.gather, 1)
  zTrade.gathering()
end
if #zTrade.harvest &lt; 1 then
  zTrade.echo("Room Harvest DONE")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>1</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You have already harvested from this plant recently.</string>
										<string>You have already gathered from that plant recently.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
										<integer>3</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Nothing to Rift</name>
										<script>deleteLine()</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^You have no (.*) in your inventory.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Not Enough to Harvest</name>
									<script>deleteLine()
zTrade.echo("Not Enough "..zTrade.harvest[1].." to Harvest")
if zTrade.autoHarvesting and #zTrade.harvest &gt; 0 then
  table.remove(zTrade.harvest, 1)
  zTrade.harvesting()
elseif zTrade.autoGathering and #zTrade.gather &gt; 0 then
  table.remove(zTrade.gather, 1)
  zTrade.gathering()
end
if #zTrade.harvest &lt; 1 then
  zTrade.echo("Room Harvest DONE")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>1</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>That plant has been fully harvested.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>2</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Nothing to Rift</name>
										<script>deleteLine()</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^You have no (.*) in your inventory.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Harvest Alias Gag</name>
								<script>deleteFull()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Alias \"harvestAlias\" will now .+$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>zData</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName>zData</packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>zData</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Target Slain</name>
							<script>zData.char.killsCount = zData.char.killsCount + 1
table.insert(zData.char.killList, 1, matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have slain (.*), retrieving the corpse.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Catch Stats</name>
							<script>deleteLine()
if matches[2] == "strength" then
  zData.char.str = matches[3]
elseif matches[2] == "dexterity" then
  zData.char.dex = matches[3]
elseif matches[2] == "intelligence" then
  zData.char.int = matches[3]
elseif matches[2] == "constitution" then
  zData.char.con = matches[3]
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Your (\w+) is (\d+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Exp From DEF</name>
							<script>zData.defs.exp = matches[2]</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You are benefitting from a (\d+)\% bonus to experience gain.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Crit From DEF</name>
							<script>zData.defs.crit = matches[2]</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You are benefitting from a (\d+)\% bonus to critical hits.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Defences Updates Stats</name>
							<script>send("show str")
send("show dex")
send("show int")
send("show con")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You are protected by .+ defences.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Crit Hit</name>
							<script>zData.db.addChar("crithits")
if matches[3] == "CRITICAL" then
  zData.db.addChar("crit1")
elseif matches[3] == "CRUSHING CRITICAL" then
  zData.db.addChar("crit2")
elseif matches[3] == "OBLITERATING CRITICAL" then
  zData.db.addChar("crit3")
elseif matches[3] == "ANNIHILATINGLY POWERFUL CRITICAL" then
  zData.db.addChar("crit4")
elseif matches[3] == "WORLD-SHATTERING CRITICAL" then
  zData.db.addChar("crit5")
elseif matches[3] == "PLANE-RAZING CRITICAL" then
  zData.db.addChar("crit6")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ffaa00</mFgColor>
							<mBgColor>#000000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have scored (an|a) (.*) hit!$</string>
								<string>^You have scored (an|a) (.*) hit!!!$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>SoA Paragon</name>
							<script>zData.db.addChar("paragon")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your paragon completely absorbs the damage.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Maya Proc</name>
							<script>zData.db.addChar("mayafigure")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The coalescence of power suffusing you empowers your blow.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Seared Glyph Armour</name>
							<script>zData.db.addChar("searedglyph")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Fire lashes out .+, ravaging the unsuspecting form of .+ with its insatiable fury.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>SoA Shield</name>
							<script>zData.db.addChar("shield")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your shield completely absorbs the damage.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Picked Up Gold</name>
							<script>zData.char.gold = zData.char.gold + matches[2]
zData.char.ogold = tonumber(gmcp.Char.Status.gold)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You pick up (\d+) gold sovereigns\.$</string>
								<string>^You scoop up (\d+) gold sovereigns\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Gold Attractor</name>
							<script>if zData.char.ogold ~= tonumber(gmcp.Char.Status.gold) then
  zData.char.gold = zData.char.gold + (tonumber(gmcp.Char.Status.gold) - zData.char.ogold)
  zData.char.ogold = tonumber(gmcp.Char.Status.gold)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^.+ from the corpse\, flying into your hands before they can reach the ground\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Talisman Found</name>
							<script>zData.char.taliCount = zData.char.taliCount + 1
local tempName = multimatches[2][2].." : "..multimatches[1][2] 
table.insert(zData.char.taliList, 1, tempName)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>2</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have slain (.*), retrieving the corpse.$</string>
								<string>^You have found (.+) \(level (\d+)\) talisman piece!$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>AK Opponent Tracking</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName>AK Opponent Tracking</packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>AK Opponent Tracking</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Venom Wipe/Reset/Gagging</name>
						<script>currentvenoms = {}
ak.deleteFull()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Being careful not to poison yourself, you wipe off all the venoms from an ornate steel rapier.</string>
							<string>There are no venoms on that item at present.</string>
							<string>You carefully wipe the venoms from your claws.</string>
							<string>Being careful not to poison yourself, you wipe off all the venoms from a sharpened buckawn's spine.</string>
							<string>You are already wielding </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Slain Target</name>
						<script>if IsTargetted(matches[2]) and not table.contains(ak.burstfucks,matches[2]) then 
	 if ak.ai() then return end
   if IsTargetted(lockedminds) then lockedminds = nil end
   weaponattack = {}
   if isActive("Confirmed Hit Limbs", "trigger") &gt; 0 then
      ak.limbs.parseBreaks()
   end
   ak.oresetparse()
   ak.defs.sileris = false
   ak.defs.speed = false
   affstrack.score.deaf = 100
   affstrack.score.blind = 100
   ak.scoreup(matches[2])
end
ak.limbs.limbreset(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You have slain ([\w'\-]+)\.$</string>
							<string>^Unable to withstand the arrow piercing [\w'\-]+ chest, ([\w'\-]+) stumbles to the ground, collapsing in a pool </string>
							<string>^([\w'\-]+) has been slain by [\w'\-]+\.$</string>
							<string>^([\w'\-]+)\'s body disintegrates and a ghostly spirit rises from the ashes\. The ghost cries out in pain as a body forms around [\w'\-]+ that has .*\.$</string>
							<string>^The last vestiges of strength having ebbed from ([\w'\-]+)\'s body\, [\w'\-]+ sinks to the floor with a sigh\.Suddenly\, your surroundings are enveloped in a blinding white light\, forcing you to cower with your hands over your eyes\. When you tentatively open them once more\, you are astonished to find ([\w'\-]+) alive once more\.$</string>
							<string>^The last vestiges of strength having ebbed from ([\w'\-]+)\'s body\, (?:he|she) sinks to the floor with a sigh\. Suddenly\, your surroundings are enveloped in a blinding white light\, forcing you to cower with your hands over your eyes\. When you tentatively open them once more\, you are astonished to find [\w'\-]+ alive once more\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Air Lord Group</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Pressure</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Normal</name>
								<script>ak = ak or {}
ak.duress = ak.duress or {}
ak.duress.pressure = 0
ak.scoreup(matches[2])
cecho("\n&lt;cyan&gt;Pressure lvl: &lt;yellow&gt;"..ak.duress.pressure)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Studying ([\w'\-]+), you determine that the pressure surrounding (?:him|her) is at normal levels\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Level 1</name>
								<script>ak = ak or {}
ak.duress = ak.duress or {}
ak.duress.pressure = 1
ak.scoreup(matches[2])
cecho("\n&lt;cyan&gt;Pressure lvl: &lt;yellow&gt;"..ak.duress.pressure)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Studying ([\w'\-]+), you determine that the pressure surrounding (?:him|her) is slightly elevated\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Level 2</name>
								<script>ak = ak or {}
ak.duress = ak.duress or {}
ak.duress.pressure = 2
ak.scoreup(matches[2])
cecho("\n&lt;cyan&gt;Pressure lvl: &lt;yellow&gt;"..ak.duress.pressure)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Studying ([\w'\-]+), you determine that the pressure surrounding (?:him|her) is elevated\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Level 3</name>
								<script>ak = ak or {}
ak.duress = ak.duress or {}
ak.duress.pressure = 3
ak.scoreup(matches[2])
cecho("\n&lt;cyan&gt;Pressure lvl: &lt;yellow&gt;"..ak.duress.pressure)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Studying ([\w'\-]+), you determine that the pressure surrounding (?:him|her) is moderately elevated\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Level 4</name>
								<script>ak = ak or {}
ak.duress = ak.duress or {}
ak.duress.pressure = 4
ak.scoreup(matches[2])
cecho("\n&lt;cyan&gt;Pressure lvl: &lt;yellow&gt;"..ak.duress.pressure)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Studying ([\w'\-]+), you determine that the pressure surrounding (?:him|her) is severely elevated\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Level 5</name>
								<script>ak = ak or {}
ak.duress = ak.duress or {}
ak.duress.pressure = 5
ak.scoreup(matches[2])
cecho("\n&lt;cyan&gt;Pressure lvl: &lt;yellow&gt;"..ak.duress.pressure)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Studying ([\w'\-]+), you determine that the pressure surrounding (?:him|her) is extremely elevated\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Level 6+</name>
								<script>ak = ak or {}
ak.duress = ak.duress or {}
if ak.duress.pressure &lt; 6 then
   ak.duress.pressure = 6
   ak.scoreup(matches[2])
end
cecho("\n&lt;cyan&gt;Pressure lvl: &lt;yellow&gt;"..ak.duress.pressure)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Studying ([\w'\-]+), you determine that the pressure surrounding (?:him|her) is terminally elevated\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Pressure</name>
								<script>ak = ak or {}
ak.duress = ak.duress or {}
ak.duress.pressurescore = affstrack.score.disloyalty + affstrack.score.manaleech + affstrack.score.deadening

if ak.duress.pressurescore &lt; 200  then
   ak.duress.pressure = ak.duress.pressure + 1
else
   ak.duress.pressure = ak.duress.pressure + 2
end
ak.scoreup(matches[2])
cecho("\n&lt;cyan&gt;Pressure lvl: &lt;yellow&gt;"..ak.duress.pressure)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You bring your will to bear against ([\w'\-]+)\, raising the air pressure surrounding (?:her|him)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Pressure eats</name>
								<script>ak = ak or {}
ak.duress = ak.duress or {}

if target == matches[2] and ak.duress.pressure &gt; 0 then
   ak.duress.pressure = ak.duress.pressure - 1
   cecho("\n&lt;cyan&gt;Pressure lvl: &lt;yellow&gt;"..ak.duress.pressure)
	 ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) eats a prickly pear\.$</string>
									<string>^([\w'\-]+) eats a calcite mote\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Asphyxiate</name>
							<script>ak = ak or {}
ak.duress = ak.duress or {}
if target == matches[2] then
  ak.duress.asphyxiate = true
	killTimer(tostring(ak.duress.asphyxiatetimer))
  ak.duress.asphyxiatetimer = tempTimer(10, [[ak.duress.asphyxiate = false]])
	ak.scoreup(matches[2])
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You rip the air from the lungs of ([\w'\-]+) in a single instant, blood and mucus dripping from (?:her|his) mouth as (?:he|she) doubles over with hacking coughs\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tension</name>
							<script>local aff = "tension"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
	 if ak.duress.pressure and ak.duress.pressure &gt; 0 then
      ak.duress.pressure = ak.duress.pressure + 1
   else
      ak.duress.pressure = 1
   end
   killTimer(tostring(ak.duress.asphyxiatetimer))
   ak.duress.asphyxiatetimer = tempTimer(10, [[ak.duress.asphyxiate = false]])
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You alter the air tension around ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Strangle</name>
							<script>aff = "deadening"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
	 ak.duress.stranglerelapse = true
   ak.duress.stranglerelapsetimer = tempTimer(7,[[
   	 ak.duress.stranglerelapse = false
     ak.scoreup(]]..matches[2]..[[)
   ]])
	 killTimer(tostring(ak.duress.asphyxiatetimer))
   ak.duress.asphyxiatetimer = tempTimer(10, [[ak.duress.asphyxiate = false]])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You increase the pressure in a band surrounding the throat of ([\w'\-]+), clenching a fist and causing it to violently constrict\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Strangle relapse</name>
							<script>aff = "deadening"
if IsTargetted(matches[2]) then
  OppGainedAff(aff)
	ak.duress.stranglerelapse = false
	killTimer(tostring(ak.duress.stranglerelapsetimer))
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) clutches at (?:her|his) throat, eyes bulging as (?:she|he) struggles to draw breath\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Strangle relapse 2</name>
							<script>aff = "disrupted"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
	 ak.duress.stranglerelapse = true
	 killTimer(tostring(ak.duress.stranglerelapsetimer))
   ak.duress.stranglerelapsetimer = tempTimer(7,[[
   	 ak.duress.stranglerelapse = false
     ak.scoreup(]]..matches[2]..[[)
   ]])
	 OppGainedAff("deadening")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A dazed look crosses the face of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Scour</name>
							<script>aff = "disloyalty"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
	 ak.duress.scourrelapse = true
	 killTimer(tostring(ak.duress.scourrelapsetimer))
   ak.duress.scourrelapsetimer = tempTimer(7,[[
   	 ak.duress.scourrelapse = false
     ak.scoreup(]]..matches[2]..[[)
   ]])
	 
	 killTimer(tostring(ak.duress.asphyxiatetimer))
   ak.duress.asphyxiatetimer = tempTimer(10, [[ak.duress.asphyxiate = false]])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You bend your will upon ([\w'\-]+), summoning forth a howling wind to rip the flesh from (?:her|his) bones\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Scour relapse</name>
							<script>aff = "disloyalty"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
	 ak.duress.scourrelapse = false
	 killTimer(tostring(ak.duress.scourrelapsetimer))
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A howling wind sweeps over ([\w'\-]+), ripping flesh from bone and leaving (?:her|his) face a bloody ruin\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Scour relapse 2</name>
							<script>if IsTargetted(matches[2]) then
   local aff = "disloyalty"
   OppGainedAff(aff)
   ak.duress.scourrelapse = true
	 killTimer(tostring(ak.duress.scourrelapsetimer))
   ak.duress.scourrelapsetimer = tempTimer(7,[[
   	 ak.duress.scourrelapse = false
     ak.scoreup(]]..matches[2]..[[)
   ]])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The ruined face of ([\w'\-]+) continues to bleed\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Zephyr</name>
							<script>aff = "manaleech"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
	 ak.duress.zephyrrelapse = true
 	 killTimer(tostring(ak.duress.zephyrrelapsetimer))
   ak.duress.zephyrrelapsetimer = tempTimer(7,[[
   	 ak.duress.zephyrrelapse = false
     ak.scoreup(]]..matches[2]..[[)
   ]])
	 
	 killTimer(tostring(ak.duress.asphyxiatetimer))
   ak.duress.asphyxiatetimer = tempTimer(10, [[ak.duress.asphyxiate = false]])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You cast out your hand towards ([\w'\-]+)\, calling forth an icy zephyr to rip the strength from (?:him|her)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Zephyr relapse</name>
							<script>aff = "manaleech"
if IsTargetted(matches[2]) then
  OppGainedAff(aff)
	ak.duress.zephyrrelapse = false
	killTimer(tostring(ak.duress.zephyrrelapsetimer))
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A zephyr of icy wind rolls over ([\w'\-]+), leaving (?:her|him) diminished\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Zephyr relapse 2</name>
							<script>aff = "deadening"
if IsTargetted(matches[2]) then
  OppGainedAff(aff)
	ak.duress.zephyrrelapse = true
  killTimer(tostring(ak.duress.zephyrrelapsetimer))
  ak.duress.zephyrrelapsetimer = tempTimer(7,[[
   	 ak.duress.zephyrrelapse = false
     ak.scoreup(]]..matches[2]..[[)
   ]])	
	OppGainedAff("manaleech")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A vacant expression creeps across the features of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Zephyr relapse 3</name>
							<script>if IsTargetted(matches[2]) then
   ak.duress.zephyrrelapse = true
   killTimer(tostring(ak.duress.zephyrrelapsetimer))
   ak.duress.zephyrrelapsetimer = tempTimer(7,[[
   	 ak.duress.zephyrrelapse = false
     ak.scoreup(]]..matches[2]..[[)
   ]])
	 OppGainedAff("manaleech")
	 OppGainedAff("deadening")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A completely blank expression descends upon ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Gale</name>
							<script>if target == matches[2] then
  ak.defs.shield = false
  ak.scoreup(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You whip up a gale\, sending it towards ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Gale shield down</name>
							<script>aff = "manaleech"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end	</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The protective shield surrounding ([\w'\-]+) is blown away by the gale-force winds\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Alchemist Group</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wrack</name>
							<script>if alchemistwrack then
   OppGainedAff(alchemistwrack)
end

--matches[3] == humor wracked

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You send ripples throughout ([\w'\-]+)'s body, wracking ([\w'\-]+) ([\w'\-]+) humour\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>TrueWrack</name>
							<script>if alchemisttruewrack then
   OppGainedAff(alchemisttruewrack)
   OppGainedAff(alchemisttruewracktwo)
end

--matches[3] + matches[3] == humor wracked</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You send ripples throughout ([\w'\-]+)'s body, wracking ([\w'\-]+) ([\w'\-]+) and ([\w'\-]+) humours\.$</string>
								<string>^You send ripples throughout the body of ([\w'\-]+), as you wrack (his|her) ([\w'\-]+) humour twice.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Temper</name>
							<script>if matches[4] == "sanguine" then
	ak.alchemist.humour.sanguine = ak.alchemist.humour.sanguine + 1
elseif matches[4] == "phlegmatic" then
	ak.alchemist.humour.phlegmatic = ak.alchemist.humour.phlegmatic + 1
elseif matches[4] == "choleric" then
	ak.alchemist.humour.choleric = ak.alchemist.humour.choleric + 1
elseif matches[4] == "melancholic" then
	ak.alchemist.humour.melancholic = ak.alchemist.humour.melancholic + 1
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You redirect ([\w'\-]+)\'s internal fluids\, tempering ([\w'\-]+) ([\w'\-]+) humour\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Evaluation</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>8</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Looking over ([\w'\-]+), you see that:</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Tempers</name>
								<script>if matches[3] == "sanguine" then
	ak.alchemist.humour.sanguine = tonumber(matches[4])
elseif matches[3] == "phlegmatic" then
	ak.alchemist.humour.phlegmatic = tonumber(matches[4])
elseif matches[3] == "choleric" then
	ak.alchemist.humour.choleric = tonumber(matches[4])
elseif matches[3] == "melancholic" then
	ak.alchemist.humour.melancholic = tonumber(matches[4])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(His|Her) ([\w'\-]+) humour has been tempered a total of (\d+) times.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Stat Evals</name>
								<script>if matches[3] == "health" then
	ak.currenthealth = tonumber(matches[4])
	ak.maxhealth = tonumber(matches[5])
	ak.healthpercent = ak.currenthealth / ak.maxhealth * 100
	cecho("&lt;green&gt;"..ak.healthpercent.."%")
	ak.knownmaxhealth[target] = tonumber(matches[5])
elseif matches[3] == "mana" then
	ak.currentmana = tonumber(matches[4])
	ak.maxmana = tonumber(matches[5])
	ak.manapercent = ak.currentmana / ak.maxmana * 100
	cecho("&lt;blue&gt;"..ak.manapercent.."%")
end

if ak.healthpercent &lt;= 60 and ak.manapercent &lt;= 60 then
	send("queue prepend eqbal aurify " .. target)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(His|Her) (health|mana) is at (\d+) out of (\d+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>No Humours</name>
								<script>ak.alchemist.humour.sanguine = 0
ak.alchemist.humour.choleric = 0
ak.alchemist.humour.melancholic = 0
ak.alchemist.humour.phlegmatic = 0</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>His humours are all at normal levels.</string>
									<string>Her humours are all at normal levels.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Prompt</name>
								<script>ak.scoreup(target)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string></string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>7</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Copper</name>
							<script>ak.defs.shield = false
ak.scoreup(target)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Drawing upon the latent alchemical energies, you sketch out a symbol in the air with your finger in the shape of two overlapping hexagons.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>HomunGerminated</name>
							<script>wsys.unpause()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The growing nucleus begins taking a humanoid form, </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Inundates</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Phleg</name>
								<script>local aff = "weariness anorexia slickness lethargy"

if ak.alchemist.humour.phlegmatic &lt; 4 then
	aff = "lethargy"
elseif ak.alchemist.humour.phlegmatic &lt; 6 then
	aff = "lethargy anorexia"
elseif ak.alchemist.humour.phlegmatic &lt; 7 then
	aff = "lethargy anorexia slickness"
end
if matches[2] == target then
	OppGainedAff(aff)
end
ak.alchemist.humour.phlegmatic = 0</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You inundate ([\w'\-]+)\'s phlegmatic humour\, and (his|her) eyes grow vacant\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Humour Tracking</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ate For Humour</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	ak.alchemist.humour.sanguine = ak.alchemist.humour.sanguine - 1
	ak.alchemist.humour.choleric = ak.alchemist.humour.choleric - 1
	ak.alchemist.humour.melancholic = ak.alchemist.humour.melancholic - 1
	ak.alchemist.humour.phlegmatic = ak.alchemist.humour.phlegmatic - 1
end
if ak.alchemist.humour.sanguine &lt; 0 then 
	ak.alchemist.humour.sanguine = 0
end
if ak.alchemist.humour.choleric &lt; 0 then 
	ak.alchemist.humour.choleric = 0
end 
if ak.alchemist.humour.melancholic &lt; 0 then 
	ak.alchemist.humour.melancholic = 0
end
if ak.alchemist.humour.phlegmatic &lt; 0 then 
	ak.alchemist.humour.phlegmatic = 0
end
ak.scoreup(matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) eats a ginger root\.$</string>
									<string>^([\w'\-]+) eats an antimony flake\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Corruption</name>
							<script>if target == matches[2] then
   OppGainedAff("corruption")
	 corrtimer = tempTimer(45, [[OppLostAff("corruption")]])	 
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Channeling your focus through your link to your homunculus, you reach out to find the ethereal hook for (\w+)'s humours.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Corruption cured</name>
							<script>if target == matches[2] then
   OppLostAff("corruption")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) looks far healthier all of a sudden\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Apostate Group</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Stared</name>
							<script>if ak.ai() then
  return
end
if nextcurse then
  if nextcurse == "breach" then
  elseif nextcurse == "sicken" then
    if affstrack.score.paralysis &lt; 100 then
      nextcurse = "paralysis"
    elseif affstrack.score.healthleech &lt; 100 then
      nextcurse = "manaleech"
    else
      nextcurse = "slickness"
    end
  elseif nextcurse == "plague" then
    nextcurse = "voyria"
  elseif nextcurse == "clumsy" then
    nextcurse = "clumsiness"
  elseif nextcurse == "dizzy" then
    nextcurse = "dizziness"
  elseif nextcurse == "stupid" then
    nextcurse = "stupidity"
  elseif nextcurse == "vomiting" then
    nextcurse = "nausea"
  elseif nextcurse == "reckless" then
    nextcurse = "recklessness"
  end
  OppGainedAff(nextcurse)
  nextcurse = nil
  return
end
if nextcurse2 then
  if nextcurse2 == "breach" then
  elseif nextcurse2 == "sicken" then
    if affstrack.score.paralysis &lt; 100 then
      nextcurse2 = "paralysis"
    elseif affstrack.score.healthleech &lt; 100 then
      nextcurse2 = "manaleech"
    else
      nextcurse2 = "slickness"
    end
  elseif nextcurse2 == "plague" then
    nextcurse2 = "voyria"
  elseif nextcurse2 == "clumsy" then
    nextcurse2 = "clumsiness"
  elseif nextcurse2 == "dizzy" then
    nextcurse2 = "dizziness"
  elseif nextcurse2 == "stupid" then
    nextcurse2 = "stupidity"
  elseif nextcurse2 == "vomiting" then
    nextcurse2 = "nausea"
  elseif nextcurse2 == "reckless" then
    nextcurse2 = "recklessness"
  end
  OppGainedAff(nextcurse2)
  nextcurse2 = nil
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You stare at ([\w'\-]+), giving [\w'\-]+ the evil eye\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sicken</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	if affstrack.score.paralysis ~= 100 then
		ak.ProTrackingConfirmed("paralysis")
		affstrack.score.paralysis = 100
		affstrack.score.slickness = 100
		affstrack.score.manaleech = 100
		ak.scoreup(matches[2])
	else
		affstrack.score.paralysis = 100
		affstrack.score.slickness = 100
		affstrack.score.manaleech = 100
		ak.scoreup(matches[2])
	end
end

	
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) doubles over\, eyes bulging\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bard Group</name>
						<script>--
--Everything that follows was originally written by Klendathu

--I have mildly modified portions of be more up to date with my current offense tracking system,
--while attempting to leave the majority of it in place so he has to do very little to maintain
--continued functionality.  If you are a using this section, I strongly encourage you to make sure
--to spend a few extra seconds and drop him a thank you.

--Thank you.</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName>bard_plugin_for_affstrack</packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Swashbuckling</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Tunesmithing</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Pesante fired</name>
									<script>tunesmithing = "none"
if affstrack.score.deaf &lt; 100 then 
   affstrack.score.deaf = 100
	 ak.scoreup(target)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>The songblessing unleashes a stunning percussive blast.</string>
										<string>The songblessing unleashes a strident note.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Check tunesmithing</name>
									<script>tunesmithing = multimatches[2][2]</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>3</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>A soft, haunting melody emanates from this blade.</string>
										<string>^It has been tunesmithed with the power of the ([\w'\-]+)\.</string>
										<string>It weighs about 10 pounds.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
										<integer>1</integer>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Tunesmithing</name>
									<script>tunesmithing = matches[2]</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You weave strands of melodies over your blade, tunesmithing it with the power of the ([\w'\-]+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Martellato fired</name>
									<script>tunesmithing = "none"</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>The songblessing upon the rapier swells with a rich, vibrant hum.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Acciaccatura fired</name>
									<script>tunesmithing = "none"
if ak.ai() then return end
--ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
   local smashlimb = ak.limbs.standardizeLimb(matches[3])
   if affstrack.score[smashlimb] &lt; 100 then
      OppGainedAff(smashlimb)
   end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^A bell\-like tone rings out from your songblessed rapier\, echoed by the sound of cracking bone as ([\w'\-]+)\'s (left leg|right leg|left arm|right arm) snaps\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Auralbless (undeaf)</name>
								<script>if matches[2] == "yourself" then return false end

if IsTargetted(matches[2]) then
	affstrack.score.deaf = 100
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You lightly strike the side of ([\w'\-]+)\'s head with your rapier\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Raze rebounding/shield</name>
								<script>if IsTargetted(matches[2]) then
	if string.find(matches[1], "rebounding") then
		ak.defs.rebounding = false
	else
		ak.defs.shield = false
	end
	ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You raze ([\w'\-]+)\'s (aura of rebounding|magical shield) with a rapier carved from living ice\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Harmonics</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Bagatelle</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Bagatelle restored hearing</name>
									<script>if IsTargetted(matches[2]) then
	OppGainedAff("deaf")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^([\w'\-]+) cries out with a look of surprise as the Bagatelle restores (his|her) hearing\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Berceuse</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Berceuse stripped insomnia</name>
									<script>if IsTargetted(matches[2]) then
   affstrack.score.insomnia = 100
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^([\w'\-]+) drifts away into the soft music of the Berceuse\, abandoning (him|her)self to its soporific tones\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Berceuse sent them to sleep!</name>
									<script>if multimatches[1][2]:lower() == target:lower() then
	if affstrack.score.prone &lt; 100 then
		OppGainedAff("prone sleep")
	else
		OppGainedAff("sleep")
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^([\w'\-]+)\'s eyes close suddenly as (s|)he falls asleep\.$</string>
										<string>^([\w'\-]+) drifts away into the soft music of the Berceuse\, abandoning (him|her)self to its soporific tones\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Voicecraft</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Maqam (Clumsiness)</name>
								<script>ak.songoff = true
if IsTargetted(matches[2]) then
   if affstrack.score.clumsiness == 100 then
	    OppGainedAff("Dizziness")
   else
      OppGainedAff("Clumsiness")
   end
else
	ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You sing a graceful maqam of el\'Jazira at ([\w'\-]+)\.$</string>
									<string>^The songbird upon your shoulder sings a graceful maqam of el\'Jazira at ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Haiku (Confusion)</name>
								<script>ak.songoff = true
if IsTargetted(matches[2]) then
	OppGainedAff("Confusion")
else
	ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You recite an obscure Kamleikan haiku to ([\w'\-]+)\.$</string>
									<string>^The songbird upon your shoulder perfectly mimics the recitation of an obscure Kamleikan haiku to ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Isorhythm (Claustrophobia)</name>
								<script>ak.songoff = true
if IsTargetted(matches[2]) then
	OppGainedAff("Claustrophobia")
else
	ak.scoreup(matches[2])
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^In droning song you subject ([\w'\-]+) to a lengthy isorhythm\.$</string>
									<string>^The songbird upon your shoulder launches into a droning song\, subjecting ([\w'\-]+) to a lengthy isorhythm\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Fugue (Fear)</name>
								<script>ak.songoff = true
if IsTargetted(matches[2]) then
	OppGainedAff("Fear")
else
	ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Weaving a complex counterpoint between instrument and voice\, you fill ([\w'\-]+) with fear\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Poem (nausea)</name>
								<script>ak.songoff = true
if IsTargetted(matches[2]) then
	OppGainedAff("nausea")
else
	ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your poem of gluttony and decay makes ([\w'\-]+) green in the cheeks\.$</string>
									<string>^The songbird upon your shoulder sings out a poem of gluttony and decay that makes ([\w'\-]+) green in the cheeks\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Pastorale (Vertigo)</name>
								<script>ak.songoff = true
if IsTargetted(matches[2]) then
	OppGainedAff("Vertigo")
else
	ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You sing a pastorale of the fields and streams to ([\w'\-]+)\.$</string>
									<string>^The songbird upon your shoulder sings a pastorale of the fields and streams to ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ditty (Epilepsy)</name>
								<script>ak.songoff = true
if IsTargetted(matches[2]) then
	OppGainedAff("Epilepsy")
else
	ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You sing an irritating\, mind\-numbing ditty at ([\w'\-]+)\.$</string>
									<string>^The songbird upon your shoulder twitters an irritating\, mind\-numbing ditty at ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Requiem (Paranoia)</name>
								<script>ak.songoff = true
if IsTargetted(matches[2]) then
	OppGainedAff("Paranoia")
else
	ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With a mournful cry you begin the requiem for Seleucar to ([\w'\-]+)\.$</string>
									<string>^With a mournful cry\, the songbird upon your shoulder begins the requiem for Seleucar to ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Epic (Paralysis)</name>
								<script>ak.songoff = true
if IsTargetted(matches[2]) then
	OppGainedAff("Paralysis")
else
	ak.scoreup(matches[2])
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You begin reciting an epic tale of the heroism of Nicator to ([\w'\-]+)\, holding (him|her) spellbound\.$</string>
									<string>^The songbird upon your shoulder begins to perfectly mimic the recitation of an epic tale of the heroism of Nicator to ([\w'\-]+)\, holding (him|her) spellbound\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ode (Addiction)</name>
								<script>ak.songoff = true
if IsTargetted(matches[2]) then
	OppGainedAff("Addiction")
else
	ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With a wink\, you recite \"Ode to Elixirs\" to ([\w'\-]+)\.$</string>
									<string>^The songbird upon your shoulder perfectly mimics a recitation of \"Ode to Elixirs\" to ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Qasida (Anorexia)</name>
								<script>ak.songoff = true
if IsTargetted(matches[2]) then
	OppGainedAff("Anorexia")
else
	ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Starting with the characteristic Jaziran trill\, you sing a qasida of asceticism to ([\w'\-]+)\.$</string>
									<string>^The songbird upon your shoulder sings a qasida of asceticism to ([\w'\-]+), starting with the characteristic Jaziran trill\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Passion (Stupidity)</name>
								<script>ak.songoff = true
if IsTargetted(matches[2]) then
	OppGainedAff("Stupidity")
else
	ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With a gravity born of respect\, you sing of the saintly Imithia of legend, bringing a certain dull look to ([\w'\-]+)\'s face\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Limerick (Impatience)</name>
								<script>ak.songoff = true
if IsTargetted(matches[2]) then
	 OppGainedAff("Impatience")
else
	ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Composing a few clever lines in your head\, you quickly sing a jaunty limerick at ([\w'\-]+)\.$</string>
									<string>^The songbird upon your shoulder quickly sings a jaunty limerick at ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Chant (In Progress{Please Submit if You Complete}]</name>
								<script>ak.songoff = true
if IsTargetted(matches[3]) then
 	--do something
   ak.scoreup(matches[3])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You sing a sonorous chant\, stripping the ([\w'\-]+) defence of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Cantata (breaks shield)</name>
								<script>ak.songoff = true
selectCurrentLine() fg("GreenYellow") deselect() resetFormat()

if IsTargetted(matches[2]) then
	ak.defs.rebounding = false
	ak.defs.shield = false
	ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your cantata shatters the defences surrounding ([\w'\-]+)\.$</string>
									<string>^Your cantata shatters the magical shield surrounding (.+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Dwinnu (breaks bonds)</name>
								<script>ak.songoff = true
selectCurrentLine() fg("GreenYellow") deselect() resetFormat()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>'DWINNU! DWINNU!' you chant urgently as your bonds turn to dust.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Voicecraft failed due to deafness</name>
								<script>ak.songoff = true
cecho("\n    &lt;white&gt;--== TARGET IS DEAF ==--&lt;reset&gt;")
if not matches[2] or IsTargetted(matches[2]) then
	affstrack.score.deaf = 0
	ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You sing a graceful maqam of el\'Jazira at ([\w'\-]+)\, who seems unmoved\.$</string>
									<string>^You sense futility as you recite an obscure Kamleikan haiku to ([\w'\-]+)\.$</string>
									<string>^In droning song you subject ([\w'\-]+) to a lengthy isorhythm\, without results\.$</string>
									<string>^Weaving a complex counterpoint between instrument and voice\, you fail to instill anything like fear in ([\w'\-]+)\.$</string>
									<string>^You invoke chaotic powers in a dark solo but fail to drain the essential magic of ([\w'\-]+)\.$</string>
									<string>^You direct a poem of gluttony and decay at ([\w'\-]+)\, without success\.$</string>
									<string>^You sing a pastorale of the fields and streams to ([\w'\-]+)\, who seems not to notice\.$</string>
									<string>^You chant \'GIMMEGIMME\' at ([\w'\-]+)\, who does not react\.$</string>
									<string>^You sing an irritating\, mind\-numbing ditty at ([\w'\-]+)\, who seems curiously unaffected\.$</string>
									<string>^With a mournful cry you begin the requiem for Seleucar to ([\w'\-]+)\, who appears unmoved\.$</string>
									<string>^Using a heavy tremolo you sing\, uselessly\, aiming at ([\w'\-]+)\'s (left|right) leg\.$</string>
									<string>^With a frustratingly irrelevant vibrato you aim at ([\w'\-]+)\'s (left|right) arm\.$</string>
									<string>^Your recitation of an epic tale of the heroism of Nicator has no effect on ([\w'\-]+)\.$</string>
									<string>^With a wink\, you recite \"Ode to Elixirs\" to ([\w'\-]+)\, who looks on\, unimpressed\.$</string>
									<string>^Starting with the characteristic Jaziran trill\, you sing a qasida of asceticism to ([\w'\-]+)\, who seems undaunted\.$</string>
									<string>^With a gravity born of respect\, you sing of the saintly Imithia\, if only for yourself\.$</string>
									<string>^Composing a few clever lines in your head\, you quickly sing a jaunty limerick at ([\w'\-]+)\, who seems to pay no notice\.$</string>
									<string>^You sing a sonorous chant which fails to strip the defences of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Cantata no shield / rebounding</name>
								<script>ak.songoff = true
if IsTargetted(matches[2]) then
	ak.defs.rebounding = false
	ak.defs.shield = false
	ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You let the grace of your voice shine forth with a Scarlattan cantata at (.+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Dirge (banish gravehands)</name>
								<script>ak.songoff = true
selectCurrentLine() fg("GreenYellow") deselect() resetFormat()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>With an unearthly dirge, you banish the hands that reach from the grave.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Balance Recovered</name>
								<script>ak.songoff = false
ak.scoreup(target)
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You have recovered voice balance.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Tremolo</name>
								<script>ak.limbs.ScoreRun = true
ak.limbs.LimbHit(multimatches[2][2],"Me", "tremolo", multimatches[2][3].."leg")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Using a heavy tremolo you brutally punish</string>
									<string>^Using a heavy tremolo you brutally punish ([\w'\-]+)\'s already shattered ([\w'\-]+) leg\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Martellato</name>
							<script>OppGainedAff("Prone")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The songblessing upon the rapier swells with a rich, vibrant hum.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hearts-Fury Counter</name>
							<script>enableTrigger("Confirmed Counter Hit")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Full of controlled rage you lash out in a counterstrike.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Riposte Parry</name>
							<script>enableTrigger("Confirmed Counter Hit")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Lightning-quick, you flick your blade out in riposte.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Confirmed Counter Hit</name>
							<script>disableTrigger("Confirmed Counter Hit")
if target == matches[3] then
   enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
   enableTrigger("Confirmed Hit")                        --DO NOT CHANGE!
   if weaponattack == nil then weaponattack = {} end
   table.insert(weaponattack, matches[2])
end
--display(weaponattack)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You bring (.*) crashing down on ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Blademaster Group</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Strikes</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shoulder</name>
								<script>if IsTargetted(matches[2]) then
	OppGainedAff("weariness")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With a fluid motion, you aim a blow just below ([\w'\-]+)'s shoulder.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Hands</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Lunging forward with practised grace, you strike at the back of ([\w'\-]+)'s (right|left) hand.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ears</name>
								<script>if IsTargetted(matches[2]) then
	OppGainedAff("clumsiness")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Lashing out with open palms, you box ([\w'\-]+)\'s ears.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Nose</name>
								<script>if IsTargetted(matches[2]) then
	OppGainedAff("disloyalty")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With the heel of your palm\, you send a pulverising blow at ([\w'\-]+)\'s nose.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Knee</name>
								<script>if IsTargetted(matches[2]) then
	ak.mounted = false
	OppGainedAff("prone")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Sweeping out with a blade hand, you strike at the back of ([\w'\-]+)'s knee.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Neck</name>
								<script>if IsTargetted(matches[2]) then
	OppGainedAff("paralysis")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With fluid motions of your iron fingers, you strike precisely at pressure points on ([\w'\-]+)'s neck.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Kidneys</name>
								<script>if IsTargetted(matches[3]) then
	OppGainedAff("addiction")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Dancing behind h(er|is) with a neat sidestep, you strike at ([\w'\-]+)'s kidney with a balled fist.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Eyes</name>
								<script>if IsTargetted(matches[2]) then
	OppGainedAff("hallucinations")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With pinpoint strikes to ([\w'\-]+)'s sockets, you burst blood vessels in h(er|is) eyes, causing them to run red.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Temple</name>
								<script>if IsTargetted(matches[3]) then
	OppGainedAff("stupidity")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Striking h(er|is) temple with a clenched fist, you leave ([\w'\-]+) reeling.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Chin</name>
								<script>--gz.landed_venom("delphinium")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Stepping in close, you strike upwards at a precise point below ([\w'\-]+)'s chin.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Groin</name>
								<script>if IsTargetted(matches[2]) then
	OppGainedAff("recklessness")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Targeting a vulnerable point, you lash out at ([\w'\-]+)'s groin with a calculated strike.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Chest</name>
								<script>if IsTargetted(matches[2]) then
	OppGainedAff("hypochondria")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With rapid precision, you aim first a punch then a spearhand blow at two points on ([\w'\-]+)'s chest.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Throat</name>
								<script>if IsTargetted(matches[2]) then
	OppGainedAff("asthma")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With iron fingers, you aim a darting strike at a weak point on ([\w'\-]+)'s throat.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Stomach</name>
								<script>if IsTargetted(matches[2]) then
	OppGainedAff("anorexia")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You aim a measured blow at ([\w'\-]+)'s stomach, feeling muscles clench beneath your fist.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Armpit</name>
								<script>if IsTargetted(matches[2]) then
	OppGainedAff("slickness")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With a swift, snaking strike, you thrust upwards at ([\w'\-]+)'s unprotected armpit.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Fist It</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Void Fist</name>
								<script>if IsTargetted(matches[2]) then
	OppGainedAff("voidfist")
   if voidtimer then killTimer(voidtimer) end
	 if ak.limbs.blademaster.stance["Me"] == "Sanya" then
      voidtimer = tempTimer(20, [[OppLostAff("voidfist")]])	 
	 else
      voidtimer = tempTimer(15, [[OppLostAff("voidfist")]])
   end
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Emptying your mind of conscious thought, you welcome the void as you strike ([\w'\-]+) a hollow blow\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Air Fist</name>
								<script>if IsTargetted(matches[2]) then
	OppGainedAff("airfist")
   if airfisttimer then killTimer(airfisttimer) end
	 if ak.limbs.blademaster.stance["Me"] == "Thyr" then
      airfisttimer = tempTimer(19.5, [[OppLostAff("airfist")]])	 
	 else
      airfisttimer = tempTimer(14.5, [[OppLostAff("airfist")]])
   end
end


</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Freeing your mind to the unpredictable dance of the wind\, you hurl a blow towards ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Vitiate</name>
								<script>if IsTargetted(matches[2]) then
	OppGainedAff("vitiate")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Thrusting at ([\w'\-]+)'s chest with a blade hand outstretched, you release an unmitigated torrent of Shin energy upon h(?:im|er), and (he|she) crumples helplessly\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Hamstring</name>
								<script>--Seriously?  You're worried about hamstring?  

if IsTargetted(matches[3]) then
   OppGainedAff("hamstring")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Ducking behind ([\w'\-]+)\, you strike at ([\w'\-]+)'s hamstring with a rigid\, practised grip\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Hamstring recover</name>
								<script>if IsTargetted(matches[2]) then
   OppLostAff("hamstring")
end
ak.scoreup(matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>([\w'\-]+) seems able to move more freely all of a sudden.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>First Third Person</name>
								<script>if IsTargetted(matches[2]) then
	OppGainedAff("voidfist")
   if voidtimer then killTimer(voidtimer) end
	 if ak.limbs.blademaster.stance["Me"] == "Sanya" then
      voidtimer = tempTimer(7.5, [[OppLostAff("voidfist")]])	 
	 else
      voidtimer = tempTimer(4.5, [[OppLostAff("voidfist")]])
   end
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>His eyes dark and expression blank, [\w'\-]+ strikes ([\w'\-]+) a hollow blow.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Lightning Infuse Check</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Minute bolts of lightning arc across ([\w'\-]+)\'s skin\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Prone Stuff</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>ImpaleSlash</name>
								<script>if IsTargetted(matches[3]) then
	OppGainedAff("impaleslash")
   if impaleslashtimer then killTimer(impaleslashtimer);impaleslashtimer = nil end
   impaleslashtimer = tempTimer(30, [[OppLostAff("impaleslash")]])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(.*) steady in your grip, you drag its razor edge across arteries within ([\w'\-]+)'s abdomen\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Depthswalker Group</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Reap</name>
							<script>if IsTargetted(multimatches[2][2]) then 
   enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
   enableTrigger("Confirmed Hit")                        --DO NOT CHANGE!
   weaponattack = weaponattack or {}
   table.insert(weaponattack, multimatches[2][3])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You unleash a vicious reaping blow at</string>
								<string>^You unleash a vicious reaping blow at ([\w'\-]+) with (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Cull</name>
							<script>if IsTargetted(multimatches[2][2]) then 
   enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
   enableTrigger("Confirmed Hit")                        --DO NOT CHANGE!
   weaponattack = weaponattack or {}
   table.insert(weaponattack, multimatches[2][3])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You lay into</string>
								<string>^You lay into ([\w'\-]+) with a vicious blow from (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Attunes</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Degeneration Attuned Aff</name>
								<script>if IsTargetted(multimatches[2][2]) then 
   OppGainedAff(multimatches[2][3])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You determine that</string>
									<string>^You determine that ([\w'\-]+) is suffering from ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Attuned Madness Aff</name>
								<script>if IsTargetted(multimatches[2][2]) then 
   OppGainedAff(multimatches[2][3])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You sense that</string>
									<string>^You sense that ([\w'\-]+) has been struck down with the ([\w'\-]+) (madness|degeneration)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Attuned Target</name>
								<script>--cecho("\n\n\nFired!")
if matches[2] == target:lower():title() then
	ak.attuned = true
	enableTrigger("Unattuned Target")
	attunetimer = tempTimer(160, [[
		ak.attuned = false
		if svo then svo.boxDisplay("Target Unattuned", "red:black") end
	]])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Reaching out to the shadow of ([\w'\-]+), you plunge (?:.+) into it and attune it to the directive of (Degeneration|Madness)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Unattuned Target</name>
								<script>if matches[2] == target:lower():title() then
	disableTrigger("Unattuned Target")
	killTimer(attunetimer)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You unattune the shadow of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Instills</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>3</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You unleash a vicious reaping blow at</string>
								<string>You lay into</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>2</integer>
							</regexCodePropertyList>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Timeloop</name>
								<script>OppGainedAff("timeloop")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Grey fog begins to rise from the suddenly panicked-looking</string>
									<string>^Grey fog begins to rise from the suddenly panicked-looking ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Looped Instill</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A grey miasma flares around ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Depression</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Depression Sequence</name>
									<script>if IsTargetted(multimatches[2][2]) then
   ak.instill("Depression")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>3</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>As the weapon strikes</string>
										<string>^As the weapon strikes ([\w'\-]+)\, it burns with a sickly yellow glow\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>2</integer>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Depression Looping</name>
										<script>if IsTargetted(matches[2]) then
   ak.instill("Depression")
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>4</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^A grey miasma flares around ([\w'\-]+)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Depression All</name>
									<script>--Depression, Nausea, Hypochondria, Anorexia/Masochism
if IsTargetted(multimatches[2][2]) then
   ak.fullinstill("Depression")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>A look of total despair crosses the face of</string>
										<string>^A look of total despair crosses the face of ([\w'\-]+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>2</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Degeneration</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Degeneration</name>
									<script>if IsTargetted(multimatches[2][2]) then
	if not multimatches[3][1]:find("stiffens into paralysis.") then
		ak.instill("Degeneration")
	end
end

--Weariness, Clumsiness, Paralysis, Damage
--[[
if IsTargetted(matches[2]) and (ak.boostloop or affstrack.score.timeloop &gt;= 50) then 
   OppGainedAff("weariness")
   OppGainedAff("clumsiness") 
elseif IsTargetted(matches[2]) then 
   if affstrack.score.weariness == 0 then
      OppGainedAff("weariness")
   elseif affstrack.score.clumsiness == 0 and affstrack.score.weariness == 100 then
      OppGainedAff("clumsiness") 
   end
   ak.paradegen = true
end
--]]</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>3</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>As the weapon strikes</string>
										<string>^As the weapon strikes ([\w'\-]+)\, the contact area begins to rot before your eyes\.$</string>
										<string>^(.+)$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>2</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Degeneration Loop</name>
										<script>if IsTargetted(multimatches[1][2]) then
	if not multimatches[2][1]:find("stiffens into paralysis.") then
		ak.instill("Degeneration")
	end
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>1</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^A grey miasma flares around ([\w'\-]+)\.$</string>
											<string>^(.+)$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Degeneration All</name>
									<script>--Depression, Nausea, Hypochondria, Anorexia/Masochism
if IsTargetted(matches[2]) then
   ak.fullinstill("Degeneration")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>3</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>The face of ([\w'\-]+) contorts in pain.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Retribution</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Retribution Sequence</name>
									<script>if IsTargetted(multimatches[2][2]) then
   ak.instill("Retribution")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>3</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>As the weapon strikes</string>
										<string>^As the weapon strikes ([\w'\-]+), it blazes with incandescent white flame\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>2</integer>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Retribution Loop</name>
										<script>if IsTargetted(matches[2]) then
   ak.instill("Retribution")
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>4</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^A grey miasma flares around ([\w'\-]+)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Retribution All</name>
									<script>if IsTargetted(multimatches[2][2]) then
   ak.fullinstill("Retribution")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>The white flame leaps from the scythe to</string>
										<string>^The white flame leaps from the scythe to ([\w'\-]+), blazing with a terrible intensity before guttering out\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>2</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Leach</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Leach Sequence</name>
									<script>if IsTargetted(multimatches[2][2]) then
   ak.instill("Leach")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>4</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>As the weapon strikes</string>
										<string>^As the weapon strikes ([\w'\-]+), s?he seems greatly diminished\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>2</integer>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Leach Loop</name>
										<script>if IsTargetted(matches[2]) then
   ak.instill("Leach")
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>3</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^A grey miasma flares around ([\w'\-]+)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Leach All</name>
									<script>if IsTargetted(multimatches[2][2]) then
   ak.fullinstill("Leach")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>2</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^As the scythe comes away, the writhing shadow of ([\w'\-]+) clings to the weapon\.$</string>
										<string>^You claim the shadow of ([\w'\-]+), storing it within your phylactery\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Madness</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Madness Sequence</name>
									<script>if IsTargetted(multimatches[2][2]) then
   ak.instill("Madness")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>4</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>As the weapon strikes</string>
										<string>^As the weapon strikes ([\w'\-]+), (?:his|her) face grows vacant and s?he begins to tremble\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>2</integer>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Madness Loop</name>
										<script>if IsTargetted(matches[2]) then
   ak.instill("Madness")
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>3</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^A grey miasma flares around ([\w'\-]+)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
							</TriggerGroup>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Phylactery Tracking</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Phylactery Starting</name>
								<script>ak.ShadowList = {}
enableTrigger("Phylactname")
enableTrigger("Phylactery End")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You have stored the following people's shadows within your phylactery:</string>
									<string>--------------------------------------------------------------------------------</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Phylactname</name>
								<script>table.insert(ak.ShadowList,matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Phylactery End</name>
								<script>disableTrigger("Phylactname")
disableTrigger("Phylactery End")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your phylactery holds ([\w'\-]+) shadows of a maximum \d+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shadow Removed</name>
								<script>ak.removeshadow(matches[2])
ak.scoreup(matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You draw the shadow of ([\w'\-]+) from within .+\, allowing it to dissipate into nothing\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Boostloop</name>
							<script>ak.boostloop = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Bending your will upon .+, you corrupt the weapon's timestream.$</string>
								<string>As you push your aeonic might beyond its limits, you feel yourself grow older.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Claimed Shadow!</name>
							<script>ak.addshadow(matches[2])
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#00ffff</mFgColor>
							<mBgColor>#ff0000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You claim the shadow of ([\w'\-]+), storing it within your phylactery\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Redemption</name>
							<script>ak.removeshadow(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Drawing the shadow of ([\w'\-]+) from .+, you suffuse it with your power\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Mutilate</name>
							<script>OppGainedAff(multimatches[1][2])
ak.removeshadow(multimatches[2][2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You rub some ([\w'\-]+) on .+\.$</string>
								<string>^Drawing the shadow of ([\w'\-]+) from .+, you plunge .+ savagely into the ephemeral mass\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Shadowmadness Tracking</name>
							<script>if IsTargetted(multimatches[2][2]) then 
   OppGainedAff(multimatches[2][3])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You sense that</string>
								<string>^You sense that ([\w'\-]+) has been struck down with the ([\w'\-]+) madness\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Aeon</name>
							<script>if IsTargetted(matches[2]) then
   aeonreset = false
   OppGainedAff("aeon")
   AeonTimer = tempTimer(15,[[aeonreset = true]])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Invoking the might of Aeon, you bring down a curse of terrible proportions upon ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Aeon speed</name>
							<script>if IsTargetted(matches[2]) then
   ak.defs.speed = false
   ak.scoreup(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Directing your will upon ([\w'\-]+), you tear away the protection granted to (?:her|him) by the speed elixir\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Shield Shattered</name>
							<script>ak.removeshadow(matches[2])
ak.defs.shield = false
ak.scoreup(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your shadow leaps for ([\w'\-]+)\, hammering [\w'\-]+ shield in a silent frenzy that causes it to explode in a shower of prismatic shards\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hinder</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Preempt</name>
								<script>if IsTargetted(matches[2]) then
	if affstrack.score.preempt == 0 then
		affstrack.score.preempt = 100
		
		ak.scoreup(matches[2])
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You begin dedicating part of your attention to predicting where (\w+) shall try to flee to\.$</string>
									<string>^Someone else is already preempting the movements of (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Preempt Fade</name>
								<script>if IsTargetted(matches[2]) then
	if affstrack.score.preempt == 100 then
		affstrack.score.preempt = 0
		
		ak.scoreup(matches[2])
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You are no longer predicting the movements of (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dragon Group</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Claw Reset</name>
							<script>if ak.ai() then return end
expandAlias("dofree wipe claws")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your claws are already dripping with venoms, Wyrm.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Dragon Curse Set</name>
							<script>if ak.ai() then return end
dragoncursesent = matches[2]
ak.scoreup(matches[3])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You summon your ancient power and direct the curse of ([\w'\-]+) to strike down ([\w'\-]+) in \d+ seconds\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Dcursed</name>
							<script>if ak.ai() then return end
if dragoncursesent then OppGainedAff(dragoncursesent) end
dragoncursesent = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>([\w'\-]+) convulses under the influence of some invisible force.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Roar</name>
							<script>if ak.ai() then return end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your nostrils flare with a rush of air as your sinuous body contracts and your mouth opens wide to emit a rippling, unbroken roar that reverberates through the very earth underfoot.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bound</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   affstrack.score.bound = 100
   ak.scoreup(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Abruptly the keening ends, and a blossom of ethereal tendrils bursts from ([\w'\-]+)'s chest, ensnaring (him|her) in a web of undulating bonds\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dwb Group</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Momentum Drop</name>
							<script>ak.dwb.momentum = ak.dwb.momentum - 1
if ak.dwb.momentum &lt; 0 then
	ak.dwb.momentum = 0
end
ak.scoreup(target)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your momentum decreases.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Momentum Gain</name>
							<script>ak.dwb.momentum = ak.dwb.momentum + 1
ak.scoreup(matches[3])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You skilfully whirl (.*) toward ([\w'\-]+)\, slamming the balls of metal into (him|her)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>No Momentum</name>
							<script>ak.dwb.momentum = 0
ak.scoreup(target)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have lost all of your gained momentum.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Expended Arms</name>
							<script>if matches[2] == "left" then
	local aff = "armexpend clumsiness"
	OppGainedAff(aff)
elseif matches[2] == "right" then
--no tattoos
	local aff = "armexpend clumsiness"
	OppGainedAff(aff)
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You feel the satisfying crunch of bone as your attack connects with the (left|right) arm of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Expend Legs</name>
							<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
	EchoForMajorAff("PRONE")
	OppGainedAff("prone")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The power of your blow sweeps the legs out from under ([\w'\-]+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New Trigger</name>
							<script>display(gmcp.Char.Vitals.charstats[4])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have not built up sufficient momentum to perform such an assault against Majin.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fire Lord Group</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Blister</name>
							<script>if IsTargetted(matches[2]) then
   OppGainedAff("blisters aflame")
end
ak.scoreup(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Bending the might of Kkractle upon the pitiful ([\w'\-]+), you command that (she|he) burn from within\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Char</name>
							<script>if IsTargetted(matches[2]) then
   OppGainedAff("paralysis clumsiness")
end
ak.scoreup(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You reach out and clasp the face of ([\w'\-]+) between your hands, (her|his) skin rapidly beginning to blacken beneath your grasp\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Weave</name>
							<script>if IsTargetted(matches[2]) then
	 OppGainedAff("bound")
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You fashion a weave of flame and cast it about ([\w'\-]+), entangling (him|her) in its conflagrant tendrils\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Flamewhip Sensi</name>
							<script>if IsTargetted(matches[2]) then
	OppGainedAff("sensitivity")
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The skin of ([\w'\-]+) is left sensitive and raw\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Flamewhip Para</name>
							<script>if IsTargetted(matches[2]) then
	OppGainedAff("paralysis")
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) convulses, face locked in a rictus of agony\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Vapourise</name>
							<script>if IsTargetted(matches[2]) then
   OppGainedAff("aflame")
	 ak.defs.shield = false
end
ak.scoreup(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You superheat the air surrounding ([\w'\-]+)\, (his|her) magical shield shattering under the onslaught and (his|her)skin catching aflame\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Spark momentum</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Spark 0</name>
								<script>ak.firelord.spark = 0
ak.scoreup(target)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The loud crackling of your flames grows quiet, their strength greatly reduced\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Spark 1</name>
								<script>ak.firelord.spark = 1
ak.scoreup(target)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#aa0000</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your fires begin to rage with the desire to consume\.$</string>
									<string>^As you cease to burn with such intensity the warping of the air that surrounds you fades\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Spark 2</name>
								<script>ak.firelord.spark = 2
ak.scoreup(target)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ffaa00</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The very air warps about you as your flames burn ever brighter\.$</string>
									<string>^Your searing white flames are diminished, turning to a burning orange\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Spark 3</name>
								<script>ak.firelord.spark = 3
ak.scoreup(target)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ffff00</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The flames that compose you turn a searing white\.$</string>
									<string>^The burning crown about your head flickers out of existence\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Spark 4</name>
								<script>ak.firelord.spark = 4
ak.scoreup(target)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ffffff</mFgColor>
								<mBgColor>#ff0000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A crown of flames ignites about your head, a mark of Kkractle's esteem\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Jester Group</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Mickey</name>
							<script>if IsTargetted(matches[2]) then 
   ak.mickey = true
   ak.scoreup(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You quickly slip ([\w'\-]+) a mickey\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Magi Group</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Impurity</name>
							<script>if nextcurse and nextcurse ~= "paralysis" then
	 if ak.ai() then return end
   OppGainedAff(nextcurse)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You direct a crystalline golem to introduce impurities into the blood of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Frozen</name>
							<script>if ak.ai() then return end
OppGainedAff("frozen")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You raise a hand towards [\w'\-]+ and blast [\w'\-]+ with cold, frigid air\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Deepfreeze</name>
							<script>if ak.ai() then return end
OppGainedAff("deepfreeze")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You drain the heat from the air around your enemies, causing them to experience the cold of the abyss itself.</string>
								<string>Austere gestures grandly, and causes a deepfreeze to settle over his enemies.</string>
								<string>Morthif gestures grandly, and causes a deepfreeze to settle over his enemies.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Destabilise</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Retardation</name>
								<script>if ak.ai() then return end
send("touch soul")
send("touch soul")
affstrack.score.aeon = 100
ak.scoreup(target)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Turning to a crystalline golem you direct him to project a disruptive tone at a retardation vibration.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Oscillate</name>
								<script>if ak.ai() then return end
hitrelay = {"stupidity", "epilepsy"}
OppGainedAff(table.concat(hitrelay, " "))</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Turning to a crystalline golem you direct him to project a disruptive tone at an oscillate vibration.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Creeps</name>
								<script>if ak.ai() then return end
hitrelay = {"agoraphobia", "claustrophobia"}
OppGainedAff(table.concat(hitrelay, " "))</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Turning to a crystalline golem you direct him to project a disruptive tone at a creeps vibration.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Dissonance</name>
								<script>if ak.ai() then return end
hitrelay = {"prone", "dizziness"}
OppGainedAff(table.concat(hitrelay, " "))</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Turning to a crystalline golem you direct him to project a disruptive tone at a disorientation vibration.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Monk Group</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Pmp</name>
							<script>if ak.ai() then return end
aff = "impatience"
if IsTargetted(multimatches[2][2]) then
   OppGainedAff(aff)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The palmstrike smashes into the temple of</string>
								<string>^The palmstrike smashes into the temple of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Pmp2</name>
							<script>if ak.ai() then return end
aff = "stupidity"
if IsTargetted(multimatches[2][2])then
   OppGainedAff(aff)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your palm smashes into the bridge of</string>
								<string>^Your palm smashes into the bridge of ([\w'\-]+)'s nose\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Jbp</name>
							<script>if ak.ai() then return end
aff = "deaf"
if IsTargetted(multimatches[2][2]) then
   OppGainedAff(aff)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You expertly jab your fingers into the nerve cluster behind the ear of</string>
								<string>^You expertly jab your fingers into the nerve cluster behind the ear of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Blp</name>
							<script>if ak.ai() then return end
aff = "dizziness"
if IsTargetted(multimatches[2][2]) then
   OppGainedAff(aff)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You whip your hand in a vicious bladehand at the neck of</string>
								<string>^You whip your hand in a vicious bladehand at the neck of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wrench Head</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   if affstrack.score.head == 0 then
	    ak.limbs.limbcount[target]["head"] = 0
	    affstrack.score.head = 100
	 end
   local aff = "wrenchhead,epilepsy"
   OppGainedAff(aff)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Grabbing hold of the head of ([\w'\-]+)\, you savagely wrench it down and forward\, driving your knee up to meet it with a sickening crack\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wrench Torso</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   if affstrack.score.torso == 0 then
	    ak.limbs.limbcount[target]["torso"] = 0
	    affstrack.score.torso = 100
	 end
   local aff = "wrenchtorso"
   OppGainedAff(aff)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Stepping inside the guard of ([\w'\-]+)\, you lock your hands behind (her|him) before savagely wrenching (her|him) forward\, driving your knee up beneath (her|his) ribs\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wrt Arm Failure</name>
							<script>if ak.ai() then return end
local limbcheck = matches[2]..""..matches[3]
local lastpercentrelay = "lastpercent"..limbcheck
if affstrack.score[limbcheck] &gt; 0 then
    if ak.thoughtIhad then ak.thoughtIhad(limbcheck) else affstrack.score[limbcheck] = 0 end
    ak.limbs.limbcount[target][limbcheck] = (ak.limbs.limbcount[target][lastpercentrelay])
    _G[target.."rightlegdisablelimbdamage"] = nil
    ak.scoreup(matches[4])
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+) is not sufficiently damaged for you to perform that attack against it\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wrt Head/Torso Failure</name>
							<script>if ak.ai() then return end
local limbcheck = matches[2]
local lastpercentrelay = "lastpercent"..limbcheck
if affstrack.score[limbcheck] &gt; 0 then
    if ak.thoughtIhad then ak.thoughtIhad(limbcheck) else affstrack.score[limbcheck] = 0 end
    ak.limbs.limbcount[target][limbcheck] = (ak.limbs.limbcount[target][lastpercentrelay])
    _G[target.."rightlegdisablelimbdamage"] = nil
    ak.scoreup(matches[3])
end
ak.deleteFull()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The ([\w'\-]+) of ([\w'\-]+) is not sufficiently damaged for you to perform that attack against it\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Occultist Group</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Occultism</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Rayz</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>5</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Tapping into your stores of karma, you transmute a small amount into pure chaos. Seven rays of different coloured light spring out from your outstretched hands, irradiating the location with blinding strobes.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Hit 3</name>
									<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   pullray = {}
   if matches[3] then table.insert(pullray, matches[3]) end
   if matches[4] then table.insert(pullray, matches[4]) end
   if matches[5] then table.insert(pullray, matches[5]) end
   if table.contains(pullray,"orange") then OppGainedAff("paralysis") end
   if table.contains(pullray,"violet") then OppGainedAff("aeon") end
   if table.contains(pullray,"indigo") then OppGainedAff("stupidity") end
end
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^([\w'\-]+) is hit by a ([\w'\-]+)(?:, ([\w'\-]+)|)(?:, and ([\w'\-]+)|) ray\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Hit 2</name>
									<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   pullray = {}
   if matches[3] then table.insert(pullray, matches[3]) end
   if matches[4] then table.insert(pullray, matches[4]) end
   if matches[5] then table.insert(pullray, matches[5]) end
   if table.contains(pullray,"orange") then OppGainedAff("paralysis") end
   if table.contains(pullray,"violet") then OppGainedAff("aeon") end
   if table.contains(pullray,"indigo") then OppGainedAff("stupidity") end
end
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^([\w'\-]+) is hit by a ([\w'\-]+)(?: and ([\w'\-]+)|) ray\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Instill</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then	
	if matches[3] ~= "an allergy to sunlight" then
		OppGainedAff(matches[3])
	else 
		OppGainedAff("darkshade")
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You make a sharp gesture toward ([\w'\-]+)\, disrupting \w+ aura with the (.+) affliction\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Devolve</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   OppGainedAff("disloyalty shyness")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You utter a terrible curse and point a finger at ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shrivel</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   smashlimb = matches[3]..matches[4]
   if affstrack.score[smashlimb] &lt; 100 then
      OppGainedAff(smashlimb)
   end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You touch ([\w'\-]+)'s ([\w'\-]+) ([\w'\-]+), and it shrivels away\.$</string>
									<string>^You reach out and touch ([\w'\-]+)'s ([\w'\-]+) ([\w'\-]+), but you can shrivel it no further\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Attend</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   affstrack.score.blind = 100
   affstrack.score.deaf = 100
   ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Focusing your will, you exert your aura at ([\w'\-]+) and snap your fingers, forcing [\w'\-]+ to pay attention to you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Cold</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   OppGainedAff("frozen")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You create a tendril of icy blue light that lashes out at ([\w'\-]+) and wraps around [\w'\-]+ aura\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Enlighten</name>
								<script>if ak.ai() then return end
if string.match(matches[2],target) then
   OppGainedAff("enlighten")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You see (.*) shout\, \"No\, it cannot be true\! I cannot accept it\! I beg of you to make it stop\!</string>
									<string>^(.+), \"No\, it cannot be true\! I cannot accept it\! I beg of you to make it stop\!\"$</string>
									<string>^You see (.*) shout something in an unknown foreign tongue\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Cleanse Aura</name>
								<script>cecho("\n&lt;purple&gt; --------------------------------------------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT CLEANSE!!--------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT CLEANSE!!--------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT CLEANSE!!--------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT CLEANSE!!--------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT CLEANSE!!--------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT CLEANSE!!--------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT CLEANSE!!--------------------------")
cecho("\n&lt;purple&gt; --------------------------------------------------------------")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A look of sudden concern flits across the visage of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Unnamable</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   ak.occie.aura.parse_unnamable(matches[3]+0)
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) has been struck down by (\d+) curses of the unnamable\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>TrueName</name>
								<script>cecho("\n&lt;purple&gt; --------------------------------------------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT TRUENAME!!--------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT TRUENAME!!--------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT TRUENAME!!--------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT TRUENAME!!--------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT TRUENAME!!--------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT TRUENAME!!--------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT TRUENAME!!--------------------------")
cecho("\n&lt;purple&gt; --------------------------------------------------------------")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You command an eldritch abomination to discern the doom of ([\w'\-]+)\.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Truename Used</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   OppGainedAff("aeon")
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Drawing back with a knowing smirk\, you utter the truename of ([\w'\-]+)\, who suddenly becomes very still and bleeds from [\w'\-]+ eyes and ears\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Whisperingmadness got</name>
								<script>if ak.ai() then return end



if IsTargetted(matches[2]) then
  if affstrack.whisperscore &lt; 1 then
   for i=1, #affstrack.whisperlist do
    if affstrack.score[affstrack.whisperlist[i]] &gt; 0 then
      if ak.ProTrackingConfirmed then
        ak.ProTrackingConfirmed(affstrack.whisperlist[i])
        OppGainedAff("whisperingmadness")
        return
      else
        affstrack.score[affstrack.whisperlist[i]] = 100
        OppGainedAff("whisperingmadness")
        return
      end
    end
   end
  end
  OppGainedAff("whisperingmadness")
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You pass your hand in front of ([\w'\-]+). ([\w'\-]+) trembles and h(is|er) eyes widen in terror.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Whisperingmadness Confirm</name>
								<script>if ak.ai() then
  return
end
if ak.ProTrackingConfirmed then
  ak.ProTrackingConfirmed("whisperingmadness")
else
  affstrack.score.whisperingmadness = 100
  ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) trembles and [\w'\-]+ eyes widen in terror\. (She|He) looks around (herself|himself) as if searching for something that isn\'t there\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Whisper Focused</name>
								<script>if ak.ai() then return end
local aff = matches[3]
OppGainedAff(aff)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You sense that (\w+) has been struck down with (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>WhisperFail</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   for i=1, #affstrack.whisperlist do
    if affstrack.score[affstrack.whisperlist[i]] &gt; 0 then
      if ak.thoughtIhad then 
        ak.thoughtIhad(affstrack.whisperlist[i]) 
        return  
      end 
    end
   end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You pass your hand in front of (\w+)\. \w+ shakes \w+ head as if clearing \w+ mind\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Read Aura</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Read Aura</name>
									<script>if ak.ai() then return end
affstrack.score.blind = 100
affstrack.score.deaf = 100
ak.defs.rebounding = false
ak.defs.speed = false
ak.mounted = false
enableTrigger("Finale Read Aura")
enableTrigger("Readaura Defs")
disableTrigger("Lifegiver (def)")
disableTrigger("Wsys Tattoos")
ak.deleteFull()
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Studying the aura of ([\w'\-]+)\, you look for traces of anything that may be protecting it\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Finale Read Aura</name>
									<script>disableTrigger("Finale Read Aura")
disableTrigger("Readaura Defs")
enableTrigger("Wsys Tattoos")
enableTrigger("Lifegiver (def)")
cecho("&lt;yellow&gt;[&lt;white&gt;"..ak.occie.aura.physical.."|&lt;cyan&gt;"..ak.occie.aura.mental.."&lt;yellow&gt;]")
ak.occie.aura.physical = matches[3] + 0
ak.occie.aura.mental = matches[4] + 0
ak.scoreup(matches[2])
if (not ak.defs.speed) then cecho("\n-- &lt;red&gt;-&lt;white&gt;SPEED&lt;red&gt;-&lt;white&gt;SPEED&lt;red&gt;") end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You perceive that ([\w'\-]+) suffers from (\d+) physical afflictions and (\d+) mental afflictions\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Readaura Defs</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList />
									<regexCodePropertyList />
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Cloak</name>
										<script>ak.deleteFull()</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>She is surrounded by a cloak of protection.</string>
											<string>He is surrounded by a cloak of protection.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Blind</name>
										<script>affstrack.score.blind = 0
ak.deleteFull()</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>She is blind.</string>
											<string>He is blind.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Deaf</name>
										<script>affstrack.score.deaf = 0
ak.deleteFull()</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>She is deaf.</string>
											<string>He is deaf.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Speed</name>
										<script>ak.deleteFull()
ak.defs.speed = true
      if not SpeedTimer then
         SpeedTimer = tempTimer(4,[[
                ak.defs.speed = true
                SpeedTimer = false 
                ak.scoreup(target) 
                ]])
      end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>Her sense of time is heightened, and her reactions are speeded.</string>
											<string>His sense of time is heightened, and his reactions are speeded.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Mounted</name>
										<script>ak.mounted = true
ak.deleteFull()</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^He is riding .*\.$</string>
											<string>^She is riding .*\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Rebounding</name>
										<script>ak.defs.rebounding = true
ak.deleteFull()</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>She is protected from hand-held weapons with an aura of rebounding.</string>
											<string>He is protected from hand-held weapons with an aura of rebounding.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Parry Location</name>
										<script>ak.deleteFull()</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^He will attempt to parry attacks to his (.+)\.$</string>
											<string>^She will attempt to parry attacks to her (.+)\.$</string>
											<string>^He will attempt to throw those who attack his (.+)\.$</string>
											<string>^She will attempt to throw those who attack her (.+)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Ignore</name>
										<script>ak.deleteFull()</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>She is focussing on quelling her bleeding more efficiently.</string>
											<string>She has a will of iron.</string>
											<string>He has a will of iron.</string>
											<string>He is enhancing his precision through the power of Terminus.</string>
											<string>She is enhancing her precision through the power of Terminus.</string>
											<string>He is enhancing his durability against denizens.</string>
											<string>She is enhancing her durability against denizens.</string>
											<string>Concealed by a shifting veil of shadow.</string>
											<string>You are masking your egress.</string>
											<string>^He has a small critical bonus lasting another .+\.$</string>
											<string>^She has a small critical bonus lasting another .+\.$</string>
											<string>Serpentine scales protect his body.</string>
											<string>Serpentine scales protect her body.</string>
											<string>He is lipreading to overcome deafness.</string>
											<string>She is lipreading to overcome deafness.</string>
											<string>He is paced for bursts of exertion.</string>
											<string>She is paced for bursts of exertion.</string>
											<string>He is able to detect wormholes due to possessing the second sight.</string>
											<string>She is able to detect wormholes due to possessing the second sight.</string>
											<string>He is resonating with the sun's energy.</string>
											<string>She is resonating with the sun's energy.</string>
											<string>He is favoured by .*\.$</string>
											<string>She is favoured by .*\.$</string>
											<string>His skin is toughened.</string>
											<string>Her skin is toughened.</string>
											<string>He is alert to incoming projectiles.</string>
											<string>She is alert to incoming projectiles.</string>
											<string>He has cast a mindnet over the local area.</string>
											<string>She has cast a mindnet over the local area.</string>
											<string>He is deep within the Shin trance.</string>
											<string>She is deep within the Shin trance.</string>
											<string>He is maintaining consciousness at all times.</string>
											<string>She is maintaining consciousness at all times.</string>
											<string>He is seeing the world around him with greater clarity of vision.</string>
											<string>She is seeing the world around him with greater clarity of vision.</string>
											<string>He is diverting excess Shin energy into regeneration.</string>
											<string>She is diverting excess Shin energy into regeneration.</string>
											<string>He is using his superior constitution to prevent nausea.</string>
											<string>She is using his superior constitution to prevent nausea.</string>
											<string>He has softened the focus of his eyes.</string>
											<string>She has softened the focus of her eyes.</string>
											<string>His hands are gripping his wielded items tightly.</string>
											<string>Her hands are gripping her wielded items tightly.</string>
											<string>You are attempting to deflect arrows toward less vital areas.</string>
											<string>He has earned the blessing of the gods.</string>
											<string>She has earned the blessing of the gods.</string>
											<string>He is concentrating on maintaining control over his faculties.</string>
											<string>She is concentrating on maintaining control over his faculties.</string>
											<string>He has augmented his own body for enhanced defence.</string>
											<string>She has augmented his own body for enhanced defence.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Ignore</name>
										<script>ak.deleteFull()</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>She has the following defences:</string>
											<string>He has the following defences:</string>
											<string>Her wounds are being staunched by the moss tattoo.</string>
											<string>His wounds are being staunched by the moss tattoo.</string>
											<string>Mentally bolstered by the power of the megalith.</string>
											<string>The endurance of the great ox flows through you.</string>
											<string>She is feeling extremely energetic.</string>
											<string>He is feeling extremely energetic.</string>
											<string>She is walking on a small cushion of air.</string>
											<string>He is walking on a small cushion of air.</string>
											<string>Her senses are magically heightened.</string>
											<string>His senses are magically heightened.</string>
											<string>She possess the sight of the third eye.</string>
											<string>He possess the sight of the third eye.</string>
											<string>She is tempered against fire damage.</string>
											<string>He is tempered against fire damage.</string>
											<string>He is holding his breath.</string>
											<string>She is holding her breath.</string>
											<string>^He is protected by \d+ defences\.$</string>
											<string>^She is protected by \d+ defences\.$</string>
											<string>He is extremely heavy and difficult to move.</string>
											<string>She is extremely heavy and difficult to move.</string>
											<string>Benefitting from the stolen life aura of your fallen foes.</string>
											<string>Her resistance to damage by poison has been increased.</string>
											<string>His resistance to damage by poison has been increased.</string>
											<string>Her mind has been attuned to the realm of Death.</string>
											<string>His mind has been attuned to the realm of Death.</string>
											<string>He has enhanced his vision to be able to see traces of lifeforce.</string>
											<string>She has enhanced her vision to be able to see traces of lifeforce.</string>
											<string>A curseward has been established about his person.</string>
											<string>A curseward has been established about her person.</string>
											<string>She is enchanted against magic damage.</string>
											<string>He is enchanted against magic damage.</string>
											<string>He is enchanted against cold damage.</string>
											<string>She is enchanted against cold damage.</string>
											<string>She is enchanted against electric damage.</string>
											<string>He is enchanted against electric damage.</string>
											<string>She is protected from the fangs of serpents.</string>
											<string>He is protected from the fangs of serpents.</string>
											<string>He has insomnia, and cannot easily go to sleep.</string>
											<string>She has insomnia, and cannot easily go to sleep.</string>
											<string>He is surrounded by draconic armour.</string>
											<string>She is surrounded by draconic armour.</string>
											<string>She is coated in an insulating unguent.</string>
											<string>He is coated in an insulating unguent.</string>
											<string>She has summoned her draconic breath weapon.</string>
											<string>He has summoned his draconic breath weapon.</string>
											<string>You will not go quietly into death.</string>
											<string>His mind is racing with enhanced speed.</string>
											<string>Her mind is racing with enhanced speed.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Ignore</name>
										<script>ak.deleteFull()</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^He is benefitting from a \d+\% bonus to experience gain\.$</string>
											<string>^She is benefitting from a \d+\% bonus to experience gain\.$</string>
											<string>She is enchanted against fire damage.</string>
											<string>He is enchanted against fire damage.</string>
											<string>You walk with the grace of the relic Lifegiver.</string>
											<string>Illuminated by the light of the moon.</string>
											<string>The vitality of the boar is energising you.</string>
											<string>She is feeling quite selfish.</string>
											<string>He is feeling quite selfish.</string>
											<string>Her body is weathering the storm of life a little better.</string>
											<string>His body is weathering the storm of life a little better.</string>
											<string>She is resisting magical damage.</string>
											<string>He is resisting magical damage.</string>
											<string>He is walking with the grace of the stars.</string>
											<string>She is walking with the grace of the stars.</string>
											<string>His vision is heightened to see in the dark.</string>
											<string>Her vision is heightened to see in the dark.</string>
											<string>His actions are cloaked in secrecy.</string>
											<string>Her actions are cloaked in secrecy.</string>
											<string>He is acknowledged by Jy'Barrak Golgotha, Emperor of Chaos.</string>
											<string>She is acknowledged by Jy'Barrak Golgotha, Emperor of Chaos.</string>
											<string>You are able to scout passed obstructions.</string>
											<string>His skin is hard and tough like the bark of an oak tree.</string>
											<string>Her skin is hard and tough like the bark of an oak tree.</string>
											<string>He is concentrating on clotting his wounds.</string>
											<string>She is concentrating on clotting her wounds.</string>
											<string>He has used great guile to conceal himself.</string>
											<string>She has used great guile to conceal herself.</string>
											<string>He is able to navigate forests more easily.</string>
											<string>She is able to navigate forests more easily.</string>
											<string>A jaguar spirit co-habits your body.</string>
											<string>He will call upon his fortitude in need.</string>
											<string>She will call upon her fortitude in need.</string>
											<string>His senses are attuned to nearby movement.</string>
											<string>Her senses are attuned to nearby movement.</string>
											<string>The devilmark is upon his breast.</string>
											<string>The devilmark is upon her breast.</string>
											<string>He is aware of movement in the skies.</string>
											<string>She is aware of movement in the skies.</string>
											<string>He is aware of movement on the ground.</string>
											<string>She is aware of movement on the ground.</string>
											<string>He is watching the trees or rigging above for signs of movement.</string>
											<string>She is watching the trees or rigging above for signs of movement.</string>
											<string>He has distorted his own aura.</string>
											<string>She has distorted her own aura.</string>
											<string>The spirit of a Chaos Lord lies dormant in his soul.</string>
											<string>The spirit of a Chaos Lord lies dormant in her soul.</string>
											<string>He has accepted a blessing for aid in times of need.</string>
											<string>She has accepted a blessing for aid in times of need.</string>
											<string>He is focussing on quelling his bleeding more efficiently.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Ignore</name>
										<script>ak.deleteFull()</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>Travelling the world more quickly due to time dilation.</string>
											<string>He is highfavoured by </string>
											<string>She is highfavoured by </string>
											<string>He is performing retaliatory strikes against his attackers.</string>
											<string>She is performing retaliatory strikes against her attackers.</string>
											<string>^He has engaged ([\w'\-]+)\.$</string>
											<string>^She has engaged ([\w'\-]+)\.$</string>
											<string>He is protected from the creation of physical images of himself.</string>
											<string>She is protected from the creation of physical images of herself.</string>
											<string>He is protected from damage by a tune of safety.</string>
											<string>She is protected from damage by a tune of safety.</string>
											<string>She is vigilantly watching for potential danger.</string>
											<string>He is vigilantly watching for potential danger.</string>
											<string>She is protected by the bell tattoo.</string>
											<string>He is protected by the bell tattoo.</string>
											<string>She has augmented her own body for enhanced defence.</string>
											<string>He has augmented his own body for enhanced defence.</string>
											<string>He is poised to glide across the surface of water.</string>
											<string>She is poised to glide across the surface of water.</string>
											<string>He has a great affinity with his spirit form.</string>
											<string>She has a great affinity with his spirit form.</string>
											<string>He is bonded to his spirit totem.</string>
											<string>She is bonded to his spirit totem.</string>
											<string>Diamond-hard skin protects her.</string>
											<string>Diamond-hard skin protects him</string>
											<string>Magically supple granite coats her body.</string>
											<string>Magically supple granite coats his body.</string>
											<string>Her water weird allows her to walk on water.</string>
											<string>His water weird allows him to walk on water.</string>
											<string>He is attuned to local telepathic interference.</string>
											<string>She is attuned to local telepathic interference.</string>
											<string>He is concentrating on maintaining distance from the dreamworld.</string>
											<string>She is concentrating on maintaining distance from the dreamworld.</string>
											<string>He is utilising hypersight.</string>
											<string>She is utilising hypersight.</string>
											<string>He is concentrating on mastery of bladecraft.</string>
											<string>She is concentrating on mastery of bladecraft.</string>
											<string>^He has a critical hit bonus lasting \d+ hour and \d+ minutes\.$</string>
											<string>^She has a critical hit bonus lasting \d+ hour and \d+ minutes\.$</string>
											<string>^He is truefavoured by [\w'\-]+ for over \d+ Achaean month \(which is about \d+ hours\)\.$</string>
											<string>^She is truefavoured by [\w'\-]+ for over \d+ Achaean month \(which is about \d+ hours\)\.$</string>
											<string>^([\w'\-]+) is protected by the power of a [\w'\-]+ Spiritshield\.$</string>
											<string>^[\w'\-]+ is regenerating [\w'\-]+ at an increased rate\.$</string>
											<string>^[\w'\-]+ limbs are suffused with divinely-inspired strength\.$</string>
											<string>^[\w'\-]+ is using [\w'\-]+ superior constitution to prevent nausea\.$</string>
											<string>^[\w'\-]+ is regenerating lost health through the power of Kaido\.$</string>
											<string>^[\w'\-]+ is cloaking [\w'\-]+ attempts at establishing a mindlock\.$</string>
											<string>^[\w'\-]+ is utilising the trance to store Kai energy\.$</string>
											<string>^[\w'\-]+ has boosted the power of [\w'\-]+ Kai Trance\.$</string>
											<string>^[\w'\-]+ has tentacles flailing from [\w'\-]+ body\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
											<integer>0</integer>
											<integer>0</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Ignore</name>
										<script>ak.deleteFull()</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^[\w'\-]+ is bouncing around acrobatically\.$</string>
											<string>A songbird is perched upon his shoulder.</string>
											<string>A songbird is perched upon her shoulder.</string>
											<string>He has sworn vengeance upon those who would slay him.</string>
											<string>She has sworn vengeance upon those who would slay her.</string>
											<string>He is bathed in the glorious protection of decaying flesh.</string>
											<string>She is bathed in the glorious protection of decaying flesh.</string>
											<string>He is enhancing his ocular prowess.</string>
											<string>She is enhancing her ocular prowess.</string>
											<string>^She has a small [\w'\-]+ bonus lasting another \d+ days\, \d+ hours and \d+ minutes\.$</string>
											<string>^He has a small [\w'\-]+ bonus lasting another \d+ days\, \d+ hours and \d+ minutes\.$</string>
											<string>^He has been granted a bonus to [\w'\-]+ regeneration\.$</string>
											<string>^She has been granted a bonus to [\w'\-]+ regeneration\.$</string>
											<string>He will lose less experience in the event of death.</string>
											<string>She will lose less experience in the event of death.</string>
											<string>He has been granted the ability to levitate above the ground.</string>
											<string>She has been granted the ability to levitate above the ground.</string>
											<string>He has been granted the boon of travelling to mutual allies.</string>
											<string>She has been granted the boon of travelling to mutual allies.</string>
											<string>The vitality of the boar is energising him.</string>
											<string>The vitality of the boar is energising her.</string>
											<string>^(He|She) is benefitting from a \d+\% bonus to critical hits\.$</string>
											<string>^(He|She) is blocking the exit [\w'\-]+\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>3</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Bm Stance</name>
										<script>ak.limbs.blademaster.stance[target] = matches[2]:title()
ak.deleteFull()</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^He is in the ([\w'\-]+) stance\.$</string>
											<string>^She is in the ([\w'\-]+) stance\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Shielded</name>
										<script>ak.defs.shield = true
ak.deleteFull()</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>He is surrounded by a nearly invisible magical shield.</string>
											<string>She is surrounded by a nearly invisible magical shield.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Parry Initializer</name>
										<script>ak.deleteFull()</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^[\w'\-]+ is aiming [\w'\-]+ attacks to the (.*)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</TriggerGroup>
							</TriggerGroup>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Domination</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Gremlin Shield</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   ak.defs.shield = false
end
ak.scoreup(matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) has no shield for your gremlin to shatter, occultist\.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Bloodleech</name>
								<script>if ak.ai() then return end
local aff = "haemophilia"
OppGainedAff(aff)
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You command your bloodleech to corrupt the blood of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Firelord</name>
								<script>if ak.ai() then return end
affstrack.score.recklessness = affstrack.score.asthma
affstrack.score.dementia = affstrack.score.paralysis
affstrack.score.stupidity = affstrack.score.recklessness
affstrack.score.claustrophobia = affstrack.score.haemophilia
affstrack.score.shyness = affstrack.score.clumsiness
affstrack.score.agoraphobia = affstrack.score.healthleech
affstrack.score.paranoia = affstrack.score.sensitivity
affstrack.score.confusion = affstrack.score.darkshade
affstrack.score.asthma = 0
affstrack.score.paralysis = 0
affstrack.score.recklessness = 0
affstrack.score.haemophilia = 0
affstrack.score.clumsiness = 0
affstrack.score.healthleech = 0
affstrack.score.sensitivity = 0
affstrack.score.darkshade = 0
ak.resetbacktrack()
ak.scoreup(matches[2])

</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You command your firelord to bring down a portion of the power of Pyradius against ([\w'\-]+)\.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ba-Humbug</name>
								<script>if ak.ai() then return end
local aff = "addiction"
OppGainedAff(aff)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You command your humbug to instill a ravenous hunger in [\w'\-]+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Storm(Danaes)</name>
								<script>if ak.ai() then return end
OppGainedAff("vertigo")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You command your chaos storm to bring down the curse of vertigo upon [\w'\-]+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Sycophant(Rixil)</name>
								<script>if ak.ai() then return end
OppGainedAff("rixil")
tempTimer(30,[[affstrack.score.rixil = 0;ak.scoreup(]]..matches[2]..[[)]])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You command your sycophant to weaken the mind of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Cadmus</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppGainedAff("asthma")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A bubonis reaches out and strokes the side of (\w+)\'s face\, and boils form and rupture in an instant as \w+ begins hacking up black fluid\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Slime</name>
								<script>if ak.ai() then return end
if IsTargetted(multimatches[2][2]) then
   OppGainedAff("slime")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>1</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You command your slime to envelop</string>
									<string>^You command your slime to envelop ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>New Line</name>
									<script>if string.find(matches[1],"You command your slime") then
  return
elseif string.find(matches[1],"mouth") or string.find(matches[1],"paralysis") then
  if ak.HandleSlime then
    ak.HandleSlime(true)
  end
else
  if ak.HandleSlime then
    ak.HandleSlime(false)
  end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^.+$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Worm(Palpatar)</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppGainedAff("worm")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You command your worm to infest (\w+) with maggots\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Chimera Deaf(Buul)</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	affstrack.score.deaf = 0
  ak.scoreup(target)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A chimera throws forward all three of its heads and roars at (\w+), but \w+ seems completely unphased\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Worm Tick</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppGainedAff("healthleech")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Many somethings writhe beneath the skin of (\w+)\, and the sickening sound of chewing can be heard\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Gremlin Periodic</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppGainedAff("dizziness")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The gremlin races around and between the legs of (\w+)\, \w+ eyes tracking it as \w+ sways unsteadily\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Worm Periodic</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppGainedAff("nausea")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The worm burrowing into (\w+) writhes and undulates\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Priest Group</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Diagnose Triggers</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Disruption</name>
								<script>local aff = matches[2].."disrupt"
OppGainedAff(aff)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>disrupted by ([\w'\-]+) energy.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Impatience</name>
								<script>local aff = "impatience"
OppGainedAff(aff)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>impatient.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Justice</name>
								<script>local aff = "justice"
OppGainedAff(aff)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>surrounded by the aura of justice.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Recklessness</name>
								<script>local aff = "recklessness"
OppGainedAff(aff)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>reckless.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Confusion</name>
								<script>local aff = "confusion"
OppGainedAff(aff)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>confused.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Dizziness</name>
								<script>local aff = "dizziness"
OppGainedAff(aff)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>overcome by dizziness.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Stupidity</name>
								<script>local aff = "stupidity"
OppGainedAff(aff)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>unnaturally stupid</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Nausea</name>
								<script>local aff = "nausea"
OppGainedAff(aff)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>violently ill</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Epilepsy</name>
								<script>local aff = "epilepsy"
OppGainedAff(aff)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>suffering from epilepsy.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Weariness</name>
								<script>local aff = "weariness"
OppGainedAff(aff)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>wearied in body.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Clumsiness</name>
								<script>local aff = "clumsiness"
OppGainedAff(aff)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>afflicted with clumsiness.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Paralysis</name>
								<script>local aff = "paralysis"
OppGainedAff(aff)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>paralysed.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Blind</name>
								<script>diagblind = true</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>blind.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Deaf</name>
								<script>diagdeaf = true</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>deaf.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Vertigo</name>
								<script>local aff = "vertigo"
OppGainedAff(aff)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>afraid of heights.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Hallucination</name>
								<script>local aff = "hallucinations"
OppGainedAff(aff)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>hallucinating.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Priest Prompt</name>
								<script>disableTrigger("Diagnose Triggers")
if diagdeaf == false then
   local aff = "deaf"
   OppGainedAff(aff)
end
if diagblind == false then
   local aff = "blind"
   OppGainedAff(aff)
end
ak.scoreup(target)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string></string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>7</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Chasten</name>
							<script>local aff = matches[3]
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You direct a dark bolt of energy through your mace towards ([\w'\-]+)\. The curse of ([\w'\-]+) is brought down on to your victim\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Disrupt</name>
							<script>local aff = matches[2].."disrupt"
if IsTargetted(matches[3]) then
   OppGainedAff(aff)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You direct your ([\w'\-]+) channel to disrupt ([\w'\-]+)\.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Diagnosed! --This is safer to run on a toggle</name>
							<script>if IsTargetted(matches[2]) then
   for k,v in pairs(affstrack.score) do
      if v &gt; 1 then
         affstrack.score[k] = 0
      end
   end
   diagblind = false
   diagdeaf = false
   enableTrigger("Diagnose Triggers")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) is\:$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sprit Wrack</name>
							<script>local aff = matches[3]
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Your angel informs you that it has struck down ([\w'\-]+) with ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Visions</name>
							<script>local aff = "hallucinations"
if IsTargetted(multimatches[2][2]) then
   OppGainedAff(aff)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You condemn</string>
								<string>^You condemn ([\w'\-]+) to see the fate of the enemies of creation\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Guilt</name>
							<script>local aff = "guilt"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\"Know the pain which you have caused\,\" you proselytise to (\w+)\.$</string>
								<string>^\"And your guilt will be made plain\,\" you proselytise to (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Spiritburn</name>
							<script>local aff = "spiritburn"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\"Return to ash\,\" you decree\, focusing your holy might upon (\w+)\.$</string>
								<string>^\"And you shall be naught but cinders\,\" you decree\, focusing your holy might upon (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tenderskin</name>
							<script>local aff = "tenderskin"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\"Burn\!\" you command (\w+)\, fire leaping forth to sear \w+.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Inquisition</name>
							<script>if not IsTargetted(matches[2]) then return end
if affstrack.score.spiritburn == 100 and affstrack.score.guilt == 100 then
   OppGainedAff("inquisition")
   inquisitiontimer = tempTimer(19, [[OppLostAff("inquisition")]])
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You draw ([\w'\-]+) into your gaze, lowering your brow and glaring at (him|her) with righteous fury</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Paranoia</name>
							<script>local aff = "paranoia"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You decree that (\w+) shall know the truth of darkness, and all that it may bring.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hallucinations</name>
							<script>local aff = "hallucinations"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You decree that (\w+) shall see the truth of Chaos for the aberration that it is.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Masochism</name>
							<script>local aff = "masochism"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You decree that (\w+) shall see the horror of Evil, and be unable to look away.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>This gives ablaze and CURES spiritburn</name>
							<script>local aff = "aflame"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
   OppLostAff("spiritburn")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^"I deem you unfit for Creation!" you proclaim, pointing imperiously at (\w+)\.$</string>
								<string>^"And thus I deem you unfit for Creation!" you proclaim, pointing imperiously at (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Psion Group</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Weaving</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Cleave</name>
								<script>if IsTargetted(matches[2]) then
   OppGainedAff("Prone")
   ak.defs.shield = false
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your blow cleaves through the magical shield surrounding ([\w'\-]+)\, continuing on to drive (?:him|her) from (?:his|her) feet\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Cleave (miss)</name>
								<script>if IsTargetted(matches[2]) then
   ak.defs.shield = false
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your blow scythes through the air in front of ([\w'\-]+), missing entirely\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Hamstring (prone)</name>
								<script>if IsTargetted(matches[3]) then
   OppGainedAff("Prone")
   local smashlimb = matches[2].."leg"
   if affstrack.score[smashlimb] &lt; 200 then
      affstrack.score[smashlimb] = 200
   end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>1</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You duck low, your blade slicing into the (left|right) leg of ([\w'\-]+)\.$</string>
									<string>^([\w'\-]+) stumbles, falling to the ground\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Entwine (standing)</name>
								<script>if IsTargetted(matches[2]) then
   OppGainedAff("Prone")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You lash out with a translucent lash, entangling it about the feet of ([\w'\-]+) and sending (?:him|her) tumbling to the ground with a sharp tug\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Entwine (prone)</name>
								<script>if IsTargetted(matches[2]) then
   OppGainedAff("Prone")
   OppGainedAff("Entangled")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You lash out with a translucent lash, expertly wrapping it about the prone form of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Weaving</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Transcendence</name>
									<script>deleteLine()
cecho("&lt;LightGoldenrod&gt;\n " ..matches[2].. "\% Transcendance\n")
ak.psion.transcend = matches[2]</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your body and mind continue to harmonise\: you are (\d+) percent of the way to full transcendence\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Transcendance fading</name>
									<script>deleteLine()
cecho("&lt;LightGoldenrod&gt;\n " ..matches[2].. "\% Transcendance\n")
ak.psion.transcend = matches[2]</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your inaction causes the harmonisation of your body and mind to falter\: you are now only (\d+) percent of the way to transcendence\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Prepared</name>
									<script>ak.psion.prepared = matches[2]</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You prepare to alter future creations to possess the (\w+) modification\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Transcendence Full</name>
									<script>deleteLine()
cecho("&lt;LightGoldenrod&gt;\nTranscended!\n")
ak.psion.transcend = 100</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You have achieved transcendence\: your body and mind operate as one\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Limbs</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Attack Clumsy</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your blow strikes ([\w'\-]+) but is robbed of much of its impact by your faulty technique\.$</string>
										<string>^([\w'\-]+)\'s blow lands upon you but is robbed of much of its impact by ([\w'\-]+) flawed technique\.$</string>
										<string>^([\w'\-]+) lashes out with a clumsy blow at ([\w'\-]+)\, landing with far reduced force\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Hamstring</name>
									<script>if IsTargetted(matches[3]) then
  local smashlimb = matches[2].."leg"
	ak.limbs.LimbHit(matches[3], "Me", "psion", smashlimb, "percent")
  if affstrack.score[smashlimb] &lt; 100 then
		OppGainedAff(smashlimb)
  end
	if IsTargetted(matches[3]) and affstrack.score.haemophilia &gt; 0 then 	
		local bleedr = 55
		ak.bleeding = ak.bleeding + bleedr
		cecho(ak.bleeding)
		ak.scoreup(matches[3])
	end
end


      
-- LIMB HIT: leg</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You duck low, your blade slicing into the (left|right) leg of ([\w'\-]+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Backhand</name>
									<script>if IsTargetted(matches[2]) then
   OppGainedAff("Stupidity")
   OppGainedAff("Dizziness")
	 ak.limbs.LimbHit(matches[2], "Me", "psion", "head", "percent")	
end
if IsTargetted(matches[2]) and affstrack.score.haemophilia &gt; 0 then 	
	local bleedr = 15
	ak.bleeding = ak.bleeding + bleedr
	cecho(ak.bleeding)
	ak.scoreup(matches[2])
end
-- LIMB HIT: head</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You deliver a savage backhanded blow with a translucent mace to the face of ([\w'\-]+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Sever</name>
									<script>if IsTargetted(matches[3]) then
	 local smashlimb = matches[2].."arm"
   OppGainedAff("Clumsiness")
	 ak.limbs.LimbHit(matches[3], "Me", "psion", smashlimb, "percent")
end
if IsTargetted(matches[3]) and affstrack.score.haemophilia &gt; 0 then 	
	local bleedr = 45
	ak.bleeding = ak.bleeding + bleedr
	cecho(ak.bleeding)
	ak.scoreup(matches[3])
end
-- LIMB HIT: arm</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^With a precise strike you sever the muscles in the (right|left) arm of ([\w'\-]+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Puncture</name>
									<script>if IsTargetted(matches[3]) then
	 local smashlimb = matches[2].."arm"
	 ak.limbs.LimbHit(matches[3], "Me", "psion", smashlimb, "percent")
   OppGainedAff("Weariness")
end
if IsTargetted(matches[3]) and affstrack.score.haemophilia &gt; 0 then 	
	local bleedr = 45
	ak.bleeding = ak.bleeding + bleedr
	cecho(ak.bleeding)
	ak.scoreup(matches[3])
end
-- LIMB HIT: arm</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^With a lightning-fast jab of your blade you puncture the cluster of nerves just below the (right|left) shoulder of ([\w'\-]+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Exsanguinate</name>
									<script>if IsTargetted(matches[2]) then
   OppGainedAff("Nausea")
	 if ak.bleeding &gt;= 150 then
	 	OppGainedAff("Anorexia")
	 end
	 ak.limbs.LimbHit(matches[2], "Me", "psion", "torso", "percent")
end
if IsTargetted(matches[2]) and affstrack.score.haemophilia &gt; 0 then 	
	local bleedr = 20
	ak.bleeding = ak.bleeding + bleedr
	cecho(ak.bleeding)
	ak.scoreup(matches[2])
end
-- LIMB HIT: torso</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Stepping forward, you brutally drive a translucent sword into ([\w'\-]+)'s guts, ripping it free in a spray of crimson\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Deathblow</name>
									<script>if IsTargetted(matches[2]) then
   OppGainedAff("Asthma")
	 ak.limbs.LimbHit(matches[2], "Me", "psion", "head", "percent")
end
if IsTargetted(matches[2]) and affstrack.score.haemophilia &gt; 0 then 
	local bleedr = 0	
	if affstrack.score.prone == 100 then
		bleedr = 160
	else
		bleedr = 75
	end
	ak.bleeding = ak.bleeding + bleedr
	cecho(ak.bleeding)
	ak.scoreup(matches[2])
end
-- LIMB HIT: head</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Striking like coiled lightning, your hand flashes out and lays open the throat of ([\w'\-]+) with a translucent dagger in a spray of crimson\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Overhand</name>
									<script>if IsTargetted(matches[2]) then
	 ak.limbs.LimbHit(matches[2], "Me", "psion", "head", "percent")
	 if affstrack.score.prone == 100 then 
	 		OppGainedAff("Impatience") 
	 else 
	    OppGainedAff("Stupidity")
	 end	 
	 if affstrack.score.head &gt; 0 then
	 		OppGainedAff("Impatience")
	 end
end
if IsTargetted(matches[2]) and affstrack.score.haemophilia &gt; 0 then 	
	local bleedr = 15
	ak.bleeding = ak.bleeding + bleedr
	cecho(ak.bleeding)
	ak.scoreup(matches[2])
end
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You bring a translucent mace around in a savage overhand strike, smashing it into the face of ([\w'\-]+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Unweave</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Unweave</name>
									<script>if IsTargetted(matches[2]) then
   local Uaff = matches[3]
   local unweave = "unweaving"..matches[3]
   ak.psion.unweaving[Uaff] = ak.psion.unweaving[Uaff] + 1
	 OppGainedAff("Prone")
   OppGainedAff(unweave)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You lash at ([\w'\-]+) with a translucent lash, directing the fundamental weave of (?:his|her) (mind|body|spirit) to begin unwinding\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Unweave Stacks</name>
									<script>local Uaff = matches[3]

if IsTargetted(matches[2]) then
   ak.psion.unweaving[Uaff] = ak.psion.unweaving[Uaff] + 1
   local unweave = "unweaving"..matches[3]
   OppGainedAff(unweave)
	 cecho("\n&lt;cyan&gt;Unweaving "..Uaff.." stacks at &lt;yellow&gt;"..ak.psion.unweaving[Uaff])
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You detect fluctuations in the essence of ([\w'\-]+) as (?:his|her) (mind|body|spirit) becomes critically close to unweaving utterly\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Prepare</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Disruption</name>
									<script>if IsTargetted(matches[2]) then
   OppGainedAff("Paralysis")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Lightning explodes from your weapon as it smashes into ([\w'\-]+), (?:his|her) body locking up in agony as it rips through (?:him|her)\.$</string>
										<string>^Lightning explodes from your blade as you hack into ([\w'\-]+), (?:his|her) body locking up as the current rips through (?:him|her)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Laceration</name>
									<script>if IsTargetted(matches[2]) then
   OppGainedAff("Haemophilia")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The spikes adorning your [\w'\-]+ tear bloody furrows in the flesh of ([\w'\-]+)\.$</string>
										<string>^Your blade tears into ([\w'\-]+), a spray of crimson exploding from the wound as your weapon strikes bone\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Dazzle</name>
									<script>if IsTargetted(matches[2]) then
   OppGainedAff("Clumsiness")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^As your weapon strikes ([\w'\-]+) a brilliant flash of light explodes forth\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Rattle</name>
									<script>if IsTargetted(matches[2]) then
   OppGainedAff("Epilepsy")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^As your weapon strikes ([\w'\-]+), power blasts outward in a concussive wave\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Vapours</name>
									<script>if IsTargetted(matches[2]) then
   OppGainedAff("Asthma")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^As your weapon strikes ([\w'\-]+) a wave of cloying vapours rolls over (?:him|her)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Blast</name>
							<script>if ak.ai() then return end
aff = "mindravaged"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Bringing your formidable mental facilities to bear against ([\w'\-]+), you summon up and hurl a terrible unfocussed blast of psionic might to ravage (\w+) mind.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Lost Blasted</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) shakes (\w+) head, (\w+) dull eyes slightly less vacant\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Runewarden Group</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Propping</name>
							<script>if ak.ai() then return end
ak.pause = true 
ak.propped = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You strain to hold a tall totem pole in an upright position for your enemies to see.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Unpropped</name>
							<script>if ak.ai() then return end
ak.pause = false 
ak.propped = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You cease to prop up a tall totem pole.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Cold Rune</name>
							<script>if ak.ai() then return end
OppGainedAff("deepfreeze")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Cold blue flames wreathe your runeblade, emanating an icy, penetrating chill.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Othala Sketched</name>
							<script>ak.othala = true
tempTimer(8, [[ak.othala = false]])
enableTrigger("Othala fade")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>With a flourish, you finish sketching an othala rune.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Othala fade</name>
							<script>ak.othala = false
disableTrigger("Othala fade")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A rune resembling a mountain range fades from the ground.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sentinel Group</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Gouge</name>
							<script>if IsTargetted(matches[2]) then 
   OppGainedAff("weariness")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You savagely gouge into ([\w'\-]+) with (.*)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Gouge limb weariness</name>
							<script>if IsTargetted(matches[2]) then 
   OppGainedAff("weariness")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You savagely gouge the .+ of ([\w'\-]+) with.+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>RiveStrike</name>
							<script>if IsTargetted(matches[2]) then 
   ak.defs.reRebounding = true
   ak.defs.shield = false
   ak.defs.rebounding = false
   weaponattack = weaponattack or {}
   enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
   enableTrigger("Confirmed Hit")  
   table.insert(weaponattack, ak.spear)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The point of .* strikes the aura of rebounding surrounding ([\w'\-]+)\, and rapid cracks begin to spread outward from the point of impact\. Moments later\, the protection shatters\.$</string>
								<string>^Stepping forward\, you continue the motion of your initial thrust\, performing a second quick jab at ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Lacerate</name>
							<script>if IsTargetted(matches[2]) then
  OppGainedAff("haemophilia")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You viciously lacerate ([\w'\-]+) with .+\.$</string>
								<string>^You viciously lacerate the .+ of ([\w'\-]+) with .+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Double Strike</name>
							<script>if IsTargetted(matches[2]) then
   if affstrack.score.impatience == 0 then 
      OppGainedAff("impatience")
   elseif affstrack.goldenscore &gt; 1 or affstrack.score.impatience == 100 then
      OppGainedAff("epilepsy")
   end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Turning with the motion of your strike\, you come back around and slam the haft of your weapon into the temple of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ensnare transfixed</name>
							<script>if IsTargetted(matches[2]) then 
   OppGainedAff("transfixed")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You expertly flourish a .* in front of the eyes of ([\w'\-]+)\, mesmerising (his|her) with your skill\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Thrust Venom</name>
							<script>if IsTargetted(matches[2]) then
   weaponattack = weaponattack or {}
   enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
   enableTrigger("Confirmed Hit")  
   table.insert(weaponattack, ak.spear)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Stepping forward\, you continue the motion of your initial thrust\, performing a second quick jab at ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Petrified</name>
							<script>if IsTargetted(matches[2]) then 
   OppGainedAff("petrified")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) freezes suddenly\, [\w'\-]+ eyes locked in a state of frozen horror as [\w'\-]+ becomes stone\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ensnare blinded</name>
							<script>if IsTargetted(matches[2]) then 
   OppGainedAff("blind")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You flourish a .* before the eyes of ([\w'\-]+)\, restoring (his|her) blindness\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Petrify Wore Off</name>
							<script>if IsTargetted(matches[2]) then 
   OppLostAff("petrified")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) sucks in a gasp of air and begins to move normally once more\.$</string>
								<string>^You gaze into the eyes of ([\w'\-]+)\, projecting your implacable will\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>DoubleSlash Venoms</name>
							<script>if IsTargetted(matches[2]) then
   weaponattack = weaponattack or {}
   enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
   enableTrigger("Confirmed Hit")  
   table.insert(weaponattack, matches[3])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You lay open the flesh of ([\w'\-]+) with an expert lateral slice with (.*)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Doubleslash Venom Limb</name>
							<script>if IsTargetted(matches[3]) then
   weaponattack = weaponattack or {}
   enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
   enableTrigger("Confirmed Hit")  
   table.insert(weaponattack, matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You draw the blade of (.+) in an expert lateral slice across the \w+ of (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Parry Bypass'd</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   if ak.ProTrackingConfirmed then 
      ak.ProTrackingConfirmed("haemophilia") 
   else
      affstrack.score.haemophilia = 100
      ak.scoreup(matches[2])
  end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You strike through the weakened defences of (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Meta</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Basilisk gaze confusion</name>
								<script>OppGainedAff("confusion")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You gaze at ([\w'\-]+) with the eyes of the basilisk\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Woodlore</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Sentinel Pets</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Raven</name>
									<script>ak.animalsup = ak.animalsup or {}
table.insert(ak.animalsup, "raven")
ak.scoreup(target)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>A thrilling sensation overcomes you as you concentrate on the image of a flying raven, soaring high in the clouds.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Butterfly</name>
									<script>ak.animalsup = ak.animalsup or {}
table.insert(ak.animalsup, "butterfly")
ak.scoreup(target)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You close your eyes and visualise a serene glade full of fluttering butterflies, yearning for the companionship of the delicate creatures.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Fox</name>
									<script>ak.animalsup = ak.animalsup or {}
table.insert(ak.animalsup, "fox")
ak.scoreup(target)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You pause and concentrate on the image of a sly fox, sending your thoughts into the forest around you.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Wolf</name>
									<script>ak.animalsup = ak.animalsup or {}
table.insert(ak.animalsup, "wolf")
ak.scoreup(target)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>The call of the hunt overtakes you for a moment as you call the image of a wolf to your mind.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Badger</name>
									<script>ak.animalsup = ak.animalsup or {}
table.insert(ak.animalsup, "badger")
ak.scoreup(target)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>A momentary feeling of annoyance takes hold of you as you picture the image of a badger.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Badger(Nausea)</name>
									<script>if IsTargetted(matches[2]) then 
   OppGainedAff("nausea")
end
ak.animalsup = ak.animalsup or {}
local animaltoremove = "badger"
if table.contains(ak.animalsup, animaltoremove) then
   for i = 1, #ak.animalsup do
      if ak.animalsup[i] == animaltoremove then
         table.remove(ak.animalsup,i)
      end
   end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^A grumpy badger carves great gouges in the flesh of ([\w'\-]+) with its claws\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Butterfly Blind Strip</name>
									<script>if IsTargetted(matches[2]) then 
   OppGainedAff("blind")
end
ak.animalsup = ak.animalsup or {}
local animaltoremove = "butterfly"
if table.contains(ak.animalsup, animaltoremove) then
   for i = 1, #ak.animalsup do
      if ak.animalsup[i] == animaltoremove then
         table.remove(ak.animalsup,i)
      end
   end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^A gossamer butterfly goes into a frenzy of motion in front of the eyes of ([\w'\-]+)\, and [\w'\-]+ blinks rapidly\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Butterfly Dizziness</name>
									<script>if IsTargetted(matches[2]) then 
   OppGainedAff("dizziness")
end
ak.animalsup = ak.animalsup or {}
local animaltoremove = "butterfly"
if table.contains(ak.animalsup, animaltoremove) then
   for i = 1, #ak.animalsup do
      if ak.animalsup[i] == animaltoremove then
         table.remove(ak.animalsup,i)
      end
   end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^A gossamer butterfly goes into a frenzy of motion in front of the eyes of ([\w'\-]+)\, and [\w'\-]+ sways unsteadily\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Fox HealthLeech</name>
									<script>if IsTargetted(matches[2]) then 
   OppGainedAff("healthleech")
end
ak.animalsup = ak.animalsup or {}
local animaltoremove = "fox"
if table.contains(ak.animalsup, animaltoremove) then
   for i = 1, #ak.animalsup do
      if ak.animalsup[i] == animaltoremove then
         table.remove(ak.animalsup,i)
      end
   end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^A cunning red fox leaps upon ([\w'\-]+)\, sinking its teeth into [\w'\-]+ skin\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Wolf Hallucinations</name>
									<script>if IsTargetted(matches[2]) then 
   OppGainedAff("hallucinations")
end
ak.animalsup = ak.animalsup or {}
local animaltoremove = "wolf"
if table.contains(ak.animalsup, animaltoremove) then
   for i = 1, #ak.animalsup do
      if ak.animalsup[i] == animaltoremove then
         table.remove(ak.animalsup,i)
      end
   end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^A grey wolf lets out a baying howl at ([\w'\-]+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Butterfly Transfix</name>
									<script>if IsTargetted(matches[2]) then 
   OppGainedAff("transfixed")
end
ak.animalsup = ak.animalsup or {}
local animaltoremove = "butterfly"
if table.contains(ak.animalsup, animaltoremove) then
   for i = 1, #ak.animalsup do
      if ak.animalsup[i] == animaltoremove then
         table.remove(ak.animalsup,i)
      end
   end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^A gossamer butterfly goes into a frenzy of movement before the eyes of ([\w'\-]+)\, mesmerising [\w'\-]+\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Raven</name>
									<script>if IsTargetted(matches[2]) then 
   OppGainedAff("sensitivity")
end
ak.animalsup = ak.animalsup or {}
local animaltoremove = "raven"
if table.contains(ak.animalsup, animaltoremove) then
   for i = 1, #ak.animalsup do
      if ak.animalsup[i] == animaltoremove then
         table.remove(ak.animalsup,i)
      end
   end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^An ebony raven dives down upon ([\w'\-]+)\, pecking at [\w'\-]+ face and eyes\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Passive attacks</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList />
									<regexCodePropertyList />
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Lemming passive</name>
										<script>if IsTargetted(matches[2]) then 
   OppGainedAff("vertigo")
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^The lemming races between the legs of (\w+)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Raven passive</name>
										<script>if IsTargetted(matches[2]) then 
   OppGainedAff("paranoia")
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^The raven dives at (\w+) and pulls up short, making (.*) uneasy\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>butterfly</name>
										<script>if IsTargetted(matches[2]) then 
   OppGainedAff("stupidity")
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^A huge gossamer butterfly flutters wildly about ([\w'\-]+)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</TriggerGroup>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Butterfly Dizziness</name>
									<script>if IsTargetted(matches[2]) then 
   OppGainedAff("blind")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^A gossamer butterfly goes into a frenzy of motion in front of the eyes of ([\w'\-]+)\, and [\w'\-]+ sways unsteadily\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Serpent Group</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Double Stab</name>
							<script>if ak.ai() then return end
enableTrigger("Missed Dstab Removal")                --DO NOT CHANGE!
enableTrigger("Confirmed Dstab")                        --DO NOT CHANGE!
weaponattack = weaponattack or {}               
table.insert(weaponattack, ak.odirk)
--table.insert(weaponattack, ak.odirk)     --change</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You prick ([\w'\-]+) twice in rapid succession with your dirk.$</string>
								<string>^You quickly prick ([\w'\-]+) with your dirk\.$</string>
								<string>^Striking like a snake\, you prick ([\w'\-]+) a second time with your dirk\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Missed Dstab Removal</name>
							<script>if ak.ai() then return end
weaponattack = weaponattack or {}
if #weaponattack &gt; 0 then
   table.remove(weaponattack, #weaponattack)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) dodges nimbly out of the way\.$</string>
								<string>^([\w'\-]+) quickly jumps back, avoiding the attack\.$</string>
								<string>^([\w'\-]+) twists (his|her) body out of harm's way\.$</string>
								<string>^A reflection of ([\w'\-]+) blinks out of existence.$</string>
								<string>^([\w'\-]+) parries the attack with a deft manoeuvre.$</string>
								<string>^([\w'\-]+) steps into the attack, grabs your arm, and throw</string>
								<string>^A chaos orb intercepts the attack against (\+) and renders it harmless\.$</string>
								<string>^([\w'\-]+) moves into your attack, knocking your blow aside before viciously countering with a strike to your head\.$</string>
								<string>^Cracks spider across the surface of the crimson shield surrounding ([\w'\-]+)\, before it abruptly winks out of existence\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Confirmed Dstab</name>
							<script>if ak.ai() then return end
cecho("&lt;cyan&gt;.")
hitrelay = {"1"}
currentvenoms = currentvenoms or {}
weaponattack = weaponattack or {}
if #weaponattack &gt; 0 then 
   for i = 1, #weaponattack do
      currentvenoms[weaponattack[i]] = currentvenoms[weaponattack[i]] or {1}
      table.insert(hitrelay, affstrack.venoms[currentvenoms[weaponattack[i]][1]])
      table.remove(currentvenoms[weaponattack[i]], 1)  
   end
end
if #hitrelay &gt; 1 then 
   if table.contains(hitrelay, "1") then table.remove(hitrelay, "1") end
   OppGainedAff(table.concat(hitrelay, " ")) 
end
weaponattack = nil
disableTrigger("Missed Dstab Removal")                --DO NOT CHANGE!
disableTrigger("Confirmed Dstab")  
--ak.deleteFull()
deleteLine()
ak.showPrompt()
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bite</name>
							<script>if ak.ai() then return end
OppGainedAff(matches[3])
ak.scoreup(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You sink your fangs into ([\w'\-]+), injecting just the proper amount of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Dirk Changeup</name>
							<script>if ak.ai() then return end
if string.findPattern(matches[2],"dirk") then
   ak.odirk = matches[2]
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You begin to wield (.*) in your (left|right) hand\.$</string>
								<string>^You start to wield (.*) in your (right|left) hand\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Thoths</name>
							<script>if ak.ai() then return end
ak.odirk = "Thoth's fang" </script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You start to wield Thoth's fang in your right hand.</string>
								<string>You start to wield Thoth's fang in your left hand.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shaman Group</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Vodun</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Confusion</name>
								<script>if ak.ai() then return end
OppGainedAff("confusion")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You wave your hands quickly in front of the eyes of your doll of ([\w'\-]+).</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Bound</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   affstrack.score.bound = 100
   ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You tie up a doll of ([\w'\-]+) with a piece of string.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Slow</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   affstrack.score.aeon = 100
   ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) seems to be moving in slow motion suddenly.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Imbibe</name>
								<script>if ak.ai() then return end
OppGainedAff(imbibedraw)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You laugh sadistically as you jab an envenomed pin into your doll of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Reckless</name>
								<script>if ak.ai() then return end
OppGainedAff("recklessness")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You whisper soothing words of false comfort to a doll of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Dizzy</name>
								<script>if ak.ai() then return end
OppGainedAff("dizziness")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You spin a doll of ([\w'\-]+) rapidly in a circle\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Concussion</name>
								<script>if ak.ai() then return end
affstrack.score.head = 100
ak.scoreup(multimatches[2][2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You flick the temple of a doll of </string>
									<string>^You flick the temple of a doll of ([\w'\-]+)\, hard\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Cripple</name>
								<script>if ak.ai() then return end
ak.mounted = false
if IsTargetted(multimatches[2][2]) then
   aff = "leftleg rightleg rightarm leftarm prone"
   OppGainedAff(aff) 
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>With a prayer to the spirits, you break all the limbs on your doll of </string>
									<string>With a prayer to the spirits, you break all the limbs on your doll of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Speed Stripped</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   ak.defs.speed = false
   ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You curse your doll to move slowly and tardily\, and ([\w'\-]+)\'s speed defence is removed\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Bleed</name>
								<script>ak.bleeding = ak.bleeding + 220
ak.scoreup(target)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You draw a sharp fingernail across the torso of the doll.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Curses</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Curse Add</name>
								<script>if ak.ai() then return end
if not IsTargetted(multimatches[2][2]) then return end
ak.bleedincrease = 40 --curse
local curse = multimatches[2][3]
if curse then
	 curse = curse:lower()
   if curse ~= "breach" and curse ~= "tzantza" and curse ~= "inflame" then
	 		if affstrack.score[curse] then
				OppGainedAff(curse)
			elseif curse == "peace" then 
         curse = "pacifism"
				 OppGainedAff(curse)  
      elseif curse == "paralyse" then 
         curse = "paralysis"
				 OppGainedAff(curse)  
      elseif curse == "plague" then
          curse = "voyria"
					OppGainedAff(curse)
      elseif curse == "clumsy" then
          curse = "clumsiness" 
					OppGainedAff(curse)
      elseif curse == "dizzy" then
          curse = "dizziness" 
					OppGainedAff(curse)
      elseif curse == "stupid" then
          curse = "stupidity" 
					OppGainedAff(curse)
      elseif curse == "vomiting" then
          curse = "nausea" 
					OppGainedAff(curse)
      elseif curse == "reckless" then
          curse = "recklessness"
					OppGainedAff(curse)
			elseif curse == "fear" then
          ak.tumbling = false
					ak.scoreup(multimatches[2][2])
			elseif curse == "bleed" then
			
			else
				cecho("Unknown Curse &lt;cyan&gt;"..curse) 
      end
   end
end
if ak.shaman and ak.shaman.pararedo and ak.shaman.pararedo == "init" then 
	ak.shaman.pararedo = true 
elseif ak.shaman and ak.shaman.pararedo then
	ak.shaman.pararedo = false	
end


</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You point an imperious finger at</string>
									<string>^You point an imperious finger at ([\w'\-]+)\, bringing the curse of ([\w'\-]+) down upon [\w'\-]+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Jinx Gone</name>
								<script>if ak.ai() then return end
ak.shaman.jinx = false
ak.scoreup(target)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You have not built up enough malign power to unleash a jinx.</string>
									<string>Your malign power dissipates back to normal levels.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Jinx Charged</name>
								<script>if ak.ai() then return end
ak.shaman.jinx = true
ak.scoreup(target)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your malign power may be unleashed in the form of a jinx against your victim.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Jinx</name>
								<script>if ak.ai() then return end
local conversion = {
	["paralyse"] = "paralysis",
	["plague"] = "voyria",
	["clumsy"] = "clumsiness",
	["dizzy"] = "dizziness",
	["stupid"] = "stupidity",
	["vomiting"] = "nausea",
	["reckless"] = "recklessness",
	["nausea"] = "nausea",

}
ak.bleedincrease = 80
local setter = ""
ak.shaman.jinx = false
ak.jinxcount = ak.jinxcount - 1
if matches[2] ~= "breach" and matches[2] ~= "tzantza" then
	 if table.contains(conversion,matches[2]) then
	 	setter = setter.." "..conversion[matches[2]]
	 else
	 	setter = setter.." "..matches[2]
	 end
end
if matches[3] ~= "breach" and matches[3] ~= "tzantza" then
	 if table.contains(conversion,matches[3]) then
	 	setter = setter.." "..conversion[matches[3]]
	 else
	 	setter = setter.." "..matches[3]
	 end
end
if matches[2] == "tzantza" or matches[3] == "tzantza" then
	ak.tzantzajinxed = true
end
OppGainedAff(setter)



</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Summoning your malign power, you direct a twin assault of the curses ([\w'\-]+) and ([\w'\-]+) at ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>No affliction</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   local nohave = matches[3]
   if nohave == "paralyse" then nohave = "paralysis" end  
   if nohave == "plague" then nohave = "voyria" end
   if nohave == "clumsy" then nohave = "clumsiness" end
   if nohave == "dizzy" then nohave = "dizziness" end
   if nohave == "stupid" then nohave = "stupidity" end
   if ak.thoughtIhad then ak.thoughtIhad(nohave) else affstrack.score[nohave] = 0 end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>([\w'\-]+) does not suffer from ([\w'\-]+) \- you may not relapse it.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Coagulation</name>
								<script>if ak.ai() then return end
cecho("\n&lt;dodger_blue&gt;Coagulated!")
ak.shaman.coagulation = false
ak.bleeding = ak.bleeding - 140
if ak.bleeding &lt; 0 then
	ak.bleeding = 0 
end
if invoked~= nil then
   OppGainedAff(invoked)
end

</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#00aaff</mFgColor>
								<mBgColor>#ffffff</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With methodical ruthlessness you cast your hand at [\w'\-]+, a wash of cold causing [\w'\-]+ blood to evolve</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Bloodlet</name>
								<script>if ak.ai() then return end
cecho("\n&lt;medium_violet_red&gt;Bloodlet!")
ak.shaman.bloodlet = false
if affstrack.score.haemophilia &gt; 0 then
	ak.bleeding = ak.bleeding + ak.bloodletbleed()
	echo(ak.bleeding)
end
OppGainedAff("haemophilia")
ak.dontremovehaemo = true
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ffffff</mFgColor>
								<mBgColor>#ff557f</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Lacerations appear upon ([\w'\-]+) form, as if slashed by an invisible blade\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Relapse CD</name>
								<script>if ak.ai() then return end
ak.shaman.relapse = true
ak.scoreup(target)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You may utilise spiritual energy to relapse afflictions once again\.$</string>
									<string>^A sinister sensation washes over you for the briefest instant, but quickly fades into little more</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Bloodlet CD</name>
								<script>if ak.ai() then return end
ak.shaman.bloodlet = true
ak.scoreup(target)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You may let your victim's blood once again\.$</string>
									<string>The realisation that none can match you with the blade suddenly dawns upon you.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Coagulate CD</name>
								<script>if ak.ai() then return end
ak.shaman.coagulation = true
ak.scoreup(target)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You may channel spiritual energy to cause a coagulation once again.</string>
									<string>A clinical, ruthless presence overcomes you for an instant, before you reassert control.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Bloodlet used</name>
								<script>if ak.ai() then return end
ak.shaman.bloodlet = false
ak.scoreup(target)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You may not let the blood of your victim again so soon\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Relapse used</name>
								<script>if ak.ai() then return end
ak.shaman.relapse = false
ak.scoreup(target)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#55aa00</mFgColor>
								<mBgColor>#ffffff</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You may not yet channel spiritual energy to cause a relapse again\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Jinx Gone</name>
								<script>ak.jinxcount = ak.jinxcount - 1
if ak.jinxcount &lt; 0 then
	ak.jinxcount = 0
end
ak.scoreup(target)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You have not built up enough malign power to unleash a jinx.</string>
									<string>Your malign power dissipates back to normal levels.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Jinx Charged</name>
								<script>ak.jinxcount = ak.jinxcount + 1
ak.scoreup(target)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your malign power may be unleashed in the form of a jinx against your victim.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Inflamed</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffffff</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^[\w'\-]+ writhes in agony as steam begins rising from [\w'\-]+ skin\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Relapsing</name>
								<script>if ak.ai() then return end
cecho("&lt;LawnGreen&gt;\nRelapsed!")
ak.shaman.relapse = false
ak.shaman.Relapseaff = matches[2]
local currentrelapse = matches[2]
if ak.ProTrackingConfirmed then 
	ak.ProTrackingConfirmed(currentrelapse) 
end 

</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#55aa00</mFgColor>
								<mBgColor>#ffffff</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You manipulate the ([\w'\-]+) affliction affecting ([\w'\-]+), altering it to relapse at a later time.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Relapsed</name>
								<script>ak.shaman.Relapseaff = "none"
OppGainedAff(matches[3])
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You sense the insidious power of Syvis strike down ([\w'\-]+) with ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Spiritlore</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Arius</name>
								<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) and affstrack.score.deaf == 100 then
	EchoForMajorAff("PRONE")
	OppGainedAff("prone disrupt")
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A terrible cold fills your chest\, constricting your lungs\. Your mouth falls open and an unearthly\, terrible roar emanates forth at ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sword &amp; Board Group</name>
						<script>--
--Everything that follows was originally written by Klendathu

--I have mildly modified portions of be more up to date with my current offense tracking system,
--while attempting to leave the majority of it in place so he has to do very little to maintain
--continued functionality.  If you are a using this section, I strongly encourage you to make sure
--to spend a few extra seconds and drop him a thank you.

--Thank you.
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName>sword_and_board</packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Trip</name>
							<script>if ak.ai() then return end
boardaffs = boardaffs or {}
local aff = "prone"
if IsTargetted(matches[2]) then
   table.insert(boardaffs, aff)
end
enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
enableTrigger("Confirmed Hit")                        --DO NOT CHANGE!</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You duck low and smash your shield into the knees of ([\w'\-]+), causing them to buckle underneath (him|her)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Drive</name>
							<script>if ak.ai() then return end
boardaffs = boardaffs or {}
local aff = "asthma"
if IsTargetted(matches[2]) then
   table.insert(boardaffs, aff)
end
enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
enableTrigger("Confirmed Hit")                        --DO NOT CHANGE!</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Planting your feet\, you drive the edge of your shield with vicious precision into the throat of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Smash Low</name>
							<script>if ak.ai() then return end
boardaffs = boardaffs or {}
local aff = "clumsiness"
if IsTargetted(matches[2]) then
   table.insert(boardaffs, aff)
end
enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
enableTrigger("Confirmed Hit")                        --DO NOT CHANGE!</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You smash the edge of .* into the kneecaps of ([\w'\-]+), causing (him|her) to stumble\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Smash Mid</name>
							<script>if ak.ai() then return end
boardaffs = boardaffs or {}
local aff = "paralysis"
if IsTargetted(matches[2])then
   table.insert(boardaffs, aff)
end
enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
enableTrigger("Confirmed Hit")                        --DO NOT CHANGE!</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You quickly lunge to the side\, bringing your shield around to smash into the spine of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Smash High (In Progress{Please Submit if You Complete}]</name>
							<script>if ak.ai() then return end
boardaffs = boardaffs or {}
if IsTargetted(matches[2]) then
   table.insert(boardaffs, "HIGH")
end
enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
enableTrigger("Confirmed Hit")                        --DO NOT CHANGE!</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You swing your shield around\, smashing the temple of ([\w'\-]+) with a backhanded blow\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Strike Low</name>
							<script>if ak.ai() then return end
affstrack.ferocity = 0
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#55aa7f</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You lunge downward, slamming the edge of .+ into the shins of ([\w'\-]+)\.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Strike Mid</name>
							<script>if ak.ai() then return end
boardaffs = boardaffs or {}
local aff = "sensitivity"
affstrack.ferocity = 0
if IsTargetted(matches[2]) then
   table.insert(boardaffs, aff)
end
enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
enableTrigger("Confirmed Hit")                        --DO NOT CHANGE!
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#55aa7f</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You draw .* back\, then lunge forward with a savage strike to the ribs of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Strike High</name>
							<script>if ak.ai() then return end
affstrack.ferocity = 0
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#55aa7f</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You spin in a quick circle\, using the momentum to savagely strike the chin of ([\w'\-]+) with the edge of .*\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ferocity</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ferocity 1</name>
								<script>if ak.ai() then return end
affstrack.ferocity = 1</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You batter at your enemy's defences, seeking an opening.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ferocity 2</name>
								<script>if ak.ai() then return end
affstrack.ferocity = 2</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>The strength of your blows continues to rise as you hammer at your enemy.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ferocity 3</name>
								<script>if ak.ai() then return end
affstrack.ferocity = 3</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>The ferocity of battle drives you to yet greater heights.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ferocity 4</name>
								<script>if ak.ai() then return end
affstrack.ferocity = 4</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#55aa00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>The ferocity of your blows renders any defence useless against you.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ferocity Decay 1</name>
								<script>if ak.ai() then return end
affstrack.ferocity = affstrack.ferocity or 0
affstrack.ferocity = affstrack.ferocity - 1
if affstrack.ferocity &lt; 0 then affstrack.ferocity = 0 end
ak.scoreup(target)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#00aa00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your ferocity decreases.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ferocity Decay All</name>
								<script>if ak.ai() then return end
affstrack.ferocity = 0
ak.scoreup(target)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#55aa00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You have lost all of your gained ferocity.</string>
									<string>Your attacks lack sufficient ferocity to carry out such an attack.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sylvan Group</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Static (paralysis)</name>
							<script>if IsTargetted(matches[2]) then
	OppGainedAff("paralysis")
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Channeling arcane power through your air and earth channels, you summon forth a burst of arcane static directed at ([\w'\-]+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Thunderclap (sensitivity)</name>
							<script>local aff = "sensitivity"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
	if affstrack.overcharge == true then
		OppGainedAff("paralysis")
	end
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Channeling large quantities of arcane power through your air channel, you direct a localised explosion of pure sound at ([\w'\-]+)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Flash (unblind)</name>
							<script>if IsTargetted(matches[2]) then
   OppGainedAff("blind")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Summoning forth power through your air and earth channels, you conjure forth a brilliant flash of light at ([\w'\-]+), who blinks rapidly.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Flash (transfix)</name>
							<script>if IsTargetted(matches[2]) then
   OppGainedAff("transfixed")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Summoning forth power through your air and earth channels, you conjure forth a brilliant flash of light at ([\w'\-]+), who freezes in place.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Razorwind (healthleech)</name>
							<script>if IsTargetted(matches[2]) then
	OppGainedAff("healthleech")
	if affstrack.overcharge == true then
		OppGainedAff("asthma")
	end
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Tapping into your air channel, you summon forth a vicious wind to lacerate the body of ([\w'\-]+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Cyclone (dizziness)</name>
							<script>if IsTargetted(matches[2]) then
	OppGainedAff("dizziness")
	if affstrack.overcharge == true then
		OppGainedAff("asthma")
	end
end


</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Summoning forth energy that you have gathered, you conjure forth a terrible cyclone of wind, picking up ([\w'\-]+) and whipping (her|him) about in a frenzy.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Cyclone (impatience)</name>
							<script>if IsTargetted(matches[2]) then
	affstrack.score.dizziness = 100
	OppGainedAff("impatience")
	if affstrack.overcharge == true then
		OppGainedAff("asthma")
	end
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Summoning forth energy that you have gathered, you conjure forth a terrible cyclone of wind, picking up the disorientated form of ([\w'\-]+) and whipping (her|him) about in a frenzy, dashing (her|him) against any available surfaces.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hailstone (clumsiness)</name>
							<script>if IsTargetted(matches[2]) then
	OppGainedAff("clumsiness")
	if affstrack.overcharge == true then
		OppGainedAff("weariness")
	end
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) stumbles clumsily as the blow lands.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hailstone (epilepsy)</name>
							<script>if IsTargetted(matches[2]) then
	if affstrack.score.clumsiness &lt; 100 and affstrack.score.clumsiness &gt; 0 then
      if ak.ProTrackingConfirmed then 
         ak.ProTrackingConfirmed("clumsiness") 
      else 
         affstrack.score.clumsiness = 100
         ak.scoreup(matches[2])
      end
	end
	affstrack.score.clumsiness = 100
	OppGainedAff("epilepsy")
	if affstrack.overcharge == true then
		OppGainedAff("weariness")
	end
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) begins to shake uncontrollably.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hailstone (imaptience)</name>
							<script>if IsTargetted(matches[2]) then
	if affstrack.score.clumsiness &lt; 100 and affstrack.score.clumsiness &gt; 0 then
      if ak.ProTrackingConfirmed then 
         ak.ProTrackingConfirmed("clumsiness")
      else 
         affstrack.score.clumsiness = 100
         ak.scoreup(matches[2])
      end
	elseif affstrack.score.epilepsy &lt; 100 and affstrack.score.epilepsy &gt; 0 then
      if ak.ProTrackingConfirmed then 
         ak.ProTrackingConfirmed("epilepsy") 
      else 
         affstrack.score.epilepsy = 100
         ak.scoreup(matches[2])
      end
	end
	OppGainedAff("impatience")
	if affstrack.overcharge == true then
		OppGainedAff("weariness")
	end
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A puzzled expression crosses the face of ([\w'\-]+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Shear (break shield)</name>
							<script>if IsTargetted(matches[2]) then
   ak.defs.shield = false
end
ak.scoreup(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You summon a blade of condensed air and shear cleanly through the protective shield surrounding (.*).$</string>
								<string>^You summon a blade of wind to shear at the magical shield of (.*), but find no such barrier.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bolt (blackout)</name>
							<script>if IsTargetted(matches[2]) then
   OppGainedAff("blackout")
   tempTimer(4,[[affstrack.score.blackout = 0;ak.scoreup(]]..matches[2]..[[)]])
	if affstrack.overcharge == true then
		OppGainedAff("paralysis")
	end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Raising your hands above your head, you channel power through your earth and air channels. Focusing upon (.*), you direct your arcane might in a focused burst, bringing down lightning to smite (him|her)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sylvan Rend Venoms</name>
							<script>enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
enableTrigger("Confirmed Hit")                        --DO NOT CHANGE!
weaponattack = weaponattack or {}
if matches[2] == "claws" then
   table.insert(weaponattack, "your wickedly sharp claws")
elseif matches[2] == "vines" then
   table.insert(weaponattack, "the thorny vines covering your arms")
else
   table.insert(weaponattack, matches[2])
end
if affstrack.crushedherb then
   currentvenoms = currentvenoms or {}
   currentvenoms["the thorny vines covering your arms"] = currentvenoms["the thorny vines covering your arms"] or {}
   table.insert(currentvenoms["the thorny vines covering your arms"], affstrack.crushedherb)
   table.insert(weaponattack, "the thorny vines covering your arms")
end
--display(weaponattack)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You command the razor-edged thorny ([\w'\-]+) around you to lash out and rend the (right leg|left leg|right arm|left arm|head|torso) of .*\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Overcharge Tracker</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Not overcharged</name>
								<script>disableTrigger("Not overcharged")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string></string>
									<string>^Channeling arcane power through your air and earth channels, you summon forth a burst of arcane static directed at ([\w'\-]+).$</string>
									<string>^Channeling large quantities of arcane power through your air channel, you direct a localised explosion of pure sound at ([\w'\-]+).$</string>
									<string>^Summoning forth power through your air and earth channels, you conjure forth a brilliant flash of light at ([\w'\-]+), who blinks rapidly.$</string>
									<string>^Summoning forth power through your air and earth channels, you conjure forth a brilliant flash of light at ([\w'\-]+), who freezes in place.$</string>
									<string>^Tapping into your air channel, you summon forth a vicious wind to lacerate the body of ([\w'\-]+).$</string>
									<string>^Summoning forth energy that you have gathered, you conjure forth a terrible cyclone of wind, picking up ([\w'\-]+) and whipping (her|him) about in a frenzy.$</string>
									<string>^Summoning forth energy that you have gathered, you conjure forth a terrible cyclone of wind, picking up the disorientated form of ([\w'\-]+) and whipping (her|him) about in a frenzy, dashing (her|him) against any available surfaces.$</string>
									<string>^([\w'\-]+) stumbles clumsily as the blow lands.$</string>
									<string>^([\w'\-]+) begins to shake uncontrollably.$</string>
									<string>^A puzzled expression crosses the face of ([\w'\-]+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>7</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Overcharged</name>
								<script>OppGainedAff("clumsiness")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You have (.*) units of arcane energy stored.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Crushed Pots</name>
							<script>affstrack.crushedherb = affstrack.crushedpots[matches[2]]</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Crushing a (.*) in your hand, you absorb the remnants of natural energy stored within.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Vine Wreathe Enabled</name>
							<script>if IsTargetted(matches[2]) then
   affstrack.vinewreathe = true
end
--display(matches[2])


</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Uttering a quiet recitation, you gesture towards ([\w'\-]+). A mass of writhing vines burst forth from the ground, grabbing hold of (his|her) form\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Vine Wreathe Disabled</name>
							<script>if IsTargetted(matches[2]) then
   affstrack.vinewreathe = false
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The vines flailing about ([\w'\-]+)\'s form recede\.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Disturbed</name>
							<script>ak.disturbed = true
ak.scoreup(target)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Clouds boil into existence above you, their dark mass seething.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Arcane Energy</name>
							<script>ak.ae = matches[2]+0
ak.scoreup(target)
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have (\d+) units of arcane energy built up\.</string>
								<string>^You have (\d+) units of arcane energy stored\.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Disturb Gone</name>
							<script>ak.disturbed = false
ak.ae = 0
ak.feedback = false
ak.scoreup(target)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The clouds overhead abruptly wink out of existence.</string>
								<string>The weather here is not disturbed - you cannot redirect the feedback of your spells.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Feedback</name>
							<script>ak.feedback = matches[2]
ak.ae = 0
ak.scoreup(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Directing a sliver of power through your air and earth channels, you create a conduit between the clouds above and ([\w'\-]+)\.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Targossas Group</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hellsight</name>
							<script>local aff = "hellsight"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You stare intently at ([\w'\-]+), opening [\w'\-]+ mind to the unspeakable visions that spew from the bowels of hell\.$</string>
								<string>^(w+) claws at {his|her} eyes, fingers scrabbling frantically.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Dazzle</name>
							<script>--confusion --dizziness
local aff = "confusion"
local aff2 = "dizziness"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
   OppGainedAff(aff2)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You direct a dazzling ray of divine light at ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Tarot Group</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Aeon</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   aeonreset = false
   OppGainedAff("aeon")
   AeonTimer = tempTimer(15,[[aeonreset = true]])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Standing the Aeon on your open palm\, you blow it lightly at ([\w'\-]+) and watch as it seems to slow [\w'\-]+ movement through the time stream\.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Aeon Speed</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   ak.defs.speed = false
   ak.scoreup(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You stand an Aeon tarot on your palm\, and blow it lightly at ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Moon</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) and nextmoon and nextmoon ~= "DOPPLEGANGER" then
   OppGainedAff(nextmoon)
else
	ak.occie.aura.mental = ak.occie.aura.mental + 1
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^As you fling the Moon tarot at ([\w'\-]+)\, it turns an ominous\, sickly red\, before striking (her|him) in the head\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hierophant</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   OppGainedAff("hierophant")
   if ak.timers.Hiero then killTimer(ak.timers.Hiero) end
   ak.timers.Hiero = tempTimer(60,[[
      if affstrack.score.hierophant &gt; 0 then 
         OppLostAff("hierophant")
      end
      killTimer(ak.timers.Hiero)
   ]])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You quickly fling a Hierophant tarot card at ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hierophant Used</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   OppLostAff("hierophant")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^By the power of the Hierophant\, you command ([\w'\-]+)\.$</string>
								<string>^You issue the command\, but ([\w'\-]+) just ignores you\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Justice</name>
							<script>if ak.ai() then return end
if IsTargetted(multimatches[2][2]) then
   OppGainedAff("justice")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>With a prayer to Miramar, the Just, you fling your tarot card at </string>
								<string>^With a prayer to Miramar\, the Just\, you fling your tarot card at ([\w'\-]+)\. A set of scales appears above [\w'\-]+ head and one side of the scale quickly descends\. Justice will be done\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Lovers</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   OppGainedAff("lovers")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You throw a Lovers tarot at ([\w'\-]+) and as it strikes true\, a look of utter love covers [\w'\-]+ face\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hangedman</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   affstrack.score.bound = 100
   ak.scoreup(matches[2])
   --8secs
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You toss the Hanged Man tarot card at ([\w'\-]+) and as it reaches [\w'\-]+\, a huge mass of rope bursts out of it to entrap and hinder [\w'\-]+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Water Lord Group</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Perspire</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppGainedAff("slickness")
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You force ([\w'\-]+) into a state of heightened perspiring\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Roil Nausea</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
  if affstrack.score.nausea &gt; 0 then
		ak.thoughtIhad("nausea") 
	end
	OppGainedAff("nausea")
	ak.fluxcheck = "roil"
	ak.fluxline = matches[1]
	enableTrigger("Flux Enhance")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You wave a hand casually in the direction of ([\w'\-]+)\, violently roiling the liquid within [\w'\-]+ stomach\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Roil Unkown</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	ak.ProTrackingConfirmed("nausea")
	ak.fluxcheck = "roil"
	ak.fluxline = matches[1]
	enableTrigger("Flux Enhance")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You wave a hand in the direction of ([\w'\-]+) roiling the liquid that flows throughout [\w'\-]+ and disrupting [\w'\-]+ mental stability\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Choke</name>
							<script>if ak.ai() then return end
if not IsTargetted(matches[2]) then
	return 
end
if affstrack.score.asthma == 100 then
	OppGainedAff("hallucinations")
else	
	OppGainedAff("asthma")
end
ak.pervasion.hitcount = ak.pervasion.hitcount + 1
ak.fluxline = matches[1]
ak.fluxcheck = "choke"
enableTrigger("Flux Enhance")	
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You manifest water inside the lungs of ([\w'\-]+)\, causing [\w'\-]+ to hack and cough violently\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Drench Weariness</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
  if affstrack.score.weariness &gt; 0 then
		ak.thoughtIhad("weariness") 
	end
	OppGainedAff("weariness")
	ak.fluxline = matches[1]
	ak.fluxcheck = "drench"
	enableTrigger("Flux Enhance")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You call down a deluge to drench the impudent ([\w'\-]+)\, soaking [\w'\-]+ with icy water\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Drench Confusion</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	ak.ProTrackingConfirmed("weariness")
	OppGainedAff("confusion")
end
ak.fluxline = matches[1]
ak.fluxcheck = "drench"
enableTrigger("Flux Enhance")	</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You call down a deluge to drench the impudent ([\w'\-]+)\, leaving [\w'\-]+ dazed and confused\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Parch</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppGainedAff("Lethargy")
end
ak.fluxline = matches[1]
ak.fluxcheck = "parch"
enableTrigger("Flux Enhance")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You leech the water from ([\w'\-]+)\, making [\w'\-]+ skin dry and cracked\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Thin</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
  if affstrack.score.haemophilia &gt; 0 then
		ak.thoughtIhad("haemophilia") 
	end
	OppGainedAff("haemophilia")
	ak.pervasion.initialbleed = false
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You exert your limited control of the blood that flows through the veins of ([\w'\-]+)\, thinning it\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Thin</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
ak.ProTrackingConfirmed("haemophilia")
ak.pervasion.initialbleed = true
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You violently pull on the thinned blood flowing through the inferior form of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Latch</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Level 1</name>
								<script>if ak.ai() then return end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Tendrils of water lash out from you\, latching themselves to ([\w'\-]+) and hindering [\w'\-]+ attempts to flee\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Latch 2</name>
								<script>if ak.ai() then return end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You reach for the blood that flows through the inferior form of ([\w'\-]+)\, latching on and drawing it out\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Latch 3</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	affstrack.score.latched = 300
	ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With an exertion of will\, you reach past flesh and viscera\, seizing control of every drop of water that flows throughout the walking corpse that is ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Latch Cure</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	affstrack.score.latched = 0
	ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Colour floods back into the face of ([\w'\-]+)\, [\w'\-]+ unhealthy pallor a thing of the past\.$</string>
									<string>^You have not taken dominion over the water that flows through ([\w'\-]+)\.$</string>
									<string>^You reach for the water that courses throughout ([\w'\-]+)\, but it slips through your grasp like smoke\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Flux Enhance</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Parch</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	--cecho("&lt;cyan&gt;Flux: &lt;white&gt;"..ak.fluxcheck)
	if affstrack.score.haemophilia ~= 100 then
		ak.ProTrackingConfirmed("haemophilia")
		affstrack.score.weariness = 100
		ak.scoreup(matches[2])
	else
		ak.ProTrackingConfirmed("weariness")
	end
	OppGainedAff("addiction")
end
disableTrigger("Flux Enhance")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A ravenous gleam enters the eyes of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Roil</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	--cecho("&lt;cyan&gt;Flux: &lt;white&gt;"..ak.fluxcheck)
	if affstrack.score.weariness ~= 100 then
		ak.ProTrackingConfirmed("asthma")
		affstrack.score.weariness = 100
		ak.scoreup(matches[2])
	else
		ak.ProTrackingConfirmed("weariness")
	end
	OppGainedAff("anorexia")
end
disableTrigger("Flux Enhance")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The skin of ([\w'\-]+) takes on a green tinge\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Drench</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	--cecho("&lt;cyan&gt;Flux: &lt;white&gt;"..ak.fluxcheck)
	if affstrack.score.asthma ~= 100 then
		ak.ProTrackingConfirmed("asthma")
		affstrack.score.slickness = 100
		affstrack.score.anorexia = 100
		ak.scoreup(matches[2])
	elseif affstrack.score.slickness ~= 100 then
		ak.ProTrackingConfirmed("slickness")
		affstrack.score.anorexia = 100
		ak.scoreup(matches[2])
	else
	  ak.ProTrackingConfirmed("anorexia")
	end
end
disableTrigger("Flux Enhance")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Tendrils of water writhe and burrow into the eyes and nose of ([\w'\-]+)\, seeking and questing\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Choke</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	--cecho("&lt;cyan&gt;Flux: &lt;white&gt;"..ak.fluxcheck)
	if affstrack.score.nausea ~= 100 then
		ak.ProTrackingConfirmed("nausea")
		affstrack.score.weariness = 100
		ak.scoreup(matches[2])
	elseif affstrack.score.weariness ~= 100 then
		ak.ProTrackingConfirmed("weariness")
	end
end
disableTrigger("Flux Enhance")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The head of a servant of Sllshya erupts from your chest\, its fangs sinking into the exposed throat of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>No Flux Finish</name>
								<script>if ak.ai() then return end
local checks = {
	["choke"] = {[1] = "weariness",[2] = "nausea"},
	["roil"] = {[1] = "weariness",[2] = "asthma"},
	["parch"] = {[1] = "weariness",[2] = "haemophilia"},
	["drench"] = {[1] = "asthma",[2] = "slickness",[3] = "anorexia"},
}
if ak.fluxline and ak.fluxline == matches[1] then return end
ak.fluxcheck = ak.fluxcheck or "unknown"
if not table.contains(checks, ak.fluxcheck) then
	disableTrigger("Flux Enhance")
	return 
end
--cecho("&lt;cyan&gt;Non-Flux: &lt;white&gt;"..ak.fluxcheck)
if ak.fluxcheck == "drench" then

else
	if affstrack.score[checks[ak.fluxcheck][1]] == 100 and affstrack.score[checks[ak.fluxcheck][2]] &lt; 100 then
		--cecho("&lt;cyan&gt;\nCheck Flux: &lt;white&gt;"..checks[ak.fluxcheck][2])
		ak.thoughtIhad(checks[ak.fluxcheck][2])
	elseif affstrack.score[checks[ak.fluxcheck][1]] &lt; 100 and affstrack.score[checks[ak.fluxcheck][2]] == 100 then
		--cecho("&lt;cyan&gt;\nCheck Flux: &lt;white&gt;"..checks[ak.fluxcheck][1])
		ak.thoughtIhad(checks[ak.fluxcheck][1])
	else
	
	end	
end
disableTrigger("Flux Enhance")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You force ([\w'\-]+) into a state of heightened perspiring\.$</string>
									<string>^You wave a hand casually in the direction of ([\w'\-]+)\, violently roiling the liquid within [\w'\-]+ stomach\.$</string>
									<string>^You wave a hand in the direction of ([\w'\-]+) roiling the liquid that flows throughout [\w'\-]+ and disrupting [\w'\-]+ mental stability\.$</string>
									<string>^You manifest water inside the lungs of ([\w'\-]+)\, causing [\w'\-]+ to hack and cough violently\.$</string>
									<string>^You call down a deluge to drench the impudent ([\w'\-]+)\, soaking [\w'\-]+ with icy water\.$</string>
									<string>^You call down a deluge to drench the impudent ([\w'\-]+)\, leaving [\w'\-]+ dazed and confused\.$</string>
									<string>^You leech the water from ([\w'\-]+)\, making [\w'\-]+ skin dry and cracked\.$</string>
									<string>^You exert your limited control of the blood that flows through the veins of ([\w'\-]+)\, thinning it\.$</string>
									<string>^You violently pull on the thinned blood flowing through the inferior form of ([\w'\-]+)\.$</string>
									<string>^Tendrils of water lash out from you\, latching themselves to ([\w'\-]+) and hindering [\w'\-]+ attempts to flee\.$</string>
									<string>^You reach for the blood that flows through the inferior form of ([\w'\-]+)\, latching on and drawing it out\.$</string>
									<string>^With an exertion of will\, you reach passed flesh and viscera\, seizing control of every drop of water that flows throughout the walking corpse that is ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Non-Fluxed Attack</name>
								<script>if ak.ai() then return end
ak.fluxcheck = false
disableTrigger("Flux Enhance")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string></string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>7</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Downpour</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppGainedAff("frozen")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Water thunders down upon ([\w'\-]+)\, leaving [\w'\-]+ shivering beneath its chill\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wreck</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppGainedAff("stupidity recklessness")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Bringing forth a spinning cyclone of water\, you pick up ([\w'\-]+) in it and repeatedly dash [\w'\-]+ against the ground\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Torrent</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   OppGainedAff("rightarm leftarm frozen") 
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You send a concentrated torrent of water at the utterly helpless form of (\w+)\, smashing \w+ limbs with the might of Sllshya\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>2h Group</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Perceive Enable</name>
							<script>ak = ak or {}
ak.twoh = ak.twoh or {}
enableTrigger("Enemy Fractures")
ak.deleteFull()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Narrowing your gaze upon</string>
								<string>^Narrowing your gaze upon ([\w'\-]+)\, you take stock of [\w'\-]+ current injuries\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Enemy Fractures</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Fracture Count</name>
								<script>ak.twoh[matches[3]] = matches[2] + 0
if ak.twoh[matches[3]] == 0 then
	ak.deleteFull()
else
	cecho("&lt;yellow&gt;"..matches[3]..":&lt;cyan&gt; "..ak.twoh[matches[3]])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^[\w'\-]+ suffers from (\d+) ([\w'\-]+) fractures\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ribs</name>
								<script>ak.twoh["ribs"] = matches[2] + 0
if ak.twoh["ribs"] == 0 then
	ak.deleteFull()
else
	cecho("&lt;yellow&gt;ribs:&lt;cyan&gt; "..ak.twoh["ribs"])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^[\w'\-]+ suffers from (\d+) cracked ribs\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Tendons</name>
								<script>ak.twoh["tendons"] = matches[2] + 0
if ak.twoh["tendons"] == 0 then
	ak.deleteFull()
else
	cecho("&lt;yellow&gt;tendons:&lt;cyan&gt; "..ak.twoh["tendons"])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^[\w'\-]+ suffers from (\d+) torn tendons\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Parry</name>
								<script>targetparry = ak.limbs.standardizeLimb(matches[3])
disableTrigger("Enemy Fractures")
ak.scoreup(matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) is attempting to parry blows directed at [\w'\-]+ (.*)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>No Parry</name>
								<script>targetparry = "none"
ak.deleteFull()
disableTrigger("Enemy Fractures")
ak.scoreup(target)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>He does not seem to be parrying anything.</string>
									<string>She does not seem to be parrying anything.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Applied</name>
							<script>if IsTargetted(matches[2]) then
	if gmcp and gmcp.Char and gmcp.Char.Vitals and gmcp.Char.Vitals.charstats[3] and gmcp.Char.Vitals.charstats[3] == "Spec: Two Handed" then			
		send("battlefury perceive "..target)
	end
	--if ak.twoh[ak.twoh.salveconversion[matches[3]]] &gt; 5 then
		--ak.twoh[ak.twoh.salveconversion[matches[3]]] = ak.twoh[ak.twoh.salveconversion[matches[3]]] - 2
		--cecho("&lt;yellow&gt;"..ak.twoh.salveconversion[matches[3]]..":&lt;cyan&gt; "..ak.twoh[ak.twoh.salveconversion[matches[3]]])
	--else
		ak.twoh[ak.twoh.salveconversion[matches[3]]] = ak.twoh[ak.twoh.salveconversion[matches[3]]] - 1
		if ak.twoh[ak.twoh.salveconversion[matches[3]]] &lt; 0 then ak.twoh[ak.twoh.salveconversion[matches[3]]] = 0 end
		cecho("&lt;yellow&gt;"..ak.twoh.salveconversion[matches[3]]..":&lt;cyan&gt; "..ak.twoh[ak.twoh.salveconversion[matches[3]]])
	--end
	if matches[3] == "legs" then
		ak.tendonHit()
	elseif matches[3] == "arms" then
		ak.wristHit()
	elseif matches[3] == "head" then
		ak.skullHit()
	elseif matches[3] == "torso" then
		ak.ribHit()
	end
	ak.scoreup(matches[2])
end
--legs,arms,head,torso</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) takes some elixir from .* and rubs it into [\w'\-]+ ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Precision</name>
							<script>ak.twoh.modifier = 2
ak.limbs.twoh.stance["Me"] = "precision"</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You shift your stance, poising yourself for a precise strike against your foe.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Speed</name>
							<script>ak.twoh.modifier = 1
ak.limbs.twoh.stance["Me"] = "knight"</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Channeling the fury of battle, you prepare to unleash a brutally swift stroke against your foe.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Devastate</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Level 1</name>
								<script>if IsTargetted(multimatches[2][3]) then
	if multimatches[2][2] == "legs" then
		affstrack.score.rightleg = 100
		affstrack.score.leftleg = 100
		ak.twoh.tendons = 0
		ak.tendonHit()
		ak.scoreup(multimatches[2][3])
	elseif multimatches[2][2] == "arms" then
		affstrack.score.rightarm = 100
		affstrack.score.leftarm = 100
		ak.twoh.wrist = 0
		ak.wristHit()
		ak.scoreup(multimatches[2][3])
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Bracing your feet, you launch a devastating slash at the</string>
									<string>^Bracing your feet\, you launch a devastating slash at the ([\w'\-]+) of ([\w'\-]+)\, delivering a glancing blow\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Level 2</name>
								<script>if IsTargetted(multimatches[2][3]) then
	if multimatches[2][2] == "legs" then
		affstrack.score.rightleg = 200
		affstrack.score.leftleg = 200
		ak.twoh.tendons = 0
		ak.tendonHit()
		ak.scoreup(multimatches[2][3])
	elseif multimatches[2][2] == "arms" then
		affstrack.score.rightarm = 200
		affstrack.score.leftarm = 200
		ak.twoh.wrist = 0
		ak.wristHit()
		ak.scoreup(multimatches[2][3])
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You whip</string>
									<string>^You whip .* in a vicious arc\, hewing savagely into the ([\w'\-]+) of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Level 3</name>
								<script>if IsTargetted(multimatches[2][3]) then
	if multimatches[2][2] == "legs" then
		affstrack.score.rightleg = 300
		affstrack.score.leftleg = 300
		ak.twoh.tendons = 0
		ak.tendonHit()
		ak.scoreup(multimatches[2][3])
	elseif multimatches[2][2] == "arms" then
		affstrack.score.rightarm = 300
		affstrack.score.leftarm = 300
		ak.twoh.wrist = 0
		ak.wristHit()
		ak.scoreup(multimatches[2][3])
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Adjusting your footing, you unleash a horrific slash at the</string>
									<string>^Adjusting your footing\, you unleash a horrific slash at the ([\w'\-]+) of ([\w'\-]+)\, cleaving flesh and shattering bone in a savage display of your supremacy\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Added</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Hew Legs</name>
								<script>if IsTargetted(matches[2]) then
	ak.twoh.tendons = ak.twoh.tendons + ak.twoh.modifier
	if ak.twoh.tendons &gt; 7 then ak.twoh.tendons = 7 end
	cecho("&lt;yellow&gt;tendons:&lt;cyan&gt; "..ak.twoh.tendons)
	ak.tendonHit()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) almost falls as the blade savagely bites into [\w'\-]+ lower ([\w'\-]+) leg\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Hew Arms</name>
								<script>if IsTargetted(matches[3]) then
	ak.twoh.wrist = ak.twoh.wrist + ak.twoh.modifier
	if ak.twoh.wrist &gt; 8 then ak.twoh.wrist = 8 end
	cecho("&lt;yellow&gt;wrist:&lt;cyan&gt; "..ak.twoh.wrist)
	ak.wristHit()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The sickening crunch of bone can be heard as the blade smashes into the ([\w'\-]+) arm of ([\w'\-]+)\.$</string>
									<string>^The wet crunch of bone can be heard as the hammer smashes into the (right|left) arm of ([\w'\-]+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Overhand</name>
								<script>if IsTargetted(matches[2]) then
	ak.twoh.skull = ak.twoh.skull + ak.twoh.modifier
	if ak.twoh.skull &gt; 7 then ak.twoh.skull = 7 end
	cecho("&lt;yellow&gt;skull:&lt;cyan&gt; "..ak.twoh.skull)
	ak.skullHit()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) staggers as the blade strikes [\w'\-]+ in the side of the head\.$</string>
									<string>^([\w'\-]+) staggers back as the hammer catches (him|her) a glancing blow to the head.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Underhand</name>
								<script>if IsTargetted(matches[2]) then
	ak.twoh.ribs = ak.twoh.ribs + ak.twoh.modifier
	if ak.twoh.ribs &gt; 7 then ak.twoh.ribs = 7 end
	cecho("&lt;yellow&gt;ribs:&lt;cyan&gt; "..ak.twoh.ribs)
	ak.ribHit()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) doubles over as the blade slams into [\w'\-]+ side\.$</string>
									<string>^([\w'\-]+) doubles over as the hammer savagely crunches into (his|her) ribcage.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Did brain</name>
							<script>ak.didBrain = true
tempTimer(20, [[
ak.didBrain = false
]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You feel the satisfying crunch of bone as a Siroccian warhammer smashes home.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Riding Group</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Trample</name>
							<script>if IsTargetted(matches[4]) then
local limbcheck = matches[2]..""..matches[3]
if affstrack.score[limbcheck] &lt; 100 then
   affstrack.score[limbcheck] = 100
   ak.scoreup(matches[4])
end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>An alabaster pegasus breaks the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.</string>
								<string>An alabaster pegasus crushes the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.</string>
								<string>An alabaster pegasus pulverises the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.</string>
								<string>An alabaster pegasus smashes the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.</string>
								<string>^The ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+) is smashed to a bloody pulp\.$</string>
								<string>A steppe eagle breaks the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.</string>
								<string>A steppe eagle crushes the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.</string>
								<string>A steppe eagle pulverises the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.</string>
								<string>A steppe eagle smashes the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Defenses(i)</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>CurseWard Down</name>
							<script>if IsTargetted(matches[2]) then
if ak.ai() then return end
ak.defs.curseward = false
ak.scoreup(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>([\w'\-]+)'s curseward shatters!</string>
								<string>^Your attempt to breach (\w+)\'s curseward has no effect\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>CurseWard Up</name>
							<script>if IsTargetted(matches[2]) then
if ak.ai() then return end
ak.defs.curseward = true
ak.scoreup(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A shimmering curseward appears around ([\w'\-]+).</string>
								<string>^You try to curse ([\w'\-]+)\, but [\w'\-]+ is warded\.$</string>
								<string>^You stare at ([\w'\-]+)\, giving [\w'\-]+ the evil eye\, but [\w'\-]+ is warded\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>CurseWard Down2</name>
							<script>if ak.ai() then return end
ak.defs.curseward = false
ak.scoreup(target)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your attempt to breach finds no curseward.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Breathing Up!</name>
							<script>if ak.ai() then return end
ak.defs.holdbreath = true
ak.scoreup(target)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You attempt to squeeze the life out of the effigy in your hands, but find the torso too tight.</string>
								<string>You feel some resistance against your choking attempt.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Breathing Down</name>
							<script>if IsTargetted(matches[2]) then
	 if ak.ai() then return end
   ak.defs.holdbreath = false
   ak.scoreup(matches[2])
end
--ak.deleteFull()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>([\w'\-]+) exhales loudly.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Breathing Up</name>
							<script>if IsTargetted(matches[2]) then
	 if ak.ai() then return end
   ak.defs.holdbreath = true
   ak.scoreup(matches[2])
end
--ak.deleteFull()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>([\w'\-]+) inhales and begins holding [\w'\-]+ breath.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sileris Up</name>
							<script>if IsTargetted(multimatches[2][2]) then
	 if ak.ai() then return end
   ak.defs.sileris = true
   if affstrack.score.slickness&gt;0 then 
     if ak.thoughtIhad then ak.thoughtIhad("slickness") else affstrack.score.slickness = 0 end
     if silerisaktime then killTimer(silerisaktime) end
   end
	 ak.scoreup(multimatches[2][2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A supple</string>
								<string>^A supple .* has formed around ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sileris Apply</name>
							<script>if IsTargetted(matches[2]) then
	 if ak.ai() then return end
   ak.defs.sileris = false
   if affstrack.score.slickness&gt;0 then 
     if ak.thoughtIhad then ak.thoughtIhad("slickness") else affstrack.score.slickness = 0 end 
   end
   if silerisaktime then killTimer(silerisaktime) end
   silerisaktime = tempTimer(9,[[ak.defs.sileris = true]])
	 ak.scoreup(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) applies a sileris berry to (herself|himself)\.$</string>
								<string>^([\w'\-]+) applies a quicksilver droplet to [\w'\-]+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sileris Down</name>
							<script>if IsTargetted(multimatches[2][2]) then
	 if ak.ai() then return end
   ak.defs.sileris = false
   ak.scoreup(multimatches[2][2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You try to flay a non-existent sileris coating from</string>
								<string>^You try to flay a non-existent sileris coating from ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sileris Down</name>
							<script>if IsTargetted(matches[2]) and ak.defs.sileris then 
	 if ak.ai() then return end
   ak.defs.sileris = false
   ak.scoreup(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A (.+) lunges for the throat of ([\w'\-]+)\, fangs sinking through [\w'\-]+ fang barrier defence\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sileris Down</name>
							<script>if IsTargetted(multimatches[2][2]) then
	 if ak.ai() then return end
   ak.defs.sileris = false
   ak.scoreup(multimatches[2][2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You flay the metallic coating from</string>
								<string>^You flay the metallic coating from ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sileris Up</name>
							<script>if IsTargetted(multimatches[2][2]) then
	 if ak.ai() then return end
   ak.defs.sileris = true
   ak.scoreup(multimatches[2][2])
   if silerisaktime then killTimer(silerisaktime) end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You try to bite </string>
								<string>^You try to bite ([\w'\-]+)\, but your fangs are stopped by an odd metallic coating\.$</string>
								<string>^You try to bite ([\w'\-]+)\, but your fangs are stopped by an odd waxy coating\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Serpent Flay Third</name>
							<script>if IsTargetted(matches[2]) then
	 if ak.ai() then return end
   ak.defs.sileris = false
   ak.scoreup(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) seems to jolt to a halt suddenly as [\w'\-]+ flays h(?:im|er)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sileris Down</name>
							<script>if IsTargetted(multimatches[2][2]) then
	 if ak.ai() then return end
   ak.defs.sileris = false
   ak.scoreup(multimatches[2][2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You flay away</string>
								<string>^You flay away ([\w'\-]+)\'s speed defence\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Aria</name>
							<script>local mehdo = matches[2]
if not _G[mehdo.."ariatimer"] then
	ak.limbs.ariaUp(mehdo)
end
_G[mehdo.."ariatimer"] = tempTimer(5, [[
	cecho("\n\n\n&lt;cyan&gt;Correcting ]] .. mehdo .. [[ aria!\n\n\n")
	ak.limbs.ariaDown(]]..mehdo..[[)
	_G["]] .. mehdo .. [[ariatimer"] = nil   
]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+)\'s voice and instrument rise to the heavens in an Aria of healing for ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Speed Stripped</name>
							<script>if IsTargetted(matches[2]) then
	 if ak.ai() then return end
   ak.defs.speed = false
   ak.scoreup(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You stand an Aeon tarot on your palm, and blow it lightly at ([\w'\-]+)\.$</string>
								<string>^[\w'\-]+ razes ([\w'\-]+)\'s speed defence with .*\.$</string>
								<string>^([\w'\-]+) suddenly seems less dexterous\, [\w'\-]+ reactions becoming noticeably slower\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Riding</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Dismounted</name>
								<script>if IsTargetted(matches[2]) then
	 if ak.ai() then return end
   ak.mounted = false
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) steps down off of .*\.$</string>
									<string>^The instep of your foot smashes into the \w+ underarm of ([\w'\-]+)\, throwing \w+ from \w+ steed\.$</string>
									<string>^([\w'\-]+) begins to tumble towards the [\w'\-]+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Mounted</name>
								<script>if matches[2] and IsTargetted(matches[2]) then
	 if ak.ai() then return end
   ak.mounted = true  
   affstrack.score.hamstring = 0
	 affstrack.score.prone = 0
	 affstrack.score.paralysis = 0
   ak.scoreup(matches[2])
elseif not matches[2] then
	 if ak.ai() then return end
   ak.mounted = true
   ak.scoreup(target)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) easily vaults onto the back of .*\.$</string>
									<string>You cannot sweep kick a mounted opponent.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Kai Surge</name>
								<script>if IsTargetted(matches[2]) then
	 if ak.ai() then return end
   EchoForMajorAff("PRONE")
   affstrack.score.surge = 100
   OppGainedAff("prone")
   ak.mounted = false
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^As the power of your kai builds within you\, you lift a hand towards ([\w'\-]+)\. A searing bolt of power leaps forth\, blasting [\w'\-]+ backwards and leaving [\w'\-]+ lying\, twitching\, upon the ground\.$</string>
									<string>^As [\w'\-]+ lifts a hand in the direction of ([\w'\-]+)\, [\w'\-]+ summons forth a bolt of incandescent power\. As it strikes ([\w'\-]+)\, [\w'\-]+ is flung helplessly through the air\, landing in a twitching heap\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Surge Gone</name>
								<script>if IsTargetted(matches[2]) then
	if ak.ai() then return end
	ak.mounted = false
	OppLostAff("surge")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The muscles of ([\w'\-]+) cease violently spasming\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>BM Stances Friendly</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Sanya</name>
								<script>ak.limbs.blademaster.stance[matches[2]] = "Sanya"</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) sinks into the Sanya stance\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Thyr</name>
								<script>ak.limbs.blademaster.stance[multimatches[2][2]] = "Thyr"</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>With a flourish, </string>
									<string>^With a flourish\, ([\w'\-]+) enters the Thyr stance\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Arash</name>
								<script>ak.limbs.blademaster.stance[matches[2]] = "Arash"</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) takes up the Arash stance\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Mir</name>
								<script>ak.limbs.blademaster.stance[matches[2]] = "Mir"</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) enters the flowing Mir stance\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Doya</name>
								<script>ak.limbs.blademaster.stance[matches[2]] = "Doya"</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) drops into the Doya stance\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Unstanced</name>
								<script>ak.limbs.blademaster.stance[matches[2]] = "None"</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) shifts [\w'\-]+ weight\, adopting a neutral stance\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Rebounding</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Rebounding Down</name>
								<script>if IsTargetted(matches[2]) then 
if ak.ai() then return end
ak.defs.reRebounding = true
ak.defs.rebounding = false
ak.scoreup(matches[2])
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#55ffff</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>([\w'\-]+)'s aura of weapons rebounding disappears.</string>
									<string>You flay away ([\w'\-]+)'s aura of rebounding defence.</string>
									<string>You call upon Whiirh to empower your staff and strike ([\w'\-]+), the power of air dispersing [\w'\-]+ aura of rebounding.</string>
									<string>You call upon Whiirh and unleash a forceful blow towards ([\w'\-]+) with your trusty staff.</string>
									<string>You call upon Whiirh and unleash a forceful blow towards ([\w'\-]+)'s .* with your trusty staff.</string>
									<string>^You raze ([\w'\-]+)\'s aura of rebounding with .*\.$</string>
									<string>^You raze ([\w'\-]+)\'s speed defence with .+\.$</string>
									<string>^You whip .+ through the air in front of ([\w'\-]+)\, to no effect\.$</string>
									<string>^You try to flay a non-existent aura of rebounding from ([\w'\-]+)\.$</string>
									<string>^[\w'\-]+ razes ([\w'\-]+)\'s aura of rebounding with .*\.$</string>
									<string>^You flay away ([\w'\-]+)\'s speed defence\.$</string>
									<string>^You whip .* through the air in front of ([\w'\-]+)\, to no effect\.$</string>
									<string>^[\w'\-]+ delivers a terrible stroke with .*\, scything straight through the aura of rebounding surrounding ([\w'\-]+)\.$</string>
									<string>^Lunging forward\, you bring .* in a savage diagonal blow\, carving through ([\w'\-]+)\'s aura of rebounding\.$</string>
									<string>^You lunge toward ([\w'\-]+) with .*\, but finding no resistance\, you stumble hopelessly off balance\.$</string>
									<string>^Continuing your assault\, you whip .* in a vicious rising slash at ([\w'\-]+)\.$</string>
									<string>^You lurch forward at ([\w'\-]+)\, swinging .* in a wildly innacurate blow\.$</string>
									<string>^[\w'\-]+\'s cantata shatters the defences surrounding ([\w'\-]+)\.$</string>
									<string>^[\w'\-]+ calls upon Whiirh and strikes ([\w'\-]+) with [\w'\-]+ staff\, the power of air dispersing [\w'\-]+ aura of rebounding\.$</string>
									<string>^The falcon dives at ([\w'\-]+)\, ripping apart [\w'\-]+ aura of rebounding with its talons\.$</string>
									<string>^[\w'\-]+ lunges toward ([\w'\-]+)\, but stumbles off balance as if expecting some barrier\.$</string>
									<string>^Planting your feet, you whirl .+ over your head before bringing it down with terrible force upon ([\w'\-]+), shattering (?:his|her) aura of rebounding\.$</string>
									<string>^[\w'\-]+ whips .+ through the air in front of ([\w'\-]+)\, to no effect\.$</string>
									<string>^You lurch forward at ([\w'\-]+)\, swinging .* in a wildly innacurate blow\.$</string>
									<string>^You deliver a single\, powerful blow against the aura of rebounding surrounding ([\w'\-]+)\, fracturing it\.$</string>
									<string>^The daegger cuts through (\w+)\'s skullcap\-formed aura\.$</string>
									<string>^Your mace ignites in holy flame\, burning away (\w)\'s protective aura\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Rebounding Up</name>
								<script>if IsTargetted(matches[2]) and reboundingaccountak then 
	if ak.ai() then return end
  ak.defs.rebounding = true
  ak.scoreup(matches[2])
end

</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You suddenly perceive the vague outline of an aura of rebounding around ([\w'\-]+).</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Rebounding Up2</name>
								<script>if ak.ai() then return end
ak.defs.rebounding = true
weaponattack = {}
ak.scoreup(target)
attacklimb = {}
attackweapon = {} 
weaponattack = {}
boardaffs = {}</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>The attack rebounds onto you!</string>
									<string>The attack rebounds back onto you!</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Rebounding Up3</name>
								<script>if IsTargetted(matches[2]) then 
	if ak.ai() then return end
  echo("\n")
  echo("\n")
  cecho("&lt;cyan&gt; REBOUNDING UP, WATCH OUT!!!!!!!!!")
  echo("\n")
  cecho("&lt;cyan&gt; REBOUNDING UP, WATCH OUT!!!!!!!!!")
  echo("\n")
  cecho("&lt;cyan&gt; REBOUNDING UP, WATCH OUT!!!!!!!!!")
  echo("\n")
  echo("\n")
  ak.defs.rebounding = true
  ak.scoreup(matches[2])
end

</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You would be unable to pierce through the aura of rebounding protecting ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Shielded</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shielded</name>
								<script>if IsTargetted(matches[2]) then
	 if ak.ai() then return end
   ak.shieldwhore = true
   tempTimer(5,[[ak.shieldwhore = false]])
   ak.defs.shield = true
   ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A nearly invisible magical shield forms around ([\w'\-]+).$</string>
									<string>^A dizzying beam of energy strikes you as your attack rebounds off of ([\w'\-]+)\'s shield\.$</string>
									<string>^The magical shield surrounding ([\w'\-]+) makes that impossible\.$</string>
									<string>^A shimmering barrier of crystal forms about ([\w'\-]+)\.$</string>
									<string>^A guardian angel surrounds ([\w'\-]+) with a protective shield\.$</string>
									<string>^A gentle hum arises from (\w+)\'s angel, as it raises a shield to protect \w+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shield Down</name>
								<script>if IsTargetted(matches[2]) then
	 if ak.ai() then return end
   ak.defs.shield = false
   ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You try to flay a non-existent shield from ([\w'\-]+)\.$</string>
									<string>^You flay away ([\w'\-]+)'s shield defence\.$</string>
									<string>^Calling upon Garash, you unleash a crushing blow at the magical shield surrounding ([\w'\-]+)\, shattering it\.$</string>
									<string>^Your cantata shatters the defences surrounding ([\w'\-]+)\.$</string>
									<string>([\w'\-]+)'s aura of weapons rebounding disappears.</string>
									<string>^You whip .* through the air in front of ([\w'\-]+)\, to no effect\.$</string>
									<string>^You command your gremlin to shatter the defences surrounding ([\w'\-]+)\.$</string>
									<string>^([\w'\-]+) has no shield for your gremlin to shatter\, occultist\.$</string>
									<string>^As the kick strikes the magical shield surrounding ([\w'\-]+)\, it shatters into glimmering fragments\.$</string>
									<string>^[\w'\-]+\'s cantata shatters the defences surrounding ([\w'\-]+)\.$</string>
									<string>^The othala rune on the ground suddenly erupts in a great gout of boiling magma\, the concussive blast smashing into the magical shield surrounding ([\w'\-]+) and rendering it asunder\.$</string>
									<string>^Lunging forward\, you bring .* in a savage diagonal blow\, carving through ([\w'\-]+)\'s shield\.$</string>
									<string>^Continuing your assault\, you whip .* in a vicious rising slash at ([\w'\-]+)\.$</string>
									<string>^You lunge toward ([\w'\-]+) with .*\, but finding no resistance\, you stumble hopelessly off balance\.$</string>
									<string>^[\w'\-]+\'s cantata shatters the defences surrounding ([\w'\-]+)\.$</string>
									<string>^The end of your staff smashes the magical shield surrounding ([\w'\-]+) in an explosion of translucent shards\.$</string>
									<string>^Your shadow leaps for ([\w'\-]+), hammering [\w'\-]+ shield in a silent frenzy that causes it to explode in a shower of prismatic shards\.$</string>
									<string>^([\w'\-]+) is not surrounded by a magical shield\.$</string>
									<string>^Following the momentum of your initial strike, you come back around with a crushing blow that makes the magical shield surrounding ([\w'\-]+) explode into myriad shards\.$</string>
									<string>^Bleeding off the momentum from your initial blow, you come around again, slicing cleanly through ([\w'\-]+)\'s magical shield\.$</string>
									<string>^You prepare yourself to flick your tail at ([\w'\-]+) before realising that doing so would not actually do anything\.$</string>
									<string>^You flick your tail at ([\w'\-]+)\, dismissively brushing aside the paltry shield protecting [\w'\-]+\.$</string>
									<string>^[\w'\-]+ dismissively flicks [\w'\-]+ tail at ([\w'\-]+)\, annihilating the magical shield surrounding [\w'\-]+ with casual ease\.$</string>
									<string>^You raze ([\w'\-]+)\'s magical shield with .+\.$</string>
									<string>^You conjure a blade of ice and send it to lacerate the flesh of ([\w'\-]+)\.$</string>
									<string>^You conjure a blade of ice and drive it straight through the magical shield surrounding ([\w'\-]+)\, causing it to explode in a shower of prismatic shards\.$</string>
									<string>^You lurch forward at ([\w'\-]+)\, swinging .* in a wildly innacurate blow\.$</string>
									<string>^You deliver a single\, powerful blow against the magical shield surrounding ([\w'\-]+)\, fracturing it\.$</string>
									<string>^You twist your torso and send a roundhouse towards ([\w'\-]+)\.$</string>
									<string>^A miriad image of [\w'\-]+ brings a translucent battleaxe down in a powerful overhanded blow upon([\w'\-]+)\.$</string>
									<string>^[\w'\-]+ brings a translucent battleaxe down in a powerful overhanded blow upon([\w'\-]+)\.$</string>
									<string>^Bracing your feet\, you drive .+ towards ([\w'\-]+)\.$</string>
									<string>^Your blow scythes through the air in front of ([\w'\-]+)\, missing entirely\.$</string>
									<string>^Your blow cleaves through the magical shield surrounding ([\w'\-]+), continuing on to drive him from(his|her) feet\.$</string>
									<string>^You find no magical shield surrounding ([\w'\-]+), and your power is unable to take hold\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shield Illusion</name>
								<script>if IsTargetted(multimatches[2][2]) then
   ak.defs.shield = false
   ak.scoreup(multimatches[2][2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>** Illusion **</string>
									<string>^A nearly invisible magical shield forms around ([\w'\-]+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shield Illusion 2</name>
								<script>if IsTargetted(multimatches[1][2]) then
   ak.defs.shield = false
   ak.scoreup(multimatches[2][2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A nearly invisible magical shield forms around ([\w'\-]+).$</string>
									<string>** Illusion **</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Lemming shield pop</name>
								<script>local defstrip = matches[2]
--echo(defstrip)
if IsTargetted(matches[3]) then
  if ak.ai() then return end
  if defstrip == "magical shield defence" then
    ak.defs.shield = false
    ak.scoreup(matches[3])
  elseif defstrip == "aura of rebounding defence" then
    ak.defs.reRebounding = true
    ak.defs.rebounding = false
    ak.scoreup(matches[3])
  else
    ak.defs.reRebounding = true
    ak.defs.rebounding = false
    ak.defs.shield = false
    ak.scoreup(matches[3])
  end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A small brown lemming rips apart the (.+) of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Lyre</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Lyred Up</name>
								<script>if IsTargetted(matches[2]) and targetlyred == 0 then
	 if ak.ai() then return end
   targetlyred = 1
   ak.scoreup(matches[2])
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) strums a few notes on .+\, and a prismatic barrier forms around (her|him)\.$</string>
									<string>^Your attack is repelled by the prismatic barrier surrounding ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Lyred Down</name>
								<script>if IsTargetted(matches[2])and targetlyred == 1 then
	 if ak.ai() then return end
   targetlyred = 0
   ak.scoreup(matches[2])
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+)\'s prismatic barrier dissolves into nothing\.$</string>
									<string>^The breath weapon rips apart ([\w'\-]+)\'s prismatic barrier\.$</string>
									<string>^The othala rune on the ground suddenly erupts in a great gout of boiling magma\, the concussive blast smashing into the prismatic barrier surrounding ([\w'\-]+) and rendering it asunder\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Look Mount Tracking</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Look Prompt</name>
								<script>ak.MountLookPrompt()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string></string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>7</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Cures(i)</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Applied</name>
							<script>if ak.ai() then return end

if ak.limbs.shikudoParse then
  ak.limbs.shikudoParse()
end

if not IsTargetted(matches[2]) then return end
if matches[3] == "skin" and not ak.defs.mass then 
   ak.defs.mass = true
	 ak.bals.salve = true
   cecho("&lt;cyan&gt;Mass Consideration Removed") 
elseif ak.bals.salve then
	if affstrack.score.aeon == 100 and affstrack.score.slickness == 100 then
	   return
	else 
	   affstrack.score.tempslickness= 0
	   ak.bals.salve = false
	   if affstrack.score.slickness&gt;0 then 
	      if ak.thoughtIhad then 
					ak.thoughtIhad("slickness") 
				else 
					affstrack.score.slickness = 0 
				end  
	   end
	   ak.cure.apply(matches[3]) 		
		 if ak.timers.apply then			
		 	killTimer(ak.timers.apply)		
		 end
	   ak.timers.apply = tempTimer(.8,[[ak.bals.salve = true;ak.timers.apply = false]])
	   --cecho("&lt;cyan&gt;Processed Cures")
	end
else
	if ak.timers.apply then 
		ak.bals.salve = true
		cecho("&lt;cyan&gt;Ignored Cures")
	end
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#0000ff</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) takes some (?:balm|salve) from a vial and rubs it on (?:her|his) ([\w'\-]+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Focused</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	if ak.bals.focus then
		affstrack.score.rixil = 0
		ak.bals.focus = false
		ak.timers.focus = tempTimer(2.2,[[ak.bals.focus = true;ak.timers.focus = nil]])--2.2
		ak.cure.focus(matches[2])
	end
	ak.currentmana = ak.currentmana - 250
  affstrack.score.rixil = 0
  if not ak.timers.focus then 
     if not ak.bals.focus then  
         ak.bals.focus = true 
         cecho("&lt;cyan&gt;Ignored Cures")
         if ak.thoughtIhad then ak.thoughtIhad("impatience") else affstrack.score.impatience = 0 end
      end 
  end
  if affstrack.score.impatience&gt;0 then
     if ak.thoughtIhad then ak.thoughtIhad("impatience") else affstrack.score.impatience = 0 end
     cecho("\n\n&lt;yellow&gt;IMPATIENCE CURED!!")
     cecho("\n\n&lt;yellow&gt;IMPATIENCE CURED!!")
     cecho("\n\n&lt;yellow&gt;IMPATIENCE CURED!!")
  end
end


</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A look of extreme focus crosses the face of ([\w'\-]+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Opponent Ate</name>
							<script>if ak.ai() then return end
local donotrun = {
	"azurite mote",
  "gypsum crystal",
	"echinacea root", 
	"bisemutum chip",
	"kola nut",
	"black cohosh root",
	"skullcap flower",
	"dolomite grain",
	"irid moss",
	"potash crystal",
	"quartz grain",
	"ball of myrrh gum",
	"antimony flake",
	"ginger root",
}
if table.contains(donotrun, matches[3]) then
	setTriggerStayOpen("Opponent Ate", 0)
	return
elseif not IsTargetted(matches[2]) then
	setTriggerStayOpen("Opponent Ate", 0)
	return
else
	ak.currenteat = matches[3]
end  </script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>2</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ffffff</mFgColor>
							<mBgColor>#5500ff</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) eats (?:a|an|some) (.*)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Eat Prompt</name>
								<script>--BREAK IS HERE
if not ak.currenteat then
  return
end
deleteLine()
if opponenteat == 1 then
  if timerherb == 1 then
    cecho("&lt;cyan&gt;-Ignored Cures")
  end
  if timerherb == 0 then
    cecho("&lt;cyan&gt;Something is Fucked")
    opponenteat = 0
  end
end
if opponenteat == 0 then
  opponenteat = 1
  timerherb = 1
  herbtimer = tempTimer(.7, [[opponenteat = 0;timerherb = 0]])
  opponentrecenteat = true
  herbtimerrecenteat = tempTimer(.5, [[opponentrecenteat = false;ak.serveraliases()]])
  ak.cure.ate(ak.currenteat, false)
end
ak.currenteat = false
ak.showPrompt()
setTriggerStayOpen("Opponent Ate", 0)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string></string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>7</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Cured Umind</name>
								<script>OppLostAff("unweavingmind")
ak.psion.unweaving.mind = 0
setTriggerStayOpen("Opponent Ate", 0)
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The light behind the eyes of ([\w'\-]+) reignites\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Cured Ubody</name>
								<script>OppLostAff("unweavingbody")
ak.psion.unweaving.body = 0
setTriggerStayOpen("Opponent Ate", 0)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) suddenly seems much more vital\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Cured Whisperingmadness</name>
								<script>OppLostAff("whisperingmadness")
setTriggerStayOpen("Opponent Ate", 0)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) ceases \w+ violent trembling\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Gult Cure</name>
								<script>OppLostAff("guilt")
setTriggerStayOpen("Opponent Ate", 0)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) straightens\, as if some great burden had been lifted from \w+ shoulders\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Opponent Tree</name>
							<script>if ak.ai() then 
	setTriggerStayOpen("Opponent Tree", 0)
	return
elseif not IsTargetted(matches[2]) then
	setTriggerStayOpen("Opponent Tree", 0)
	return
else
	ak.currenttree = matches[2]
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>2</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) touches a tree of life tattoo.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Tree Prompt</name>
								<script>if not ak.currenttree then return end
deleteLine()

if opponenttree == 0 then
	opponenttree = 1
  opponenthalftree = 1
  treetimerhalf = tempTimer(8.5, [[opponenthalftree = 0;ak.serveraliases()]])
  treetimer = tempTimer(9.5, [[opponenttree = 0;timertree = 0]])
  timertree = 1
  --cecho("&lt;cyan&gt;Processed Cures")
  ak.cure.tree()
end
if timertree == 0 then
  if opponenttree == 1 then
    opponenttree = 0
    cecho("&lt;cyan&gt;Ignored Cures")
  end
end

ak.currenttree = false
ak.showPrompt()
setTriggerStayOpen("Opponent Tree", 0)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string></string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>7</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Gult Cure</name>
								<script>OppLostAff("guilt")
setTriggerStayOpen("Opponent Tree", 0)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) straightens\, as if some great burden had been lifted from \w+ shoulders\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Restored</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   for i = 1, #affstrack.restored do 
      if affstrack.score[affstrack.restored[i]] &gt; 0 and affstrack.score[affstrack.restored[i]] &lt; 200 then 
         affstrack.score[affstrack.restored[i]] = 0   
      end
   end
   ak.scoreup(matches[2])
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) crackles with blue energy that wreathes itself about (?:her|his) limbs.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Mass Down</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
ak.defs.mass = false
cecho("&lt;cyan&gt;Mass Consideration Set")
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A great weight seems to have been lifted from ([\w'\-]+).</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Transfix Cured</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   affstrack.score.transfixed = 0
   ak.scoreup(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) has writhed free of ([\w'\-]+) state of transfixation\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Salve Highlighter</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   cecho("\n\n\n&lt;cyan&gt;OPPONENT APPLIED TO THEIR &lt;yellow&gt;"..matches[3].."!!\n\n\n")
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#0000ff</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) takes some balm from a vial and rubs it on (?:her|his) ([\w'\-]+).$</string>
								<string>^([\w'\-]+) takes some salve from a vial and rubs it on (?:her|his) ([\w'\-]+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Insomnia</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   ak.currentmana = ak.currentmana - 100
   affstrack.score.insomnia = 0
   ak.scoreup(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>([\w'\-]+) clenches [\w'\-]+ fists and grits [\w'\-]+ teeth.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Writhed Bound</name>
							<script>if ak.ai() then return end
--send("outr rope")
if IsTargetted(matches[2]) then
   affstrack.score.bound = 0
   ak.scoreup(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>([\w'\-]+) has writhed free of [\w'\-]+ entanglement by ropes.</string>
								<string>^Gritting [\w'\-]+ glistening teeth into a rictus grin, ([\w'\-]+) emits a low rumble as [\w'\-]+ flexes [\w'\-]+ rippling muscles, bursting the bindings that hold [\w'\-]+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Class Cures</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Runewarden Dagaz</name>
								<script>if IsTargetted(matches[2]) then 
	 if ak.ai() then return end
   ak.cure.passive()
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A rune like a rising sun upon the ground flares, bathing ([\w'\-]+) with healing magic.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Fool Cure</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   if affstrack.score.paralysis&gt;0 then 
     if ak.thoughtIhad then ak.thoughtIhad("paralysis") else affstrack.score.paralysis = 0 end  
   end
   ak.cure.passive()
   ak.cure.passive() 
   ak.cure.passive() 
	 ak.resetbacktrack()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) presses a tarot to (?:her|his) forehead, producing a wan smile\.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Priest</name>
								<script>if ak.ai() then return end
if ndba and ndba.names[target] and ndba.getclass(target) == "Priest" then
   ak.cure.passive() 
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>The guardian angel begins to shimmer with a soft red light.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Priest 2</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   ak.cure.passive()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A flickering nimbus outlines ([\w'\-]+) for an instant\, before fading from sight\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Fool Third Person</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   ak.cure.passive() 
   ak.cure.passive()
   ak.cure.passive()
	 ak.resetbacktrack()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^[\w'\-]+ presses a tarot to ([\w'\-]+)\'s forehead, producing a wan smile\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Might</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   ak.cure.passive()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) lets out a mighty roar\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Boosted Passive</name>
								<script>if ak.ai() then return end
if IsTargetted(multimatches[2][2]) then 
   --affstrack.score.paralysis = 0
   ak.cure.passive() 
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A look of relief comes over ([\w'\-]+) as [\w'\-]+ grows less pale\.$</string>
									<string>^([\w'\-]+) grows older before your eyes\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shaman Daina</name>
								<script>if ak.ai() then return end
if IsTargetted(multimatches[2][2]) then 
   ak.cure.passive()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>A pale mist begins to rise from the skin of</string>
									<string>^A pale mist begins to rise from the skin of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>BM Phoenix</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   ak.oresetparse()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Throwing back [\w'\-]+ head\, ([\w'\-]+) shouts out in defiance as blazing flames consume [\w'\-]+ for a single\, glorious instant before dying away\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>BM Alleviate</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   ak.cure.tree()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^As (?:he|she) massages key pressure points, a look of relief comes over ([\w'\-]+)'s face as (?:her|his) ailments ease.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Bard Hallelujah</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   ak.cure.passive()
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A song can be heard on the edge of hearing as the air distorts about ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Apostate Syphon</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   ak.cure.passive()
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A demonic crimson glow emanates from ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Fitnessing</name>
								<script>if ak.ai() then return end
ocured.kelp = ocured.kelp or {}
ocured.treed = ocured.treed or {}
ocured.cureall = ocured.cureall or {}
if IsTargetted(matches[2]) then
   cecho("&lt;cyan&gt;Processed Cures")
   ocured.kelp.asthma = nil
   ocured.treed.asthma = nil
   ocured.cureall.asthma = nil
   if affstrack.score.weariness&gt;0 then 
     if ak.thoughtIhad then ak.thoughtIhad("weariness") else affstrack.score.weariness = 0 end 
   end
   affstrack.score.asthma = 0
   ak.scoreup(matches[2])
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) draws a deep, measured breath.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Dragon Healing</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   if affstrack.score.weariness&gt;0 and affstrack.score.recklessness&gt;0 then 
     if ak.thoughtIhad then ak.thoughtIhad("weariness") else affstrack.score.weariness = 0 end
   end
   affstrack.score.weariness = 0
   affstrack.score.recklessness = 0
	 if affstrack.score.prone == 100 then
	 ak.cure.passive()
	 else
   ak.cure.passive()
   ak.cure.passive()
   ak.cure.passive() 
	 ak.resetbacktrack()
	 end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>([\w'\-]+) lets out a great keening, casting the impurities from (?:her|his) form.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shrugging/WaterLord/EarthLord</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   if affstrack.score.weariness&gt;0 then 
     if ak.thoughtIhad then ak.thoughtIhad("weariness") else affstrack.score.weariness = 0 end 
   end
   ak.cure.passive()
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) hunches (?:her|his) shoulders and lets out a soft hiss.</string>
									<string>^The amorphous form of ([\w'\-]+) trembles\, some of the liquid composing it falling away from the greater whole\.$</string>
									<string>^Magma erupts forth from beneath the plates that cover ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Rage</name>
								<script>if ak.ai() then return end
if not IsTargetted(matches[2]) then return end
affs = {}
ocured = ocured or {}
ocured[ocured.conversion["rage"]] = {}
ak.occie.aura.parsereduct("rage")
for i = 1, #affstrack.eaten["rage"] do
   if affstrack.score[affstrack.eaten["rage"][i]] &gt; 0 then
      table.insert(affs, affstrack.eaten["rage"][i])
   end
end 
if #affs &gt; 0 then
   ak.echoForPossibleCures(table.concat(affs, " "))
   for i = 1, #affs do
      ocured[ocured.conversion["rage"]][affs[i]] = affstrack.score[affs[i]]
      affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / #affs
      if affstrack.score[affs[i]] &lt; ak.errorallowance then
          affstrack.score[affs[i]] = 0
      end
   end
end
ak.scoreup(matches[2])
 
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+)'s eyes flash with rage\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Priest Bedevil</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   ak.oresetparse()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With a grand gesture of righteous fury, ([\w'\-]+) bedevils you with (?:his|her) afflictions\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Magi Bloodboil</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   if affstrack.score.haemophilia&gt;0 then 
     if ak.thoughtIhad then ak.thoughtIhad("haemophilia") else affstrack.score.haemophilia = 0 end
   end
   ak.cure.passive()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Perspiration suddenly breaks out on ([\w'\-]+)\'s forehead\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Priest Angel Care</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   ak.cure.passive()
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The guardian angel of ([\w'\-]+) shimmers and (he|she) gives a sigh of relief.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Priest Rite of Healing</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   ak.cure.passive()
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A gentle glow surrounds ([\w'\-]+)\.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Sylvan Panacea</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   ak.cure.passive()
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) is surrounded in a cool\, refreshing mist\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Tarot Sun</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   ak.cure.passive()
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The globe of light illuminates ([\w'\-]+) with its brilliance\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Priest Healing</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   ak.cure.passive()
end
--if matches[3] == "Fire" imp or para
--elseif matches[3] == "Air" asthma
--elseif matches[3] == "Earth" slickness
--elseif matches[3] == "Air and Earth" -- anorexia</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) calls upon the powers of (.*) and projects (his|her) spiritual essence inwardly\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Air Lord Tempest</name>
								<script>if ak.ai() then return end
if IsTargetted(multimatches[2][2]) then 
   ak.cure.passive()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>The winds that compose</string>
									<string>^The winds that compose ([\w'\-]+) fall still\, [\w'\-]+ tempestuous form dispersing into nothing\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Air Lord Tempest</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   ak.cure.passive()
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The tempestuous form of ([\w'\-]+) is cleansed by a purifying breeze\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Alchemist Salt</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   ak.cure.passive()
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) sketches out a symbol in the air with (?:her|his) finger in the shape of a bisected circle.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Magi Harmony</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   ak.cure.passive()
end

</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A soft chiming emanates from ([\w'\-]+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Priest Sacrifice</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   ak.oresetparse()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The room is consumed in an explosion of light, out of which ([\w'\-]+) emerges refreshed and renewed\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Sylvan Heal</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   ak.cure.passive()
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) stands suddenly upright\, rooted to the earth\.$ </string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Unknown</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   ak.cure.passive() 
end

</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) invokes the power of the elements and a soft white nimbus momentarily surrounds ([\w'\-]+)\.$</string>
									<string>^Divine essence flares around ([\w'\-]+)\.$</string>
									<string>^A look of relief comes over ([\w'\-]+) as [\w'\-]+ grows less pale\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Slough</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   ak.cure.passive()
end
--CAN CURE PARALYSIS
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The fiery outer layers of ([\w'\-]+) fall away\, turning to dust as they drift to the ground\. Though ([\w'\-]+) seems diminished for an instant\, [\w'\-]+ fires soon rage with fury once more\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Psion Expunge</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   ak.cure.passive()
end
--CAN CURE PARALYSIS
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A slight tightening of the eyes is the only sign (\w+) makes that \w+ has made a great effort of will\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Concentrate</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   if affstrack.score.confusion &gt; 0 then
      if ak.thoughtIhad then ak.thoughtIhad("confusion") else affstrack.score.confusion = 0 end
   end 
   affstrack.score.disrupt = 0
   ak.scoreup(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+)\'s eyes lose their focus suddenly\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bucket2</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   if affstrack.score.aflame == 100 then
      affstrack.score.aflame = 0
      ak.scoreup(matches[2])
   end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) saturates (himself|herself) with water\, putting out the fire that raged\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bucket</name>
							<script>if ak.ai() then return end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) saturates (himself|herself) with water\, putting out the fire that raged\.$</string>
								<string>^The fires consuming ([\w'\-]+) diminish somewhat\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Slime</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   affstrack.score.slime = 0
   ak.scoreup(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) finally rids [\w'\-]+ of the slime covering [\w'\-]+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tension</name>
							<script>if ak.ai() then return end
local aff = "tension"
if ak.ProTrackingConfirmed then ak.ProTrackingConfirmed(aff) end
affstrack.score[aff] = 0
ak.scoreup(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) sucks in a great gasp of air\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Dwinnu</name>
							<script>if ak.ai() then return end
--send("outr rope")
if IsTargetted(matches[2]) then
   affstrack.score.bound = 0
   ak.scoreup(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>\'DWINNU\! DWINNU\' chants ([\w'\-]+) urgently as [\w'\-]+ bonds turn to dust and fall off\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Writhed Fire Bullshit</name>
							<script>if IsTargetted(matches[2]) then
   OppGainedAff("aflame")
	 OppLostAff("bound")
end
ak.scoreup(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) has writhed free of (his|her) conflagrant weave\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Queue &amp; Server Aliases</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Curing</name>
							<script>send("curing off")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Automatic affliction curing disabled.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Aliases Setting</name>
							<script>--deleteFull()
local deletealla = {"boomer","mineralmainttwo","mineralmaint","oattack","oattackrl","oattackll","oattackra","oattackla","oattackt","oattackh","oattacklr","oattackll",
      "oattackar","oattackal","oattackch","oattackct","oattacktwo","oattackrltwo","oattacklltwo","oattackratwo","oattacklatwo",
      "oattackttwo","oattackhtwo","oattacklatwo","oattacklltwo","oattackartwo","oattackaltwo","oattackchtwo","oattackcttwo","oattackr"
}
if table.contains(deletealla,matches[2]) then
   ak.deleteFull()
   ak.aliases[matches[2]] = matches[3]
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Alias \"([\w'\-]+)\" will now execute\: \"(.*)\"</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Serverside Alias Setting</name>
							<script>if matches[2] == "dor" then return end
affstrack.overcharge = false

local cursedraw = matches[3]:lower()
cursedraw = string.gsub(cursedraw, "/", " ")

cursedraw = cursedraw:split(" ")
for k,v in pairs(cursedraw) do
   if string.findPattern(cursedraw[k],"overcharge") then
      affstrack.overcharge = true
   elseif string.findPattern(cursedraw[k],"relapse") then
      invoked = cursedraw[k+1]
   elseif string.findPattern(cursedraw[k],"invoke") then
      invoked = cursedraw[k+2]
   elseif string.findPattern(cursedraw[k],"impurity") then
      nextcurse = cursedraw[k+1]
   elseif string.findPattern(cursedraw[k],"instill") then
      nextinstill = cursedraw[k+3]
   elseif string.findPattern(cursedraw[k],"moon") then
      nextmoon = cursedraw[k+3]
   elseif string.findPattern(cursedraw[k],"deadeyes") then
      nextcurse = cursedraw[k+2]
      nextcurse2 = cursedraw[k+3]
   elseif string.findPattern(cursedraw[k],"imbibe") then
      imbibedraw = cursedraw[k+1]
   elseif string.findPattern(cursedraw[k],"truewrack") then
      alchemisttruewrack = cursedraw[k+2]
      alchemisttruewracktwo = cursedraw[k+3]
	 elseif string.findPattern(cursedraw[k],"wrack") then
      alchemistwrack = cursedraw[k+2]
   end
end
if table.contains(cursedraw,"combo") and ak.MonkType() ~= "Tekura" then
	ak.shikudo.AliasSplit(cursedraw)
end





	
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Alias \"([\w'\-]+)\" will now execute\: \"(.*)\"</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ran Off SS Split</name>
							<script>if matches[2] == "OATTACK" then
	ak.queue.eqbal = {}
	ak.queue.sent = {}
	return
end

local cursedraw = matches[2]:lower()
cursedraw = string.gsub(cursedraw, "|", " ")


cursedraw = cursedraw:split(" ")
for k,v in pairs(cursedraw) do
   if string.findPattern(cursedraw[k],"overcharge") then
      affstrack.overcharge = true
   elseif string.findPattern(cursedraw[k],"relapse") then
      invoked = cursedraw[k+1]
   elseif string.findPattern(cursedraw[k],"invoke") then
      invoked = cursedraw[k+2]
   elseif string.findPattern(cursedraw[k],"impurity") then
      nextcurse = cursedraw[k+1]
   elseif string.findPattern(cursedraw[k],"instill") then
      nextinstill = cursedraw[k+3]
   elseif string.findPattern(cursedraw[k],"moon") then
      nextmoon = cursedraw[k+3]
   elseif string.findPattern(cursedraw[k],"deadeyes") then
      nextcurse = cursedraw[k+2]
      nextcurse2 = cursedraw[k+3]
   elseif string.findPattern(cursedraw[k],"imbibe") then
      imbibedraw = cursedraw[k+1]
   elseif string.findPattern(cursedraw[k],"truewrack") then
      alchemisttruewrack = cursedraw[k+2]
      alchemisttruewracktwo = cursedraw[k+3]
	 elseif string.findPattern(cursedraw[k],"wrack") then
      alchemistwrack = cursedraw[k+2]
   end
end
if table.contains(cursedraw,"combo") and ak.MonkType() ~= "Tekura" then
	ak.shikudo.AliasSplit(cursedraw)
end





</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Running queued [\w'\-]+ command\: (.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Queue Gagging</name>
							<script>ak.deleteFull()
--deleteFull()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>[System]: Added </string>
								<string>[System]: Running queued</string>
								<string>Your queues are already empty.</string>
								<string>Your eqbal queue is full.</string>
								<string>Your eqbal queue is already empty.</string>
								<string>[System]: Queued eqbal commands cleared.</string>
								<string>Cleared your queues.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>2</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Alias Dump</name>
							<script>--deleteFull()
local deletealla = {"boomer","mineralmainttwo","mineralmaint","oattack","oattackrl","oattackll","oattackra","oattackla","oattackt","oattackh","oattacklr","oattackll",
      "oattackar","oattackal","oattackch","oattackct","oattacktwo","oattackrltwo","oattacklltwo","oattackratwo","oattacklatwo",
      "oattackttwo","oattackhtwo","oattacklatwo","oattacklltwo","oattackartwo","oattackaltwo","oattackchtwo","oattackcttwo","oattackr"
}
if table.contains(deletealla,multimatches[2][2]) then
   ak.deleteFull()
	 ak.aliases.lastsend[multimatches[2][2]] = nil
   ak.aliases[multimatches[2][2]] = nil
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have cleared alias</string>
								<string>^You have cleared alias \"(.+)\"\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Add Clear Prompt Killer</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>1</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>[System]: Queued eqbal commands cleared.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Secondary</name>
								<script>tempLineTrigger(1,1,[[
   if isPrompt() then
      deleteLine()
   end
]])

</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>[System]: Added</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Misc</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tumble start</name>
							<script>if IsTargetted(matches[2]) then
   ak.tumbling = matches[3]
	 tempTimer(4, [[ak.tumbling = false]])
   ak.scoreup(matches[2])
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) begins to tumble towards the [\w'\-]+\.$</string>
								<string>^([\w'\-]+) begins to somersault towards the [\w'\-]+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tumble end</name>
							<script>if IsTargetted(matches[2]) then
   ak.tumbling = false
	 ak.scoreup(matches[2])
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) tumbles out to the ([\w'\-]+)\.$</string>
								<string>^([\w'\-]+)'s somersault takes (?:her|him) out of the room to the [\w'\-]+\.$</string>
								<string>^The discordant sound of your song causes ([\w'\-]+) to lose concentration, ruining their movement attempt\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Trait Gag Out</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Begin</name>
								<script>ak.deleteFull()
ak.expertdiagnose = false
ak.contemplator = false
ak.healthinspector = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Racial\: .*$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Traits Parse</name>
								<script>ak.deleteFull()
if matches[3] then
   --display(matches[3])
   if matches[3] == "Quick-witted             " then
      ak.balancemodifier = "quickwitted"
   elseif string.find(matches[3],"Nimble") then
      ak.balancemodifier = "nimble"
   elseif string.find(matches[3],"Expert Diagnoser") then
      --ak.expertdiagnose = true
   elseif string.find(matches[3],"Mind Warden") then
      ak.contemplator = true
	 elseif string.find(matches[3],"Health Inspector") then
	    ak.healthinspector = true
   end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>----------------------------------------------------------------------</string>
									<string>^Level (\d+)\: (.+)\s+$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Trait Ending</name>
								<script>ak.deleteFull()
disableTrigger("Trait Gag Out")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Key: Major Trait  Minor Trait</string>
									<string>----------------------------------------------------------------------Key: Major Trait  Minor Trait</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Class Changed(gmcp)</name>
						<script>ak.classenable()
if wsys then  
   monkenemy = {}
   if gmcp.Char.Status.class ~= "Monk" or gmcp.Char.Status.race:match("Dragon") then
      wsys.monkstance = false
   end 
   if ndba and gmcp.Char.Status.class ~= "Monk" then 
      enemylist = enemylist or {}
      if #enemylist &gt; 0 then
         for i = 1, #enemylist do
            if ndba.isashtani(enemylist[i]) then
               send("unenemy "..enemylist[i])
               table.insert(monkenemy, enemylist[i])
            end   
         end
      end
   end
end
enableTrigger("Trait Gag Out")
send("trait list known")
disableTrigger("Class Changed(gmcp)")
enableTrigger("Class Changed Prompt Lock")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Your draconic form melts away, leaving you suddenly weaker and more vulnerable.$</string>
							<string>^Your race is now that of </string>
							<string>^With an ear-splitting roar, you rear back your draconic head and scream out your triumph.$</string>
							<string>^Reveling in your total mastery of the form, you beat your mighty wings, throw your massive head back</string>
							<string>^Your last login was from domain:</string>
							<string>You are not in Dragon form.</string>
							<string>You already maintain the form of the Dragon.</string>
							<string>You are now a member of the</string>
							<string>^You are already in .* form\.$</string>
							<string>^You have switched to the .* specialisation\.$</string>
							<string>On and on, your soul cascades upon the currents that now sustain your form. </string>
							<string>With a cursory thought, you still your clamorous heart and arise whole, gazing out from within your</string>
							<string>Your elemental might has already overtaken your form.</string>
							<string>You pray to the spirits of the fallen for a fresh chance at life, and are reincarnatedinto </string>
							<string>You switch your martial school to that of Shikudo.</string>
							<string>With a victorious roar, you bellow your triumph into the firmament.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>2</integer>
							<integer>2</integer>
							<integer>3</integer>
							<integer>2</integer>
							<integer>3</integer>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Class Changed Prompt Lock</name>
						<script>enableTrigger("Class Changed(gmcp)")
disableTrigger("Class Changed Prompt Lock")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string></string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>7</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dragon Classlock Correction</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	ak.dragonfied()
end
--Blasts Not Added
--Strip Not Added
--Summons have Red,Black,Silver</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) lets out a great keening\, casting the impurities from (?:her|his) form\.$</string>
							<string>^([\w'\-]+)\'s eyes begin to blaze dangerously\.$</string>
							<string>^([\w'\-]+) completes [\w'\-]+ transformation and\, with an ear\-splitting roar\, throws back [\w'\-]+ draconic head and screams out [\w'\-]+ triumph\.$</string>
							<string>^([\w'\-]+) growls almost inaudibly\.$</string>
							<string>^With a low rumbling from deep within [\w'\-]+ belly\, ([\w'\-]+) utters a guttural chant\. [\w'\-]+ skin ripples as a web of crackling magical energy dances like fire across its surface\, settling to solidify into a flexible\, translucent shell\.$</string>
							<string>^([\w'\-]+) lunges at ([\w'\-]+) with long\, flashing ([\w'\-]+) extended\, tearing into (his|her) (right leg|left leg|right arm|left arm|head|torso) ruthlessly\.$</string>
							<string>^([\w'\-]+) lunges forward with long\, flashing ([\w'\-]+) extended\, tearing down to the bones of your (right leg|left leg|right arm|left arm|head|torso)\.$</string>
							<string>^Gritting [\w'\-]+ glistening teeth into a rictus grin\, ([\w'\-]+) emits a low rumble as [\w'\-]+ flexes [\w'\-]+ rippling muscles\.$</string>
							<string>^([\w'\-]+) turns to fix [\w'\-]+ gaze upon you\, and you feel your heart increase its palpitations as a low keening echoes from [\w'\-]+ throat\.$</string>
							<string>^Drawing an enormous breath\, ([\w'\-]+) exhales\, expelling a gale of wind with such force that you are knocked over\.$</string>
							<string>^([\w'\-]+) fixes [\w'\-]+ gaze upon [\w'\-]+\, swaying slowly as [\w'\-]+ begins a low keening\.$</string>
							<string>^Drawing an enormous breath\, ([\w'\-]+) exhales\, expelling a gale of wind with such force that [\w'\-]+ is knocked over\.$</string>
							<string>^([\w'\-]+) crushes [\w'\-]+ between [\w'\-]+ massive jaws\, jerking [\w'\-]+ back and forth like a rag doll\.$</string>
							<string>^([\w'\-]+) snaps [\w'\-]+ massive jaws close around you\, jerking you back and forth with agonising strength\.$</string>
							<string>^([\w'\-]+)'s powerful chest expands as [\w'\-]+ takes a mighty breath\, loosing a shrill volley of [\w'\-]+\-infused vapour into the air\.$</string>
							<string>^An ominous feeling descends upon you as ([\w'\-]+) turns [\w'\-]+ gaze upon you\.$</string>
							<string>^([\w'\-]+)\'s nostrils flare wildly with a great rush of air as [\w'\-]+ sinuous body contracts and [\w'\-]+ mouth opens wide to emit a rippling\, unbroken roar that reverberates through your body and blasts your eardrums into oblivion\.$</string>
							<string>^([\w'\-]+) draws himself up to [\w'\-]+ full height\, staring imperiously down at [\w'\-]+\.$</string>
							<string>^([\w'\-]+)\'s nostrils flare wildly with a great rush of air as [\w'\-]+ sinuous body contracts and [\w'\-]+ mouth opens wide to emit a rippling\, unbroken roar at ([\w'\-]+)\.$</string>
							<string>^([\w'\-]+) rips into [\w'\-]+ with [\w'\-]+ massive\, deadly claws\.$</string>
							<string>^Lunging forward with long\, flashing claws extended\, ([\w'\-]+) tears into [\w'\-]+ ruthlessly\.$</string>
							<string>^A deathly calm descends upon your surroundings as ([\w'\-]+) draws himself up regally\, eyes gleaming with murderous intent\.$</string>
							<string>^([\w'\-]+) rises back on [\w'\-]+ hind legs\, more than doubling in height as [\w'\-]+ towers above you\. The groundshakes violently as [\w'\-]+ slams [\w'\-]+ feet back down\, recklessly crushing everyone in [\w'\-]+ path\.$</string>
							<string>^([\w'\-]+)\'s tail narrowly misses you as it whips in a circle\.$</string>
							<string>^You are knocked forcefully off your feet by the impact of ([\w'\-]+)\'s huge tail\.$</string>
							<string>^[\w'\-]+ is knocked forcefully off [\w'\-]+ feet by the impact of ([\w'\-]+)\'s huge tail\.$</string>
							<string>^Your body trembles as ([\w'\-]+) invokes a dramatic chant in the dragon tongue\. As [\w'\-]+ voice resonates\, you are assailed by a wave of magical energy that threatens to tear your skin apart\.$</string>
							<string>^A resonant vibration emanates from ([\w'\-]+) as [\w'\-]+ invokes a rumbling\, sonorous chant in the dragon tongue\. As the sound increases\, ([\w'\-]+) jerks violently\, [\w'\-]+ body wracked by an unseen force\.$</string>
							<string>^[\w'\-]+\'s form seems suddenly weighted down as ([\w'\-]+) lays the ancient Dragoncurse upon [\w'\-]+\.$</string>
							<string>^A heavy burden descends upon your soul as ([\w'\-]+) lays the ancient Dragoncurse upon you\.$</string>
							<string>^([\w'\-]+) whips [\w'\-]+ tail around\, striking the wall to the [\w'\-]+ with a powerful blow\. A network of fine fractures spreads over its surface before it suddenly collapses\.$</string>
							<string>^([\w'\-]+) whips [\w'\-]+ tail around\, spinning in a wild circle\, in what you can only assume to be some draconic mating ritual\.$</string>
							<string>^([\w'\-]+)\'s great form shudders briefly\.$</string>
							<string>^([\w'\-]+) flicks [\w'\-]+ tail at you\, effortlessly shattering your magical shield\.$</string>
							<string>^([\w'\-]+) dismissively flicks [\w'\-]+ tail at [\w'\-]+\, annihilating the magical shield surrounding [\w'\-]+ with casual ease\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Elemental Classlock Correction</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Earth Lord</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	ak.elementalfied("Earth")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The magma\-wreathed form of ([\w'\-]+) smashes into you\, crushing you beneath [\w'\-]+ massive bulk and searing you to the bone\.$</string>
								<string>^With a terrible roar ([\w'\-]+) whips a colossal fist at your .*\.$</string>
								<string>^You feel bones grinding against one another as the fist of ([\w'\-]+) smashes into your .* with pulverising force\.$</string>
								<string>^Magma erupts from the cracks between the plates covering ([\w'\-]+)\, cloaking [\w'\-]+ in a churning shroud of molten stone\.$</string>
								<string>^The stone fist of ([\w'\-]+) crunches into your .*\.$</string>
								<string>^The rock plates covering the form of ([\w'\-]+) rapidly thicken\, sharp spires of stone rapidly sprouting from them\.$</string>
								<string>^Cloaked in a shifting mantle of molten stone\, ([\w'\-]+) charges in from the .* with a deafening roar\.$</string>
								<string>^Magma ceases to bubble up from beneath the outer strata of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>0</integer>
								<integer>0</integer>
								<integer>0</integer>
								<integer>0</integer>
								<integer>0</integer>
								<integer>0</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Fire Lord</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	ak.elementalfied("Fire")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The fiery outer layers of ([\w'\-]+) fall away\, turning to dust as they drift to the ground\. Though ([\w'\-]+)seems diminished for an instant\, [\w'\-]+ fires soon rage with fury once more\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Mudlet Mapper</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Have to swim</name>
					<script>mmp.swim()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>There's water ahead of you. You'll have to swim in that direction to make it through.</string>
						<string>There's water ahead of you. You'll have to swim in that direction to make it </string>
						<string>There's water ahead of you. You'll have to SWIM </string>
						<string>You'll have to swim to make it through the water in that direction.</string>
						<string>The water is too deep for you to walk that way, you must swim.</string>
						<string>You'll have to SWIM</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
						<integer>2</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Rubble at the exit</name>
					<script>mmp.customwalkdelay(2)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You begin to slowly clamber over the rubble that blocks your way.</string>
						<string>You begin to slowly clamber over a pile of rubble that blocks your way.</string>
						<string>You start plodding carefully across the constructed trenches.</string>
						<string>You struggle to climb over the snow drift in your way.</string>
						<string>You struggle to climb over the sand dune in your way.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Too quick</name>
					<script>if mmp.autowalking then
  mmp.hasty = true
  mmp.setmovetimer(0.5)
  mmp.deleteLineP()
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>99</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Now now, don't be so hasty!</string>
						<string>You can not move that fast!</string>
						<string>You cannot move that fast, slow down!</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Hobbling</name>
					<script>mmp.customwalkdelay(2)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You slowly hobble</string>
						<string>The shot in your leg slows you as you hobble away.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Frozen</name>
					<script>mmp.customwalkdelay(2)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You begin moving your frozen body slowly</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>People here</name>
					<script>mmp.pdb_lastupdate = {}</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You see the following people here:</string>
						<string>1</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>5</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Person</name>
						<script>for i = 1, #matches, 2 do
  mmp.pdb[matches[i]] = mmp.currentroomname
  mmp.pdb_lastupdate[matches[i]] = true
  raiseEvent("mmapper updated pdb")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#aaff00</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>([A-Z][a-z]+)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Retardation/aeon walk delay</name>
					<script>mmp.customwalkdelay(2)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You move sluggishly into action.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Scent (Achaea+Imperian)</name>
					<script>mmp.roomEcho(matches[2]) </script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You detect traces of scent from (.+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Alertness (Achaea+Imperian)</name>
					<script>mmp.alertness = mmp.alertness or {}
local alertness = mmp.alertness

local roomexists, getRoomName, anytolong, matches, deleteLine = mmp.roomexists, getRoomName, mmp.anytolong, matches, deleteLine

if mmp.debug then
 mmp.alertnessTime = mmp.alertnessTime or createStopWatch()
 startStopWatch(mmp.alertnessTime)
end

if matches[4] ~= "location" then
  local longexitname = matches[4]
  alertness[longexitname] = alertness[longexitname] or {}
  alertness[longexitname][#alertness[longexitname]+1] = matches[2]
  deleteLine()
elseif matches[4] == "location" then
  local currentroomname = mmp.cleanroomname(mmp.currentroomname)
  if matches[3] == currentroomname then
    alertness.here = alertness.here or {}
    alertness.here[#alertness.here+1] = matches[2]
    deleteLine()
  end
end


if not mmp.firstAlert then
	mmp.firstAlert = true
	mmp.pdb_lastupdate = {}
end

mmp.pdb[matches[2]] = matches[3]
mmp.pdb_lastupdate[matches[2]] = true

enableTrigger"Mudlet Mapper prompt trigger"

if mmp.debug then mmp.echo("alertness trigger for "..matches[2].." took "..stopStopWatch(mmp.alertnessTime).."s.") end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Your enhanced senses inform you that (\w+) has entered (.+?)(?:, to the| at your) (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Mudlet Mapper prompt trigger</name>
					<script>-- to be enabled by functions that need it and disabled after it's done. Sort of like a cheap prompttrigger from Svo.
mmp.firstAlert = false
-- handle alertness
if mmp.alertness and next(mmp.alertness) then

  local dirs = {}
  for direction, _ in pairs(mmp.alertness) do dirs[#dirs+1] = direction end
  local people = select(2, next(mmp.alertness)) or {}

  moveCursor(0, getLineNumber())

  if ndb then
    local getcolor = ndb.getcolor
    for i = 1, #people do
      people[i] = getcolor(people[i])..people[i]
    end
  end

  cinsertText("&lt;red&gt;[&lt;cyan&gt;" .. table.concat(dirs, ', ') .. " &lt;red&gt;-"..(#dirs &gt; 1 and ("\n  ") or '').." &lt;white&gt;" .. ((svo and svo.concatand) and svo.concatand(people) or table.concat(people, ', ')) .. "&lt;cyan&gt; ("..#people..")&lt;red&gt;]\n")

  moveCursorEnd()

  mmp.alertness = nil

  raiseEvent("mmapper updated pdb")
end

-- reset names we last seen, so scripts can be efficient
-- not finished yet
--if next(mmp.pdb_lastupdate) then
--  mmp.pdb_lastupdate = {}
--end

disableTrigger"Mudlet Mapper prompt trigger"</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string></string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>7</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Wormhole</name>
					<script>mmp.customwalkdelay(4)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You hurl yourself forwards through the air, and sure enough a swirling vortex of colours springs into existence to swallow you.</string>
						<string>You reach out with the vibrating stick to probe for a wormhole, and as it connects with one, you are sucked through.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>No wormhole</name>
					<script>if mmp.speedWalkDir and mmp.speedWalkDir[speedWalkCounter] and mmp.speedWalkDir[speedWalkCounter]=="worm warp" then
  mmp.echo("Missing wormhole detected, locking wormhole and trying new path...")

  lockSpecialExit(mmp.currentroom, mmp.speedWalkPath[speedWalkCounter], "worm warp", true)

  local destination = mmp.speedWalkPath[#mmp.speedWalkPath]

  mmp.stop()

  mmp.clearpathcache() -- clear cache so mmp.getPath accounts for the new way

  if not mmp.getPath(mmp.currentroom, destination) then
    mmp.echo(string.format("Don't know how to get to %d (%s) anymore :( Move into a room we know of to continue", destination, getRoomName(destination)))
  else
    mmp.gotoRoom(destination)
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>There is no wormhole here.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Achaea</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Login</name>
						<script>raiseEvent("mmp logged in", "Achaea")
mmp.game = "achaea"
mmp.echo("We're connected to Achaea.")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Password correct. Welcome to Achaea.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Farsee initial</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You see that </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Local farsee</name>
							<script>mmp.locateAndEcho(matches[3], matches[2], gmcp.Room.Info.area)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You see that (\w+) is at (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Veil farsee</name>
							<script>mmp.locateAndEcho(matches[3], matches[2], matches[4])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You see that (\w+) is located at (.+) in (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Entering wilderness</name>
						<script>mmp.customwalkdelay(6)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>99</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You begin to look for that place to enter the wilderness. It's around here somewhere!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Icon enter/leave</name>
						<script>mmp.customwalkdelay(10)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You reach out and touch a powerful Icon. For a moment, nothing happens, but soon you feel a humming deep inside you.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Underworld root</name>
						<script>mmp.customwalkdelay(2)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>As you touch a huge grey root, you feel dark energies coursing up your hand and throughout your body.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Mindsense</name>
						<script>mmp.locateAndEchoSide(multimatches[2][3], multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You seek out the mind of</string>
							<string>^You seek out the mind of (\w+) and an image of (.+) appears in your mind\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Destroyed room</name>
						<script>mmp.customwalkdelay(3)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your movement is slowed as you move through the decimated remains.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Underworld entry</name>
						<script>mmp.customwalkdelay(3)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A huge grey root numbs your fingertips as you reach out to touch it.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Angel sense</name>
						<script>local t = mmp.getnums(multimatches[2][2], true)
if not t then return end
if #t == 1 then
	cecho(" &lt;orange_red&gt;("..mmp.cleanAreaName(mmp.areatabler[getRoomArea(t[1])])..")")
else
	cecho(" &lt;orange_red&gt;Maybe ("..mmp.cleanAreaName(mmp.areatabler[getRoomArea(t[1])])..")")
end
echo " "; mmp.echonums(multimatches[2][2])

mmp.temp_room = multimatches[2][2]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>100</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your guardian angel senses </string>
							<string>^Your guardian angel senses .+? at (.+?),</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Each person</name>
							<script>mmp.pdb[matches[2]] = mmp.temp_room
mmp.pdb_lastupdate[matches[2]] = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string> is with (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Stop</name>
							<script>setTriggerStayOpen("Angel sense", 0)
mmp.temp_room = nil
raiseEvent("mmapper updated pdb")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>99</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dragonsense</name>
						<script>mmp.locateAndEcho(multimatches[2][3], multimatches[2][2], multimatches[2][4])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Tapping into the unfathomable depths of your power, you sense that</string>
							<string>Tapping into the unfathomable depths of your power, you sense that (\w+) is at (.+), in (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Defilement</name>
						<script>mmp.locateAndEchoSide(multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(Order): </string>
							<string>^\(Order\): \w+'s Herald says, "A shrine is being defiled at (.+)!"$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Defiled</name>
						<script>mmp.locateAndEcho(multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(Order):</string>
							<string>^\(Order\): \w+'s Herald says, "A shrine has been destroyed at (.+)!"$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>View</name>
						<script>mmp.locateAndEcho(multimatches[2][3], multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You see</string>
							<string>^You see (\w+) at (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Elementalism scry</name>
						<script>mmp.locateAndEcho(multimatches[2][3], multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You create a pool of water in the air in front of you and look through it, sensing</string>
							<string>You create a pool of water in the air in front of you and look through it, sensing (\w+) at (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Parse wholist</name>
						<script>-- this trigger should be off by default. It's inefficient and gets auto-enabled
-- when you check 'who'
mmp.locateAndEcho(matches[3], matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>99</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) +\((.+)\)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Piety on astralform</name>
						<script>mmp.customwalkdelay(3)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A rite of piety slows your movement as it pulls at your ephemeral body.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Angel/Demon presences</name>
						<script>disableTrigger("Angel sense")
disableTrigger("Demon sense")
mmp.pdb_lastupdate = {}</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>100</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You bid your guardian angel to seek out life presences nearby.</string>
							<string>You bid your Baalzadeen to seek out life presences nearby.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Each person</name>
							<script>mmp.locateAndEchoSide(matches[3], matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Your guardian angel senses (\w+) at (.+?),</string>
								<string>^Your Baalzadeen senses (\w+) at (.+?),</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Stop (angel presences)</name>
							<script>setTriggerStayOpen("Angel/Demon presences", 0)
enableTrigger("Angel sense")
enableTrigger("Demon sense")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Demon sense</name>
						<script>mmp.locateAndEchoSide(multimatches[2][3], multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your Baalzadeen senses </string>
							<string>^Your Baalzadeen senses (\w+) at (.+), on a health of</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Annwyn circle</name>
						<script>mmp.customwalkdelay(12)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The melody of a strange song rises unbidden to your lips as you skip around the circle of mushrooms.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Scrying bowl</name>
						<script>mmp.locateAndEcho(multimatches[3][3], multimatches[2][2], multimatches[3][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You dip your fingers into the cool water of the bowl, willing it to reveal the location of</string>
							<string>^You dip your fingers into the cool water of the bowl, willing it to reveal the location of (\w+)\.$</string>
							<string>^An image of (.+) appears reflected within the bowl, shifting with the rippling water to display (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Occultist entities</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>1000</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The following entities reside on the Prime Material plane:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Each doppleganger</name>
							<script>mmp.locateAndEcho(matches[3], matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) is at (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Stop</name>
							<script>setTriggerStayOpen("Occultist entities", 0)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Party traces/locaters</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(Party):</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>regex (party locate)</name>
							<script>mmp.locateAndEcho(matches[3], matches[2], matches[4])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\(Party\): \w+ says, "(\w+) moved to (.+)\."$</string>
								<string>^\(Party\): \w+ says, "(\w+) is at (.+), in (.+)\."</string>
								<string>^\(Party\): \w+ says, "Trace: (\w+) moved to (.+)\."</string>
								<string>^\(Party\): \w+ says, "(\w+) - (.+), in (.+)\."$</string>
								<string>^\(Party\): \w+ says, "(\w+) is at (.+) \(.+\)\."</string>
								<string>^\(Party\): \w+ says, "Trace: (\w+) entered (.+) in (.+)\."</string>
								<string>^\(Party\): \w+ says, "Trace: (\w+) entered (.+)\."</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Arena event (Achaea)</name>
						<script>mmp.pdb_lastupdate = {}</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>3</conditonLineDelta>
						<mStayOpen>1000</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Current event</string>
							<string>Player               Location</string>
							<string>----------------------------------------------------------------------</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Each person</name>
							<script>echo((" "):rep(60-#line))
echo"(" mmp.echonums(matches[3]) echo")"

mmp.pdb[matches[2]] = matches[3]
mmp.pdb_lastupdate[matches[2]] = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) +(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Stop (arena event)</name>
							<script>setTriggerStayOpen("Arena event (Achaea)", 0)

raiseEvent("mmapper updated pdb")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Angel trace</name>
						<script>selectCurrentLine() replace("")
cecho("&lt;grey&gt;Angel trace: &lt;a_darkcyan&gt;"..multimatches[2][2].."&lt;grey&gt; moved to &lt;a_darkcyan&gt;" .. multimatches[2][3])
mmp.locateAndEchoInternal(multimatches[2][3], multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your guardian angel reports that</string>
							<string>^Your guardian angel reports that (\w+) has moved to (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>KoTH (mudlet mapper)</name>
						<script>mmp.pdb_lastupdate = {}</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>5</conditonLineDelta>
						<mStayOpen>1000</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Current event: King of the Hill</string>
							<string>5</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>5</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Each person</name>
							<script>echo((" "):rep(60-#line))
echo"(" mmp.echonums(matches[3]) echo")"

mmp.pdb[matches[2]] = matches[3]
mmp.pdb_lastupdate[matches[2]] = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) .+? ([A-Z][a-z ]+?)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Stop (koth)</name>
							<script>setTriggerStayOpen("KoTH (mudlet mapper)", 0)

raiseEvent("mmapper updated pdb")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fullsense (mudlet mapper)</name>
						<script>mmp.pdb_lastupdate = {}</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>100</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You seek out all mental presences within your reach:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Each person</name>
							<script>echo((" "):rep(60-#line))
echo"(" mmp.echonums(matches[3]) echo")"

mmp.pdb[matches[2]] = matches[3]
mmp.pdb_lastupdate[matches[2]] = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You sense (\w+) at (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Stop</name>
							<script>setTriggerStayOpen("Fullsense (mudlet mapper)", 0)

raiseEvent("mmapper updated pdb")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Alchemist ether seek</name>
						<script>mmp.locateAndEcho(multimatches[2][3], multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You reach out into the ether, folding it aside to reveal</string>
							<string>^You reach out into the ether, folding it aside to reveal (\w+)\. As you peer into the opening, the image of (.+) swims into view, then fades away as the ether seeps back into place\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Oppression Predator</name>
						<script>mmp.locateAndEchoSide(multimatches[3][3], multimatches[3][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your oppressive gaze sweeps across the land, seeking out your prey.</string>
							<string>1</string>
							<string>^You see that (\w+) (?:conquers|) at (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>5</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Allsight</name>
						<script>mmp.locateAndEcho(multimatches[2][3], multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Allsight:</string>
							<string>^Allsight: (\w+) enters (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Polished skull locater</name>
						<script>mmp.locateAndEcho(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^An image of (.*) appears in your mind\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Downed shrine in Order logs</name>
						<script>local room = multimatches[2][2]

mmp.locateAndEcho(room)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>- A shrine at</string>
							<string>- A shrine at '(.+)' was destroyed\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>chrono divine</name>
						<script>mmp.locateAndEcho(multimatches[3][2], multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Tapping into the timelines, you trace them to locate</string>
							<string>^Tapping into the timelines, you trace them to locate (\w+)\.$</string>
							<string>^You determine that s?he is at (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shadow preeminence</name>
						<script>mmp.pdb_lastupdate = {}</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>100</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You cast your will out across the land, surveying all that stand within shadow's embrace.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Each person</name>
							<script>mmp.locateAndEchoSide(matches[3], matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You sense (\w+) at (.+?)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>prompt</name>
							<script>setTriggerStayOpen("Shadow preeminence", 0)
enableTrigger("Shadow preeminence")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Directory - Catch shop entry</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^((?:\d+)(?:mc|gp|cr).+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Make shop name clickable</name>
							<script>selectCaptureGroup(2)
replace("")
rooms = mmp.searchRoomExact(matches[2])
local roomnum=next(rooms,nil)
if roomnum == nil or next(rooms, roomnum) then
  cecho("&lt;white&gt;(&lt;sky_blue&gt;" .. matches[2] .. "&lt;white&gt;)")
else
  local r, g, b = unpack(color_table["cyan"])
  cecho("&lt;white&gt;(")
  setTextFormat("", 0, 0, 0, r, g, b, false, true, false)
  echoLink(matches[2], [[mmp.gotoRoom(]] .. roomnum .. [[)]], "Walk to " .. matches[2] .. ".", true)
  cecho("&lt;white&gt;)")
  resetFormat()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^.{45} (.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Aero Whisper</name>
						<script>mmp.locateAndEcho(matches[3], matches[2], matches[4])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Whispering a request to the omnipresent winds, you sense that (\w+) is at (.+), in (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Soulmark Scry</name>
						<script>mmp.locateAndEcho(matches[3], matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Questing for the mark placed upon h(?:is|er) soul, you determine that (\w+) can be found at (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>City has orb of confinement</name>
						<script> -- disabled since the orb is now an rng chance and not a 100% blocker

local orbTable = mmp.getAchaeaOrbTable()
local areaID = getRoomArea(mmp.currentroom) or 0
if areaID == 0 or mmp.game ~= "achaea" then
  return
end
--don't know where we are
for city, areas in pairs(orbTable) do
  if table.contains(areas, areaID) then
    if not mmp.settings["orb" .. city] then
      mmp.settings:setOption("orb" .. city, true)
      mmp.inside = true
      raiseEvent("mmapper went inside")
      if mmp.autowalking then
        mmp.gotoRoom(mmp.speedWalkPath[#mmp.speedWalkPath])
      end
    end
    return
  end
end
if mmp.autowalking then
  mmp.stop()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A shimmering orb covers the city</string>
							<string>A shimmering orb covers the city, preventing you from rising to the skies.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Forestwatch</name>
						<script>mmp.locateAndEcho(matches[3], matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) has entered the forest at (.+)\.$</string>
							<string>^(\w+) leaves the forest from (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Grove Eyes</name>
						<script>mmp.pdb_lastupdate = {}</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>100</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You detect the following people disturbing the tranquility of the forest.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Each person</name>
							<script>mmp.locateAndEchoSide(matches[3], matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) at (.+?)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>prompt</name>
							<script>setTriggerStayOpen("Grove Eyes", 0)
enableTrigger("Grove Eyes")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Aetolia</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Login</name>
						<script>raiseEvent("mmp logged in", "Aetolia")
mmp.game = "aetolia"</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>99</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Password correct. Welcome to Aetolia.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Asteria</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Login</name>
						<script>raiseEvent("mmp logged in", "Asteria")
mmp.game = "asteria"</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>99</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Welcome to Asteria.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Dragonswords</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Login</name>
						<script>raiseEvent("mmp logged in", "dragonswords")
mmp.game = "dragonswords"
mmp.echo("We're connected to Dragon Swords.")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Welcome to Dragon Swords.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Lusternia</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Login</name>
						<script>raiseEvent("mmp logged in", "Lusternia")
mmp.game = "lusternia"</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>5</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>                        A G E  O F  A S C E N S I O N</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>mmp Lusternia Scent</name>
						<script>mmp.tempscent = {}
mmp.pdb_lastupdate = {}</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>99</conditonLineDelta>
						<mStayOpen>100</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You scent at the air, your skilled nose picking up the faint traces of others in the surrounding area.</string>
							<string>You snort and snuffle at the air, sensing through a ridiculous pig nose upon your face the faint traces of others in the surrounding area.</string>
							<string>A pert little nose takes in a delicate whiff of your surroundings, sensing the faint traces of others in the nearby area.</string>
							<string>You tilt back your head and inhale deeply through your nose, the whiskers of a wolf's snout upon your face twitching as you sense the faint traces of others in the surrounding area.</string>
							<string>You flutter your nose at the air, sensing through a cute little rabbit nose upon your face the faint traces of others in the surrounding area.</string>
							<string>You sniff disdainfully at the air with a snobby snoot, wrinkling your nose as you sense the faint traces of others in the nearby area.</string>
							<string>Your snout twitches and trembles at the air, sensing through a striped badger nose upon your face the faint traces of others in the surrounding area.</string>
							<string>You twitch your snout and scent the air, sensing through a scaled fink nose upon your face the faint traces of others in the surrounding area.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Got line</name>
							<script>--deleteLine()

selectString(line, 1) replace""

-- get the name
cecho("&lt;green&gt;"..matches[2].."&lt;reset&gt;: ")

-- ids
mmp.echonums(matches[3])

-- pad spaces so we have aligned roomname
echo(string.rep(" ", 25 - #getCurrentLine()))

-- and finally, the roomname
echo(matches[3])


if mmp.tempscent[matches[3]] then
	mmp.tempscent[matches[3]][#mmp.tempscent[matches[3]]+1] = matches[2]
else
	mmp.tempscent[matches[3]] = {matches[2]}
end

-- save in our person tracking db
mmp.pdb[matches[2]] = matches[3]
mmp.pdb_lastupdate[matches[2]] = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You make out the scent of (\w+) coming from (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Stop capturing</name>
							<script>setTriggerStayOpen("mmp Lusternia Scent", 0)

--[[for area, names in pairs(mmp.tempscent) do
	for _, name in ipairs(names) do

-- get the name
cecho("\n&lt;green&gt;"..name.."&lt;reset&gt;: ")

-- ids
mmp.echonums(area)

-- pad spaces so we have aligned roomname
echo(string.rep(" ", 25))

-- and finally, the roomname
echo(area)
end
end]]


raiseEvent("mmapper updated pdb")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>mmp Lusternia kaleidoscope</name>
						<script>mmp.tempscent = {}
mmp.pdb_lastupdate = {}

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>100</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You hold a kaleidoscopic telescope to your eye, you twist the end and stare intently through its twinkling surfaces.</string>
							<string>Through the glittering faceted planes, you see:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Got line</name>
							<script>local person, room = matches[2], matches[3]:trim()


selectString(line, 1) replace""

-- get the name
cecho("&lt;green&gt;"..person.."&lt;reset&gt;: ")

-- ids
--mmp.echonums()

-- pad spaces so we have aligned roomname
echo(string.rep(" ", 13 - #getCurrentLine()))

-- and finally, the roomname
echo(room)

mmp.locateAndEchoSide(room, person)


if mmp.tempscent[room] then
	mmp.tempscent[room][#mmp.tempscent[room]+1] = person
else
	mmp.tempscent[room] = {person}
end

-- save in our person tracking db
mmp.pdb[person] = room
mmp.pdb_lastupdate[person] = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) - ([^\(]+)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Stop capturing</name>
							<script>setTriggerStayOpen("mmp Lusternia kaleidoscope", 0)

--[[for area, names in pairs(mmp.tempscent) do
	for _, name in ipairs(names) do

-- get the name
cecho("\n&lt;green&gt;"..name.."&lt;reset&gt;: ")

-- ids
mmp.echonums(area)

-- pad spaces so we have aligned roomname
echo(string.rep(" ", 25))

-- and finally, the roomname
echo(area)
end
end]]


raiseEvent("mmapper updated pdb")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Deathsight</name>
						<script>mmp.locateAndEcho(multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You see the death occur at</string>
							<string>^You see the death occur at (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Wildnodes nodes</name>
						<script>mmp.locateAndEcho(matches[2]:sub(1,1):lower()..string.sub(matches[2], 2))</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>99</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(Planted\) Node \d+ - (.*)\.$</string>
							<string>^ +Node \d+ - (.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Window search</name>
						<script>mmp.locateAndEcho(matches[4], matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>39</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You open up a window in the cosmic fabric and search out (\w+). Through the cosmic window, you see (\w+) at (.+?)(?: \(.*\))?\.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Scry search</name>
						<script>mmp.locateAndEcho(multimatches[2][3], multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You rub .* and it begins to glow with a pulsating light\.$</string>
							<string>Within the enchanted item, an image forms of (\w+) at (.+?)(?: \(.*\))?\.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Map artefact</name>
						<script>mmp.gotoRoom(multimatches[4][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>3</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>As you inscribe the name of </string>
							<string>^As you inscribe the name of \w+ with a flourish, lines crawl across the surface of the map, centered upon (.*)\.$</string>
							<string>You see the following in detail:</string>
							<string>v(\d+)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
							<integer>3</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Masquerade ball snowglobe</name>
						<script>mmp.gotoRoom(multimatches[3][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>2</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You trace the name of \w+ on the surface of a splendid masquerade ball snowglobe, and then shake the globe vigorously\. As the swirling particles within clear, you see the vague outline of .+?\.$</string>
							<string>You see the following in detail:</string>
							<string>v(\d+)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>3</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>map scry</name>
						<script>mmp.locateAndEcho(multimatches[2][3], multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>As you inscribe the name of</string>
							<string>^As you inscribe the name of (\w+) with a flourish, lines crawl across the surface of the map, centered upon (.*)\.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>World events</name>
						<script>mmp.locateAndEcho(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The Staff of Ascension is at (.*)\.$</string>
							<string>^The Purple Hamster of Chaos is at (.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Seeing stone</name>
						<script>mmp.locateAndEcho(multimatches[3][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>3</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You gaze into a seeing stone.</string>
							<string>1</string>
							<string>^(.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>5</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Birdseye</name>
						<script>mmp.locateAndEcho(multimatches[2][3], multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>From your vantage point in the sky, your crow senses perceive that</string>
							<string>^From your vantage point in the sky, your crow senses perceive that (\w+) is (.*) within the vicinity of (.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bond look</name>
						<script>mmp.locateAndEcho(multimatches[3][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>3</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You look through the mind of (.*)\:$</string>
							<string>1</string>
							<string>^(.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>5</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pyramid probe #</name>
						<script>local t = mmp.getnums(multimatches[2][2])
if not t then return end

echo"\n"

if #t == 1 then
	cecho("&lt;red&gt;From your knowledge, that room is in &lt;orange_red&gt;"..mmp.areatabler[getRoomArea(t[1])].."&lt;red&gt;.")
else
	cecho("&lt;red&gt;From your knowledge, that room might be in &lt;orange_red&gt;"..mmp.areatabler[getRoomArea(t[1])].."&lt;red&gt;.")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You lightly caress a button on a paradox puzzle pyramid and suddenly a hazy image of</string>
							<string>^You lightly caress a button on a paradox puzzle pyramid and suddenly a hazy image of (.*) flashes momentarily in front of you\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pentagon probe #</name>
						<script>local t = mmp.getnums(multimatches[2][2])
if not t then return end

echo"\n"

if #t == 1 then
	cecho("&lt;red&gt;From your knowledge, that room is in &lt;orange_red&gt;"..mmp.areatabler[getRoomArea(t[1])].."&lt;red&gt;.")
else
	cecho("&lt;red&gt;From your knowledge, that room might be in &lt;orange_red&gt;"..mmp.areatabler[getRoomArea(t[1])].."&lt;red&gt;.")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You lightly caress a button on a paradox puzzle pentagon and suddenly a hazy image of</string>
							<string>^You lightly caress a button on a paradox puzzle pentagon and suddenly a hazy image of (.+) \(room \#\d+\) flashes momentarily in front of you\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pyramid port</name>
						<script>local t = mmp.getnums(multimatches[2][2])
if not t then return end

echo"\n"

if #t == 1 then
	cecho("&lt;red&gt;Porting to &lt;orange_red&gt;"..mmp.areatabler[getRoomArea(t[1])].."&lt;red&gt;.")
else
	cecho("&lt;red&gt;Might be porting to &lt;orange_red&gt;"..mmp.areatabler[getRoomArea(t[1])].."&lt;red&gt;.")
end	</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your hands become a blur as you twist and turn a paradox puzzle pyramid until each side is made up of the same colour, solving the puzzle in mere moments. Suddenly the image of</string>
							<string>^Your hands become a blur as you twist and turn a paradox puzzle pyramid until each side is made up of the same colour, solving the puzzle in mere moments. Suddenly the image of (.*) appears in the back of your mind and you feel drawn towards it\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pyramid probe</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>99</conditonLineDelta>
						<mStayOpen>4</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You lightly caress a few buttons on a paradox puzzle pyramid and suddenly a series of hazy images flashes momentarily in front of you.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Each location</name>
							<script>local t = mmp.getnums(matches[2])
if not t then return end

if #t == 1 then
	cecho("&lt;red&gt; (in &lt;orange_red&gt;"..mmp.areatabler[getRoomArea(t[1])].."&lt;red&gt;)")
else
	cecho("&lt;red&gt; (might be in &lt;orange_red&gt;"..mmp.areatabler[getRoomArea(t[1])].."&lt;red&gt;)")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Puzzle point \d+ is set to (.+) \(</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Astrology scry</name>
						<script>mmp.locateAndEcho(multimatches[2][3], multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Gazing up at the sky, you bring the image of</string>
							<string>^Gazing up at the sky, you bring the image of (\w+) into your mind's eye and overlay it on the constellations\. The power of the stars manifests as an image of (.+?) forms before your eyes\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Tierstone</name>
						<script>mmp.locateAndEcho(multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You gaze into a glittering tierstone.</string>
							<string>^\w+ is at (.+?) in (.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Quicksand</name>
						<script>mmp.customwalkdelay(4)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You struggle slowly through the quicksand as you move</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Gravity</name>
						<script>mmp.customwalkdelay(4)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The dragging force of a war shrine of</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Crow spy</name>
						<script>mmp.locateAndEcho(multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>An image of</string>
							<string>^An image of \w+ (?:entering|leaving) (.+?) appears in the centre of the nest\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Crow spy remote</name>
						<script>mmp.locateAndEcho(multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your nest projects into your head an image</string>
							<string>^Your nest projects into your head an image of \w+ (?:entering|exiting) (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Chemwood walk delay</name>
						<script>mmp.customwalkdelay(2)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You struggle to push through \w+'s thick, swirling mists\.$</string>
							<string>^You struggle to move with \w+'s amplified fields disrupting your muscular impulses, but you stumble determinedly in an effort to leave\.$</string>
							<string>^\w+'s whirling leaves harry you as you try to leave, slowing your egress\.$</string>
							<string>^You begin moving through the thick, swirling flurries of \w+'s spores\.$</string>
							<string>You stumble through the thick smog, coughing and sputtering as you try to find cleaner air.</string>
							<string>^You stumble around stupidly as \w+'s mind-dulling effluvia seeps into you, fighting against a strangely dull mind to make your legs take you out of here\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>3</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>City/commune shops menu</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>3</conditonLineDelta>
						<mStayOpen>500</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>[ Local shops selling</string>
							<string>3</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>5</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Shop</name>
							<script>local shop = line:sub(1, 25):trim()
if shop:sub(1,1) == '*' then return end

cecho("  &lt;orange_red&gt;(")
mmp.echonums(shop)
cecho("&lt;orange_red&gt;)")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Stop (city/commune shops menu)</name>
							<script>setTriggerStayOpen("City/commune shops menu", 0)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Rifts and Paths</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Successful transverse</name>
							<script>if mmp.game~= "lusternia" then return end
if validTransverse then
  mmp.registerTransverseExit()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You (place your hands on|reach out to) .+ and find the link to .+\. Pulsating energy flares throughout your field of vision, and you find yourself tumbling through the aether pathways\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Failed transverse</name>
							<script>if mmp.game~= "lusternia" then return end
mmp.clearTransverse()
validTransverse = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You cannot find a planar gate here.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Successful pathfind</name>
							<script>if mmp.game~= "lusternia" then return end
if validTransverse then
  mmp.clearPathfind()
  mmp.registerPathfind()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You squat down and narrow your eyes, finally finding a mystic pathway that twists and turns in the distance. Before it slips away, you dash forward and rush along its winding tracks.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>failed pathfind</name>
							<script>if mmp.game~= "lusternia" then return end
mmp.clearPathfind()
validTransverse = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You cannot find a pathway here.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Forced Movement</name>
						<script>if mmp.autowalking then
  mmp.hasty = true
  mmp.setmovetimer(0.5)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The soft ground around you suddenly gives way and you find yourself sliding down a muddy embankment, ending up in an undignified heap on the floor of a dark chamber.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Delayed bix movement.</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Teleport Delays</name>
							<script>mmp.customwalkdelay(10)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You run your fingers across the surface of .* and still your mind, preparing for the journey ahead.</string>
								<string>^You reach out and touch the \w+-facing landmark of the Compass of the Basin, and the spinning needle within fixes on that direction. The compass begins vibrating sympathetically with strands of aether\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Immediately retry on failed teleport</name>
							<script>if mmp.autowalking then
  mmp.customwalkdelay(0)
  mmp.move()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your action disrupts your concentration and you cease reaching out to harness</string>
								<string>You cease concentrating on traveling the planar paths.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Imperian</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>99</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Login</name>
						<script>raiseEvent("mmp logged in", "Imperian")
mmp.game = "imperian"</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Password correct. Welcome to Imperian.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Wormholes</name>
						<script>local room1 = mmp.roomEcho(multimatches[2][2])
local room2 = mmp.roomEcho(multimatches[2][3])
selectCurrentLine()
replace("")
mmp.echon("Stable wormhole between " .. room1)
mmp.roomEcho(room1)
echo(" and " .. room2)
mmp.roomEcho(room2)
echo(".\n")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You sense a stable wormhole between</string>
							<string>^You sense a stable wormhole between (.+?) and (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Personal wormholes</name>
						<script>selectCurrentLine()
replace("")
mmp.echon("Personal wormhole at " .. multimatches[2][2])
mmp.roomEcho(multimatches[2][2])
echo(". It is attached to " .. multimatches[2][3] .. ".\n")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You sense a personal wormhole at</string>
							<string>^You sense a personal wormhole at (.+). It is attached to (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Parse wholist</name>
						<script>selectCaptureGroup(2)
replace("")
mmp.roomEcho(matches[3])
 </script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>.+( \- [A-Z].+?\s*?) \- (.+)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Trap went off</name>
						<script>selectCurrentLine()
replace("")
mmp.echon("Your trap at " .. multimatches[2][2])
mmp.roomEcho(multimatches[2][2])
echo(" was set off by " .. multimatches[2][3] .. "!!!\n")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your alarm at</string>
							<string>^Your alarm at \'(.+)\' has been set off by (\w+)\!$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Trap List</name>
						<script>-- the first pattern is not blank, there are spaces there

selectCurrentLine()
replace("")
echo("[" .. multimatches[2][2] .. "] (" .. multimatches[2][3] .. ") at " .. multimatches[2][4])
mmp.roomEcho(multimatches[2][4]) </script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>   </string>
							<string>^   (\w+) \((\w+)\) at (.+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Scout</name>
						<script>-- bad, overzealous trigger - the pattern needs to be improved
mmp.roomEcho(multimatches[2][2]) </script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>   </string>
							<string>^   .+ at (.+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hunt</name>
						<script>selectCurrentLine()
replace("")
cecho("&lt;chocolate&gt;" .. matches[2] .. "&lt;grey&gt; moved to &lt;sienna&gt;" .. matches[3] .. ", &lt;white&gt;" ..matches[4])
mmp.roomEcho(matches[3]) </script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You sense that (\w+) has entered (.+)\, (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sewer grate</name>
						<script>mmp.enterGrate()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A sewer grate prevents you from moving down into the sewers.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Caravan</name>
						<script>mmp.customwalkdelay(15)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You begin leading a caravan</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Starmourn</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>99</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Lifts</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>No Lift to ENTER</name>
							<script>mmp.customwalkdelay(15)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The interface changes color, calling the lift car to your location.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Lift moving</name>
							<script>if mmp.autowalking then
	mmp.customwalkdelay(15)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The ground beneath your feet seems to shift for a split second as the lift begins to move.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Lift at correct floor</name>
							<script>if mmp.autowalking then
	mmp.liftFloor(nil,nil,true)
	mmp.customwalkdelay(0)
	mmp.deleteLineP()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Nothing happens, as the lift is already at the requested destination.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Lift arrival (inside)</name>
							<script>if mmp.autowalking then
	send("KEY LIFT", false)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The lift comes to a complete stop, a ping echoing from the control interface. You can now EXIT LIFT.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Lift arrival (outside)</name>
							<script>mmp.customwalkdelay(0)
mmp.move()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>An indicator light flashes above the lift as it arrives at this floor. You can ENTER LIFT to board the lift.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Lift interaction failed</name>
							<script>mmp.customwalkdelay(6)
mmp.deleteLineP()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The lift is currently in motion and the interface is locked down.</string>
								<string>You may not exit the lift while it is in motion if you wish to remain in one piece.</string>
								<string>The lift is already moving, further attempts will not speed up the process.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>KEY LIFT table</name>
							<script>if mmp.autowalking then
	mmp.deleteLineP()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>30</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Linking into the interface of lift network</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>each lift floor</name>
								<script>if mmp.autowalking then
  if matches[4] == "HERE" then
  	mmp.liftFloor(matches[3],matches[2],true)
		mmp.correctLiftFloor = true
  else
		if not mmp.correctLiftFloor then
  		mmp.liftFloor(matches[3],matches[2],false)
		end
  end
	mmp.deleteLineP()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>\((\d)\).+"(.+)"(?:\s\[)?(HERE)?(?:]\s)?</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Stop (Key Lift)</name>
								<script>setTriggerStayOpen("KEY LIFT table", 0)
mmp.correctLiftFloor = nil</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string></string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>7</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Login</name>
						<script>raiseEvent("mmp logged in", "Starmourn")
mmp.game = "starmourn"</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Please enter the name of your Starmourn character.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Path Blocked</name>
						<script>mmp.failpath()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^.+ blocks your attempt to leave. You can attempt to CRASH \w+ to escape\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Flying</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>move indoors failed by flying</name>
						<script>--this will force land
--may be preferable to fail pathfinding or have option to determine users desire

if mmp.game == "starmourn" then
		send("queue land")
		mmp.customwalkdelay(4)
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You must land before you can move indoors.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Wait for landing</name>
						<script>mmp.customwalkdelay(4)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You continue your descent.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Lithmeria</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Login</name>
						<script>raiseEvent("mmp logged in", "Lithmeria")
mmp.game = "lithmeria"
mmp.echo("We're connected to Lithmeria.")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Welcome to your account!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>StickMUD</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Login</name>
						<script>raiseEvent("mmp logged in", "StickMUD")
mmp.game = "stickmud"
mmp.echo("We're connected to StickMUD.")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>StickMUD rebooted</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Wall</name>
					<script>mmp.failpath()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A wall blocks your way.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Doors</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Closing doors</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>1</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You open the door to the</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Lack of piety</name>
							<script>mmp.failpath()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You try to open the door to the (\w+) but find it slams closed in your face, symbolic of your lack of piety\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Slam Shut</name>
							<script>mmp.failpath()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The door slams shut!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Denied entry</name>
							<script>mmp.failpath()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The door suddenly slams shut, denying you entry.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>CIJ</name>
							<script>mmp.failpath()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A section of the door slides aside, and a rubber-gloved fist on a spring pops out and punches you in the nose!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Springs back</name>
							<script>mmp.failpath()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The door budges, and then springs immediately back into place.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bolted</name>
							<script>mmp.failpath()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The door to the (\w+) is closed forcefully from the other side and the sound of a bolt being slammed home makes your lack of admittance clear\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Self-closing door</name>
							<script>mmp.failpath()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The door closes swiftly with a loud 'BANG'!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Door closed</name>
						<script>mmp.failpath()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>2</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You open the door to the</string>
							<string></string>
							<string>^The door to the \w+ closes with a click\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>7</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Failed to open door</name>
						<script>mmp.failpath()

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You are not carrying a key for this door.</string>
							<string>This door has been magically locked shut.</string>
							<string>Not recognising you as cast or crew, stagehands firmly close the door on you.</string>
							<string>You push against the door in vain as you try to open it.</string>
							<string>You do not have access to open this door.</string>
							<string>The door beeps quietly. It appears to be locked.</string>
							<string>This (?:walnut|pine|oak|iron|reinforced) door has been magically locked shut\.</string>
							<string>You are not carrying a key for this (?:walnut|pine|oak|iron|reinforced) door\.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Door Locked</name>
						<script>mmp.unlockDoor()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The door is locked.</string>
							<string>The (?:walnut|pine|oak|iron|reinforced) door is locked\.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Door in the way</name>
						<script>mmp.openDoor()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>There is a door in the way, to the</string>
							<string>There is a door in the way.</string>
							<string>A closed door is in the way. You need to OPEN DOOR</string>
							<string>There is an? (?:walnut|pine|oak|iron|reinforced) door in the way.</string>
							<string>The door to the (\w+) is closed.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>3</integer>
							<integer>2</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Wormholes</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Worm sources</name>
						<script>deleteLine()
local from,fromhouse = multimatches[2][2]:gsub(" %(house%)","")
local to,tohouse = multimatches[2][3]:gsub(" %(house%)","")
if fromhouse &gt;= 1 then fromhouse = " (house)" else fromhouse = "" end
if tohouse &gt;= 1 then tohouse = " (house)" else tohouse = "" end
cecho("\nYou see a connection between ".. from .. fromhouse .. " (")
mmp.echonums(from, gmcp.Room.Info.area)
cecho(") and "..to..tohouse.." (")
mmp.echonums(to)
cecho(")")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You sense a connection between</string>
							<string>^You sense a connection between (.*) and (.*).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Worm seek</name>
						<script>mmp.locateAndEcho(multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You sense a wormhole leading to</string>
							<string>^You sense a wormhole leading to (.*).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Wormhole Vision™</name>
						<script>--if not getSpecialExitsSwap or mmp.settings.lockwormholes then return end
if not getSpecialExitsSwap then return end

local exits = getSpecialExitsSwap(mmp.currentroom)
if exits and exits["worm warp"] then
  cecho(string.format("\n&lt;DarkSlateGrey&gt;A wormhole is here, leading to: &lt;orange_red&gt;%s (#%d)&lt;DarkSlateGrey&gt; in %s.\n", getRoomName(exits["worm warp"]), exits["worm warp"], mmp.cleanAreaName(mmp.getAreaName(exits["worm warp"]))))
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You see exits</string>
							<string>You see a single exit</string>
							<string>There are no obvious exits.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>2</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>nom (general)</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Coolors Pallet</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>RGB_1 Attacks</name>
					<script>selectCaptureGroup(1)
setFgColor(4, 231, 98)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You slip behind .*</string>
						<string>^You flay away .*</string>
						<string>^You rip into .*</string>
						<string>.* writhes in agony as acidic spittle eats away at .*</string>
						<string>^You flick your tail at .*</string>
						<string>^You deftly thrust a .*</string>
						<string>^You thrust a .*</string>
						<string>^The point of the weapon comes to a sudden halt as .*</string>
						<string>^Stepping forward, you continue the motion of your initial .*</string>
						<string>^A small squirrel continues to pester .*</string>
						<string>^Lightning-quick, you jab .*</string>
						<string>^You viciously jab .*</string>
						<string>^Your cantata shatters the magical shield surrounding .*</string>
						<string>The songblessing upon the rapier sings out with a piercing high note.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>RGB_2 Skills</name>
					<script>selectCaptureGroup(1)
setFgColor(137, 252, 0)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You easily vault onto the .*</string>
						<string>^Shifting his shoulders to accomodate your .*</string>
						<string>^You hurl yourself forwards through the air, .*</string>
						<string>You project a net of light about yourself until your image becomes faded and ghostly.</string>
						<string>You toss a sparkling cloud of dust over yourself and as it settles</string>
						<string>.* and dash speedily away\.$</string>
						<string>^You reach out with the vibrating stick to probe for a wormhole, .*</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>2</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>RGB_3 Curing</name>
					<script>selectCaptureGroup(1)
setFgColor(98, 0, 179)
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You take a drink from .*</string>
						<string>The elixir heals and soothes you.</string>
						<string>You may drink another health or mana elixir.</string>
						<string>^You remove .*</string>
						<string>^You eat .*</string>
						<string>You feel your health and mana replenished.</string>
						<string>You may apply another salve to yourself.</string>
						<string>^You take out some salve .*</string>
						<string>You focus your mind intently on curing your mental maladies.</string>
						<string>Your mind is able to focus once again.</string>
						<string>^You bleed .*</string>
						<string>You may utilise the tree tattoo again.</string>
						<string>Your mind feels stronger and more alert.</string>
						<string>You may eat another bit of irid moss or potash.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>1</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>1</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>RGB_4 informative</name>
					<script>selectCaptureGroup(1)
setFgColor(245, 183, 0)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your paragon completely absorbs the damage.</string>
						<string>^.*  a moon tattoo .*</string>
						<string>^.* an ox tattoo .*</string>
						<string>^.* a shield tattoo .*</string>
						<string>^.* a megalith tattoo .*</string>
						<string>^You scoop up .*</string>
						<string>^You pick up .*</string>
						<string>^You may channel the fury of battle once .*</string>
						<string>^You have slain .*</string>
						<string>Your mental reserves grow stronger and your willpower increases.</string>
						<string>Carefully getting your bearings, you set off southwest toward your goal.</string>
						<string>You are .* rooms distant from your .*</string>
						<string>You don't have enough willpower for that, I'm afraid.</string>
						<string>^You can use another Battlerage ability .*</string>
						<string>You are no longer stunned.</string>
						<string>^You put .* gold .*</string>
						<string>The wormhole spits you out at the other end.</string>
						<string>Your shroud dissipates and you return to the realm of perception.</string>
						<string>.* cannot move yet\.$</string>
						<string>You begin to struggle free of your entanglement.</string>
						<string>The salve dissolves and quickly disappears after you apply it.</string>
						<string>^You start to wield .*</string>
						<string>The elixir flows down your throat without effect.</string>
						<string>The mineral has no effect.</string>
						<string>^.* a starburst tattoo .*</string>
						<string>.* spills from the corpse\.$</string>
						<string>^You lose purchase on .*</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>3</integer>
						<integer>1</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>1</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>1</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>RGB_5 Opponent Actions</name>
					<script>selectCaptureGroup(1)
setFgColor(255, 0, 43)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^A nearly invisible magical shield forms around .*</string>
						<string>^A dizzying beam of energy strikes .*</string>
						<string>.* springs to .* defence\.$</string>
						<string>.* shakes .* head, clearing .* amnesia\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>RGB_6 Sailing / Balance</name>
					<script>selectCaptureGroup(1)
setFgColor(251, 98, 246)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You must raise the ship's gangplank before doing that.</string>
						<string>You must raise your gangplank before casting off.</string>
						<string>^You have recovered .*</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>RGB_7 Rainbow</name>
					<script>selectCurrentLine()
deleteLine()
hecho(rainbow("\n"..matches[1]))</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You have cured .*</string>
						<string>^You have been .*</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Remove Spam</name>
					<script>selectCurrentLine()
deleteLine()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>2</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Wild looks of pain cross .*</string>
						<string>Ahh, I am truly sorry, but I do not see anyone by that name here.</string>
						<string>You do not see that individual here.</string>
						<string>I do not recognize anything called that here.</string>
						<string>You detect nothing here by that name.</string>
						<string>Nothing can be seen here by that name.</string>
						<string>You must regain balance first.</string>
						<string>You cannot focus on the Berseker's rage again so soon.</string>
						<string>You are already focusing on enhancing your Berserker's rage.</string>
						<string>Your fanatism is not burning with sufficient intensity.</string>
						<string>You caress your chameleon tattoo and assume a new identity.</string>
						<string>You have gained the chameleon defence.</string>
						<string>You have lost the anti-weapon field defence.</string>
						<string>Your aura of weapons rebounding disappears.</string>
						<string>You do not have enough rage to perform that ability.</string>
						<string>You cannot use that ability again so soon.dec</string>
						<string>Your wounds cause you to</string>
						<string>.* is already hostile towards .*</string>
						<string>You cannot order an immense cyanine icewyrm to do that.</string>
						<string>You need to be a member of the clan to be able to use this command.</string>
						<string>[ AFF  ]</string>
						<string>Your icewyrm informs you that</string>
						<string>You take a drink of</string>
						<string>Your mind feels rejuvenated.</string>
						<string>You feel an aura of rebounding surround you.</string>
						<string>You have recovered your breath and can smoke once more.</string>
						<string>You feel your density return to normal.</string>
						<string>You quickly rub some mass salve on your skin.</string>
						<string>Your body grows extremely dense and heavy as the mass salve infuses your skin.</string>
						<string>^You take .* bringing the total to .*</string>
						<string>Sticky strands of webbing cling to you, making that impossible.</string>
						<string>You may eat another toadstool.</string>
						<string>You spring up from the ground to your feet.</string>
						<string>You stand up and stretch your arms out wide.</string>
						<string>You must dismount before you can mount anything else.</string>
						<string>The perfect craftsmanship of a Harp of the Harmonies enhances the sounds emanating from it.</string>
						<string>You narrow an eye in concentration and hum a few notes.</string>
						<string>You cannot do that because both of your arms must be whole and unbound.</string>
						<string>You aren't wielding that</string>
						<string>^You are already wielding .*</string>
						<string>You stand up.</string>
						<string>You hold no "gold".</string>
						<string>^You are now targeting .*</string>
						<string>I don't recognise that name as one of an existing adventurer.</string>
						<string>You cannot see that being here.</string>
						<string>[Curing]:</string>
						<string>I see no "gold" to take.</string>
						<string>[System]: Queued eqbal commands cleared.</string>
						<string>[System]:</string>
						<string>You are too stunned to be able to do anything.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>2</integer>
						<integer>1</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>2</integer>
						<integer>2</integer>
						<integer>2</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>1</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>1</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>1</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>2</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>2</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Remove #2</name>
					<script>selectCurrentLine()
deleteLine()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You cannot use that ability again so soon.</string>
						<string>You must be standing first.</string>
						<string>You are paralysed and unable to do that.</string>
						<string>You are paralysed and cannot do that.</string>
						<string>Paralysed as you are, your body is not able to pick up anything.</string>
						<string>You are paralysed and are unable to drop anything.</string>
						<string>Frustratingly, your body won't respond to your call to action.</string>
						<string>I do not recognise anything called that here.</string>
						<string>Your state of paralysis prevents you from doing that.</string>
						<string>Your rapier already bears that tunesmithing.</string>
						<string>You do not see that here.</string>
						<string>Attempting to pass as someone who is dormant or retired will be rather ineffective. Try someone else.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Hunting</name>
					<script>selectCaptureGroup(1)
setFgColor(160, 0, 28)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Letting loose an inhumanly high-pitched scream, an aged Sileg pummels you furiously with its thick fists.</string>
						<string>Whirling its whip around its body skilfully, Mokgrin, the fernbeast herder lashes out at you multiple times, lacerating your skin.</string>
						<string>Lashing out with its barbed whip, Mokgrin, the fernbeast herder slashes you across the chest, its expression unchanging.</string>
						<string>^Lifting one wickedly taloned claw, a plated fernbeast swipes at you, ripping into you and sending blood spraying out from the .*</string>
						<string>A plated fernbeast's tentacles lash out at you in unison, beating you unrelentingly about the head and neck.</string>
						<string>A juvenile Sileg lets loose an ear-splitting screech, causing you to cover your ears in agony.</string>
						<string>An aged Sileg pulls back and punches you hard in the face.</string>
						<string>Firad, the Sileg Chieftain pulls itself to its thick feet, flailing wildly with its arms and striking you multiple times.</string>
						<string>Chanting quietly, Girda, Ritualist of the Sileg points a withered finger at you.</string>
						<string>Girda, Ritualist of the Sileg mumbles under its breath as a grey cloud envelops you, stealing away your breath.</string>
						<string>Sharp shards of rock materialise before Girda, Ritualist of the Sileg, before diving towards you at breakneck speed and cuttingyou in numerous places.</string>
						<string>Dregun, Keeper of the Nursery balls its hand into a fist and punches you directly in the groin with all its might.</string>
						<string>A crystal georith's massive mouth clamps around your body as the beast attempts to devour you whole.</string>
						<string>Bobbing furiously, a mud urchin strikes you in the torso, his face pointed towards yours.</string>
						<string>Snapping suddenly closed on your leg, an aggressive dulosi minorus leaves a clear set of teeth marks.</string>
						<string>Sinking his teeth into your skin, a crocodile leaves a visible set of marks, each one dripping with blood.</string>
						<string>Flinging his body into yours, a crocodile connects painfully with your leg, breaking it in numerous places.</string>
						<string>A vicious dulosi majorus closes suddenly around your body, leaving numerous deep bite marks.</string>
						<string>Fire erupts in your side as a bunyip carves you up.</string>
						<string>A bunyip delivers a blow which almost slices off a limb.</string>
						<string>A bunyip's eyes gleam as you are butchered with a wicked blow.</string>
						<string>Leaping upwards, an aggressive dulosi minorus bites you savagely in the face.</string>
						<string>An energetic red turtle scrapes his nails across your skin, leaving venom dripping from the lacerations.</string>
						<string>An energetic red turtle slams his body into your leg, shattering it in the process.</string>
						<string>Scraping his thorns down the side of your body, a thornback frog leaves a number of deep lacerations.</string>
						<string>A transparent cahno slams his body into yours, leaving a noticeable bruise.</string>
						<string>Smashing himself into your body, a bunyip scrapes against your skin, leaving numerous lacerations.</string>
						<string>An azure koparfish slams his body violently into yours, causing you to fall to the floor.</string>
						<string>A vengeful look upon his face, an energetic red turtle slashes his claws across your legs, leaving a number of deep lacerations.</string>
						<string>Slamming his body into yours, an energetic red turtle knocks you painfully to the floor.</string>
						<string>Stepping forward, a stout footsoldier thrusts the blade of his sword deep into your stomach.</string>
						<string>With a grunt of exertion, a stout footsoldier swings his sword down to slash brutally across your body.</string>
						<string>A stout footsoldier scowls and swings his sword, chopping it into your side amid a spray of blood.</string>
						<string>A keen-eyed archer pulls a small dagger from her belt and viciously slashes it across your chest.</string>
						<string>Spinning agilely, a keen-eyed archer leaps into the air and slams her booted heel into your jaw.</string>
						<string>^A keen-eyed archer slides a long arrow out of her quiver and, firing at close range from her bow, sends it flying violently into.*</string>
						<string>His steel blade flashing through the air like lightning, a knight of the Siroccian Order brutally skewers your body.</string>
						<string>In a fluid motion, an off-duty prison guard draws a thin-bladed knife from his belt and slashes across your torso.</string>
						<string>An Ulsyndar guard pivots quickly and smashes the haft of his spear into the side of your head, making your ears ring.</string>
						<string>^An Ulsyndar guard levels the tip of his spear at .*</string>
						<string>A disgruntled salt miner kicks out at you, the hefty shackle around his ankle smashing into the back of your knee.</string>
						<string>Snatching up a jagged rock, a disgruntled salt miner lunges at you, tearing into your flesh with a vicious downswing.</string>
						<string>A disgruntled salt miner thrusts at you with his pickaxe, blood spraying over the ground as the sharpened point rips into your stomach.</string>
						<string>A prison miner kicks out at you, the hefty shackle around his ankle smashing into the back of your knee.</string>
						<string>A prison miner thrusts at you with his pickaxe, blood spraying over the ground as the sharpened point rips into your stomach.</string>
						<string>Shouting a startling battlecry that echoes throughout the mines, a stocky dwarf foreman charges head first into your abdomen.</string>
						<string>A stocky dwarf foreman rolls up a heavy parchment and slaps you across the face with it.</string>
						<string>In a fluid motion, an Ulsyndar guard draws a thin-bladed knife from his belt and slashes across your torso.</string>
						<string>Snatching up a jagged rock, a prison miner lunges at you, tearing into your flesh with a vicious downswing.</string>
						<string>Sweeping his pickaxe in a wild arc, a bloodstained miner catches your head a glancing blow with the thick, wooden shaft.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>1</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>1</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>1</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Hunting2</name>
					<script>selectCaptureGroup(1)
setFgColor(160, 0, 28)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Sweeping his pickaxe in a wild arc, a bloodstained miner catches your head a glancing blow with the thick, wooden shaft.</string>
						<string>A proud ducal guard attempts to transfix you, but succeeds only in curing your blindness.</string>
						<string>^A proud ducal guard whirls his blades in a shining nexus of glittering steel .*</string>
						<string>A smile breaks across Daerlain, an elderly noblewoman's wrinkled face as she looks deep into your eyes.</string>
						<string>A ghost bat screeches angrily at you, forcing you to clamp your hands over your ears in agony.</string>
						<string>Descending upon you, a ghost bat furiously tears at you with his claws and teeth.</string>
						<string>Ambling towards you, a giant quartz beetle snaps at your legs with its large pincers.</string>
						<string>A crystal georith wraps itself around you, tightening his grip until you feel your bones crack beneath the pressure.</string>
						<string>Swinging his head hard in your direction, a crystal georith connects with your body painfully.</string>
						<string>^A giant quartz beetle rises onto his hind .*</string>
						<string>A loud wail issues from the mouth of a lost spirit, filling you with a sense of deep misery and anguish.</string>
						<string>A lost spirit points at you ominously with one ghostly, withered hand, as you feel an agonising pain course through your body.</string>
						<string>^A lost spirit reaches towards you with .*</string>
						<string>A rockhide basilisk hisses in rage and slams into you, tearing at you with his claws.</string>
						<string>Clamping his teeth around your arm, a rockhide basilisk shakes his head furiously, rending your flesh with his teeth.</string>
						<string>A ghost bat dives towards you, clawing you and buffeting you with its wings.</string>
						<string>Shifting his reptilian body, a plated fernbeast sends his whip-like tail crashing into you again and again.</string>
						<string>^Letting loose an inhumanly high-pitched scream, .*</string>
						<string>^An Ulsyndar guard draws back his arm and impales your leg .*</string>
						<string>^An off-duty prison guard levels the tip of his spear at your chest. When .*</string>
						<string>^An off-duty prison guard pivots quickly .*</string>
						<string>^An off-duty prison guard draws back his arm .*</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
						<integer>1</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>1</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>1</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>mapper (outside Mudlet)</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Area button</name>
					<script>local name = matches[2]
linkarea = matches[3]
cecho("&lt;DarkSlateGrey&gt; (")
fg("purple")
echoLink("Goto Area?", [[expandAlias("goto " .. linkarea)]], "Goto Area???", true)
resetFormat() 
cecho("&lt;DarkSlateGrey&gt;) &lt;red&gt;(" .. linkarea .. ")")

	</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Though too far away to accurately perceive details, you see that (\w+) is in (.+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Discern</name>
					<script>mmp.locateAndEchoSide(multimatches[2][3], multimatches[2][2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>1</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You discern that</string>
						<string>You discern that (\w+) is at (.+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Walk Delay</name>
					<script>mmp.customwalkdelay(2.2)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You slip away successfully and evade your pursuers.</string>
						<string>You begin to slowly clamber over stalagmites that blocks your way.</string>
						<string>You struggle to climb over the sand dune in your way.</string>
						<string>^Hobbling, you move away to the (\w+)\.$</string>
						<string>You start pushing your way against the influence of the laguz rune.</string>
						<string>You start plodding carefully across the constructed war nest.</string>
						<string>You put two fingers between your lips and give a sharp whistle.</string>
						<string>You struggle to climb over the snow drift in your way.</string>
						<string>A shaded private grove.</string>
						<string>Near a small tent. (road).</string>
						<string>You struggle to get past a large spider web which blocks your way.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>1</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Gate Stop</name>
					<script>--expandAlias("mstop")
send("worm warp")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You cannot walk through an enormous stone gate.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Map</name>
					<script>send("map")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>There is no exit in that direction.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Door Trigger</name>
					<script>opendoor = matches[2]
deleteLine()
cecho("\nThere is a ")
fg("honeydew")
echoLink("door", [[send("open door " .. opendoor)]], "Open Sesame!", true)
cecho(" in the way.")
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^There is a door in the way. Type or click OPEN DOOR (\w+) to try to open the door\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Shadowseek</name>
					<script>mmp.locateAndEchoSide(multimatches[2][3], multimatches[2][2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>2</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>The shadows report</string>
						<string>^The shadows report that (\w+) is at (.*)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>scouting</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Room num</name>
					<script>if roomnum == true then
	send("rt My Location: (" .. matches[2] .. ") " .. matches[3])
	roomnum = false
else
	roomnum = false
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Room \#(\d+) \- \'(.+)\.\'$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Unblock</name>
					<script>send("unblock")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^\(Ring\)\: (\w+) says, "Unblock\."$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Block</name>
					<script>send("block " .. matches[3])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^\(Ring\)\: (\w+) says, "Block (\w+)\."$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Spyglass Reporting</name>
					<script>if raid == true and scent == true and allallies == false then
	send("rt In area or adjacent: "..table.concat(scenttargets, ", "))
	elseif raid == true and scent == true and allallies == true then
		send("rt In area or adjacent: No enemies present!")
	else
		return
end

scent = false</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>1</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^\ \-\ (\w+) at (.+)$</string>
						<string>Equilibrium Taken:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Spyglass Report</name>
					<script>scenttargets = {}
scent = true</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You bring the spyglass to your eye, scanning the horizon for movement.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Spyglass Reporting</name>
					<script>if raid == true and scent == true then
	send("rt In area or adjacent: No enemies present!")
end

scent = false</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>1</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You bring the spyglass to your eye, scanning the horizon for movement.</string>
						<string>You are unable to find anyone.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Cloak Stripped</name>
					<script>send("rt brazier " .. matches[2] .. " now")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+)'s cloak defence is stripped\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Presences Gather</name>
					<script>if raid == false and not Allies[matches[2]] then
	send("rt " .. matches[2] .. " H:" .. matches[4] .. " M:" .. matches[5] .. " at " .. matches[3])
	send("enemy " .. matches[2], false)
else
	return
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) is at (.+), at (\d+) health and (\d+) mana\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>get system</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Get Off</name>
					<script>get = false

if bashArea == Crawlers then
	if user.ih == false then
		tempTimer(2, [[user.ih = true]])
	end
	if tonumber(matches[2]) &lt; 3 then
		if (user.Bashing and user.targetInRoom and not mmp.autowalking) then
			if (gmcp.Char.Vitals.bal == "1" and gmcp.Char.Vitals.eq == "1" and user.Balance.Bashing) then
				for k, v in pairs (Targets) do
					if (demonnic.roomItems[k]) then
						target.name = demonnic.roomItems[k][1]
						user.Balance.Bashing = false
					local list = gmcp.Char.Items.List
    				demonnic.roomItems = {}
    				for _,v in ipairs(list.items) do
      					if not demonnic.roomItems[v.name] then demonnic.roomItems[v.name] = {} end
      						table.insert(demonnic.roomItems[v.name], v.id)
					   end
						--		sysEcho("Problem 0")
						expandAlias("aa")
						break
					end
				end	
			end
		elseif (user.Bashing and not mmp.autowalking and not user.targetInRoom and user.Balance.Bashing) then
			if (gmcp.Char.Vitals.bal == "1" and gmcp.Char.Vitals.eq == "1") then
				bashWalking()
			end
		end
	elseif (user.Bashing and not mmp.autowalking and user.Balance.Bashing) then
			if (gmcp.Char.Vitals.bal == "1" and gmcp.Char.Vitals.eq == "1") then
				bashWalking()
			end
		end
	end

		</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Number of objects: (.*)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Get On</name>
					<script>get = true</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You see the following objects:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Get Head</name>
					<script>if getbody == true then
	send("get head")
else
	return
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>"head(\d+)" </string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Magnin Rats</name>
					<script>expandAlias("give 50 rat to butcher::give 50 rat to butcher::put gold in pack")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Imperial Parade passing the Academy.</string>
						<string>Reaching into his pockets, Magnin hands you some gold sovereigns.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Gold in Pouch</name>
					<script>send("put gold in cloak")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You hold no "locust".</string>
						<string>You hold no "mutant".</string>
						<string>You hold no "demon".</string>
						<string>A lamiran hermit happily hands you a small sack of gold in return for the fish.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Badger</name>
					<script>expandAlias("give 50 locust to butcher::give 50 locust to butcher::give 50 locust to butcher::put gold in cloak")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Lyria, the Reborn gives some gold sovereigns to you.</string>
						<string>Within the Ancient Redwood.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Lyria Vermin Sell</name>
					<script>send("sell vermin to lyria")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Within the Ancient Redwood.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Get Corpse</name>
					<script>if getbody == true then
	send("get "..matches[2])
else
	return
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>"(.*)" (.*) the corpse of (.*)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Get Corpse On/Off</name>
					<script>getbody = false
standguard = false</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Number of objects:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Get Hazeward</name>
					<script>send("get hazeward", false)
tempTimer(1, [[send("path find shard")]])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>There is no shard here.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Get Hazeward</name>
					<script>if get == true then
	send("get hazeward")
else
	return
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^"stone(\d+)"</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Gold Away</name>
					<script>send("put gold in cloak")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Ivran, the Fishmonger happily hands you a small sack of gold in return for the fish.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Matching Objects</name>
					<script>get = false</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Number of matching objects:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>isPrompt</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>isPrompt Deathknight</name>
					<script>oldhealth = oldhealth or 0
oldmana = oldmana or 0

local myhealth, mymana =
	tonumber(gmcp.Char.Vitals.hp), tonumber(gmcp.Char.Vitals.mp)

local healthdiff = myhealth - oldhealth 
local manadiff = mymana - oldmana

cecho(string.format("&lt;white&gt;[&lt;green&gt;%dh&lt;white&gt;/&lt;dodger_blue&gt;%dm&lt;white&gt;] ",healthdiff/11.0,manadiff/11.0))

oldhealth = myhealth
oldmana = mymana

checkRoom()
huntingCheck()
--Annihilate()
bashing()
printTargetWindow()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return isPrompt()</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>isPrompt Diabolist</name>
					<script>oldhealth = oldhealth or 0
oldmana = oldmana or 0

local myhealth, mymana =
	tonumber(gmcp.Char.Vitals.hp), tonumber(gmcp.Char.Vitals.mp)

local healthdiff = myhealth - oldhealth 
local manadiff = mymana - oldmana

cecho(string.format("&lt;white&gt;[&lt;green&gt;%dh&lt;white&gt;/&lt;dodger_blue&gt;%dm&lt;white&gt;] ",healthdiff/11.0,manadiff/11.0))

oldhealth = myhealth
oldmana = mymana

cecho("&lt;gold&gt;AFF:&lt;red&gt;" .. #target.afflictions .. " &lt;medium_aquamarine&gt;MENT:&lt;red&gt;" .. #target.mentalaffs .. " &lt;navajo_white&gt;Inf:&lt;purple&gt; " .. target.infirmity .. " &lt;grey&gt;&lt;&lt;red&gt;" .. target.name .. "&lt;grey&gt;&gt;")
checkRoom()
huntingCheck()
--Annihilate()
bashing()
printTargetWindow()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return isPrompt()</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>isPrompt Summoner</name>
					<script>oldhealth = oldhealth or 0
oldmana = oldmana or 0

local myhealth, mymana =
	tonumber(gmcp.Char.Vitals.hp), tonumber(gmcp.Char.Vitals.mp)

local healthdiff = myhealth - oldhealth 
local manadiff = mymana - oldmana

cecho(string.format("&lt;white&gt;[&lt;green&gt;%dh&lt;white&gt;/&lt;dodger_blue&gt;%dm&lt;white&gt;] ",healthdiff/11.0,manadiff/11.0))

oldhealth = myhealth
oldmana = mymana

cecho("&lt;gold&gt;AFF:&lt;red&gt;" .. #target.afflictions .. " &lt;medium_aquamarine&gt;MENT:&lt;red&gt;" .. #target.mentalaffs .. " &lt;navajo_white&gt;Taint:&lt;purple&gt; " .. spark .. " &lt;grey&gt;&lt;&lt;red&gt;" .. target.name .. "&lt;grey&gt;&gt;")
checkRoom()
huntingCheck()
--Annihilate()
bashing()
if	raid == true then
	raidwindow = "true"
else
	raidwindow = "false"
end
if	guards == true then
	guardswindow = "true"
else
	guardswindow = "false"
end
printTargetWindow()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return isPrompt()</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>isPrompt Wytch</name>
					<script>oldhealth = oldhealth or 0
oldmana = oldmana or 0

local myhealth, mymana =
	tonumber(gmcp.Char.Vitals.hp), tonumber(gmcp.Char.Vitals.mp)

local healthdiff = myhealth - oldhealth 
local manadiff = mymana - oldmana

cecho(string.format("&lt;white&gt;[&lt;green&gt;%dh&lt;white&gt;/&lt;dodger_blue&gt;%dm&lt;white&gt;] ",healthdiff/11.0,manadiff/11.0))

oldhealth = myhealth
oldmana = mymana

cecho("&lt;gold&gt;AFF:&lt;red&gt;" .. #target.afflictions .. " ")
checkRoom()
huntingCheck()
--Annihilate()
bashing()
printTargetWindow()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return isPrompt()</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>isPrompt Assassin</name>
					<script>oldhealth = oldhealth or 0
oldmana = oldmana or 0

local myhealth, mymana =
	tonumber(gmcp.Char.Vitals.hp), tonumber(gmcp.Char.Vitals.mp)

local healthdiff = myhealth - oldhealth 
local manadiff = mymana - oldmana

--cecho(string.format("&lt;white&gt;[&lt;green&gt;%dh&lt;white&gt;/&lt;dodger_blue&gt;%dm&lt;white&gt;] ",healthdiff/11.0,manadiff/11.0))

oldhealth = myhealth
oldmana = mymana

--cecho("&lt;grey&gt;&lt;&lt;red&gt;" .. target.name .. "&lt;grey&gt;&gt; &lt;gold&gt;AFF:&lt;red&gt;" .. #target.afflictions .. " &lt;medium_aquamarine&gt;MENT:&lt;red&gt;" .. #target.mentalaffs .. " &lt;navajo_white&gt;Worm:&lt;purple&gt; " .. Worm.Environment)
--cecho("&lt;grey&gt;&lt;&lt;red&gt;" .. target.name .. "&lt;grey&gt;&gt; &lt;gold&gt;AFFS:&lt;red&gt;" .. #target.afflictions .. " &lt;medium_aquamarine&gt;BLEED:&lt;red&gt;" .. target.bleedcount)
--cecho("&lt;grey&gt;&lt;&lt;red&gt;" .. target.name .. "&lt;grey&gt;&gt; ")
if dslaffprompt == true then
	dslprompt()
	dslaffprompt = false
end
checkRoom()
huntingCheck()
bashing()
printTargetWindow()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return isPrompt()</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>isPrompt Defiler</name>
					<script>oldhealth = oldhealth or 0
oldmana = oldmana or 0

local myhealth, mymana =
	tonumber(gmcp.Char.Vitals.hp), tonumber(gmcp.Char.Vitals.mp)

local healthdiff = myhealth - oldhealth 
local manadiff = mymana - oldmana

cecho(string.format("&lt;white&gt;[&lt;green&gt;%dh&lt;white&gt;/&lt;dodger_blue&gt;%dm&lt;white&gt;] ",healthdiff/11.0,manadiff/11.0))

oldhealth = myhealth
oldmana = mymana

cecho("&lt;grey&gt;&lt;&lt;red&gt;" .. target.name .. "&lt;grey&gt;&gt; &lt;medium_aquamarine&gt;left:&lt;red&gt;" .. limbcountleftarm .. " &lt;medium_aquamarine&gt;right:&lt;red&gt;" .. limbcountrightarm .. " &lt;navajo_white&gt;left&lt;purple&gt; " .. limbcountleftleg .. " &lt;navajo_white&gt;right&lt;purple&gt; " .. limbcountrightleg .. " &lt;gold&gt;PR: &lt;red&gt;" .. target.limbparry)
if dslaffprompt == true then
	dslprompt()
	dslaffprompt = false
end

checkRoom()
huntingCheck()
bashing()
printTargetWindow()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return isPrompt()</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>whistle mount</name>
				<script>send("whistle mount")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>You need to be riding a proper mount to gallop.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>3</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>On Exits</name>
				<script>cecho("\n")
cecho("\n")

</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^You see exits .*</string>
					<string>^You see a single exit .*</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>teach</name>
				<script>send("ok")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>Malgrathe has requested that you share</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>2</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>relearn</name>
				<script>send("learn 15 harmonics from ruiha")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>Ysvour, the hoarder bows to you, ending</string>
					<string>Wiping his cleaver clean, Epicurus, Master of the Garden ends the lesson in Gathering.</string>
					<string>Ysvour, the hoarder concludes the lesson, bidding you to remember what he has discussed.</string>
					<string>Ysvour, the hoarder ends the lesson, chuckling at your worried expression.</string>
					<string>Ysvour, the hoarder mercifully cleanses</string>
					<string>Ruiha, the instructor dismisses all of her harmonics with a wave, and turns to you smiling, "Thus ends this lesson in</string>
					<string>.* and ends the lesson\.$</string>
					<string>Ruiha, the instructor bows to you, ending a lesson in Woodlore.</string>
					<string>"Remember these things, and you will someday be a swashbuckler worthy of the name," she says, bringing the lesson to a close.</string>
					<string>Ruiha, the instructor smiles, sings a quick phrase, and brings the Voicecraft lesson to a close.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>2</integer>
					<integer>0</integer>
					<integer>3</integer>
					<integer>3</integer>
					<integer>2</integer>
					<integer>2</integer>
					<integer>1</integer>
					<integer>3</integer>
					<integer>3</integer>
					<integer>3</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Starburst Activated</name>
				<script>expandAlias("bash")
send("queue addclear eqbal stand::walk to ashtan::walk to achaea")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>Your starburst tattoo flares as the world is momentarily tinted red.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>3</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>put gold in pack</name>
				<script>send("queue prepend eqbal put gold in pack")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>You scoop up</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>2</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>on login</name>
				<script>expandAlias("vconfig singleprompt on")
send("activate fire resistance::activate cold resistance::activate magic resistance::activate electric resistance")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>Password correct. Welcome to Achaea.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>3</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>New Trigger</name>
				<script>cecho("\n&lt;white&gt;========================================\n&lt;white&gt;============== RUN RUN RUN ================\n&lt;white&gt;========================================")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>.* fingers in front of you\.$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>CRITS</name>
				<script>selectCaptureGroup(1)
setFgColor(153,153,0)</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^You have scored .*</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>General Reset</name>
				<script>target.afflictions = {}
target.aura = true
target.instilled = false
target.instilled2 = false
target.instilled3 = false
target.obscured = false
target.focus = true
target.mentalaffs = {}
target.curseward = true
purgeblood = false
tree = false
loshre = false
nairat = false
mannaz = false
kena = false
sowulu = false
pithakhan = false
nauthiz = false
target.peace = false
target.confounded = false
target.obstruct = false
target.marked = false
markedwindow = "none"
target.speed = true
target.marduk = false
steal = true
rightarmbruise = false
leftarmbruise = false
rightlegbruise = false
leftlegbruise = false
physical_affs = 0
mental_affs = 0
spark = 0
incinerate = false
target.hierophant = false
target.infirmity = 0
kelpinfirmity = false
nightshadeinfirmity = false
mandrakeinfirmity = false
wormwoodinfirmity = false
orphineinfirmity = false
printTargetWindow()</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>Password correct. Welcome to Achaea..</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>3</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>nom (aff tracker)</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Affliction Tracker</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Health and Mana</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Contemplate</name>
						<script>ak.currentmana = matches[3]
ak.maxmana = matches[4]
local currMana = math.ceil((matches[3]/matches[4])*100)
cecho("\n&lt;white&gt;[&lt;blue&gt;Mana&lt;white&gt;]: &lt;yellow&gt;"..currMana.."%")
if not ak.pause then send("pt "..matches[2].."'s mana at "..ak.currentmana.."/"..ak.maxmana) end
if (currMana &lt;= 40) then
	cecho("\n READY TO GO!!")
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+)\'s mana stands at (\d+)\/(\d+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Moss</name>
						<script>if IsTargetted(matches[2]) then
	ak.currentmana = ak.currentmana + (ak.maxmana*.08)
	if ak.currentmana &gt; tonumber(ak.maxmana) then
		ak.currentmana = ak.maxmana
	end
	ak.scoreup(target)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) eats some irid moss\.$</string>
							<string>^(\w+) eats a potash crystal\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sip</name>
						<script>if IsTargetted(matches[2]) then
	if affstrack.score.anorexia&gt;0 then 
		if ak.thoughtIhad then 
			ak.thoughtIhad("anorexia") 
		else 
			affstrack.score.anorexia = 0 
		end  
	end
	if affstrack.score.voyria &gt; 0 then
		affstrack.score.voyria = 0
	elseif (not ak.defs.speed) then
		if not SpeedTimer then
			SpeedTimer = tempTimer(4.5,[[
      	ak.defs.speed = true
      	SpeedTimer = false 
      	ak.scoreup(]]..matches[2]..[[)  
      	]])
		end
	else
     --ak.currentmana
     --ak.maxmana
	end
	ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) takes a drink from .* vial\.$</string>
							<string>^([\w'\-]+) takes a drink from a carved bone vial\, a miniature carved dragon biting at [\w'\-]+ lips\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Enervate</name>
						<script>if IsTargetted(matches[2]) then 
	ak.currentmana = ak.currentmana - (ak.maxmana/4) 
	ak.scoreup(matches[2])
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^[\w'\-]+ frowns in concentration as a tendril of yellow energy flashes out and attaches to ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Divine</name>
						<script>ak.knownmaxhealth = ak.knownmaxhealth or {}
ak.knownmaxhealth[matches[2]] = matches[3] 
ak.scoreup(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) possesses \d+ health of (\d+)\, \d+ mana of \d+\, and \d+ willpower\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Assess</name>
						<script>ak.knownmaxhealth = ak.knownmaxhealth or {}
ak.knownmaxhealth[multimatches[2][2]] = multimatches[2][4] 
ak.currenthealth = multimatches[2][3]
ak.maxhealth = multimatches[2][4]
local currHealth = math.ceil((multimatches[2][3]/multimatches[2][4])*100)
ak.healthpercent = currHealth
cecho("\n&lt;white&gt;[&lt;blue&gt;Health&lt;white&gt;]: &lt;yellow&gt;"..currHealth.."%")
if not ak.pause then send("pt "..multimatches[2][2].."'s health at "..ak.currenthealth.."/"..ak.maxhealth) end
ak.scoreup(multimatches[2][2])

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You glance over</string>
							<string>^You glance over ([\w'\-]+) and see that (?:her|his) health is at (\d+)\/(\d+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Gauge</name>
						<script>ak.knownmaxhealth = ak.knownmaxhealth or {}
ak.knownmaxhealth[matches[2]] = matches[4] 
ak.currenthealth = matches[3]
ak.maxhealth = matches[4]
local currHealth = math.ceil((matches[3]/matches[4])*100)
ak.healthpercent = currHealth
ak.scoreup(matches[2])
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Gazing upon ([\w'\-]+), you establish that (?:he|she) has (\d+) health remaining of (\d+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Falcon Observe</name>
						<script>enableTrigger("Falcon Observe Capture")
ak.deleteFull()
falcon = falcon or {}
falcon.areawho = {}
falcon.targetin = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your falcon reports seeing the following people in its area:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Falcon Observe Capture</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Add</name>
							<script>ak.knownmaxhealth = ak.knownmaxhealth or {}
ak.knownmaxhealth[matches[2]] = matches[4] 
falcon = falcon or {}
falcon.areawho = falcon.areawho or {}
if gmcp.Char.Name.name ~= matches[2] then
	table.insert(falcon.areawho,matches[2])
end
if IsTargetted(matches[2]) then 
	falcon.targetin = true
else
	--ak.deleteFull()
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+)\s+(\d+) health out of (\d+)\.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Falcon Observe Kill</name>
							<script>if not falcon.targetin then
	ak.deleteFull()
end
disableTrigger("Falcon Observe Capture")
if ndba and #falcon.areawho &gt; 0 then
	--cecho("&lt;cyan&gt;"..ndba.concatand(falcon.areawho).." are in " .. gmcp.Room.Info.area) 
	send("pt "..ndba.concatand(falcon.areawho).." are in " .. gmcp.Room.Info.area) 
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Doll Check</name>
						<script>if IsTargetted(multimatches[2][2]) then 
	ak.currentmana = ak.currentmana - (ak.maxmana/4) 
	ak.knownmaxhealth = ak.knownmaxhealth or {}
  ak.knownmaxhealth[matches[2]] = matches[3] 
	ak.scoreup(multimatches[2][2])
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You gaze into the eyes of the doll and see that</string>
							<string>^You gaze into the eyes of the doll and see that ([\w'\-]+) has a health of (\d+)\/(\d+) and a mana of(\d+)\/(\d+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Con Drop</name>
						<script>--(-2 con)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) gasps a panicked breath before doubling over in pain\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Con Increase</name>
						<script>-- (+2 con)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) expertly breaks the seal of a reforming phial of enhancement formula and brings it to [\w'\-]+ mouth\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bleed</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>No Bleed</name>
							<script>if ak.bleeding and ak.bleeding &gt; 0 and affstrack.score.haemophilia &gt; 0 then
	ak.thoughtIhad("haemophilia")
end
ak.bleeding = 0
ak.scoreup(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You observe that ([\w'\-]+) is not bleeding at all\.$</string>
								<string>^([\w'\-]+) does not yet bleed enough for you to unleash the coagulation\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bleed 0-100</name>
							<script>ak.bleedupdate(40)
ak.scoreup(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You observe a small amount of blood trickling from minor wounds on ([\w'\-]+)\'s body\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bleed 100-200</name>
							<script>ak.bleedupdate(100)
cecho("&lt;red&gt;\n\nBleeding for over 100!\n\n")
ak.scoreup(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You observe that ([\w'\-]+) is bleeding slightly\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bleed 200-300</name>
							<script>ak.bleedupdate(200)
cecho("&lt;red&gt;\n\nBleeding for over 200!\n\n")
ak.scoreup(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#000000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You observe thin red rivulets of blood dripping from ([\w'\-]+)\'s wounds\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bleed 300-400</name>
							<script>ak.bleedupdate(300)
cecho("&lt;red&gt;\n\nBleeding for over 300!\n\n")
ak.scoreup(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#000000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You observe sluggish bleeding from ([\w'\-]+)\'s wounds\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bleed 400-500</name>
							<script>ak.bleedupdate(400)
cecho("&lt;red&gt;\n\nBleeding for over 400!\n\n")
ak.scoreup(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#000000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You observe free-flowing blood streaming from ([\w'\-]+)\'s wounds\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bleed 500-600</name>
							<script>ak.bleedupdate(500)
cecho("&lt;red&gt;\n\nBleeding for over 500!\n\n")
ak.scoreup(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#000000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You observe great gouts of blood spurting from ([\w'\-]+)\'s many wounds\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bleed 600-700</name>
							<script>ak.bleedupdate(600)
cecho("&lt;red&gt;\n\nBleeding for over 600!\n\n")
ak.scoreup(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#000000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You observe that the wounds of ([\w'\-]+) are bleeding most severely\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bleed 700-800</name>
							<script>ak.bleedupdate(700)
cecho("&lt;red&gt;\n\nBleeding for over 700! BURN EMM!\n\n")
ak.scoreup(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#000000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You observe heavy torrents of lifeblood spilling from ([\w'\-]+)\'s near\-fatal wounds\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bleed 800-900</name>
							<script>ak.bleedupdate(800)
cecho("&lt;red&gt;\n\nBleeding for over 800!\n\n")
ak.scoreup(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#000000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You observe great rivers of blood running from the open wounds of ([\w'\-]+)\.$ </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bleed 900-1000</name>
							<script>ak.bleedupdate(900)
cecho("&lt;red&gt;\n\nBleeding for over 900!\n\n")
ak.scoreup(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#000000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You observe arterial spray gushing from the open wounds of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bleed 1000+</name>
							<script>ak.bleedupdate(1000)
cecho("&lt;red&gt;\n\nBleeding for over 1000!\n\n")
ak.scoreup(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#000000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You observe that ([\w'\-]+) will shortly bleed to death\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Curse Bleeded</name>
							<script>if IsTargetted(matches[2]) and affstrack.score.haemophilia &gt; 0 then 	
	local bleedr = ak.bleedincrease or 65
	ak.bleeding = ak.bleeding + bleedr
	cecho(ak.bleeding)
	ak.scoreup(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Blood begins to run from the eyes and nose of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bleed Destroyed</name>
							<script>ak.bleeding = 0
ak.scoreup(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) writhes in agony as steam begins rising from [\w'\-]+ skin\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Give</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Stupidty</name>
						<script>local name = matches[2]
if (name == target.name) then  
  if not table.contains(target.mentalaffs, "stupidity") then
	  targMaffAdd("stupidity")
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Tears fill ([\w'\-]+)'s eyes and begin to slowly run down ([\w'\-]+) face\.$</string>
							<string>^([\w'\-]+) flaps ([\w'\-]+) arms madly\.$</string>
							<string>^([\w'\-]+) stumbles and pokes ([\w'\-]+) in the eye\.$</string>
							<string>^([\w'\-]+) makes a strangled meowing noise and quickly shuts up, blushing\.$</string>
							<string>^([\w'\-]+) picks ([\w'\-]+) nose absently\.$</string>
							<string>^([\w'\-]+) breaks down and sobs uncontrollably\.$</string>
							<string>^([\w'\-]+) gets down on one knee and serenades the world\.$</string>
							<string>^([\w'\-]+) falls to his knees in worship\.$</string>
							<string>^([\w'\-]+) hugs himself compassionately\.$</string>
							<string>^([\w'\-]+) grunts a bit and then lets out a loud \"OINK\!\"$</string>
							<string>^([\w'\-]+) waggles his eyebrows comically\.$</string>
							<string>^([\w'\-]+) wails like an old woman\.$</string>
							<string>^([\w'\-]+) moans, holding his head\.$</string>
							<string>^You cast a net of stupidity over ([\w'\-]+)'s mind\.$</string>
							<string>^([\w'\-]+) twitches spasmodically\.$</string>
							<string>^([\w'\-]+) fondles (herself|himself) absently\.$</string>
							<string>^([\w'\-]+) blinks\.$</string>
							<string>^([\w'\-]+) lets out a loud\, long \"MOOOOOOOOOOO\!\"$</string>
							<string>^([\w'\-]+) attempts to do a standing backflip\, but merely stumbles over [\w'\-]+ own feet\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Impatience</name>
						<script>local name = matches[2]
if (name == target.name) then  
  if not table.contains(target.mentalaffs, "impatience") then
	  targMaffAdd("impatience")
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) shuffles ([\w'\-]+) feet in boredom\.$</string>
							<string>^([\w'\-]+) suddenly starts scratching at an itch like mad\.$</string>
							<string>^You glare at ([\w'\-]+)\, cursing ([\w'\-]+) with mental maladies\.$</string>
							<string>^His eyes gleaming\, [\w'\-]+ smiles and quickly sings a jaunty limerick at ([\w'\-]+)\.$</string>
							<string>^Her eyes gleaming\, [\w'\-]+ smiles and quickly sings a jaunty limerick at ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Trample</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   smashlimb = matches[3]..matches[4]
   if affstrack.score[smashlimb] &lt; 100 then
      OppGainedAff(smashlimb)
   end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) screams as (?:her|his) ([\w'\-]+) ([\w'\-]+) is crushed\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Asleep</name>
						<script>if ak.ai() then return end
--ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
   affstrack.score.sleep = 100
   ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+)'s eyes close suddenly as (?:he|she) falls asleep\.$</string>
							<string>^([\w'\-]+) tosses back and forth in restless slumber\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Target Standing</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	 ak.limbs.limb_table_check(matches[2])
   affstrack.score.prone = 0
	 if applycure.lastapplied and applycure.lastapplied == "legs" then
      AKcalculateSalve()
	 end
	 if ocured and ocured.bloodroot and ocured.bloodroot.paralysis and ocured.bloodroot.slickness and ak.ProTrackingConfirmed then
	 	ak.ProTrackingConfirmed("slickness")	
	 end
	 affstrack.score.paralysis = 0
   --if affstrack.score.rightleg&gt;0 and affstrack.score.rightleg&lt;100 then
   --   if ak.thoughtIhad then ak.thoughtIhad("rightleg") else affstrack.score.rightleg = 0 end 
   --   --ak.limbs.limbcount[target].rightleg = (ak.limbs.limbcount[target].lastpercentrightleg)
   --   _G[target.."rightlegdisablelimbdamage"] = nil
   --   --ak.limbs.limbcount[target].leftleg = (ak.limbs.limbcount[target].lastpercentleftleg)
   --   _G[target.."leftlegdisablelimbdamage"] = nil
   --   affstrack.score.leftleg = 0
   --elseif affstrack.score.leftleg&gt;0 and affstrack.score.leftleg&lt;100 then
   --   if ak.thoughtIhad then ak.thoughtIhad("leftleg") else affstrack.score.leftleg = 0 end
   --   --ak.limbs.limbcount[target].leftleg = (ak.limbs.limbcount[target].lastpercentleftleg)
   --   _G[target.."leftlegdisablelimbdamage"] = nil
   --   --ak.limbs.limbcount[target].rightleg = (ak.limbs.limbcount[target].lastpercentrightleg)
   --   _G[target.."rightlegdisablelimbdamage"] = nil
   --   affstrack.score.rightleg = 0
   --else
      if applycure and applycure.possiblemendings and #applycure.possiblemendings == 1 and applycure.possiblemendings[1] == "leftleg" then
         AKcalculateSalve()
         if affstrack.score.rightleg &gt;= 100 then
            ak.limbs.limbcount[target].rightleg = ak.limbs.limbcount[target].lastpercentrightleg
            cecho("\n\n&lt;cyan&gt;"..target.."'s &lt;yellow&gt;Right Leg &lt;cyan&gt;Count Is Off! Attempting To Correct!\n\n")
            _G[target.."rightlegdisablelimbdamage"] = nil
            if ak.thoughtIhad then ak.thoughtIhad("rightleg") else affstrack.score.rightleg = 0 end
         end
      elseif applycure and applycure.possiblemendings and #applycure.possiblemendings == 1 and applycure.possiblemendings[1] == "rightleg" then
         AKcalculateSalve()
         if affstrack.score.leftleg &gt;= 100 then
            ak.limbs.limbcount[target].leftleg = ak.limbs.limbcount[target].lastpercentleftleg
            cecho("\n\n&lt;cyan&gt;"..target.."'s &lt;yellow&gt;Left Leg &lt;cyan&gt;Count Is Off! Attempting To Correct!\n\n")
            _G[target.."leftlegdisablelimbdamage"] = nil
            if ak.thoughtIhad then ak.thoughtIhad("leftleg") else affstrack.score.leftleg = 0 end
         end
      else
				if ak.limbs.limbcount[target].maxbreaks.rightleg &lt; ak.limbs.limbcount[target].maxbreaks.leftleg and affstrack.score.leftleg &gt;= 100 and affstrack.score.rightleg &gt;= 100 then
					ak.limbs.limbcount[target].leftleg = ak.limbs.limbcount[target].lastpercentleftleg
					cecho("\n\n&lt;cyan&gt;"..target.."'s &lt;yellow&gt;Left Leg &lt;cyan&gt;Count Is Off! Attempting To Correct!\n\n")
					_G[target.."leftlegdisablelimbdamage"] = nil
					if ak.thoughtIhad then ak.thoughtIhad("leftleg") else affstrack.score.leftleg = 0 end				
				elseif ak.limbs.limbcount[target].maxbreaks.rightleg &gt; ak.limbs.limbcount[target].maxbreaks.leftleg and affstrack.score.rightleg &gt;= 100 and affstrack.score.leftleg &gt;= 100 then
					ak.limbs.limbcount[target].rightleg = ak.limbs.limbcount[target].lastpercentrightleg
					cecho("\n\n&lt;cyan&gt;"..target.."'s &lt;yellow&gt;Right Leg &lt;cyan&gt;Count Is Off! Attempting To Correct!\n\n")
					_G[target.."rightlegdisablelimbdamage"] = nil
					if ak.thoughtIhad then ak.thoughtIhad("rightleg") else affstrack.score.rightleg = 0 end
				else
					if ak.limbs.FindLastBrokenLeg() == "leftleg" and affstrack.score.leftleg &gt; 100 then
         	   ak.limbs.limbcount[target].leftleg = ak.limbs.limbcount[target].lastpercentleftleg
         	   cecho("\n\n&lt;cyan&gt;"..target.."'s &lt;yellow&gt;Left Leg &lt;cyan&gt;Count Is Off! Attempting To Correct!\n\n")
         	   _G[target.."leftlegdisablelimbdamage"] = nil
         	   if ak.thoughtIhad then ak.thoughtIhad("leftleg") else affstrack.score.leftleg = 0 end
					elseif affstrack.score.rightleg &gt; 100 then
         	   ak.limbs.limbcount[target].rightleg = ak.limbs.limbcount[target].lastpercentrightleg
         	   cecho("\n\n&lt;cyan&gt;"..target.."'s &lt;yellow&gt;Right Leg &lt;cyan&gt;Count Is Off! Attempting To Correct!\n\n")
         	   _G[target.."rightlegdisablelimbdamage"] = nil
         	   if ak.thoughtIhad then ak.thoughtIhad("rightleg") else affstrack.score.rightleg = 0 end
					end
				end
      end
   --end
   affstrack.score.leftleg = 0
   affstrack.score.rightleg = 0
   ak.scoreup(matches[2])
   cecho("&lt;cyan&gt;\n\n"..target.. " IS NO LONGER PRONE.  HE|SHE IS UP!!\n\n")
   cecho("&lt;cyan&gt;"..target.. " IS NO LONGER PRONE.  HE|SHE IS UP!!\n\n")
   cecho("&lt;cyan&gt;"..target.. " IS NO LONGER PRONE.  HE|SHE IS UP!!\n\n")
   cecho("&lt;cyan&gt;"..target.. " IS NO LONGER PRONE.  HE|SHE IS UP!!\n\n")
   if ak.limbs.limbcount[matches[2]] then
      _G[target.."rightlegdisablelimbdamage"] = nil
      _G[target.."leftlegdisablelimbdamage"] = nil
   end
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) stands up\.$</string>
							<string>^([\w'\-]+) rolls smoothly back to [\w'\-]+ feet\.$</string>
							<string>^([\w'\-]+) backs away and out of your reach\.$</string>
							<string>^([\w'\-]+) pushes off the ground, coming back up into a guard position\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Darkshade</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then 
   if ak.ProTrackingConfirmed then 
      ak.ProTrackingConfirmed("darkshade") 
   else
      affstrack.score.darkshade = 100
      ak.scoreup(matches[2])
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) stiffens suddenly, (his|her) features a masque frozen in agony\.$</string>
							<string>^([\w'\-]+) lets out a piercing scream, as if wounded by the very sunlight\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Awake</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppLostAff("sleep")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) wakes up with a gasp of pain\.$</string>
							<string>^([\w'\-]+) opens (?:his|her) eyes and stretches languidly, a smile on (?:his|her) face\.$</string>
							<string>^([\w'\-]+) opens (?:his|her) eyes and yawns mightily\.$</string>
							<string>^([\w'\-]+) awakens with a start\.$</string>
							<string>^([\w'\-]+) opens [\w'\-]+ eyes and yawns mightily\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Prone</name>
						<script>if ak.ai() then return end
--ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
	EchoForMajorAff("PRONE")
	OppGainedAff("prone")
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Sweeping out with a blade hand, [\w'\-]+l strikes at the back of ([\w'\-]+)'s knee\.$</string>
							<string>^Drawing an enormous breath\, [\w'\-]+ exhales\, expelling a gale of wind with such force that ([\w'\-]+) is knocked over\.$</string>
							<string>^([\w'\-]+) is knocked forcefully off (?:her|his) feet by the impact of [\w'\-]+\'s huge tail\.$</string>
							<string>^([\w'\-]+)\'s eyes close suddenly as (?:she|he) falls asleep\.$</string>
							<string>^([\w'\-]+) is knocked off h(?:is|er) feet by the heaving ground\.$</string>
							<string>^[\w'\-]+ throws (?:his|her) palms forward, releasing a stream of deadly blue light to cripple ([\w'\-]+)\.$</string>
							<string>^Drawing an enormous breath, you exhale, expelling a gale of wind with such force that ([\w'\-]+) is </string>
							<string>([\w'\-]+) is knocked forcefully off (?:his|her) feet by the impact of your huge tail\.$</string>
							<string>^You hear two loud snaps and see ([\w'\-]+) fall to the ground\.$</string>
							<string>^You knock the legs out from under ([\w'\-]+) and send (him|her) sprawling\.$</string>
							<string>^You duck low and smash your shield into the knees of ([\w'\-]+)\, causing them to buckle underneath (?:her|him)\.$</string>
							<string>^Stepping forward, you grab the useless .* of ([\w'\-]+), wrench (him|her) violently forward, and throw (him|her) to the ground\.$</string>
							<string>^You lunge downward, slamming the edge of .+ into the shins of ([\w'\-]+)\.</string>
							<string>^You swiftly sweep ([\w'\-]+) feet out from beneath</string>
							<string>^An .* tangles itself in the legs of ([\w'\-]+)\, sending (her|him) sprawling to the ground\.$</string>
							<string>^A .* tangles itself in the legs of ([\w'\-]+)\, sending (her|him) sprawling to the ground\.$</string>
							<string>^Dropping into a low crouch\, you expertly tangle .* with the legs of ([\w'\-]+)\, sending [\w'\-]+ sprawling\.$</string>
							<string>^The staff sweeps the legs out from under ([\w'\-]+)\, sending [\w'\-]+ sprawling\.$</string>
							<string>^The instep of your foot smashes into the [\w'\-]+ underarm of ([\w'\-]+)\, throwing [\w'\-]+ from [\w'\-]+ feet and sending [\w'\-]+ spinning to the ground\.$</string>
							<string>^[\w'\-]+ drops low\, tangling .+ with the legs of ([\w'\-]+) and sending [\w'\-]+ sprawling\.$</string>
							<string>^[\w'\-]+ drops to the floor and sweeps [\w'\-]+ legs round at ([\w'\-]+)\.$</string>
							<string>^([\w'\-]+) slips on a thin layer of fluid\, [\w'\-]+ feet flying out from under [\w'\-]+\.$</string>
							<string>^Water thunders down upon ([\w'\-]+)\, driving [\w'\-]+ relentlessly to [\w'\-]+ knees\.$</string>
							<string>^The [\w'\-]+ leg of ([\w'\-]+) buckles under the impact\, and [\w'\-]+ goes sprawling\.$</string>
							<string> ^[\w'\-]+ lunges downward, slamming theedge of .* into the shins of ([\w'\-]+)\.$</string>
							<string>^Sweeping out with a blade hand\, [\w'\-]+ strikes at the back of ([\w'\-]+)\'s knee\.$</string>
							<string>^As your blow cuts deeply into the leg of ([\w'\-]+)\, you drive savagely forward\, taking [\w'\-]+ clean off [\w'\-]+ feet\.$</string>
							<string>^You strike a savage blow with your quarterstaff at (\w+)\'s damaged leg\, bringing \w+ crashing to the ground\.$</string>
							<string>^(\w+) is flung violently from \w+ feet\.$</string>
							<string>^([\w'\-]+) has already fallen to the ground\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Expert Diagnose True</name>
						<script>if ak.ai() then return end
if ak.ProTrackingConfirmed then 
   ak.ProTrackingConfirmed(matches[4]) 
else 
   affstrack.score[matches[4]] = 100
   ak.scoreup(matches[2])
end
ak.diagnosingoffbal = true
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Casting a discerning eye over ([\w'\-]+), you determine that (he|she) shows the symptoms of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Expert Diagnose False</name>
						<script>if ak.ai() then return end
if ak.thoughtIhad then 
   ak.thoughtIhad(matches[3]) 
else
   affstrack.score[matches[3]] = 0
   ak.scoreup(matches[2])
end
ak.diagnosingoffbal = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Casting a discerning eye over ([\w'\-]+), you can see no symptoms of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dustbomb</name>
						<script>if ak.ai() then return end
OppGainedAff("blackout")
tempTimer(4,[[affstrack.score.blackout = 0;ak.scoreup(target)]])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You lob a dust bomb at the ground and watch it explode.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Nausea</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   if ak.ProTrackingConfirmed then 
      ak.ProTrackingConfirmed("nausea") 
   else
      affstrack.score.nausea = 100
      ak.scoreup(matches[2])
   end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) doubles over\, vomiting violently\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Confusion</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
  if ak.ProTrackingConfirmed then 
     ak.ProTrackingConfirmed("confusion") 
  else
     affstrack.score.confusion = 100
     ak.scoreup(matches[2])
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) looks about bemusedly\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Slickness</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(multimatches[2][2]) and not table.contains(ak.slickfucks,multimatches[2][2]) then 
  ak.defs.sileris = false
  if partyRelayed then partyRelayed("slickness") end
  --OppGainedAff("slickness")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The protective coating covering the skin of</string>
							<string>^The protective coating covering the skin of ([\w'\-]+) sloughs off\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Rolling Getup</name>
						<script>if ak.ai() then return end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) rolls smoothly back to [\w'\-]+ feet\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Diagnosing Off Balance</name>
						<script>if ak.ai() then return end
ak.diagnosingoffbal = true
ak.deleteFull()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You can not do that again so soon.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Diagnosing On Balance</name>
						<script>if ak.ai() then return end
ak.diagnosingoffbal = false
ak.deleteFull()
if currentlydiagnosingak and currentlydiagnosingak ~= "" then
   send(currentlydiagnosingak)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You may check someone for afflictions once again.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Invalid Aff</name>
						<script>if ak.ai() then return end
if currentlydiagnosingak then cecho("&lt;cyan&gt;\n\n\n"..currentlydiagnosingak.." IS NOT A VALID AFF\n\n") end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>That is not a valid affliction to check for.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Mickey</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   ak.mickey = false
   if ak.ProTrackingConfirmed then 
      ak.ProTrackingConfirmed("nausea") 
   else
      affstrack.score.nausea = 100
      ak.scoreup(matches[2])
   end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) pops a mickey into (her|her) mouth\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Paranoia</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
  OppGainedAff("paranoia")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The raven dives at </string>
							<string>^The raven dives at ([\w'\-]+) and pulls up short\, making (him|her) uneasy\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Deafness</name>
						<script>if ak.ai() then return end
if IsTargetted(multimatches[2][2]) then   
   affstrack.score.deaf = 100
   tempTimer(5,[[affstrack.score.deaf = 0;ak.scoreup(]]..multimatches[2][2]..[[)]])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A brief look of concentration crosses the face of</string>
							<string>A brief look of concentration crosses the face of ([\w'\-]+)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Snake Bite</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   --ak.defs.sileris = false
   OppGainedAff("scytherus")
   ak.scoreup(matches[2])
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^An .* sinks its fangs into the neck of ([\w'\-]+)\, injecting a potent dose of toxin\.$</string>
							<string>^A .* sinks its fangs into the neck of ([\w'\-]+)\, injecting a potent dose of toxin\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Masochism</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   if ak.ProTrackingConfirmed then 
      ak.ProTrackingConfirmed("masochism") 
   else
      affstrack.score.masochism = 100
      ak.scoreup(matches[2])
   end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) drives a clenched fist into [\w'\-]+ gut\.$</string>
							<string>^([\w'\-]+) uses [\w'\-]+ right foot to stomp on [\w'\-]+ left as hard as possible\.$</string>
							<string>^([\w'\-]+) smiles as [\w'\-]+ rams [\w'\-]+ fist into [\w'\-]+ jaw\.$</string>
							<string>^With the heel of [\w'\-]+ palm\, ([\w'\-]+) smacks [\w'\-]+ upside the head\.$</string>
							<string>^([\w'\-]+) uses [\w'\-]+ [\w'\-]+ foot to stomp on [\w'\-]+ [\w'\-]+ as hard as possible\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Deafness</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   if ak.ProTrackingConfirmed then 
      ak.ProTrackingConfirmed("deaf") 
   else
      affstrack.score.deaf = 100
      ak.scoreup(matches[2])
   end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The side of ([\w'\-]+)\'s head is lightly struck by [\w'\-]+\'s rapier\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Infestation</name>
						<script>if ak.ai() then return end
if IsTargetted(multimatches[2][2]) then 
   if ak.ProTrackingConfirmed then
      ak.ProTrackingConfirmed(multimatches[2][3]) 
   else
      affstrack.score[multimatches[2][3]] = 100
      ak.scoreup(multimatches[2][2])
   end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You sense through your malignant connection to your infestation that </string>
							<string>^You sense through your malignant connection to your infestation that ([\w'\-]+) has been cursed with ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Attended</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   affstrack.score.deaf = 100
   affstrack.score.blind = 100
   ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^[\w'\-]+ glows with an emerald hue and snaps [\w'\-]+ fingers at ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Claustrophobia</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   if ak.ProTrackingConfirmed then 
      ak.ProTrackingConfirmed("claustrophobia") 
   else
      affstrack.score.claustrophobia = 100
      ak.scoreup(matches[2])
   end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) begins to pant in terror\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Agoraphobia</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   if ak.ProTrackingConfirmed then 
      ak.ProTrackingConfirmed("agoraphobia") 
   else
      affstrack.score.agoraphobia = 100
      ak.scoreup(matches[2])
   end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) is gripped with fear\, staring out with terrified eyes\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dementia</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   if ak.ProTrackingConfirmed then 
      ak.ProTrackingConfirmed("dementia") 
   else
      affstrack.score.dementia = 100
      ak.scoreup(matches[2])
   end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) stares about [\w'\-]+ frenziedly\, wild\-eyed\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>TimeLoop</name>
						<script>if ak.ai() then return end
if IsTargetted(multimatches[2][2]) then 
   OppGainedAff("timeloop")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Grey fog begins to rise from the suddenly panicked-looking</string>
							<string>^Grey fog begins to rise from the suddenly panicked\-looking ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Parried Venom Decline</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) and ak.thoughtIhad then
   affstrack.score.prone = 0
   affstrack.score.scalded = 0  
   ak.thoughtIhad("nausea") 
   ak.thoughtIhad("paralysis") 
elseif IsTargetted(matches[2]) then
   affstrack.score.prone = 0
   affstrack.score.scalded = 0
   affstrack.score["nausea"] = 0
   ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) parries the attack with a deft manoeuvre.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bcry</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppGainedAff("sensitivity")	
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#55ffff</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) falls to [\w'\-]+ knees and clutches [\w'\-]+ ears as the shaft of sound strikes ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Nairat</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   affstrack.score.bound = 100
   ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Ethereal bonds flash forth to bind ([\w'\-]+) as [\w'\-]+ gaze falls upon a nairat rune\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Epilepsy</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   if ak.ProTrackingConfirmed then 
      ak.ProTrackingConfirmed("epilepsy") 
   else
      affstrack.score.epilepsy = 100
      ak.scoreup(matches[2])
   end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) begins to jerk and shake violently\, foaming at the mouth\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Frozen Disrupt</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   affstrack.score.disrupt = 100
   if affstrack.score.frozen &lt; 100 then affstrack.score.frozen = 100 end
   ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) shivers particularly intensely\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Artificing</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Smash</name>
							<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[4]) then
   smashlimb = matches[2]..matches[3]
   if affstrack.score[smashlimb] &lt; 100 then
      OppGainedAff(smashlimb)
   end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The crackle of snapping bone can be heard as a crystalline golem viciously twists the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Timeflux Wear Off</name>
							<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
   if fluxtimer then 
      killTimer(fluxtimer)
      fluxtimer = nil 
   end
   OppLostAff("timeflux")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) appears far less sluggish all of a sudden\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Failed Hypothermia</name>
							<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
   if affstrack.score.frozen &gt; 200 then
      affstrack.score.frozen = 200
   end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A crystalline golem blasts ([\w'\-]+) with an icy stream of water\, but it does little more than irritate [\w'\-]+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Scalded</name>
							<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
   OppGainedAff("scalded")
   if ak.scaldTimer then killTimer(ak.scaldTimer) end
   ak.scaldTimer = tempTimer(17,[[
   	affstrack.score.scalded = 0
   	ak.scoreup(]]..matches[2]..[[)
   ]])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Leaning down over the incapacitated form of ([\w'\-]+)\, a crystalline golem sprays a stream of super\-heated steam directly into [\w'\-]+ face\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hypothermia</name>
							<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(multimatches[2][2]) then
   affstrack.score.frozen = 300
   affstrack.score.hypothermia = 100
   ak.scoreup(multimatches[2][2])
end
--affstrack.score.frozen = (affstrack.score.frozen * 2)-100</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>As a crystalline golem blasts </string>
								<string>^As a crystalline golem blasts ([\w'\-]+) with icy water, [\w'\-]+ begins to shake and tremble uncontrollably\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Dehydrate</name>
							<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
   affstrack.score.prone = 100
   if affstrack.score.aflame &lt; 100 then
      affstrack.score.aflame = 100
   end
   if dehydratetimer then 
      killTimer(dehydratetimer)
      dehydratetimer = nil 
   end
   OppGainedAff("dehydrate")
   dehydratetimer = tempTimer(45, [[OppLostAff("dehydrate")]])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) winces in evident discomfort as a crystalline golem points a single appendage at [\w'\-]+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Conflagrate</name>
							<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
   if affstrack.score.aflame &lt; 200 then
      affstrack.score.aflame = 200
   end
   OppGainedAff("conflagrate")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^As a crystalline golem turns toward ([\w'\-]+), the flames crackling across</string>
								<string>^The conflagration about ([\w'\-]+) continues to rage, searing flesh from bone\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>TimeFlux</name>
							<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
if fluxtimer then killTimer(fluxtimer);fluxtimer = nil end
OppGainedAff("timeflux")
fluxtimer = tempTimer(65, [[OppLostAff("timeflux")]])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^As a crystalline golem begins to pulse with a strange inner glow, ([\w'\-]+) sways unsteadily\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shikudo</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hiraku Anorexia</name>
							<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then 
	local aff = "anorexia"
	ak.AddedAffReset(aff)
	ak.AddedAffReset("stuttering")
	affstrack.score[aff] = 100
	affstrack.score["stuttering"] = 100
	ak.echogain("anorexia, stuttering")
	ak.scoreup(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The staff smashes into the face of ([\w'\-]+) with a sickening crunch\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hiru Dizziness</name>
							<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then 
	local aff = "dizziness"
	ak.AddedAffReset(aff)
	affstrack.score[aff] = 100
	ak.echogain(aff:title())
	ak.scoreup(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The staff connects to the side of ([\w'\-]+)\'s head with a resounding crack\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ruku clumsiness/healthleech</name>
							<script>if ak.ai() then return end
--ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
	if ak.kata and ak.kata &gt;= 9 then
		OppGainedAff("clumsiness, healthleech")
	elseif affstrack.score.clumsiness &lt;100 then 
		local aff = "clumsiness"
		ak.AddedAffReset(aff)
		affstrack.score[aff] = 100
		ak.echogain(aff:title())
		ak.scoreup(matches[2])
	else 
	  local aff = "healthleech"
		ak.AddedAffReset(aff)
		affstrack.score[aff] = 100
		ak.echogain(aff:title())
		ak.scoreup(matches[2])
	end
end

--if kata &gt; 8 ruku gives both</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You whip a .+ at ([\w'\-]+) in a controlled arc\, bringing its length to crack against [\w'\-]+ [\w'\-]+ arm\.$</string>
								<string>^You spin a full rotation\, bringing .+ staff around in a blur of motion to smash into the [\w'\-]+ arm of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ruku Slickness</name>
							<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then 
  local aff = "slickness"
	ak.AddedAffReset(aff)
	affstrack.score[aff] = 100
	ak.echogain(aff:title())
	ak.scoreup(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) staggers as the staff cracks across [\w'\-]+ ribs\, sweat breaking out upon [\w'\-]+ forehead\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Kuro weariness/lethargy</name>
							<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
	if ak.kata &gt;= 11 then
		OppGainedAff("lethargy, weariness")
	elseif affstrack.score.weariness&lt;100 then 
		local aff = "weariness"
		ak.AddedAffReset(aff)
		affstrack.score[aff] = 100
		ak.echogain(aff:title())
		ak.scoreup(matches[2])
	else
		local aff = "lethargy"
		ak.AddedAffReset(aff)
		affstrack.score[aff] = 100
		ak.echogain(aff:title())
		ak.scoreup(matches[2])
	end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The staff cracks across the [\w'\-]+ thigh of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Livestrike asthma</name>
							<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then 
	local aff = "asthma"
	ak.AddedAffReset(aff)
	affstrack.score[aff] = 100
	ak.echogain(aff:title())
	ak.scoreup(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The breath of ([\w'\-]+) leaves [\w'\-]+ in an explosive gasp as the end of the staff smashes home\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Needle crushedthroat</name>
							<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then 
	local aff = "crushedthroat"
	ak.AddedAffReset(aff)
	affstrack.score[aff] = 100
	ak.echogain(aff:title())
	ak.scoreup(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The end of the staff smashes into the exposed throat of ([\w'\-]+)\, crushing cartilage\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Flashheel Bonus Limb</name>
							<script>if ak.ai() then return end
if not ak.limbs.shikudo.flashed then
  return
end
ak.limbs.ParseonLine()
local smashlimb = ak.limbs.shikudo.flashed.."leg"
if affstrack.score[smashlimb] &lt; 100 then
   OppGainedAff(smashlimb)
end
ak.limbs.shikudo.flashed = false

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You feel the satisfying crunch of bone under the impact of your heel.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Air Elemental</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Disloyalty</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[4]) then
   affstrack.score.disloyalty = 100
	 ak.scoreup(matches[4])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A howling wind sweeps over ([\w'\-]+)\, ripping flesh from bone and leaving [\w'\-]+ face a bloody ruin\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hamstring Lost</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppLostAff("hamstring")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) seems able to move more freely all of a sudden\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Peace</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppLostAff("pacifism")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+)\'s eyes are filled with compassion and peace\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Clumsiness</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
  if ak.ProTrackingConfirmed then 
     ak.ProTrackingConfirmed("clumsiness") 
  else
     affstrack.score.clumsiness = 100
     ak.scoreup(matches[2])
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) misses you with [\w'\-]+ dirk by a hair\.$</string>
							<string>^([\w'\-]+) points [\w'\-]+ finger at you\, but nothing seems to happen\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Blindness</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then   
   affstrack.score.blind = 100
   tempTimer(6,[[affstrack.score.blind = 0;ak.scoreup(]]..matches[2]..[[)]])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) blinks slowly\, and begins to tremble\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Relapsed</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
	if ak.ProTrackingConfirmed then 
	   ak.ProTrackingConfirmed("scytherus") 
	else 
	   affstrack.score.scytherus = 100
	   ak.scoreup(matches[2])
	end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) screams out in agony\, struck by the effects of a vicious venom\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Not Asthmatic</name>
						<script>if ak.thoughtIhad and affstrack.score.asthma &gt; 0 then
	ak.thoughtIhad("asthma")	
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You attempt to squeeze the life out of the effigy in your hands, but find the torso too tight.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Agith'tai</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
  OppGainedAff(gmcp.Char.Afflictions.Add.name)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Your mental defences lash out against ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Paralysis</name>
						<script>local name = matches[2]
if (name == target.name) then
if not table.contains(target.afflictions, "paralysis") then
	  targAffAdd("paralysis")
end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Horror overcomes ([\w'\-]+)'s face as ([\w'\-]+) body stiffens into paralysis\.$</string>
							<string>^([\w'\-]+) stiffens suddenly\, (his|her) features a masque frozen in agony\.$</string>
							<string>^([\w'\-]+)'s body stiffens rapidly with paralysis\.$</string>
							<string>^The body of ([\w'\-]+) locks in paralysis as [\w'\-]+ directs a short burst of arcane power in [\w'\-]+ direction\.$</string>
							<string>^Lunging to the side\, [\w'\-]+ brings [\w'\-]+ shield around to smash into the spine of ([\w'\-]+)\.$</string>
							<string>^[\w'\-]+ recites an epic tale of the heroism of Nicator to ([\w'\-]+)\.$</string>
							<string>^Horror overcomes the face of ([\w'\-]+) as [\w'\-]+ body locks in paralysis\.$</string>
							<string>^([\w'\-]+)\'s limbs suddenly lock up\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Psion Epseth</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[4]) then
   smashlimb = matches[2]..matches[3]
   if affstrack.score[smashlimb] &lt; 100 then
      OppGainedAff(smashlimb)
   end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^[\w'\-]+ ducks low\, \w+ blade slicing into the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Not Crushed Throat</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	if affstrack.score.crushedthroat&gt;0 then 
		if ak.thoughtIhad then 
			ak.thoughtIhad("crushedthroat") 
		else 
			affstrack.score.crushedthroat = 0 
		end  
	end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) is not sufficiently incapacitated for you to dispatch \w+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hypersomnia</name>
						<script>if IsTargetted(matches[2]) then 
  OppGainedAff("hypersomnia")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) suddenly appears tired all of a sudden\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Take</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Herb</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Kelp Aurum</name>
							<script>-- ["piece of kelp"]    = {"rebbies","asthma", "clumsiness", "hypochondria", "sensitivity", "weariness", "healthleech", "parasite"},
-- ["aurum flake"]      = {"rebbies","asthma", "clumsiness", "hypochondria", "sensitivity", "weariness", "healthleech", "parasite"},</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Unique Kelp</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Rigidity Take</name>
									<script>if (matches[2] == target.name) then
	if (table.contains(target.afflictions, "rigidity")) then
		targAffSub("rigidity")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED RIGIDITY&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+)'s limbs no longer look so rigid\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Fitness Take</name>
									<script>local name = matches[2]
if (name == target.name) then
		if (table.contains(target.afflictions, "asthma")) then
		targAffSub("asthma")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED ASTHMA&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end	
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) inhales deeply, then slowly exhales.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Purgeblood</name>
									<script>local name = matches[2]
if (name == target.name) then
	purgeblood = false
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+)'s colour returns to (his|her) face\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Butisol Take</name>
									<script>local name = matches[2]
if (name == target.name) then
	if (table.contains(target.afflictions, "butisol")) then
		targAffSub("butisol")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED BUTISOL&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end	
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+)'s skin color returns to normal and (his|her) sweating subsides\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Asthma Take</name>
									<script>local name = matches[2]
if (name == target.name) then
	if (table.contains(target.afflictions, "asthma")) then
		targAffSub("asthma")
		disableTimer("asthma")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED ASTHMA&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end	
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) takes a long drag off (his|her) pipe, (.*)\.$</string>
										<string>^(\w+) invokes the powers of Air and lays (his|her) healing hands on \w+\.$</string>
										<string>^(\w+) inhales deeply, then slowly exhales.$</string>
										<string>^(\w+) takes a long drag off (his|her) pipe, exhaling a thick, white haze\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Hemotoxin Take</name>
									<script>local name = matches[2]
if (name == target.name) then
	if (table.contains(target.afflictions, "hemotoxin")) then
		targAffSub("hemotoxin")
		target.instilled = false
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED HEMOTOXIN&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end	
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+)'s colour returns to (his|her) face\.$</string>
										<string>^(\w+) concentrates on purging toxins from \w+ body\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Kelp|Aurum Take</name>
								<script>local name = multimatches[1][2]

if (name == target.name) then

if (table.contains(target.mentalaffs, "anorexia")) then
  targMaffSub("anorexia")
end

  if (table.contains(target.afflictions, "weariness")) then
		targAffSub("weariness")
	elseif (table.contains(target.afflictions, "healthleech")) then
		targAffSub("healthleech")
	elseif (table.contains(target.afflictions, "clumsiness")) then
		targAffSub("clumsiness")
  elseif (table.contains(target.afflictions, "sensitivity")) then
		targAffSub("sensitivity")
  elseif (table.contains(target.afflictions, "hypochondria")) then
		targAffSub("hypochondria")
  elseif (table.contains(target.afflictions, "asthma")) then
		targAffSub("asthma")
  elseif (table.contains(target.afflictions, "parasite")) then
		targAffSub("parasite")
  elseif (table.contains(target.plagues, "rebbies")) then
		targPlagueSub("rebbies")
  else
    cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;Affliction Tracker Fucked Up&lt;cyan&gt;][][][][][]")
	end
end

</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>1</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) eats (a piece of kelp|an aurum flake)\.$</string>
									<string>return isPrompt()</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>4</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bloodroot Magnesium</name>
							<script>-- ["bloodroot leaf"]   = {"pyramides","paralysis", "slickness"},
-- ["magnesium chip"]   = {"pyramides","paralysis", "slickness"},</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Unique Bloodroot</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Ciguatoxin CD</name>
									<script>local name = matches[2]
if (name == target.name) then
	if (not table.contains(target.afflictions, "paralysis")) or (table.contains(target.afflictions, "paralysis")) then
		printTargetWindow()
		target.paralysis = true
		enableTimer("Ciguatoxin")
	end	
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) flexes (his|her) muscles and drives off the effects of paralysis\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Take Via Action</name>
									<script>local name = matches[2]
if (name == target.name) then
	if (table.contains(target.afflictions, "paralysis")) then
		targAffSub("paralysis")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED PARALYSIS&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end	
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You thrust your blade towards (\w+) but (he|she) dodges easily out of the way\.$</string>
										<string>^(\w+) cradles .+ in the crook of (his|her) arm and begins to strum out</string>
										<string>^(\w+) laugs sadistically, stealing your mana\.$</string>
										<string>^(\w+) points an elemental staff at you</string>
										<string>^(\w+) quickly wraps the haft of .+ around</string>
										<string>^(\w+) slashes into .+ with </string>
										<string>^(\w+) swings .+ at .+ with a powerful strike\.$</string>
										<string>^(\w+) swings .+ at .+ with all \w+ might\.$</string>
										<string>^(\w+) viciously slashes .+ with .+\.$</string>
										<string>^(\w+) swings .+ powerfully at</string>
										<string>^With a lightning\-quick motion, (\w+) slashes</string>
										<string>^Lightning\-quick, (\w+) jabs</string>
										<string>^(\w+) swings .+ at you powerfully\.$</string>
										<string>^(\w+) tries to leave, but you block (him|her) from moving that way\.$</string>
										<string>^(\w+) touches a tree of life tattoo\.$</string>
										<string>^(\w+) stands up and stretches (his|her) arms out wide\.$</string>
										<string>^(\w+) takes .+ and tosses it gently at .+ such that it rubs lightly</string>
										<string>^(\w+) takes up .+ in (his|her) (left|right) hand\.$</string>
										<string>^(\w+) throws a dart at .+, but it strikes the ground missing\.$</string>
										<string>^(\w+) swings the haft of .+ in a long, sweeping curve at</string>
										<string>^With one fluid maneuver, (\w+) steps forward, hooking (his|her) leg</string>
										<string>^You feel your body and mind ripped apart as you are enfeebled by (\w+)\.$</string>
										<string>^You see a wave of energy shoot out from (\w+) and slam into</string>
										<string>^With a vicious snarl (\w+) carves a merciless swathe through</string>
										<string>^With blinding speed, (\w+) transfixes you with a swirling</string>
										<string>^With lightning speed (\w+) strikes your head with a devastating</string>
										<string>^With one fluid maneuver, (\w+) steps forward, hooking</string>
										<string>^With a daegger in hand, (\w+) begins to close in on you\.$</string>
										<string>^To the .+, you see (\w+) begin to spur (his|her) mount in</string>
										<string>^Sticky strands of webbing spray out from (\w+)'s web tattoo and</string>
										<string>^Screaming, (\w+) rushes away to the</string>
										<string>^Catching you off balance, (\w+) stuns you with (his|her) shield\.$</string>
										<string>^Blue lightning crackles in (\w+)'s eyes and streaks out to</string>
										<string>^(\w+)'s attack rebounds off your translucient shield\.$</string>
										<string>^(\w+)'s arms seem to tremble with barely restrained energy</string>
										<string>^(\w+) whips .+ through the air in front of you, to no effect\.$</string>
										<string>^(\w+) whips (his|her) arm downwards and looses a long dart,</string>
										<string>^(\w+) swings the haft of .+ in a long, sweeping</string>
										<string>^(\w+) swings the crackling mace about (his|her) head, gathering momentum</string>
										<string>^(\w+) strikes you with a dark bolt of energy directed</string>
										<string>^(\w+) spins about you, flashing (his|her) shield into your eyes</string>
										<string>^(\w+) slices at you with the sharpened ege of.+\.$</string>
										<string>^(\w+) razes your aura of rebounding with .+\.$</string>
										<string>^(\w+) stares at you, giving you the evil eye\.$</string>
										<string>^You nimbly dodge the immensely powerful pounding fists of (\w+)\.$</string>
										<string>^(\w+) springs forwards onto you and mauls</string>
										<string>^(\w+) pounds the ground with both fists and a tremor sweeps</string>
										<string>^(\w+) points an elemental staff at</string>
										<string>^The sky above grows dark as (\w+) calls upon powerful magicks\.$</string>
										<string>^(\w+) tries to leave, but you block (him|her) from moving that way\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Take Via Action 2</name>
									<script>local name = matches[2]
if (name == target.name) then
	if (table.contains(target.afflictions, "paralysis")) then
		targAffSub("paralysis")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED PARALYSIS&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end	
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) raises (his|her) hands dramaically, and summons an icewall to the</string>
										<string>^(\w+) utters a prayer to .+ and smites</string>
										<string>^(\w+) swings .+ at</string>
										<string>^Stinging pain hits you as (\w+) rakes you</string>
										<string>^With amazing agility (\w+) brings .+ crashing</string>
										<string>^Your (left|right) leg threatens to buckle as (\w+) hooks</string>
										<string>^(\w+) aims a short, quick jab at</string>
										<string>^(\w+) balls up one fist and hammerfists</string>
										<string>^(\w+) dives forward to thrust .+ into</string>
										<string>^(\w+) forms a spear hand and stabs out at</string>
										<string>^(\w+) kicks (his|her) leg high and scythes downwards at</string>
										<string>^(\w+) lets fly at .+ with a snap kick\.$</string>
										<string>^(\w+) lunges forward, thrusting</string>
										<string>^(\w+) pumps out at \w+ with a powerful side kick\.$</string>
										<string>^(\w+) quickly advances on \w+ and bashes</string>
										<string>^(\w+) spins into the air and throws a whirlwind kick towards</string>
										<string>^(\w+) cocks back (his|her) arm and throws a throwing axe</string>
										<string>^(\w+) steps in and executes a quck slash across</string>
										<string>^(\w+) hurls (him|her)self towards</string>
										<string>^(\w+) jabs forward with .+ at</string>
										<string>^(\w+) launches a powerful upercut at</string>
										<string>^(\w+) slashes into \w+</string>
										<string>^(\w+) stabs forth with blinding speed, driving the tip of (his|her) knife into</string>
										<string>^(\w+) unleashes a powerful hook towards</string>
										<string>^(\w+) razes \w+</string>
										<string>^You shriek in pain as (\w+) crashes (his|her) muscled arms down onto you\.$</string>
										<string>^(\w+) stares at you, but your curseward holds\.$</string>
										<string>^(\w+) stares at you, giving you the evil eye\.$</string>
										<string>^(\w+) mutters words of death and decay, and suddenly the</string>
										<string>^A living daegger comes racing in towards (\w+), stopping unnaturally</string>
										<string>^Hunt! (\w+) orders (his|her) daegger\.$</string>
										<string>^(\w+) mixes some .+ and .+ throws it</string>
										<string>^A shimmering translucient shield forms around (\w+)\.$</string>
										<string>^(\w+) points an imperious finger at \w+</string>
										<string>^(\w+) throws some .+ bone dust</string>
										<string>^You out\-maneuver (\w+)'s attempt to garrote you from behind\.$</string>
										<string>^(\w+) quickly flings some \w+ dust at you, to no effect\.$</string>
										<string>^(\w+) slips behind you and garrotes you with (his|her) whip\.$</string>
										<string>^(\w+) inhales deeply, holds it for a moment, then exhales\.$</string>
										<string>^(\w+) waves (his|her) quarterstaff in front of you and an (.*) root lashes out with a tendril, bewildering you\.$</string>
										<string>^(\w+) gives a (.+) a quick flourish before driving it forcefully into your body\.$</string>
										<string>^The icy coating on (\w+)'s (.+) leaches into your wound, chilling you\.$</string>
										<string>^(\w+) selects a small, (.+)</string>
										<string>^(\w+ ) concentrates briefly on a sketch (.+)</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Bloodroot|Magnesium Take</name>
								<script>local name = multimatches[1][2]

if (name == target.name) then

if (table.contains(target.mentalaffs, "anorexia")) then
  targMaffSub("anorexia")
end

	if table.contains(target.afflictions, "paralysis") then
		targAffSub("paralysis")
	elseif table.contains(target.plagues, "pyramides") then
		targPlagueSub("pyramides")
  elseif table.contains(target.afflictions, "slickness") then
		targAffSub("slickness")
  else
    cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;Affliction Tracker Fucked Up&lt;cyan&gt;][][][][][]")
	end	
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>1</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) eats a (bloodroot leaf|magnesium chip)\.$</string>
									<string>return isPrompt()</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>4</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ginseng Ferrum</name>
							<script>-- ["ginseng root"]     = {"flushings","addiction", "darkshade", "haemophilia", "lethargy", "nausea", "scytherus"},
-- ["ferrum flake"]     = {"flushings","addiction", "darkshade", "haemophilia", "lethargy", "nausea", "scytherus"},</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Unique Ginseng</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Xeroderma Take</name>
									<script>local name = matches[2]
if (name == target.name) then
	if (table.contains(target.afflictions, "sunallergy")) then
		targAffSub("sunallergy")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED SUNALLERGY&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end	
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) looks relieved as \w+ skin loses its reddish hue\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ginseng|Ferrum Take</name>
								<script>local name = multimatches[1][2]

if (name == target.name) then

if (table.contains(target.mentalaffs, "anorexia")) then
  targMaffSub("anorexia")
end

  if (table.contains(target.afflictions, "haemophilia")) then
		targAffSub("haemophilia")
	elseif (table.contains(target.plagues, "flushings")) then
		targPlagueSub("plagues")
	elseif (table.contains(target.afflictions, "addiction")) then
		targAffSub("addiction")
	elseif (table.contains(target.afflictions, "lethargy")) then
		targAffSub("lethargy")
  elseif (table.contains(target.afflictions, "darkshade")) then
		targAffSub("darkshade")
  elseif (table.contains(target.afflictions, "scytherus")) then
		targAffSub("scytherus")
  else
    
	end	
end

if (name == target.name) then
	if (table.contains(target.afflictions, "nausea")) then
		targAffSub("nausea")
	end
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>1</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) eats a (ginseng root|ferrum flake)\.$</string>
									<string>return isPrompt()</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>4</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Goldenseal Plumbum</name>
							<script>-- ["goldenseal root"]  = {"sandfever","mycalium","dizziness", "epilepsy", "impatience", "shyness", "stupidity", "depression", "shadowmadness"},
-- ["plumbum flake"]    = {"sandfever","mycalium","dizziness", "epilepsy", "impatience", "shyness", "stupidity", "depression", "shadowmadness"},</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Unique Goldenseal</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Stupidity Take</name>
									<script>local name = matches[2]
if (name == target.name) then
	if (table.contains(target.mentalaffs, "stupidity")) then
		targMaffSub("stupidity")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED STUPIDITY&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+)'s expression no longer looks so vacant\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Goldenseal|Plumbum Take</name>
								<script>-- ["goldenseal root"]  = {"sandfever","mycalium","dizziness", "epilepsy", "impatience", "shyness", "stupidity", "depression", "shadowmadness"},
local name = multimatches[1][2]
if (name == target.name) then

if (table.contains(target.mentalaffs, "anorexia")) then
  targMaffSub("anorexia")
end

		if (table.contains(target.mentalaffs, "shadowmadness")) then
			targMaffSub("shadowmadness")
		elseif (table.contains(target.mentalaffs, "depression")) then
			targMaffSub("depression")
		elseif (table.contains(target.mentalaffs, "stupidity")) then
			targMaffSub("stupidity")
		elseif (table.contains(target.mentalaffs, "shyness")) then
			targMaffSub("shyness")
		elseif (table.contains(target.mentalaffs, "dizziness")) then
			targMaffSub("dizziness")
		elseif (table.contains(target.afflictions, "impatience")) then
			targAffSub("impatience")
    elseif (table.contains(target.plagues, "sandfever")) then
			targPlagueSub("sandfever")
    elseif (table.contains(target.mentalaffs, "epilepsy")) then
			targMaffSub("epilepsy")
    elseif (table.contains(target.plagues, "mycalium")) then
			targPlagueSub("mycalium")
    else
      cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;Affliction Tracker Fucked Up&lt;cyan&gt;][][][][][]")
	  end	
end

-- if name == target.name then
	-- if (table.contains(target.mentalaffs, "masochism")) then
		-- targMaffSub("masochism")
		-- printTargetWindow()
	-- end
-- end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>1</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) eats a (goldenseal root|plumbum flake)\.$</string>
									<string>return isPrompt()</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>4</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Lobelia Argentum</name>
							<script>-- ["lobelia seed"]     = {"tenderskin", "spiritburn", "agoraphobia", "claustrophobia", "loneliness", "masochism", "recklessness", "vertigo", "spiritdisrupt", "airdisrupt", "earthdisrupt", "firedisrupt", "waterdisrupt"},
-- ["argentum flake"]   = {"tenderskin", "spiritburn", "agoraphobia", "claustrophobia", "loneliness", "masochism", "recklessness", "vertigo", "spiritdisrupt", "airdisrupt", "earthdisrupt", "firedisrupt", "waterdisrupt"},</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Unique Lobelia</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Sulfonal Take</name>
									<script>local name = matches[2]
if (name == target.name) then
	if (table.contains(target.afflictions, "sulfonal")) then
		targAffSub("sulfonal")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED SULFONAL&lt;cyan&gt;][][][][][]")
		target.instilled = false
		target.instilled2 = false
		target.instilled3 = false
		printTargetWindow()
	end	
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) appears less dizzy\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Impatience Take</name>
									<script>local name = multimatches[2][2]
if (name == target.name) then
	if (table.contains(target.afflictions, "impatience")) then
		targAffSub("impatience")
		disableTimer("impatience")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED IMPATIENCE&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end	
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>1</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^A look of extreme focus crosses the face of (\w+)\.$</string>
										<string>^(\w+)'s expression no longer looks so vacant\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Reckless Cured</name>
									<script>local name = matches[2]
if (name == target.name) then
	if (table.contains(target.mentalaffs, "recklessness")) then
		targMaffSub("recklessness")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED RECKLESSNESS&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) takes a drink from a (.+)\.$</string>
										<string>^(\w+) quickly eats a toadstool\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Heroism</name>
									<script>local name = matches[2]
if (name == target.name) then
	if (not table.contains(target.afflictions, "heroism")) then
		targAffAdd("heroism")
		cecho("\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;AFFLICTED HEROISM&lt;OrangeRed&gt;][][][][][]")
		printTargetWindow()
	end
end

</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) stands upright and flexes \w+ muscles\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Lobelia|Argentum Take</name>
								<script>-- ["lobelia seed"]     = {"tenderskin", "spiritburn", "agoraphobia", "claustrophobia", "loneliness", "masochism", "recklessness", "vertigo", "spiritdisrupt", "airdisrupt", "earthdisrupt", "firedisrupt", "waterdisrupt"},
local name = matches[2]
if (name == target.name) then

if (table.contains(target.mentalaffs, "anorexia")) then
  targMaffSub("anorexia")
end

  if (table.contains(target.afflictions, "vertigo")) then
		targAffSub("vertigo")
	elseif (table.contains(target.mentalaffs, "recklessness")) then
		targMaffSub("recklessness")
	elseif (table.contains(target.mentalaffs, "masochism")) then
		targMaffSub("masochism")
	elseif (table.contains(target.afflictions, "loneliness")) then
		targAffSub("loneliness")
	elseif (table.contains(target.mentalaffs, "claustrophobia")) then
		targMaffSub("claustrophobia")
	elseif (table.contains(target.mentalaffs, "agoraphobia")) then
		targMaffSub("agoraphobia")
	elseif (table.contains(target.mentalaffs, "spiritburn")) then
		targMaffSub("spiritburn")
	elseif (table.contains(target.afflictions, "tenderskin")) then
		targAffSub("tenderskin")
    
	elseif (table.contains(target.afflictions, "spiritdisrupt")) then
		targAffSub("spiritdisrupt")
	elseif (table.contains(target.mentalaffs, "earthdisrupt")) then
		targMaffSub("earthdisrupt")
	elseif (table.contains(target.mentalaffs, "airdisrupt")) then
		targMaffSub("airdisrupt")
	elseif (table.contains(target.mentalaffs, "firedisrupt")) then
		targMaffSub("firedisrupt")
	elseif (table.contains(target.afflictions, "waterdisrupt")) then
		targAffSub("waterdisrupt")
    
  else
      cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;Affliction Tracker Fucked Up&lt;cyan&gt;][][][][][]")
	end	
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) eats (a lobelia seed|an argentum flake)\.$</string>
									<string>return isPrompt()</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>4</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ashbark Stannum</name>
							<script>-- ["prickly ash bark"] = {"confusion", "dementia", "hallucinations", "hypersomnia", "paranoia"},
-- ["stannum flake"]    = {"confusion", "dementia", "hallucinations", "hypersomnia", "paranoia"},</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Unique Ashbark</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Hypersomnia Take</name>
									<script>local name = matches[2]
if (name == target.name) then
	if (table.contains(target.mentalaffs, "hypersomnia")) then
		targMaffSub("hypersomnia")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED HYPERSOMNIA&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end	
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) clenches \w+ fists and grits \w+ teeth\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ashbark|Stannum Take</name>
								<script>-- ["prickly ash bark"] = {"confusion", "dementia", "hallucinations", "hypersomnia", "paranoia"},
local name = multimatches[1][2]

if (name == target.name) then

if (table.contains(target.mentalaffs, "anorexia")) then
  targMaffSub("anorexia")
end

	if (table.contains(target.mentalaffs, "paranoia")) then
		targMaffSub("paranoia")
	elseif (table.contains(target.mentalaffs, "hypersomnia")) then
		targMaffSub("hypersomnia")
	elseif (table.contains(target.mentalaffs, "hallucinations")) then
		targMaffSub("hallucinations")
	elseif (table.contains(target.mentalaffs, "dementia")) then
		targMaffSub("dementia")
	elseif (table.contains(target.mentalaffs, "confusion")) then
		targMaffSub("confusion")
  else
      cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;Affliction Tracker Fucked Up&lt;cyan&gt;][][][][][]")
	end	
end

-- if name == target.name then
	-- if (table.contains(target.mentalaffs, "hallucinations")) then
		-- targMaffSub("hallucinations")
		-- printTargetWindow()
	-- end
-- end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>1</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) quickly eats a (prickly ash bark|stannum flake)\.$</string>
									<string>return isPrompt()</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>4</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bellwort Cuprum</name>
							<script>-- ["bellwort flower"]  = {"retribution","timeloop","generosity", "pacifism","justice","lovers"},
-- ["cuprum flake"]     = {"retribution","timeloop","generosity", "pacifism","justice","lovers"},</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Unique Bellwort</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Peace Take</name>
									<script>local name = matches[2]
if (name == target.name) then
	if (table.contains(target.mentalaffs, "peace")) then
		targMaffSub("peace")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED PEACE&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end
end
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) raises (his|her) hands dramaically, and summons an icewall to the</string>
										<string>^(\w+) utters a prayer to .+ and smites</string>
										<string>^(\w+) swings .+ at</string>
										<string>^Stinging pain hits you as (\w+) rakes you</string>
										<string>^With amazing agility (\w+) brings .+ crashing</string>
										<string>^Your (left|right) leg threatens to buckle as (\w+) hooks</string>
										<string>^(\w+) aims a short, quick jab at</string>
										<string>^(\w+) balls up one fist and hammerfists</string>
										<string>^(\w+) dives forward to thrust .+ into</string>
										<string>^(\w+) forms a spear hand and stabs out at</string>
										<string>^(\w+) kicks (his|her) leg high and scythes downwards at</string>
										<string>^(\w+) lets fly at .+ with a snap kick\.$</string>
										<string>^(\w+) lunges forward, thrusting</string>
										<string>^(\w+) pumps out at \w+ with a powerful side kick\.$</string>
										<string>^(\w+) quickly advances on \w+ and bashes</string>
										<string>^(\w+) spins into the air and throws a whirlwind kick towards</string>
										<string>^(\w+) cocks back (his|her) arm and throws a throwing axe</string>
										<string>^(\w+) steps in and executes a quck slash across</string>
										<string>^(\w+) hurls (him|her)self towards</string>
										<string>^(\w+) jabs forward with .+ at</string>
										<string>^(\w+) launches a powerful upercut at</string>
										<string>^(\w+) slashes into \w+</string>
										<string>^(\w+) stabs forth with blinding speed, driving the tip of (his|her) knife into</string>
										<string>^(\w+) unleashes a powerful hook towards</string>
										<string>^(\w+) razes \w+</string>
										<string>^You shriek in pain as (\w+) crashes (his|her) muscled arms down onto you\.$</string>
										<string>^(\w+) stares at you, but your curseward holds\.$</string>
										<string>^(\w+) stares at you, giving you the evil eye\.$</string>
										<string>^(\w+) mutters words of death and decay, and suddenly the</string>
										<string>^A living daegger comes racing in towards (\w+), stopping unnaturally</string>
										<string>^Hunt! (\w+) orders (his|her) daegger\.$</string>
										<string>^(\w+) mixes some .+ and .+ throws it</string>
										<string>^(\w+) points an imperious finger at \w+</string>
										<string>^(\w+) throws some .+ bone dust</string>
										<string>^You out\-maneuver (\w+)'s attempt to garrote you from behind\.$</string>
										<string>^(\w+) quickly flings some \w+ dust at you, to no effect\.$</string>
										<string>^(\w+) slips behind you and garrotes you with (his|her) whip\.$</string>
										<string>^(\w+) inhales deeply, holds it for a moment, then exhales\.$</string>
										<string>^(\w+) waves (his|her) quarterstaff in front of you and an (.*) root lashes out with a tendril, bewildering you\.$</string>
										<string>^(\w+) stabs you viciously with a (.+)\.$</string>
										<string>^(\w+) quickly summons a (.+) and with a commanding gesture, sends it flying towards you\.$</string>
										<string>^(\w+) swings (his|her) quarterstaff and an animated (\w+) root begins circling mesmerisingly around you\.$</string>
										<string>^(\w+) gives a (.+) a quick flourish before driving it forcefully into your body\.$</string>
										<string>^The icy coating on (\w+)'s (.+) leaches into your wound, chilling you\.$</string>
										<string>^(\w+) selects a small, (.+)</string>
										<string>Ageranu plunges a leather wrapped spear deep into your thigh and pulls its blade up the length of your body with a forceful lever motion, leaving a long trail of split flesh.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>0</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Peace Take</name>
									<script>local name = matches[2]
if (name == target.name) then
	if (table.contains(target.mentalaffs, "peace")) then
		targMaffSub("peace")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED PEACE&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end
end
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You thrust your blade towards (\w+) but (he|she) dodges easily out of the way\.$</string>
										<string>^(\w+) cradles .+ in the crook of (his|her) arm and begins to strum out</string>
										<string>^(\w+) laugs sadistically, stealing your mana\.$</string>
										<string>^(\w+) points an elemental staff at you</string>
										<string>^(\w+) quickly wraps the haft of .+ around</string>
										<string>^(\w+) slashes into .+ with </string>
										<string>^(\w+) swings .+ at .+ with a powerful strike\.$</string>
										<string>^(\w+) swings .+ at .+ with all \w+ might\.$</string>
										<string>^(\w+) viciously slashes .+ with .+\.$</string>
										<string>^(\w+) swings .+ powerfully at</string>
										<string>^With a lightning\-quick motion, (\w+) slashes</string>
										<string>^Lightning\-quick, (\w+) jabs</string>
										<string>^(\w+) swings .+ at you powerfully\.$</string>
										<string>^(\w+) tries to leave, but you block (him|her) from moving that way\.$</string>
										<string>^(\w+) stands up and stretches (his|her) arms out wide\.$</string>
										<string>^(\w+) takes .+ and tosses it gently at .+ such that it rubs lightly</string>
										<string>^(\w+) takes up .+ in (his|her) (left|right) hand\.$</string>
										<string>^(\w+) throws a dart at .+, but it strikes the ground missing\.$</string>
										<string>^(\w+) swings the haft of .+ in a long, sweeping curve at</string>
										<string>^With one fluid maneuver, (\w+) steps forward, hooking (his|her) leg</string>
										<string>^You feel your body and mind ripped apart as you are enfeebled by (\w+)\.$</string>
										<string>^You see a wave of energy shoot out from (\w+) and slam into</string>
										<string>^With a vicious snarl (\w+) carves a merciless swathe through</string>
										<string>^With blinding speed, (\w+) transfixes you with a swirling</string>
										<string>^With lightning speed (\w+) strikes your head with a devastating</string>
										<string>^With one fluid maneuver, (\w+) steps forward, hooking</string>
										<string>^With a daegger in hand, (\w+) begins to close in on you\.$</string>
										<string>^To the .+, you see (\w+) begin to spur (his|her) mount in</string>
										<string>^Sticky strands of webbing spray out from (\w+)'s web tattoo and</string>
										<string>^Screaming, (\w+) rushes away to the</string>
										<string>^Catching you off balance, (\w+) stuns you with (his|her) shield\.$</string>
										<string>^Blue lightning crackles in (\w+)'s eyes and streaks out to</string>
										<string>^(\w+)'s attack rebounds off your translucient shield\.$</string>
										<string>^(\w+)'s arms seem to tremble with barely restrained energy</string>
										<string>^(\w+) whips .+ through the air in front of you, to no effect\.$</string>
										<string>^(\w+) whips (his|her) arm downwards and looses a long dart,</string>
										<string>^(\w+) swings the haft of .+ in a long, sweeping</string>
										<string>^(\w+) swings the crackling mace about (his|her) head, gathering momentum</string>
										<string>^(\w+) strikes you with a dark bolt of energy directed</string>
										<string>^(\w+) spins about you, flashing (his|her) shield into your eyes</string>
										<string>^(\w+) slices at you with the sharpened ege of.+\.$</string>
										<string>^(\w+) razes your aura of rebounding with .+\.$</string>
										<string>^(\w+) stares at you, giving you the evil eye\.$</string>
										<string>^You nimbly dodge the immensely powerful pounding fists of (\w+)\.$</string>
										<string>^(\w+) springs forwards onto you and mauls</string>
										<string>^(\w+) pounds the ground with both fists and a tremor sweeps</string>
										<string>^(\w+) points an elemental staff at</string>
										<string>^The sky above grows dark as (\w+) calls upon powerful magicks\.$</string>
										<string>^(\w+) tries to leave, but you block (him|her) from moving that way\.$</string>
										<string>^The crystal floating around (\w+) (.+)</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Peace</name>
									<script>local name = matches[2]
if (name == target.name) then
if (curseaff == "peace") then
		targMaffAdd("peace")
		target.peace = true
		enableTimer("peace")
		cecho("\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;AFFLICTED PEACE&lt;OrangeRed&gt;][][][][][]")
		printTargetWindow()
end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) glares angrily, driving off the pacifying attempt\.$</string>
										<string>^A look of peace overcomes (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Bellwort|Cuprum Take</name>
								<script>-- ["bellwort flower"]  = {"retribution","timeloop","generosity", "pacifism","justice","lovers"},
local name = matches[2]
if (name == target.name) then

if (table.contains(target.mentalaffs, "anorexia")) then
  targMaffSub("anorexia")
end

		if (table.contains(target.mentalaffs, "lovers")) then
		targMaffSub("lovers")
	elseif (table.contains(target.afflictions, "justice")) then
		targAffSub("justice")
	elseif (table.contains(target.mentalaffs, "pacifism")) then
		targMaffSub("pacifism")
	elseif (table.contains(target.mentalaffs, "generosity")) then
		targMaffSub("generosity")
  elseif (table.contains(target.mentalaffs, "timeloop")) then
		targMaffSub("timeloop")
  elseif (table.contains(target.mentalaffs, "retribution")) then
		targMaffSub("retribution")
  else
      cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;Affliction Tracker Fucked Up&lt;cyan&gt;][][][][][]")
	end	
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) quickly eats a (bellwort flower|cuprum flake)\.$</string>
									<string>return isPrompt()</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>4</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Blind Deaf</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Oxalis Take</name>
								<script>if matches[2] == target.name then
	if (table.contains(target.afflictions, "deaf")) then
		targAffSub("deaf")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED DEAF&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end	
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) quickly eats some hyssop stem\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Salve</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Epidermal</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Anorexia Take</name>
								<script>local name = matches[2]
if (name == target.name) then
	if (table.contains(target.mentalaffs, "anorexia")) then
		targMaffSub("anorexia")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED ANOREXIA&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end	
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) quickly eats</string>
									<string>^(\w+) takes a drink from</string>
									<string>^(\w+) rubs some salve on (his|her) skin\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ketamine Take</name>
								<script>local name = matches[2]
if (name == target.name) then
	if (table.contains(target.afflictions, "ketamine")) then
		targAffSub("ketamine")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED KETAMINE&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end	
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) breathes in relief as (his|her) withered throat is restored\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Salve Take</name>
								<script>local name = multimatches[1][2]

if (name == target.name) then
	if (table.contains(target.afflictions, "disfigurement")) then
		targAffSub("disfigurement")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED DISFIGUREMENT&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "anorexia")) then
		targAffSub("anorexia")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED ANOREXIA&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "calotropis")) then
		targAffSub("calotropis")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED CALOTROPIS&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "slowelixir")) then
		targAffSub("slowelixir")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED SLOWELIXIRS&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "slowherbs")) then
		targAffSub("slowherbs")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED SLOW HERBS&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "witheredthroat")) then
		targAffSub("witheredthroat")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED WITHEREDTHROAT&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "slowherbs")) then
		targAffSub("slowherbs")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED SLOWHERBS&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "stuttering")) then
		targAffSub("stuttering")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED STUTTERING&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end	
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>1</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) rubs some salve on (his|her) skin.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Mending</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Crippled Arms</name>
								<script>local name = matches[2]
if (name == target.name) then
	if (table.contains(target.afflictions, "crippled right arm") and not table.contains(target.afflictions, "mutilated right arm")) then
		targAffSub("crippled right arm")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED CRIPPLED RIGHT ARM&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "crippled left arm") and not table.contains(target.afflictions, "mutilated left arm")) then
		targAffSub("crippled left arm")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED CRIPPLED LEFT ARM&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "mutilated right arm") and table.contains(target.afflictions, "butisol")) then
		enableTimer("mutilated right arm butisol")
		cecho("\n&lt;purple&gt;============&lt;white&gt;APPLIED RESTORATION RIGHT ARM BUTISOL!&lt;purple&gt;============")
		cecho("\n&lt;purple&gt;============&lt;white&gt;APPLIED RESTORATION RIGHT ARM BUTISOL!&lt;purple&gt;============")
		cecho("\n&lt;purple&gt;============&lt;white&gt;APPLIED RESTORATION RIGHT ARM BUTISOL!&lt;purple&gt;============")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "mutilated left arm") and table.contains(target.afflictions, "butisol")) then
		enableTimer("mutilated left arm butisol")
		cecho("\n&lt;purple&gt;============&lt;white&gt;APPLIED RESTORATION LEFT ARM BUTISOL!&lt;purple&gt;============")
		cecho("\n&lt;purple&gt;============&lt;white&gt;APPLIED RESTORATION LEFT ARM BUTISOL!&lt;purple&gt;============")
		cecho("\n&lt;purple&gt;============&lt;white&gt;APPLIED RESTORATION LEFT ARM BUTISOL!&lt;purple&gt;============")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "mutilated right arm")) then
		enableTimer("mutilated right arm")
		cecho("\n&lt;purple&gt;============&lt;white&gt;APPLIED RESTORATION RIGHT ARM!&lt;purple&gt;============")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "mutilated left arm")) then
		enableTimer("mutilated left arm")
		cecho("\n&lt;purple&gt;============&lt;white&gt;APPLIED RESTORATION LEFT ARM!&lt;purple&gt;============")
		printTargetWindow()
	end	
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) rubs some salve on (his|her) arms\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Crippled Legs</name>
								<script>local name = matches[2]
if (name == target.name) then
	if (table.contains(target.afflictions, "crippled right leg") and not table.contains(target.afflictions, "mutilated right leg")) then
		targAffSub("crippled right leg")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED CRIPPLED RIGHT LEG&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "crippled left leg") and not table.contains(target.afflictions, "mutilated right leg")) then
		targAffSub("crippled left leg")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED CRIPPLED LEFT LEG&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "mutilated right leg") and table.contains(target.afflictions, "butisol")) then
		enableTimer("mutilated right leg butisol")
		cecho("\n&lt;purple&gt;============&lt;white&gt;APPLIED RESTORATION RIGHT LEG BUTISOL!&lt;purple&gt;============")
		cecho("\n&lt;purple&gt;============&lt;white&gt;APPLIED RESTORATION RIGHT LEG BUTISOL!&lt;purple&gt;============")
		cecho("\n&lt;purple&gt;============&lt;white&gt;APPLIED RESTORATION RIGHT LEG BUTISOL!&lt;purple&gt;============")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "mutilated left leg") and table.contains(target.afflictions, "butisol")) then
		enableTimer("mutilated left leg butisol")
		cecho("\n&lt;purple&gt;============&lt;white&gt;APPLIED RESTORATION LEFT LEG BUTISOL!&lt;purple&gt;============")
		cecho("\n&lt;purple&gt;============&lt;white&gt;APPLIED RESTORATION LEFT LEG BUTISOL!&lt;purple&gt;============")
		cecho("\n&lt;purple&gt;============&lt;white&gt;APPLIED RESTORATION LEFT LEG BUTISOL!&lt;purple&gt;============")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "mutilated right leg")) then
		enableTimer("mutilated right leg")
		cecho("\n&lt;purple&gt;============&lt;white&gt;APPLIED RESTORATION RIGHT LEG!&lt;purple&gt;============")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "mutilated left leg")) then
		enableTimer("mutilated left leg")
		cecho("\n&lt;purple&gt;============&lt;white&gt;APPLIED RESTORATION LEFT LEG!&lt;purple&gt;============")
		printTargetWindow()
	end	
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) rubs some salve on (his|her) legs\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Disfigurement</name>
								<script>local name = matches[2]
if (name == target.name) then
	if (table.contains(target.afflictions, "disfigurement")) then
		targAffSub("disfigurement")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED DISFIGUREMENT&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end	
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+)'s horribly disfigured body is restored\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Crippled Head</name>
								<script>local name = matches[2]
if (name == target.name) then
	if (table.contains(target.afflictions, "mutilated head")) then
		enableTimer("mutilated head")
		cecho("\n&lt;purple&gt;============&lt;white&gt;APPLIED RESTORATION HEAD!&lt;purple&gt;============")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "mutilated head")and table.contains(target.afflictions, "butisol")) then
		enableTimer("mutilated head butisol")
		cecho("\n&lt;purple&gt;============&lt;white&gt;APPLIED RESTORATION HEAD BUTISOL!&lt;purple&gt;============")
		printTargetWindow()
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) rubs some salve on (his|her) head\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Restoration</name>
								<script>local name = matches[2]
if (name == target.name) then
	if (table.contains(target.afflictions, "crippled right leg") and not table.contains(target.afflictions, "mutilated right leg")) then
		targAffSub("crippled right leg")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED CRIPPLED RIGHT LEG&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "crippled left leg") and not table.contains(target.afflictions, "mutilated right leg")) then
		targAffSub("crippled left leg")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED CRIPPLED LEFT LEG&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "crippled right arm") and not table.contains(target.afflictions, "mutilated right arm")) then
		targAffSub("crippled right arm")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED CRIPPLED RIGHT ARM&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "crippled left arm") and not table.contains(target.afflictions, "mutilated left arm")) then
		targAffSub("crippled left arm")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED CRIPPLED LEFT ARM&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) crackles with blue energy that wreathes itself about (his|her) limbs\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Applied</name>
							<script>
local name = matches[2]
local bodyarea = matches[3]

if (name == target.name) then

  if (table.contains(target.afflictions, "slickness")) then
    targAffSub("slickness")
  end

  if bodyarea == "body" then
    if (table.contains(target.mentalaffs, "anorexia")) then
      targMaffSub("anorexia")
    end
  end
  
end


-- if ak.ai() then return end
-- 
-- if ak.limbs.shikudoParse then
  -- ak.limbs.shikudoParse()
-- end
-- 
-- if not IsTargetted(matches[2]) then return end
-- if matches[3] == "skin" and not ak.defs.mass then 
   -- ak.defs.mass = true
	 -- ak.bals.salve = true
   -- cecho("&lt;cyan&gt;Mass Consideration Removed") 
-- elseif ak.bals.salve then
	-- if affstrack.score.aeon == 100 and affstrack.score.slickness == 100 then
	   -- return
	-- else 
	   -- affstrack.score.tempslickness= 0
	   -- ak.bals.salve = false
	   -- if affstrack.score.slickness&gt;0 then 
	      -- if ak.thoughtIhad then 
					-- ak.thoughtIhad("slickness") 
				-- else 
					-- affstrack.score.slickness = 0 
				-- end  
	   -- end
	   -- ak.cure.apply(matches[3]) 		
		 -- if ak.timers.apply then			
		 	-- killTimer(ak.timers.apply)		
		 -- end
	   -- ak.timers.apply = tempTimer(.8,[[ak.bals.salve = true;ak.timers.apply = false]])
	   -- --cecho("&lt;cyan&gt;Processed Cures")
	-- end
-- else
	-- if ak.timers.apply then 
		-- ak.bals.salve = true
		-- cecho("&lt;cyan&gt;Ignored Cures")
	-- end
-- end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#0000ff</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) takes some (?:balm|salve) from a vial and rubs it on (?:her|his) ([\w'\-]+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Smoke</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Laurel</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Noctec/Mebaral</name>
								<script>local name = matches[2]
if (name == target.name) then
		if nairatblock == 2 then
			nairatblock = 1
		elseif nairatblock == 1 then
			nairatblock = 0
	elseif (table.contains(target.afflictions, "slickness")) then
		targAffSub("slickness")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED SLICKNESS&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "slow balance")) then
		targAffSub("slow balance")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED SLOW BALANCE&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "slow equilibrium")) then
		targAffSub("slow equilibrium")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED SLOW EQUILIBRIUM&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end	
end

if (name == target.name) then
		if loshreblock == 2 then
			loshreblock = 1
		elseif loshreblock == 1 then
			loshreblock = 0
	elseif (table.contains(target.mentalaffs, "disloyalty")) and (not table.contains(target.afflictions, "slickness")) then
		targMaffSub("disloyalty")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED DISLOYALTY&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end	
end

local name = matches[2]
if (name == target.name) then
	if (table.contains(target.afflictions, "asthma")) then
		targAffSub("asthma")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED ASTHMA&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end	
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) takes a long drag off (his|her) pipe, exhaling a light, bluish mist\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Laurel Take</name>
								<script>local name = matches[2]
if (name == target.name) then
	if (table.contains(target.mentalaffs, "madness")) then
		targMaffSub("madness")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED MADNESS&lt;cyan&gt;][][][][][]")
		printTargetWindow()
		send("queue reset eqbal")
		send("queue reset eq")
	elseif (table.contains(target.mentalaffs, "hellsight")) then
		targMaffSub("hellsight")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED HELLSIGHT&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	elseif (table.contains(target.mentalaffs, "epilepsy")) then
		targMaffSub("epilepsy")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED EPILEPSY&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "aeon")) then
		targAffSub("aeon")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED AEON&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "sloweq")) then
		targAffSub("sloweq")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED SLOWEQ&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	elseif (table.contains(target.afflictions, "penance")) then
		targAffSub("penance")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED PENANCE&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end
end

local name = matches[2]
if (name == target.name) then
	if (table.contains(target.afflictions, "asthma")) then
		targAffSub("asthma")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED ASTHMA&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end	
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) takes a long drag off (his|her) pipe, exhaling a thick, musty smoke\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Lovage</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Iodine</name>
								<script>local name = matches[2]
if (name == target.name) then
	if (table.contains(target.afflictions, "slickness")) then
		targAffSub("slickness")
		target.instilled2 = false
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED SLICKNESS&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end	
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) rubs some salve on (.+)</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Vitriol</name>
								<script>local name = matches[2]
if (name == target.name) then
	if (table.contains(target.afflictions, "vitriol")) then
		targAffSub("vitriol")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED VITRIOL&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end	
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) whispers something to .+\n.+ seems to settle down\.$</string>
									<string>^(\w+) barks at .+, ordering it to attack</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Fool</name>
								<script>local name = matches[2]
if (name == target.name) then
	if (table.contains(target.afflictions, "manaleech")) then
		targAffSub("manaleech")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED MANALEECH&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end	
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) takes a long drag off (his|her) pipe, exhaling a light, bluish mist.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Opponent Smoked</name>
							<script>if (table.contains(target.afflictions, "slickness")) then
  targAffSub("slickness")
end
if (table.contains(target.afflictions, "asthma")) then
  targAffSub("asthma")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>2</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) takes a long drag off (?:her|his) (.*).$</string>
								<string>^A great gurgling sound is heard as ([\w'\-]+) takes a long drag from .*\. </string>
								<string>^([\w'\-]+) takes a long drag off an enamel bubble pipe\.$</string>
								<string>^([\w'\-]+) takes a long\, smooth drag from [\w'\-]+ pipe\.$</string>
								<string>^([\w'\-]+) takes a few short puffs from [\w'\-]+ pipe\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Killed</name>
						<script>	cecho("\n&lt;cyan&gt;++++++++++++&lt;red&gt; " .. matches[2] .. " &lt;yellow&gt;KILLED &lt;red&gt;" .. matches[3] .. "! &lt;cyan&gt;++++++++++++")
	cecho("\n&lt;cyan&gt;++++++++++++&lt;red&gt; " .. matches[2] .. " &lt;yellow&gt;KILLED &lt;red&gt;" .. matches[3] .. "! &lt;cyan&gt;++++++++++++")

if (user.Bashing) then
	mmp.customwalkdelay(3.4)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) has slain (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Cured Opium</name>
						<script>if (table.contains(target.afflictions, "sleeping")) then
	targAffSub("sleep")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) opens (his|her) eyes and yawns mightily\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Tree Track</name>
						<script>local name = matches[2]

if (name == target.name) then
	target.tree = false
	enableTimer("tree timer")
end

if (name == target.name) then
	bardtree = true
	enableTimer("bardtree")
end

if (table.contains(target.afflictions, "numbness")) then
	if (table.contains(target.afflictions, "paralysis")) then
		targAffSub("paralysis")
	end	
	targAffSub("numbness")
	cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED NUMBNESS&lt;cyan&gt;][][][][][]")
	printTargetWindow()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) touches a tree of life tattoo\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Tree</name>
						<script>--local name = matches[2]
--local num = #target.afflictions + #target.hypnoaffs
--if (name == target.name) then
--	if (num &lt; 2) then
--		target.afflictions = {}
--		target.hypnoaffs = {}
--		cecho("\n&lt;cyan&gt;[&lt;green&gt;TREE&lt;cyan&gt;]")
--		printTargetWindow()
--	end
--end
local name = multimatches[1][2]

if (name == target.name) then
-- plagues first
  if (table.contains(target.afflictions, "pyramides")) then
		targAffSub("pyramides")
	elseif (table.contains(target.afflictions, "mycalium")) then
		targAffSub("mycalium")
	elseif (table.contains(target.afflictions, "rebbies")) then
		targAffSub("rebbies")
	elseif (table.contains(target.afflictions, "sandfever")) then
		targAffSub("sandfever")
	elseif (table.contains(target.afflictions, "flushings")) then
		targAffSub("flushings")
    
  elseif (table.contains(target.afflictions, "crushedthroat")) then
		targAffSub("crushedthroat")
  elseif (table.contains(target.afflictions, "aeon")) then
		targAffSub("aeon")
  elseif (table.contains(target.afflictions, "healthleech")) then
		targAffSub("healthleech")
  elseif (table.contains(target.afflictions, "haemophilia")) then
		targAffSub("haemophilia")
  elseif (table.contains(target.afflictions, "clumsiness")) then
		targAffSub("clumsiness")
  elseif (table.contains(target.afflictions, "aflame")) then
		targAffSub("aflame")
  elseif (table.contains(target.afflictions, "addiction")) then
		targAffSub("addiction")
  elseif (table.contains(target.afflictions, "scytherus")) then
		targAffSub("scytherus")
  elseif (table.contains(target.afflictions, "slickness")) then
		targAffSub("slickness")
  elseif (table.contains(target.afflictions, "justice")) then
		targAffSub("justice")
  elseif (table.contains(target.afflictions, "voyria")) then
		targAffSub("voyria")
  elseif (table.contains(target.afflictions, "weariness")) then
		targAffSub("weariness")
  elseif (table.contains(target.afflictions, "confusion")) then
		targAffSub("confusion")
  elseif (table.contains(target.afflictions, "disloyalty")) then
		targAffSub("disloyalty")
  elseif (table.contains(target.afflictions, "lethargy")) then
		targAffSub("lethargy")
  elseif (table.contains(target.afflictions, "sensitivity")) then
		targAffSub("sensitivity")
  elseif (table.contains(target.afflictions, "asthma")) then
		targAffSub("asthma")
  elseif (table.contains(target.afflictions, "crippledarm")) then
		targAffSub("crimpledarm")
  elseif (table.contains(target.afflictions, "crippledleg")) then
		targAffSub("crippledleg")
  elseif (table.contains(target.afflictions, "darkshade")) then
		targAffSub("darkshade")
  elseif (table.contains(target.afflictions, "impatience")) then
		targAffSub("impatience")
  elseif (table.contains(target.afflictions, "hypochondria")) then
		targAffSub("hypochondria")
  elseif (table.contains(target.afflictions, "selarnia")) then
		targAffSub("selarnia")
  elseif (table.contains(target.afflictions, "leftleg")) then
		targAffSub("leftleg")
  elseif (table.contains(target.afflictions, "leftarm")) then
		targAffSub("leftarm")
  elseif (table.contains(target.afflictions, "rightleg")) then
		targAffSub("rightleg")
  elseif (table.contains(target.afflictions, "rightarm")) then
		targAffSub("rightarm")
  elseif (table.contains(target.afflictions, "frozen")) then
		targAffSub("frozen")
  elseif (table.contains(target.afflictions, "earthdisrupt")) then
		targAffSub("earthdisrupt")
  elseif (table.contains(target.afflictions, "spiritdisrupt")) then
		targAffSub("spiritdisrupt")
  elseif (table.contains(target.afflictions, "hellsight")) then
		targAffSub("hellsight")
  elseif (table.contains(target.afflictions, "nausea")) then
		targAffSub("nausea")
  elseif (table.contains(target.afflictions, "parasite")) then
		targAffSub("parasite")
  elseif (table.contains(target.afflictions, "retribution")) then
		targAffSub("retribution")
  elseif (table.contains(target.afflictions, "depression")) then
		targAffSub("depression")
  elseif (table.contains(target.afflictions, "shadowmadness")) then
		targAffSub("shadowmadness")
  elseif (table.contains(target.afflictions, "timeloop")) then
		targAffSub("timeloop")
  elseif (table.contains(target.afflictions, "manaleech")) then
		targAffSub("manaleech")
  elseif (table.contains(target.afflictions, "tension")) then
		targAffSub("tension")
  elseif (table.contains(target.afflictions, "unweavingspirit")) then
		targAffSub("unweavingspirit")
  elseif (table.contains(target.afflictions, "unweavingmind")) then
		targAffSub("unweavingmind")
  elseif (table.contains(target.afflictions, "unweavingbody")) then
		targAffSub("unweavingbody")
  elseif (table.contains(target.afflictions, "tenderskin")) then
		targAffSub("tenderskin")
  elseif (table.contains(target.afflictions, "spiritburn")) then
		targAffSub("spiritburn")
  
	elseif (table.contains(target.mentalaffs, "stuttering")) then
		targMaffSub("stuttering")
	elseif (table.contains(target.mentalaffs, "lovers")) then
		targMaffSub("lovers")
	elseif (table.contains(target.mentalaffs, "agoraphobia")) then
		targMaffSub("agoraphobia")
	elseif (table.contains(target.mentalaffs, "anorexia")) then
		targMaffSub("anorexia")
	elseif (table.contains(target.mentalaffs, "claustrophobia")) then
		targMaffSub("claustrophobia")
	elseif (table.contains(target.mentalaffs, "confusion")) then
		targMaffSub("confusion")
	elseif (table.contains(target.mentalaffs, "dizziness")) then
		targMaffSub("dizziness")
	elseif (table.contains(target.mentalaffs, "epilepsy")) then
		targMaffSub("epilepsy")
	elseif (table.contains(target.mentalaffs, "generosity")) then
		targMaffSub("generosity")
	elseif (table.contains(target.mentalaffs, "loneliness")) then
		targMaffSub("loneliness")
	elseif (table.contains(target.mentalaffs, "masochism")) then
		targMaffSub("masochism")
	elseif (table.contains(target.mentalaffs, "pacifism")) then
		targMaffSub("pacifism")
	elseif (table.contains(target.mentalaffs, "recklessness")) then
		targMaffSub("recklessness")
	elseif (table.contains(target.mentalaffs, "shyness")) then
		targMaffSub("shyness")
	elseif (table.contains(target.mentalaffs, "stupidity")) then
		targMaffSub("stupidity")
	elseif (table.contains(target.mentalaffs, "vertigo")) then
		targMaffSub("vertigo")
	elseif (table.contains(target.mentalaffs, "airdisrupt")) then
		targMaffSub("airdisrupt")
	elseif (table.contains(target.mentalaffs, "firedisrupt")) then
		targMaffSub("firedisrupt")
	elseif (table.contains(target.mentalaffs, "waterdisrupt")) then
		targMaffSub("waterdisrupt")
	elseif (table.contains(target.mentalaffs, "paranoia")) then
		targMaffSub("paranoia")
	elseif (table.contains(target.mentalaffs, "dementia")) then
		targMaffSub("dementia")
	elseif (table.contains(target.mentalaffs, "hallucinations")) then
		targMaffSub("hallucinations")
  else
    cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;Affliction Tracker Fucked Up&lt;cyan&gt;][][][][][]")
	end
end

-- what stops tree?
if name == target.name then
	if (table.contains(target.mentalaffs, "masochism")) then
		targMaffSub("masochism")
	end
	if (table.contains(target.afflictions, "paralysis")) then
		targAffSub("paralysis")
	end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>1</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) touches a tree of life tattoo\.$</string>
							<string>return isPrompt()</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Focus</name>
						<script>--local name = matches[2]
--local num = #target.mentalaffs
--if (name == target.name) then
--	if (num &lt; 2) then
--		target.mentalaffs = {}
--		cecho("\n&lt;cyan&gt;[&lt;white&gt;FOCUS&lt;cyan&gt;]")
--		printTargetWindow()
--	end
--end

target.focus = true
enableTimer("tarfocus")

local name = multimatches[1][2]
if (name == target.name) then
	if (table.contains(target.afflictions, "impatience")) then
		targAffSub("impatience")
		disableTimer("impatience")
  elseif (table.contains(target.afflictions, "mycalium")) then
		targAffSub("mycalium")
	end	
end

        -- focused = {
								-- "stuttering",
                -- "lovers",
                -- "agoraphobia",
                -- "anorexia",
                -- "claustrophobia",
                -- "confusion",
                -- "dizziness",
                -- "epilepsy",
                -- "generosity",
                -- "loneliness",
                -- "masochism",
                -- "pacifism",
                -- "recklessness",
                -- "shyness",
                -- "stupidity",
                -- "vertigo",
                -- "airdisrupt",
                -- "firedisrupt",
                -- "waterdisrupt",
                -- "paranoia",
                -- "dementia",
                -- "hallucinations",            
        -- },
        -- 

local name = multimatches[1][2]
if (name == target.name) then
		if (table.contains(target.mentalaffs, "stuttering")) then
		targMaffSub("stuttering")
	elseif (table.contains(target.mentalaffs, "lovers")) then
		targMaffSub("lovers")
	elseif (table.contains(target.mentalaffs, "agoraphobia")) then
		targMaffSub("agoraphobia")
	elseif (table.contains(target.mentalaffs, "anorexia")) then
		targMaffSub("anorexia")
	elseif (table.contains(target.mentalaffs, "claustrophobia")) then
		targMaffSub("claustrophobia")
	elseif (table.contains(target.mentalaffs, "confusion")) then
		targMaffSub("confusion")
	elseif (table.contains(target.mentalaffs, "dizziness")) then
		targMaffSub("dizziness")
	elseif (table.contains(target.mentalaffs, "epilepsy")) then
		targMaffSub("epilepsy")
	elseif (table.contains(target.mentalaffs, "generosity")) then
		targMaffSub("generosity")
	elseif (table.contains(target.mentalaffs, "loneliness")) then
		targMaffSub("loneliness")
	elseif (table.contains(target.mentalaffs, "masochism")) then
		targMaffSub("masochism")
	elseif (table.contains(target.mentalaffs, "pacifism")) then
		targMaffSub("pacifism")
	elseif (table.contains(target.mentalaffs, "recklessness")) then
		targMaffSub("recklessness")
	elseif (table.contains(target.mentalaffs, "shyness")) then
		targMaffSub("shyness")
	elseif (table.contains(target.mentalaffs, "stupidity")) then
		targMaffSub("stupidity")
	elseif (table.contains(target.mentalaffs, "vertigo")) then
		targMaffSub("vertigo")
	elseif (table.contains(target.mentalaffs, "airdisrupt")) then
		targMaffSub("airdisrupt")
	elseif (table.contains(target.mentalaffs, "firedisrupt")) then
		targMaffSub("firedisrupt")
	elseif (table.contains(target.mentalaffs, "waterdisrupt")) then
		targMaffSub("waterdisrupt")
	elseif (table.contains(target.mentalaffs, "paranoia")) then
		targMaffSub("paranoia")
	elseif (table.contains(target.mentalaffs, "dementia")) then
		targMaffSub("dementia")
	elseif (table.contains(target.mentalaffs, "hallucinations")) then
		targMaffSub("hallucinations")
  else
    cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;Affliction Tracker Fucked Up&lt;cyan&gt;][][][][][]")
	end
end

-- if (name == target.name) then
	-- if (table.contains(target.mentalaffs, "masochism")) then
		-- targMaffSub("masochism")
		-- printTargetWindow()
	-- end
	-- if (table.contains(target.mentalaffs, "hallucinations")) then
		-- targMaffSub("hallucinations")
		-- printTargetWindow()
	-- end
-- end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>1</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A look of extreme focus crosses the face of (\w+)\.$</string>
							<string>return isPrompt()</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Passive</name>
						<script>--local name = matches[2]
--local num = #target.afflictions + #target.hypnoaffs
--if (name == target.name) then
--	if (num &lt; 2) then
--		target.afflictions = {}
--		target.hypnoaffs = {}
--		cecho("\n&lt;cyan&gt;[&lt;green&gt;TREE&lt;cyan&gt;]")
--		printTargetWindow()
--	end
--end
local name = matches[2]

if (name == target.name) then
-- plagues first
  if (table.contains(target.afflictions, "paralysis")) then
		targAffSub("paralysis")

  elseif (table.contains(target.afflictions, "pyramides")) then
		targAffSub("pyramides")
	elseif (table.contains(target.afflictions, "mycalium")) then
		targAffSub("mycalium")
	elseif (table.contains(target.afflictions, "rebbies")) then
		targAffSub("rebbies")
	elseif (table.contains(target.afflictions, "sandfever")) then
		targAffSub("sandfever")
	elseif (table.contains(target.afflictions, "flushings")) then
		targAffSub("flushings")
    
  elseif (table.contains(target.afflictions, "crushedthroat")) then
		targAffSub("crushedthroat")
  elseif (table.contains(target.afflictions, "aeon")) then
		targAffSub("aeon")
  elseif (table.contains(target.afflictions, "healthleech")) then
		targAffSub("healthleech")
  elseif (table.contains(target.afflictions, "haemophilia")) then
		targAffSub("haemophilia")
  elseif (table.contains(target.afflictions, "clumsiness")) then
		targAffSub("clumsiness")
  elseif (table.contains(target.afflictions, "aflame")) then
		targAffSub("aflame")
  elseif (table.contains(target.afflictions, "addiction")) then
		targAffSub("addiction")
  elseif (table.contains(target.afflictions, "scytherus")) then
		targAffSub("scytherus")
  elseif (table.contains(target.afflictions, "slickness")) then
		targAffSub("slickness")
  elseif (table.contains(target.afflictions, "justice")) then
		targAffSub("justice")
  elseif (table.contains(target.afflictions, "voyria")) then
		targAffSub("voyria")
  elseif (table.contains(target.afflictions, "weariness")) then
		targAffSub("weariness")
  elseif (table.contains(target.afflictions, "confusion")) then
		targAffSub("confusion")
  elseif (table.contains(target.afflictions, "disloyalty")) then
		targAffSub("disloyalty")
  elseif (table.contains(target.afflictions, "lethargy")) then
		targAffSub("lethargy")
  elseif (table.contains(target.afflictions, "sensitivity")) then
		targAffSub("sensitivity")
  elseif (table.contains(target.afflictions, "asthma")) then
		targAffSub("asthma")
  elseif (table.contains(target.afflictions, "crippledarm")) then
		targAffSub("crimpledarm")
  elseif (table.contains(target.afflictions, "crippledleg")) then
		targAffSub("crippledleg")
  elseif (table.contains(target.afflictions, "darkshade")) then
		targAffSub("darkshade")
  elseif (table.contains(target.afflictions, "impatience")) then
		targAffSub("impatience")
  elseif (table.contains(target.afflictions, "hypochondria")) then
		targAffSub("hypochondria")
  elseif (table.contains(target.afflictions, "selarnia")) then
		targAffSub("selarnia")
  elseif (table.contains(target.afflictions, "leftleg")) then
		targAffSub("leftleg")
  elseif (table.contains(target.afflictions, "leftarm")) then
		targAffSub("leftarm")
  elseif (table.contains(target.afflictions, "rightleg")) then
		targAffSub("rightleg")
  elseif (table.contains(target.afflictions, "rightarm")) then
		targAffSub("rightarm")
  elseif (table.contains(target.afflictions, "frozen")) then
		targAffSub("frozen")
  elseif (table.contains(target.afflictions, "earthdisrupt")) then
		targAffSub("earthdisrupt")
  elseif (table.contains(target.afflictions, "spiritdisrupt")) then
		targAffSub("spiritdisrupt")
  elseif (table.contains(target.afflictions, "hellsight")) then
		targAffSub("hellsight")
  elseif (table.contains(target.afflictions, "nausea")) then
		targAffSub("nausea")
  elseif (table.contains(target.afflictions, "parasite")) then
		targAffSub("parasite")
  elseif (table.contains(target.afflictions, "retribution")) then
		targAffSub("retribution")
  elseif (table.contains(target.afflictions, "depression")) then
		targAffSub("depression")
  elseif (table.contains(target.afflictions, "shadowmadness")) then
		targAffSub("shadowmadness")
  elseif (table.contains(target.afflictions, "timeloop")) then
		targAffSub("timeloop")
  elseif (table.contains(target.afflictions, "manaleech")) then
		targAffSub("manaleech")
  elseif (table.contains(target.afflictions, "tension")) then
		targAffSub("tension")
	elseif (table.contains(target.mentalaffs, "masochism")) then
		targMaffSub("masochism")
  elseif (table.contains(target.afflictions, "unweavingspirit")) then
		targAffSub("unweavingspirit")
  elseif (table.contains(target.afflictions, "unweavingmind")) then
		targAffSub("unweavingmind")
  elseif (table.contains(target.afflictions, "unweavingbody")) then
		targAffSub("unweavingbody")
  elseif (table.contains(target.afflictions, "tenderskin")) then
		targAffSub("tenderskin")
  elseif (table.contains(target.afflictions, "spiritburn")) then
		targAffSub("spiritburn")
  
	elseif (table.contains(target.mentalaffs, "stuttering")) then
		targMaffSub("stuttering")
	elseif (table.contains(target.mentalaffs, "lovers")) then
		targMaffSub("lovers")
	elseif (table.contains(target.mentalaffs, "agoraphobia")) then
		targMaffSub("agoraphobia")
	elseif (table.contains(target.mentalaffs, "anorexia")) then
		targMaffSub("anorexia")
	elseif (table.contains(target.mentalaffs, "claustrophobia")) then
		targMaffSub("claustrophobia")
	elseif (table.contains(target.mentalaffs, "confusion")) then
		targMaffSub("confusion")
	elseif (table.contains(target.mentalaffs, "dizziness")) then
		targMaffSub("dizziness")
	elseif (table.contains(target.mentalaffs, "epilepsy")) then
		targMaffSub("epilepsy")
	elseif (table.contains(target.mentalaffs, "generosity")) then
		targMaffSub("generosity")
	elseif (table.contains(target.mentalaffs, "loneliness")) then
		targMaffSub("loneliness")
	elseif (table.contains(target.mentalaffs, "masochism")) then
		targMaffSub("masochism")
	elseif (table.contains(target.mentalaffs, "pacifism")) then
		targMaffSub("pacifism")
	elseif (table.contains(target.mentalaffs, "recklessness")) then
		targMaffSub("recklessness")
	elseif (table.contains(target.mentalaffs, "shyness")) then
		targMaffSub("shyness")
	elseif (table.contains(target.mentalaffs, "stupidity")) then
		targMaffSub("stupidity")
	elseif (table.contains(target.mentalaffs, "vertigo")) then
		targMaffSub("vertigo")
	elseif (table.contains(target.mentalaffs, "airdisrupt")) then
		targMaffSub("airdisrupt")
	elseif (table.contains(target.mentalaffs, "firedisrupt")) then
		targMaffSub("firedisrupt")
	elseif (table.contains(target.mentalaffs, "waterdisrupt")) then
		targMaffSub("waterdisrupt")
	elseif (table.contains(target.mentalaffs, "paranoia")) then
		targMaffSub("paranoia")
	elseif (table.contains(target.mentalaffs, "dementia")) then
		targMaffSub("dementia")
	elseif (table.contains(target.mentalaffs, "hallucinations")) then
		targMaffSub("hallucinations")
  else
    cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;Affliction Tracker Fucked Up&lt;cyan&gt;][][][][][]")
	end
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>1</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Something pulses from within the chest of (\w+), and .* seems more vital\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Take All (You Killed)</name>
						<script>if (matches[2] == target.name) then
	target.afflictions = {}
	target.mentalaffs = {}
	physical_aff = 0
	mental_aff = 0
	orphine_aff = 0
	kelp_aff = 0
	nightshade_aff = 0
	mandrake_aff = 0
	wormwood_aff = 0
	galingale_aff = 0
	epidermal_aff = 0
	laurel_aff = 0
	lovage_aff = 0
	target.instilled = false
	target.instilled2 = false
	target.instilled3 = false
	rightarmbruise = false
	leftarmbruise = false
	rightlegbruise = false
	leftlegbruise = false
	target.infirmity = 0
	kelpinfirmity = false
	nightshadeinfirmity = false
	mandrakeinfirmity = false
	wormwoodinfirmity = false
	orphineinfirmity = false
	target.marked = false
	cecho("\n&lt;cyan&gt;++++++++++++&lt;red&gt; TARGET DEAD! &lt;cyan&gt;++++++++++++")
	cecho("\n&lt;cyan&gt;++++++++++++&lt;red&gt; TARGET DEAD! &lt;cyan&gt;++++++++++++")
	printTargetWindow()
end

if raid then
	send("pt " .. matches[2] .. " has been killed!")
end

if (user.Bashing) then
	mmp.customwalkdelay(3.4)
end

send("queue eqbal get body")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#00ff00</mFgColor>
						<mBgColor>#aa0000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You have slain (\w+)\.$</string>
							<string>^\w+ has slain (\w+)\.$</string>
							<string>^(\w+) turns pallid and drops to the ground\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Balances</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Herb Eaten</name>
						<script>local name = multimatches[1][2]
target.herb = sfind(multimatches[1][3])
local percentage = multimatches[2][4]
if (percentage == "M") then
if (target.name == name) then
	if (target.herbBalance) then
		target.herbBalance = false
		if (table.contains(target.mentalaffs, "anorexia")) then
			targMaffSub("anorexia")
			cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED BROMINE&lt;cyan&gt;][][][][][]")
			printTargetWindow()
		end
		enableTimer("Target Herb Balance")
		if (Shadowplant.planted and herb == "kelp") then
			cecho("\n&lt;red&gt;[][][][][][&lt;cyan&gt;SHADOWPLANT EATEN&lt;red&gt;][][][][][]")
			killTimer( shadowplantTimer )
			Shadowplant.planted = false
			Shadowplant.plant = "none"
		else
			if (target.herb == "kelp") then
				if (table.contains(target.afflictions, "asthma")) then
					targAffSub("asthma")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED ASTHMA&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				elseif (table.contains(target.afflictions, "arsenic")) then
					targAffSub("arsenic")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED ARSENIC&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				elseif (table.contains(target.afflictions, "ether")) then
					targAffSub("ether")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED ETHER&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				elseif (table.contains(target.afflictions, "hemotoxin")) then
					targAffSub("hemotoxin")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED HEMOTOXIN&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				end
			elseif (target.herb == "orphine") then
				if (table.contains(target.afflictions, "stupid")) then
					targAffSub("stupid")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED STUPID&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				elseif (table.contains(target.hypnoaffs, "vertigo")) then
					targHypnoSub("vertigo")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED VERTIGO&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				elseif (table.contains(target.hypnoaffs, "masochism")) then
					targHypnoSub("masochism")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED MASOCHISM&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				elseif (table.contains(target.hypnoaffs, "loneliness")) then
					targHypnoSub("loneliness")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED LONELINESS&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				elseif (table.contains(target.hypnoaffs, "claustrophobia")) then
					targHypnoSub("claustrophobia")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED CLAUSTROPHOBIA&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				elseif (table.contains(target.hypnoaffs, "agoraphobia")) then
					targHypnoSub("agoraphobia")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED AGORAPHOBIA&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				end
			elseif (target.herb == "nightshade") then
				if (table.contains(target.afflictions, "botulinum")) then
					targAffSub("botulinum")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED BOTULINUM&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				elseif (table.contains(target.hypnoaffs, "addiction")) then
					targHypnoSub("addiction")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED ADDICTION&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				elseif (table.contains(target.hypnoaffs, "lethargy")) then
					targHypnoSub("lethargy")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED LETHARGY&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				end
			elseif (target.herb == "maidenhair") then
				if (table.contains(target.afflictions, "iodine") and not table.contains(target.afflictions, "ciguatoxin")) then
					targAffSub("iodine")
					moveCursor(getLineNumber() - 1, 0)
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED IODINE&lt;cyan&gt;][][][][][]")
					moveCursorEnd("main")
					printTargetWindow()
				elseif (table.contains(target.afflictions, "paralyse")) then
					targAffSub("paralyse")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED PARALYSE&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				elseif (table.contains(target.afflictions, "metrazol")) then
					targAffSub("metrazol")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED METRAZOL&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				elseif (table.contains(target.afflictions, "strychnine")) then
					targAffSub("strychnine")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED STRYCHNINE&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				end
			elseif (target.herb == "mandrake") then
				if (table.contains(target.hypnoaffs, "deadening")) then
					targHypnoSub("deadening")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED DEADENING&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				elseif (table.contains(target.hypnoaffs, "recklessnes")) then
					targHypnoSub("recklessness")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED RECKLESSNESS&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				elseif (table.contains(target.hypnoaffs, "heroism")) then
					targHypnoSub("heroism")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED HEROISM&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				elseif (table.contains(target.hypnoaffs, "impatience")) then
					targHypnoSub("impatience")
					targAffSub("impatience")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED impatience&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				end
			elseif (target.herb == "wormwood") then
				if (table.contains(target.hypnoaffs, "hypersomnia")) then
					targHypnoSub("hypersomnia")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED HYPERSOMNIA&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				elseif (table.contains(target.hypnoaffs, "hallucinations")) then
					targHypnoSub("hallucinations")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED HALLUCINATIONS&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				elseif (table.contains(target.hypnoaffs, "confusion")) then
					targHypnoSub("confusion")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED CONFUSION&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				elseif (table.contains(target.hypnoaffs, "dementia")) then
					targHypnoSub("dementia")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED DEMENTIA&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				elseif (table.contains(target.hypnoaffs, "paranoia")) then
					targHypnoSub("paranoia")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED PARANOIA&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				end
			elseif (target.herb == "galingale") then
				if (table.contains(target.hypnoaffs, "pacifism")) then
					targHypnoSub("pacifism")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED PACIFISM&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				elseif (table.contains(target.hypnoaffs, "generosity")) then
					targHypnoSub("generosity")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED GENEROSITY&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				elseif (table.contains(target.afflictions, "peace")) then
					targAffSub("peace")
					cecho("&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED peace&lt;cyan&gt;][][][][][]")
					printTargetWindow()
				end
			end
		end
	end
end
end





if (matches[2] == target.name and target.herbBalance) then
	for targ, aff in ipairs (target.afflictions) do
		if (aff == "bromine") then
			table.remove(target.afflictions, targ)
		end
	end
	target.herbBalance = false
	if (matches[3] == "a juniper berry") then
		target.herbEaten = "juniper"
	elseif (matches[3] == "some hyssop stem") then
		target.herbEaten = "hyssop"
	elseif (matches[3] == "an orphine seed") then
		target.herbEaten = "orphine"
	elseif (matches[3] == "a piece of kelp") then
		target.herbEaten = "kelp"
	elseif (matches[3] == "a maidenhair leaf") then
		target.herbEaten = "maidenhair"
	elseif (matches[3] == "a nightshade root") then
		target.herbEaten = "nightshade"
	elseif (matches[3] == "a mandrake root") then
		target.herbEaten = "mandrake"
	elseif (matches[3] == "a wormwood root") then
		target.herbEaten = "wormwood"
	end
	tempTimer(1.9, [[target.herbBalance = true]])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>1</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) quickly eats (some hyssop stem|a juniper berry|a piece of kelp|a maidenhair leaf|a mandrake root|a nightshade root|an orphine seed|a wormwood root|a galingale flower)\.$</string>
							<string>^H\:(\d+)\((\d+)\%\) (\w+)\:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pipe Smoked</name>
						<script>local name = multimatches[1][2]
target.smoke = sfind(multimatches[1][3])
if (name == target.name) then
	if (target.smokeBalance) then
		target.smokeBalance = false
		if (table.contains(target.afflictions, "asthma")) then
			targAffSub("asthma")
			cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED ASTHMA&lt;cyan&gt;][][][][][]")
			printTargetWindow()
		end
	end
	enableTimer("Target Smoke Balance")
	if (target.smoke == "lovage") then
		if (table.contains(target.afflictions, "iodine")) then
			targAffSub("iodine")
			cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED IODINE&lt;cyan&gt;][][][][][]")
			printTargetWindow()
		elseif (table.contains(target.afflictions, "vitriol")) then
			targAffSub("vitriol")
			cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED VITRIOL&lt;cyan&gt;][][][][][]")
			printTargetWindow()
		elseif (table.contains(target.afflictions, "noctec")) then
			targAffSub("noctec")
			cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED NOCTEC&lt;cyan&gt;][][][][][]")
			printTargetWindow()
		end
	elseif (target.smoke == "laurel") then
		if (table.contains(target.hypnoaffs, "epilepsy")) then
			targHypnoSub("epilepsy")
			cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED EPILEPSY&lt;cyan&gt;][][][][][]")
			printTargetWindow()
		elseif (table.contains(target.afflictions, "mebaral")) then
			targAffSub("mebaral")
			cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED MEBARAL&lt;cyan&gt;][][][][][]")
			printTargetWindow()
		end
	end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>1</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) takes a long drag off \w+ pipe, (exhaling a thick, white haze|exhaling a light, bluish mist)\.$</string>
							<string>return isPrompt()</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Analyse</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Analyse</name>
						<script>analyser = true
analysetable = {}
target.afflictions = {}
target.mentalaffs = {}
target.fenugreek = true
target.hypnotised = false
target.instilled = false
target.instilled2 = false
target.instilled3 = false
guards = false
printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) suffers from these afflictions\:$</string>
							<string>^(\w+) is\:$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Analyse Off</name>
						<script>if analyser == true and guards == false and reguards == true then
	guards = true
end

if analyser == true then
	Newanalysetable = table.n_union(target.afflictions, target.mentalaffs, analysetable)
end

analyser = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Equilibrium Taken:</string>
							<string>Balance Taken:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hemotoxin</name>
						<script>if analyser == true then
	targAffAdd("hemotoxin")
	cecho("&lt;red&gt;[&lt;green&gt;KELP&lt;red&gt;::&lt;white&gt;HEMOTOXIN&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>plagued with a weakened immune system.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Arsenic</name>
						<script>if analyser == true then
	targAffAdd("weariness")
	cecho("&lt;red&gt;[&lt;green&gt;KELP&lt;red&gt;::&lt;white&gt;WEARINESS&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>wearied in body.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ciguatoxin</name>
						<script>if analyser == true then
	targAffAdd("paralysis")
	cecho("&lt;red&gt;[&lt;yellow&gt;MAID&lt;red&gt;::&lt;white&gt;PARALYSIS&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>paralysed.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Metrazol</name>
						<script>if analyser == true then
	targAffAdd("metrazol")
	cecho("&lt;red&gt;[&lt;yellow&gt;MAID&lt;red&gt;::&lt;white&gt;METRAZOL&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^has a paralysed (.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Butisol</name>
						<script>if analyser == true then
	targAffAdd("butisol")
	cecho("&lt;red&gt;[&lt;green&gt;KELP&lt;red&gt;::&lt;white&gt;BUTISOL&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>afflicted with poor salve absorption.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Xeroderma</name>
						<script>if analyser == true then
	targAffAdd("sunallergy")
	cecho("&lt;red&gt;[&lt;purple&gt;NGHT&lt;red&gt;::&lt;white&gt;SUNALLERGY&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>allergic to sunlight.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Butolinum</name>
						<script>if analyser == true then
	targAffAdd("nausea")
	cecho("&lt;red&gt;[&lt;purple&gt;NGHT&lt;red&gt;::&lt;white&gt;NAUSEA&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>violently ill.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Impatient</name>
						<script>if analyser == true then
	targAffAdd("impatience")
	cecho("&lt;red&gt;[&lt;cyan&gt;HYPN&lt;red&gt;::&lt;white&gt;IMPATIENCE&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>impatient.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hypersomnia</name>
						<script>if analyser == true then
	targMaffAdd("hypersomnia")
	cecho("&lt;red&gt;[&lt;cyan&gt;HYPN&lt;red&gt;::&lt;white&gt;HYPERSOMNIA&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>hypersomnic.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Addiction</name>
						<script>if analyser == true then
	targMaffAdd("addiction")
	cecho("&lt;red&gt;[&lt;cyan&gt;HYPN&lt;red&gt;::&lt;white&gt;ADDICTION&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>addicted to elixirs.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Masochism</name>
						<script>if analyser == true then
	targMaffAdd("masochism")
	cecho("&lt;red&gt;[&lt;cyan&gt;HYPN&lt;red&gt;::&lt;white&gt;MASOCHISM&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>masochistic.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Loneliness</name>
						<script>if analyser == true then
	targMaffAdd("loneliness")
	cecho("&lt;red&gt;[&lt;cyan&gt;HYPN&lt;red&gt;::&lt;white&gt;LONELINESS&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>very lonely.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Claustrophobia</name>
						<script>if analyser == true then
	targMaffAdd("claustrophobia")
	cecho("&lt;red&gt;[&lt;cyan&gt;HYPN&lt;red&gt;::&lt;white&gt;CLAUSTROPHOBIA&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>claustrophobic.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Stuttering</name>
						<script>if analyser == true then
	targMaffAdd("stuttering")
	cecho("&lt;red&gt;[&lt;cyan&gt;HYPN&lt;red&gt;::&lt;white&gt;STUTTERING&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>a stuttering fool.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hallucinations</name>
						<script>if analyser == true then
	targMaffAdd("hallucinations")
	cecho("&lt;red&gt;[&lt;cyan&gt;HYPN&lt;red&gt;::&lt;white&gt;HALLUCINATIONS&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>hallucinating.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pacifism</name>
						<script>if analyser == true then
	targMaffAdd("peace")
	cecho("&lt;red&gt;[&lt;cyan&gt;HYPN&lt;red&gt;::&lt;white&gt;PEACE&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>feeling unnaturally tranquil.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dementia</name>
						<script>if analyser == true then
	targMaffAdd("dementia")
	cecho("&lt;red&gt;[&lt;cyan&gt;HYPN&lt;red&gt;::&lt;white&gt;DEMENTIA&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>demented.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Deadening</name>
						<script>if analyser == true then
	targMaffAdd("deadening")
	cecho("&lt;red&gt;[&lt;cyan&gt;HYPN&lt;red&gt;::&lt;white&gt;DEADENING&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>of a deadened mind.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Epilepsy</name>
						<script>if analyser == true then
	targMaffAdd("epilepsy")
	cecho("&lt;red&gt;[&lt;cyan&gt;HYPN&lt;red&gt;::&lt;white&gt;EPILEPSY&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>suffering from epilepsy.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Agoraphobia</name>
						<script>if analyser == true then
	targMaffAdd("agoraphobia")
	cecho("&lt;red&gt;[&lt;cyan&gt;HYPN&lt;red&gt;::&lt;white&gt;AGORAPHOBIA&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>agoraphobic.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Paranoia</name>
						<script>if analyser == true then
	targMaffAdd("paranoia")
	cecho("&lt;red&gt;[&lt;cyan&gt;HYPN&lt;red&gt;::&lt;white&gt;PARANOIA&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>paranoid.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Recklessness</name>
						<script>if analyser == true then
	targMaffAdd("recklessness")
	cecho("&lt;red&gt;[&lt;cyan&gt;HYPN&lt;red&gt;::&lt;white&gt;RECKLESSNESS&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>reckless.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Vertigo</name>
						<script>if analyser == true then
	targMaffAdd("vertigo")
	cecho("&lt;red&gt;[&lt;cyan&gt;HYPN&lt;red&gt;::&lt;white&gt;VERTIGO&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>afraid of heights.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Heroism</name>
						<script>if analyser == true then
	targMaffAdd("heroism")
	cecho("&lt;red&gt;[&lt;cyan&gt;HYPN&lt;red&gt;::&lt;white&gt;HEROISM&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>feeling like a true hero.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Confusion</name>
						<script>if analyser == true then
	targMaffAdd("confusion")
	cecho("&lt;red&gt;[&lt;cyan&gt;HYPN&lt;red&gt;::&lt;white&gt;CONFUSION&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>confused.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Generosity</name>
						<script>if analyser == true then
	targMaffAdd("generosity")
	cecho("&lt;red&gt;[&lt;cyan&gt;HYPN&lt;red&gt;::&lt;white&gt;GENEROSITY&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>extremely generous.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Lethargy</name>
						<script>if analyser == true then
	targAffAdd("lethargy")
	cecho("&lt;red&gt;[&lt;cyan&gt;HYPN&lt;red&gt;::&lt;white&gt;LETHARGY&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>feeling rather lethargic.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Anorexia</name>
						<script>if analyser == true then
	targMaffAdd("anorexia")
	cecho("&lt;red&gt;[&lt;blue&gt;SALV&lt;red&gt;::&lt;white&gt;ANOREXIA&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>anorexic.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Calotropis</name>
						<script>if analyser == true then
	targAffAdd("calotropis")
	cecho("&lt;red&gt;[&lt;blue&gt;SALV&lt;red&gt;::&lt;white&gt;CALOTROPIS&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>unable to digest herbs properly.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Mebaral</name>
						<script>if analyser == true then
	targAffAdd("slow equilibrium")
	cecho("&lt;red&gt;[&lt;white&gt;LAUR&lt;red&gt;::&lt;white&gt;SLOW EQUILIBRIUM&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>unable to regain equilibrium quickly.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Noctec</name>
						<script>if analyser == true then
	targAffAdd("slow balance")
	cecho("&lt;red&gt;[&lt;white&gt;LOVA&lt;red&gt;::&lt;white&gt;SLOW BALANCE&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>unable to regain balance quickly.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hypochondria</name>
						<script>if analyser == true then
	targMaffAdd("hypochondria")
	cecho("&lt;red&gt;[&lt;cyan&gt;HYPN&lt;red&gt;::&lt;green&gt;HYPOCHONDRIA!!!&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>a certified hypochondriac.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Mercury</name>
						<script>if analyser == true then
	targAffAdd("asthma")
	cecho("&lt;red&gt;[&lt;green&gt;KELP&lt;red&gt;::&lt;white&gt;ASTHMA&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>afflicted by horrible asthma.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ether</name>
						<script>if analyser == true then
	targAffAdd("weariness")
	cecho("&lt;red&gt;[&lt;green&gt;KELP&lt;red&gt;::&lt;white&gt;WEARINESS&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>afflicted with clumsiness.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Iodine</name>
						<script>if analyser == true then
	targAffAdd("slickness")
	cecho("&lt;red&gt;[&lt;white&gt;PIPE&lt;red&gt;::&lt;white&gt;SLICKNESS&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>extremely oily.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sensitivity</name>
						<script>if analyser == true then
	targAffAdd("sensitivity")
	cecho("&lt;red&gt;[&lt;yellow&gt;MAID&lt;red&gt;::&lt;white&gt;SENSITIVITY&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>sensitive to pain.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Stupidity</name>
						<script>if analyser == true then
	targMaffAdd("stupidity")
	cecho("&lt;red&gt;[&lt;white&gt;ORPH&lt;red&gt;::&lt;white&gt;STUPIDITY&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>unnaturally stupid.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Disloyalty</name>
						<script>if analyser == true then
	targAffAdd("disloyalty")
	cecho("&lt;red&gt;[&lt;white&gt;LOVA&lt;red&gt;::&lt;white&gt;DISLOYALTY&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>inspiring disloyalty in those nearby.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sulfonal</name>
						<script>if analyser == true then
	targAffAdd("sulfonal")
	cecho("&lt;red&gt;[&lt;purple&gt;NGHT&lt;red&gt;::&lt;white&gt;SULFONAL&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>afflicted by thin blood.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Spectacle Analyse</name>
						<script>local name = matches[2]
local str = matches[3]

if name == target.name then
target.afflictions = {}
target.mentalaffs = {}

table.insert(target.afflictions, "deaf")
if string.find(str, "hemotoxin") then
--	targAffAdd("hemotoxin")
	table.insert(target.afflictions, "hemotoxin")
end
if string.find(str, "weariness") then
--	targAffAdd("weariness")
	table.insert(target.afflictions, "weariness")
end
if string.find(str, "numbness") then
--	targAffAdd("numbness")
	table.insert(target.afflictions, "numbness")
end
if string.find(str, "paralysis") then
--	targAffAdd("paralysis")
	table.insert(target.afflictions, "paralysis")
end
if string.find(str, "metrazol") then
--	targAffAdd("metrazol")
	table.insert(target.afflictions, "metrazol")
end
if string.find(str, "butisol") then
--	targAffAdd("butisol")
	table.insert(target.afflictions, "butisol")
end
if string.find(str, "sunallergy") then
--	targAffAdd("sunallergy")
	table.insert(target.afflictions, "sunallergy")
end
if string.find(str, "nausea") then
--	targAffAdd("nausea")
	table.insert(target.afflictions, "nausea")
end
if string.find(str, "impatience") then
--	targAffAdd("impatience")
	table.insert(target.afflictions, "impatience")
end
if string.find(str, "asthma") then
--	targAffAdd("asthma")
	table.insert(target.afflictions, "asthma")
end
if string.find(str, "clumsiness") then
--	targAffAdd("clumsiness")
	table.insert(target.afflictions, "clumsiness")
end
if string.find(str, "slickness") then
--	targAffAdd("slickness")
	table.insert(target.afflictions, "slickness")
end
if string.find(str, "sensitive") then
--	targAffAdd("sensitive")
	table.insert(target.afflictions, "sensitive")
end
if string.find(str, "sulfonal") then
--	targAffAdd("sulfonal")
	table.insert(target.afflictions, "sulfonal")
end
if string.find(str, "slowherbs") then
--	targAffAdd("slowherbs")
	table.insert(target.afflictions, "slowherbs")
end
if string.find(str, "slow balance") then
--	targAffAdd("slow balance")
	table.insert(target.afflictions, "slow balance")
end
if string.find(str, "crippled left leg") then
--	targAffAdd("crippled left leg")
	table.insert(target.afflictions, "crippled left leg")
end
if string.find(str, "crippled right leg") then
--	targAffAdd("crippled right leg")
	table.insert(target.afflictions, "crippled right leg")
end
if string.find(str, "crippled left arm") then
--	targAffAdd("crippled left arm")
	table.insert(target.afflictions, "crippled left arm")
end
if string.find(str, "crippled right arm") then
--	targAffAdd("crippled right arm")
	table.insert(target.afflictions, "crippled right arm")
end
if string.find(str, "damaged left leg") then
--	targAffAdd("mutilated left leg")
	table.insert(target.afflictions, "mutilated left leg")
end
if string.find(str, "damaged left arm") then
--	targAffAdd("mutilated left arm")
	table.insert(target.afflictions, "mutilated left arm")
end
if string.find(str, "damaged right leg") then
--	targAffAdd("mutilated right leg")
	table.insert(target.afflictions, "mutilated right leg")
end
if string.find(str, "damaged right arm") then
--	targAffAdd("mutilated right arm")
	table.insert(target.afflictions, "mutilated right arm")
end
if string.find(str, "hypersomnia") then
--	targMaffAdd("hypersomnia")
	table.insert(target.mentalaffs, "hypersomnia")
end
if string.find(str, "addiction") then
--	targMaffAdd("addiction")
	table.insert(target.mentalaffs, "addiction")
end
if string.find(str, "masochism") then
--	targMaffAdd("masochism")
	table.insert(target.mentalaffs, "masochism")
end
if string.find(str, "loneliness") then
--	targMaffAdd("loneliness")
	table.insert(target.mentalaffs, "loneliness")
end
if string.find(str, "claustrophobia") then
--	targMaffAdd("claustrophobia")
	table.insert(target.mentalaffs, "claustrophobia")
end
if string.find(str, "stuttering") then
--	targMaffAdd("stuttering")
	table.insert(target.mentalaffs, "stuttering")
end
if string.find(str, "hallucinations") then
--	targMaffAdd("hallucinations")
	table.insert(target.mentalaffs, "hallucinations")
end
if string.find(str, "peace") then
--	targMaffAdd("peace")
	table.insert(target.mentalaffs, "peace")
end
if string.find(str, "dementia") then
--	targMaffAdd("dementia")
	table.insert(target.mentalaffs, "dementia")
end
if string.find(str, "deadening") then
--	targMaffAdd("deadening")
	table.insert(target.mentalaffs, "deadening")
end
if string.find(str, "anorexia") then
--	targMaffAdd("anorexia")
	table.insert(target.mentalaffs, "anorexia")
end
if string.find(str, "epilepsy") then
--	targMaffAdd("epilepsy")
	table.insert(target.mentalaffs, "epilepsy")
end
if string.find(str, "agoraphobia") then
--	targMaffAdd("agoraphobia")
	table.insert(target.mentalaffs, "agoraphobia")
end
if string.find(str, "paranoia") then
--	targMaffAdd("paranoia")
	table.insert(target.mentalaffs, "paranoia")
end
if string.find(str, "recklessness") then
--	targMaffAdd("recklessness")
	table.insert(target.mentalaffs, "recklessness")
end
if string.find(str, "vertigo") then
--	targMaffAdd("vertigo")
	table.insert(target.mentalaffs, "vertigo")
end
if string.find(str, "confusion") then
--	targMaffAdd("confusion")
	table.insert(target.mentalaffs, "confusion")
end
if string.find(str, "lethargy") then
--	targAffAdd("lethargy")
	table.insert(target.afflictions, "lethargy")
end
if string.find(str, "hypochondria") then
--	targMaffAdd("hypochondria")
	table.insert(target.mentalaffs, "hypochondria")
end
if string.find(str, "stupidity") then
--	targMaffAdd("stupidity")
	table.insert(target.mentalaffs, "stupidity")
end
if string.find(str, "disloyalty") then
--	targMaffAdd("disloyalty")
	table.insert(target.mentalaffs, "disloyalty")
end
if string.find(str, "deaf") then
	targAffSub("deaf")
end
printTargetWindow()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(Ring\)\: Khizan says, \"(\w+) has\: (.+)\.\"$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Blind</name>
						<script>if analyser == true then
 table.insert(analysetable, "blind")
else
	return
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>blind.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Deaf</name>
						<script>if analyser == true then
 table.insert(analysetable, "deaf")
else
	return
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>deaf.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Insomniac</name>
						<script>if analyser == true then
 table.insert(analysetable, "an insomniac")
else
	return
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>an insomniac.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Mazanor</name>
						<script>if analyser == true then
	targAffAdd("slowherbs")
	cecho("&lt;red&gt;[&lt;blue&gt;SALV&lt;red&gt;::&lt;white&gt;SLOW HERBS&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>afflicted with slow herb digestion.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Crippled Limbs</name>
						<script>if analyser == true then
	targAffAdd("crippled " .. matches[2])
	cecho("&lt;red&gt;[&lt;blue&gt;SALV&lt;red&gt;::&lt;white&gt;CRIPPLED " .. string.upper(matches[2]) .. " &lt;red&gt;]")
else
	return
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^afflicted by a crippled (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Damaged Limbs</name>
						<script>if analyser == true then
	targAffAdd("mutilated " .. matches[2])
	cecho("&lt;red&gt;[&lt;blue&gt;SALV&lt;red&gt;::&lt;white&gt;DAMAGED " .. string.upper(matches[2]) .. " &lt;red&gt;]")
else
	return
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^afflicted by a damaged (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dizziness</name>
						<script>if analyser == true then
	targMaffAdd("dizziness")
	cecho("&lt;red&gt;[&lt;cyan&gt;HYPN&lt;red&gt;::&lt;white&gt;DIZZINESS&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>overcome by dizziness.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ablaze</name>
						<script>if analyser == true then
	targMaffAdd("ablaze")
	cecho("&lt;red&gt;[&lt;blue&gt;SALV&lt;red&gt;::&lt;white&gt;ABLAZE&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>ablaze.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Lying down</name>
						<script>if analyser == true then
 table.insert(analysetable, "prone")
else
	return
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>lying down.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Healthleech</name>
						<script>if analyser == true then
	targAffAdd("healthleech")
	cecho("&lt;red&gt;[&lt;green&gt;KELP&lt;red&gt;::&lt;white&gt;HEALTHLEECH&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>a victim of healthleech.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Numbness</name>
						<script>if analyser == true then
	targAffAdd("numbness")
	cecho("&lt;red&gt;[&lt;yellow&gt;MAID&lt;red&gt;::&lt;white&gt;NUMBNESS&lt;red&gt;]")
else
	return
end

printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>has numb muscles.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Weaponry/Rending</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Weapon Stabbed</name>
						<script>if ak.ai() then return end
enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
enableTrigger("Confirmed Hit")                        --DO NOT CHANGE!
if weaponattack == nil then weaponattack = {} end
if matches[2] == "claws" then
   table.insert(weaponattack, "your wickedly sharp claws")
elseif matches[2] == "vines" then
   table.insert(weaponattack, "the thorny vines covering your arms")
else
   table.insert(weaponattack, matches[2])
end
--display(weaponattack)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>1</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You viciously jab (.*) into .*</string>
							<string>^You viciously stab (.*) into .*</string>
							<string>^You slice into the [\w'\-]+ [\w'\-]+ of [\w'\-]+ with (.*)\.$</string>
							<string>^Lightning-quick, you jab .* with (.*).</string>
							<string>^Lightning-quick, you stab .* with (.*).</string>
							<string>^Lunging forward with long, flashing ([\w'\-]+) extended, you tear into the flesh of .*</string>
							<string>^You slice into the [\w'\-]+ of [\w'\-]+ with (.*)\.$</string>
							<string>^You flash (.*) in front of the eyes of ([\w'\-]+)</string>
							<string>^You cock back your arm and throw (.*) at ([\w'\-]+)</string>
							<string>^You slice into [\w'\-]+ with (.+)\.$</string>
							<string>^Lunging forward with long, flashing ([\w'\-]+) extended, you tear into</string>
							<string>^You swing (.*) at [\w'\-]+ with all your might.</string>
							<string>^You slash into [\w'\-]+ with (.*)\.$</string>
							<string>^You whip (.+) in a controlled arc at [\w'\-]+\.$</string>
							<string>^You draw the blade of (.*) in an expert lateral slice across the head of [\w'\-]+\.$</string>
							<string>^With your victim exposed\, you crack (.*) back for a second assault\.$</string>
							<string>^You slash into [\w'\-]+\'s .* with (.*)\.$</string>
							<string>^You swing (.*) at [\w'\-]+\'s .* with all your might\.$</string>
							<string>^Taking hold of (.+) with a firm two-handed grip\, you hew savagely at [\w'\-]+\'s .+\.$</string>
							<string>^Raising (.+) above your head\, you bring it down upon [\w'\-]+\'s head with terrible force\.$</string>
							<string>^Bracing your feet\, you lunge upward at [\w'\-]+ with (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Weapon Envenomed</name>
						<script>if ak.ai() then return end
currentenvenom = matches[3]
if not currentvenoms then currentvenoms = {} end
if not currentvenoms[currentenvenom] then currentvenoms[currentenvenom] = {} end
table.insert(currentvenoms[currentenvenom],1,matches[2])
--display(currentvenoms[currentenvenom][1])
if gmcp.Char.Status.class == "Magi" and (inretardation() or inaeon()) then
   ak.scoreup(target)
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You rub some ([\w'\-]+) on (.*)\.$</string>
							<string>^You secrete ([\w'\-]+) and deftly bring (.*) to your mouth, letting the venom drip upon it.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Missed Single Removal</name>
						<script>if ak.ai() then return end
boardaffs = boardaffs or {}
weaponattack = weaponattack or {}
if #boardaffs &gt; 0 then
   table.remove(boardaffs, #boardaffs)
elseif #weaponattack &gt; 0 then
	 if weaponattack[#weaponattack] == "the thorny vines covering your arms" and affstrack.crushedherb then
	 	  table.remove(weaponattack, #weaponattack)	 
	 end
   table.remove(weaponattack, #weaponattack)
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) dodges nimbly out of the way\.$</string>
							<string>^([\w'\-]+) quickly jumps back, avoiding the attack\.$</string>
							<string>^([\w'\-]+) twists (his|her) body out of harm's way\.$</string>
							<string>^A reflection of ([\w'\-]+) blinks out of existence.$</string>
							<string>^([\w'\-]+) parries the attack with a deft manoeuvre.$</string>
							<string>^([\w'\-]+) steps into the attack, grabs your arm, and throw</string>
							<string>^A chaos orb intercepts the attack against (\+) and renders it harmless\.$</string>
							<string>^([\w'\-]+) moves into your attack, knocking your blow aside before viciously countering with a strike to your head\.$</string>
							<string>^Cracks spider across the surface of the crimson shield surrounding ([\w'\-]+)\, before it abruptly winks out of existence\.$</string>
							<string>^Grey fog begins to rise from the suddenly panicked\-looking ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Confirmed Hit</name>
						<script>if ak.ai() then return end
deleteLine()
cecho("&lt;yellow&gt;.")
boardaffs = boardaffs or {}
hitrelay = {}
currentvenoms = currentvenoms or {}
weaponattack = weaponattack or {}
if #weaponattack &gt; 0 then
   for i = 1, #weaponattack do
      currentvenoms[weaponattack[i]] = currentvenoms[weaponattack[i]] or {1}
      table.insert(hitrelay, affstrack.venoms[currentvenoms[weaponattack[i]][1]])
      table.remove(currentvenoms[weaponattack[i]], 1)    
   end
end
if #boardaffs &gt; 0 then
   for i = 1, #boardaffs do
	 		if boardaffs[i] == "HIGH" then
				table.insert(hitrelay, ak.SnBSmashHighAff(hitrelay))
			else
      	table.insert(hitrelay, boardaffs[i])
			end
   end
end
--display(hitrelay)
weaponattack = nil
boardaffs = {}
if #hitrelay == 1 then 
   OppGainedAff(hitrelay[1]) 
elseif #hitrelay &gt; 1 then 
   OppGainedAff(table.concat(hitrelay, " ")) 
end
disableTrigger("Missed Single Removal")                --DO NOT CHANGE!
disableTrigger("Confirmed Hit")  
ak.limbs.deleteset = true
ak.showPrompt()

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string></string>
							<string>^You direct a crystalline golem to (.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>7</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Behead</name>
						<script>if ak.ai() then return end
ak.pause = true </script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You raise your</string>
							<string>^You raise your ([\w'\-]+) over your head and begin to swing it in a wide circle\, gaining speed as you go\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Behead Fail</name>
						<script>if ak.ai() then return end
ak.pause = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You cease the whirling of your weapon over your head.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Writhed</name>
						<script>if ak.ai() then return end
if matches[2] and IsTargetted(matches[2]) then
   affstrack.impale = false
   ak.scoreup(matches[2])
elseif not matches[2] then
   affstrack.impale = false
   ak.scoreup(target)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^With a look of agony on [\w'\-]+ face\, ([\w'\-]+) manages to writhe (herself|himself) free of the weapon which impaled [\w'\-]+\.$</string>
							<string>^With a vicious snarl you carve a merciless swathe through the steaming guts of ([\w'\-]+)\, who gurgles and chokes as you withdraw your dripping blade\, glistening with gore\.$</string>
							<string>^With a vicious snarl [\w'\-]+ carves a merciless swathe through the steaming guts of ([\w'\-]+)\, who gurgles and chokes as [\w'\-]+ withdraws [\w'\-]+ dripping blade\, glistening with gore\.$</string>
							<string>^With a snarl of contempt\, you allow ([\w'\-]+) to slide free of your weapon\.$</string>
							<string>You have no victim impaled to be able to perform a disembowelment.</string>
							<string>^As ([\w'\-]+) wrenches away from you\, your blade rips through his innards in a violentfashion\, leaving a pool of viscera where your foe once lay\.$</string>
							<string>^([\w'\-]+) tumbles out to the .*\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>3</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fail Shatter</name>
						<script>if ak.ai() then return end
ak.pause = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You cease concentrating on shattering your opponent's limbs.</string>
							<string>You strike the</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shatter Start</name>
						<script>if ak.ai() then return end
ak.pause = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You slowly pull back a</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Impale</name>
						<script>if ak.ai() then return end
if matches[2] and IsTargetted(matches[2]) then
   affstrack.impale = "Me"
   ak.scoreup(matches[2])
elseif not matches[2] then
   affstrack.impale = "Me"
   ak.scoreup(target)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You draw your blade back and plunge it deep into the body of ([\w'\-]+) impaling [\w'\-]+ to the hilt\.$</string>
							<string>You cannot do that while your weapon remains deep in your victim's gut.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Impaled Second</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[3]) then
   affstrack.impale = matches[2]
   ak.scoreup(matches[3])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) draws back [\w'\-]+ blade and impales ([\w'\-]+) to the hilt\.$</string>
							<string>^(\w+) shifts the sword impaling (\w+)\'s abdomen\, and blood streams freely fromthe grave wound\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Impaled Secondary Reverse</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   affstrack.impale = matches[3]
   ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) is already impaled upon the sword of (\w+) and you can see no room for your own blade\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fail Impale</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
  affstrack.score.prone = 0
  affstrack.score.paralysis = 0
  affstrack.score.transfixed = 0  
  affstrack.score.frozen = 0 
  ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You thrust your blade towards ([\w'\-]+) but \w+ dodges easily out of the way\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Impaled Sentinel</name>
						<script>ak.potentialImpale = matches[2]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>1</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) comes stampeding in from the \w+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hit!</name>
							<script>if ak.ai() then return end
if IsTargetted(ak.potentialImpale) then
   affstrack.impale = "Me"
   ak.scoreup(ak.potentialImpale)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>He slams into your readied spear with a scream of pain.</string>
								<string>She slams into your readied spear with a scream of pain.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Engaged Fade</name>
						<script>if ak.ai() then return end
ak.engaged = false
ak.scoreup(target)

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You lash out at ([\w'\-]+) as (she|he) turns to flee\.$</string>
							<string>You drop back and ease the engagement.</string>
							<string>You attempt to strike at your target as they leave, but find yourself in no condition to swing a blade.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Engage bypass</name>
						<script>if ak.ai() then return end
if ak.engaged == matches[2] then
   ak.engaged = false
   ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) glances to the [\w'\-]+ and vanishes\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Engaging</name>
						<script>if ak.ai() then return end
ak.engaged = matches[2]
ak.scoreup(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You move in to engage ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Limb Tracker</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Painful Bruises Track</name>
						<script>local limb = matches[3]
local name = matches[2]
if name == target.name then
	if limb == "right arm" then
		twothirdsmark = tonumber(limbcountrightarm)
		sysEcho("RIGHT ARM BRUISED:: " .. limbcountrightarm .. "")
	elseif limb == "left arm" then
		twothirdsmark = tonumber(limbcountleftarm)
			sysEcho("LEFT ARM BRUISED!:: " .. limbcountleftarm .. "")
	elseif limb == "right leg" then
		twothirdsmark = tonumber(limbcountrightleg)
		sysEcho("RIGHT LEG BRUISED!:: " .. limbcountrightleg .. "")
	elseif limb == "left leg" then
		twothirdsmark = tonumber(limbcountleftleg)
		sysEcho("LEFT LEG BRUISED!:: " .. limbcountleftleg .. "")
	elseif limb == "head" then
		twothirdsmark = tonumber(limbcounthead)
		sysEcho("HEAD BRUISED!:: " .. limbcounthead .. "")
	end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You notice several bruises forming on (\w+)'s (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Trembles Track</name>
						<script>local limb = matches[3]
local name = matches[2]
if name == target.name then
	if limb == "right arm" then
		onethirdsmark = tonumber(limbcountrightarm)
		sysEcho("RIGHT ARM TREMBLE:: " .. limbcountrightarm .. "")
	elseif limb == "left arm" then
		onethirdsmark = tonumber(limbcountleftarm)
		sysEcho("LEFT ARM TREMBLE!:: " .. limbcountleftarm .. "")
	elseif limb == "right leg" then
		onethirdsmark = tonumber(limbcountrightleg)
		sysEcho("RIGHT LEG TREMBLE!:: " .. limbcountrightleg .. "")
	elseif limb == "left leg" then
		onethirdsmark = tonumber(limbcountleftleg)
		sysEcho("LEFT LEG TREMBLE!:: " .. limbcountleftleg .. "")
	elseif limb == "head" then
		onethirdsmark = tonumber(limbcounthead)
		sysEcho("HEAD TREMBLE!:: " .. limbcounthead .. "")
	end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+)'s (.+) trembles slightly under the blow\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Mutilated Track</name>
						<script>local limb = matches[3]
local name = matches[2]
if name == target.name then
	if limb == "right arm" then
		mutilatedmark = tonumber(limbcountrightarm)
		sysEcho("RIGHT ARM MUTILATED:: " .. limbcountrightarm .. "")
		targAffAdd("mutilated right arm")
		targAffAdd("crippled right arm")
	elseif limb == "left arm" then
		mutilatedmark = tonumber(limbcountleftarm)
		sysEcho("LEFT ARM MUTILATED!:: " .. limbcountleftarm .. "")
		targAffAdd("mutilated left arm")
		targAffAdd("crippled left arm")
	elseif limb == "right leg" then
		mutilatedmark = tonumber(limbcountrightleg)
		sysEcho("RIGHT LEG MUTILATED!:: " .. limbcountrightleg .. "")
		targAffAdd("mutilated right leg")
		targAffAdd("crippled right leg")
	elseif limb == "left leg" then
		mutilatedmark = tonumber(limbcountleftleg)
		sysEcho("LEFT LEG MUTILATED!:: " .. limbcountleftleg .. "")
		targAffAdd("mutilated left leg")
		targAffAdd("crippled left leg")
	elseif limb == "head" then
		mutilatedmark = tonumber(limbcounthead)
		sysEcho("HEAD MUTILATED!:: " .. limbcounthead .. "")
		targAffAdd("mutilated head")
	end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+)'s (.+) has been mutilated\.$</string>
							<string>^\(Ring\): Ahkan says, \"(\w+) aff damaged (.+)\.\"$</string>
							<string>^\(Ring\)\: Azefel says, "(\w+)'s (.+) broken\.\"$</string>
							<string>^(\w+)\'s (.+) is crushed under your blow\.$</string>
							<string>Your sitara carves through meat and tendon, leaving your foe's limb mutilated.</string>
							<string>^(\w+)\'s (.+) has been beaten into uselessness\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>0</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>pred mutilate arm</name>
						<script>local limb = matches[3]
local name = matches[2]
if name == target.name then
	if limb == "right arm" then
		mutilatedmark = tonumber(limbcountrightarm)
		sysEcho("RIGHT ARM MUTILATED:: " .. limbcountrightarm .. "")
		targAffAdd("mutilated right arm")
		targAffAdd("crippled right arm")
		limbcountrightarm = 0
	elseif limb == "left arm" then
		mutilatedmark = tonumber(limbcountleftarm)
		sysEcho("LEFT ARM MUTILATED!:: " .. limbcountleftarm .. "")
		targAffAdd("mutilated left arm")
		targAffAdd("crippled left arm")
		limbcountleftarm = 0
	elseif limb == "right leg" then
		mutilatedmark = tonumber(limbcountrightleg)
		sysEcho("RIGHT LEG MUTILATED!:: " .. limbcountrightleg .. "")
		targAffAdd("mutilated right leg")
		targAffAdd("crippled right leg")
		limbcountrightleg = 0
	elseif limb == "left leg" then
		mutilatedmark = tonumber(limbcountleftleg)
		sysEcho("LEFT LEG MUTILATED!:: " .. limbcountleftleg .. "")
		targAffAdd("mutilated left leg")
		targAffAdd("crippled left leg")
		limbcountleftleg = 0
	elseif limb == "head" then
		mutilatedmark = tonumber(limbcounthead)
		sysEcho("HEAD MUTILATED!:: " .. limbcounthead .. "")
		targAffAdd("mutilated head")
		limbcounthead = 0
	end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>2</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You drive forth with the tip of your knife, piercing (\w+)\'s (.+)\.</string>
							<string>Your sitara carves through meat and tendon, leaving your foe's limb mutilated.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Limb Counter</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Limb Hit Weapon Last</name>
							<script>if ak.ai() then return end
local augment = "none"
local weapon = matches[3]
local limb = ak.limbs.standardizeLimb(matches[2])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,augment)
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Lightning-quick, you jab [\w'\-]+'s (right leg|left leg|right arm|left arm|head|torso) with (.*)\.</string>
								<string>^Lightning-quick, you stab [\w'\-]+'s (right leg|left leg|right arm|left arm|head|torso) with (.*)\.</string>
								<string>^You slash into [\w'\-]+\'s (right leg|left leg|right arm|left arm|head|torso) with (.*)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Limb Hit Weapon First</name>
							<script>if ak.ai() then return end
if matches[3] == "flesh" then 
   return 
end
local augment = "none"
local weapon = matches[2]
if weapon == "claws" then
   augment = "percent"
   weapon = "dragonrend"
elseif weapon == "maul" then
   augment = "percent"
   weapon = "maul"
elseif weapon == "vines" then
	if affstrack.vinewreathe then
   weapon = "wreathed"
	else
   weapon = "viridianrend"
	end
end
local limb = ak.limbs.standardizeLimb(matches[3])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,augment)
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You viciously jab (.*) into [\w'\-]+'s (right leg|left leg|right arm|left arm|head|torso)\.$</string>
								<string>^You viciously stab (.*) into [\w'\-]+'s (right leg|left leg|right arm|left arm|head|torso)\.$</string>
								<string>^Lunging forward with long, flashing ([\w'\-]+) extended, you tear into the flesh of [\w'\-]+\'s (right leg|left leg|right arm|left arm|head|torso)\.$</string>
								<string>^You command the razor-edged thorny ([\w'\-]+) around you to lash out and rend the (right leg|left leg|right arm|left arm|head|torso) of .*\.$</string>
								<string>^You spring forwards and ([\w'\-]+) [\w'\-]+\'s (right leg|left leg|right arm|left arm|head|torso)\.$</string>
								<string>^You swing (.*) at [\w'\-]+\'s (right leg|left leg|right arm|left arm|head|torso) with all your might\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Parry locate</name>
							<script>if not IsTargetted(matches[2]) then return end
if ak.ai() then return end
if ak.limbs.currentbreak.limb and #ak.limbs.currentbreak.limb &gt; 0 and ak.limbs.currentbreak.who[#ak.limbs.currentbreak.who] == target then 
   targetparry = ak.limbs.currentbreak.limb[#ak.limbs.currentbreak.limb]
   cecho("&lt;cyan&gt;\n\n YOU HIT PARRY(&lt;white&gt;"..targetparry:title().."&lt;cyan&gt;)!!\n\n")
   cecho("&lt;yellow&gt;\n\n YOU HIT PARRY(&lt;white&gt;"..targetparry:title().."&lt;yellow&gt;)!!\n\n") 
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) parries the attack with a deft manoeuvre.$</string>
								<string>^([\w'\-]+) steps into the attack, grabs your arm, and throw</string>
								<string>^A chaos orb intercepts the attack against (\+) and renders it harmless\.$</string>
								<string>^([\w'\-]+) moves into your attack, knocking your blow aside before viciously countering with a strike to your head\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Missed Single Removal Limbs</name>
							<script>if string.findPattern(matches[1],"rebounds") then
   ak.limbs.blademaster.rebound = true
   ak.limbs.currentbreak.who[#ak.limbs.currentbreak.who] = ak.limbs.currentbreak.attacker[#ak.limbs.currentbreak.attacker]
elseif #ak.limbs.currentbreak.who &gt; 0 then
   table.remove(ak.limbs.currentbreak.weapon, #ak.limbs.currentbreak.who)
   table.remove(ak.limbs.currentbreak.limb, #ak.limbs.currentbreak.who)
   table.remove(ak.limbs.currentbreak.attacker,#ak.limbs.currentbreak.who)
   if #ak.limbs.currentbreak.augment == #ak.limbs.currentbreak.who then
      table.remove(ak.limbs.currentbreak.augment,#ak.limbs.currentbreak.who)
   end
   table.remove(ak.limbs.currentbreak.who,#ak.limbs.currentbreak.who)
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) dodges nimbly out of the way\.$</string>
								<string>^([\w'\-]+) quickly jumps back, avoiding the attack\.$</string>
								<string>^([\w'\-]+) twists (his|her) body out of harm's way\.$</string>
								<string>^A reflection of ([\w'\-]+) blinks out of existence.$</string>
								<string>^([\w'\-]+) parries the attack with a deft manoeuvre.$</string>
								<string>^([\w'\-]+) steps into the attack, grabs your arm, and throw</string>
								<string>^A chaos orb intercepts the attack against (\+) and renders it harmless\.$</string>
								<string>^([\w'\-]+) moves into your attack, knocking your blow aside before viciously countering with a strike to your head\.$</string>
								<string>^The attack rebounds onto [\w'\-]+\!$</string>
								<string>^The attack rebounds back onto [\w'\-]+\!$</string>
								<string>You parry the attack with a deft manoeuvre.</string>
								<string>^You move inside [\w'\-]+\'s guard\, deflecting (his|her) attack to one side with your forearm before countering with a swift blow to (his|her) temple\.$</string>
								<string>The attack rebounds off your rebounding aura!</string>
								<string>You twist your body out of harm's way.</string>
								<string>^Cracks spider across the surface of the crimson shield surrounding ([\w'\-]+)\, before it abruptly winks out of existence\.$</string>
								<string>^You step into the attack\, grab ([\w'\-]+) by the arm\, and throw [\w'\-]+ violently to the ground\.$</string>
								<string>You miss.</string>
								<string>One of your reflections has been destroyed! You have 0 left.</string>
								<string>He misses.</string>
								<string>She misses.</string>
								<string>You quickly jump back, avoiding the attack.</string>
								<string>^You lash out at ([\w'\-]+) with .*\, but miss\.$</string>
								<string>^\w+\'s blow lands upon you but is robbed of much of its impact by \w+ flawed technique\.$</string>
								<string>^Your blow strikes \w+ but is robbed of much of its impact by your faulty technique\.$</string>
								<string>([\w'\-]+) lashes out with a clumsy blow at ([\w'\-]+)\, landing with far reduced force\.$</string>
								<string>You fumble your strike, the attack going wide.</string>
								<string>^(\w+) stumbles\, \w+ attack going wide\.$</string>
								<string>You dodge nimbly out of the way.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>3</integer>
								<integer>1</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>3</integer>
								<integer>1</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>3</integer>
								<integer>1</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Confirmed Hit Limbs</name>
							<script>if ak.ai() then
	ak.limbs.currentbreak.weapon = {}
	ak.limbs.currentbreak.limb = {}
	ak.limbs.currentbreak.attacker = {}
	ak.limbs.currentbreak.who = {}
	ak.limbs.currentbreak.augment = {}
	ak.limbs.absorbed = false
	disableTrigger("Missed Single Removal Limbs")                --DO NOT CHANGE!
  disableTrigger("Parry locate")
  disableTrigger("Monk Parry")
elseif isPrompt() then
	ak.limbs.parseBreaksPrompt()
else
	if not ak.limbs.deleteset then
		--deleteLine() --THIS ISNT EVEN PROMPT WHY DELETE IT?
		--ak.showPrompt()
	end
	ak.limbs.parseBreaks()
end


</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
								<string>^He connects to the .*\!$</string>
								<string>^She connects to the .*\!$</string>
								<string>^You connect to the .*\!$</string>
								<string>^You direct a crystalline golem to (.*)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>SoA</name>
							<script>if ak.ai() then return end
ak.limbs.absorbed = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your shield completely absorbs the damage.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Monk</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>SDK</name>
								<script>if ak.ai() then return end
table.insert(ak.limbs.currentbreak.weapon,"sdk")
table.insert(ak.limbs.currentbreak.limb, "torso")
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"none")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
disableTrigger("Monk Parry")


</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You pump out at</string>
									<string>^You pump out at ([\w'\-]+) with a powerful side kick\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>HKP</name>
								<script>if ak.ai() then return end
table.insert(ak.limbs.currentbreak.weapon,"hkp")
table.insert(ak.limbs.currentbreak.limb, "torso")
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"none")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
disableTrigger("Monk Parry")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You unleash a powerful hook towards</string>
									<string>^You unleash a powerful hook towards ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>UCP</name>
								<script>if ak.ai() then return end
table.insert(ak.limbs.currentbreak.weapon,"ucp")
table.insert(ak.limbs.currentbreak.limb, "head")
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"none")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
disableTrigger("Monk Parry")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You launch a powerful uppercut at</string>
									<string>^You launch a powerful uppercut at ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>WWK</name>
								<script>if ak.ai() then return end
table.insert(ak.limbs.currentbreak.weapon,"wwk")
table.insert(ak.limbs.currentbreak.limb, "head")
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"none")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
disableTrigger("Monk Parry")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You spin into the air and throw a whirlwind kick towards</string>
									<string>^You spin into the air and throw a whirlwind kick towards ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>AXK</name>
								<script>if ak.ai() then return end
if axkpunch1 then killTrigger(axkpunch1) end
if ak.monk.axkpunch then axkpunch1 = tempTrigger("You have recovered balance on your", [[ak.monk.axkpunch();killTrigger(axkpunch1)]]) end
table.insert(ak.limbs.currentbreak.weapon,"axk")
table.insert(ak.limbs.currentbreak.limb, "head")
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"none")
enableTrigger("Parry locate")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
disableTrigger("Monk Parry")

</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You kick your leg high and scythe downwards at ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>HFP</name>
								<script>if ak.ai() then return end
disableTrigger("Missed Single Removal Limbs")  
disableTrigger("Parry locate")
enableTrigger("Monk Parry")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>1</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You ball up one fist and hammerfist</string>
									<string>^You ball up one fist and hammerfist ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Left Leg</name>
									<script>if ak.ai() then return end
ak.deleteFull()
enableTrigger("Confirmed Hit Limbs")
if #ak.limbs.parriedlimbs&gt;0 then
	table.remove(ak.limbs.parriedlimbs,1)
end
disableTrigger("Monk Parry")
ak.limbs.ScoreRun = false
ak.limbs.LimbHit(target, "Me", "hfp", "leftleg", "none")
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You connect to the left leg!</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Right Leg</name>
									<script>if ak.ai() then return end
ak.deleteFull()
enableTrigger("Confirmed Hit Limbs")
if #ak.limbs.parriedlimbs&gt;0 then
	table.remove(ak.limbs.parriedlimbs,1)
end
disableTrigger("Monk Parry")
ak.limbs.ScoreRun = false
ak.limbs.LimbHit(target, "Me", "hfp", "rightleg", "none")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You connect to the right leg!</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>SNK</name>
								<script>if ak.ai() then return end
disableTrigger("Missed Single Removal Limbs") 
disableTrigger("Parry locate") 
enableTrigger("Monk Parry")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>1</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You let fly at </string>
									<string>^You let fly at ([\w'\-]+) with a snap kick\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Left Leg</name>
									<script>if ak.ai() then return end
ak.deleteFull()
enableTrigger("Confirmed Hit Limbs")
if #ak.limbs.parriedlimbs&gt;0 then
	table.remove(ak.limbs.parriedlimbs,1)
end
disableTrigger("Monk Parry")
ak.limbs.ScoreRun = false
ak.limbs.LimbHit(target, "Me", "snk", "leftleg", "none")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You connect to the left leg!</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Right Leg</name>
									<script>if ak.ai() then return end
ak.deleteFull()
enableTrigger("Confirmed Hit Limbs")
if #ak.limbs.parriedlimbs&gt;0 then
	table.remove(ak.limbs.parriedlimbs,1)
end
disableTrigger("Monk Parry")
ak.limbs.ScoreRun = false
ak.limbs.LimbHit(target, "Me", "snk", "rightleg", "none")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You connect to the right leg!</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>SPP</name>
								<script>if ak.ai() then return end
disableTrigger("Missed Single Removal Limbs")
disableTrigger("Parry locate")  
enableTrigger("Monk Parry")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>1</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You form a spear hand and stab out towards</string>
									<string>^You form a spear hand and stab out towards ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Left Arm</name>
									<script>if ak.ai() then return end
ak.deleteFull()
enableTrigger("Confirmed Hit Limbs")
if #ak.limbs.parriedlimbs&gt;0 then
	table.remove(ak.limbs.parriedlimbs,1)
end
disableTrigger("Monk Parry")
ak.limbs.ScoreRun = false
ak.limbs.LimbHit(target, "Me", "spp", "leftarm", "none")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You connect to the left arm!</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Right Arm</name>
									<script>if ak.ai() then return end
ak.deleteFull()
enableTrigger("Confirmed Hit Limbs")
if #ak.limbs.parriedlimbs&gt;0 then
	table.remove(ak.limbs.parriedlimbs,1)
end
disableTrigger("Monk Parry")
ak.limbs.ScoreRun = false
ak.limbs.LimbHit(target, "Me", "spp", "rightarm", "none")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You connect to the right arm!</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>MNK</name>
								<script>if ak.ai() then return end
disableTrigger("Missed Single Removal Limbs") 
disableTrigger("Parry locate") 
enableTrigger("Monk Parry")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>1</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You hurl yourself towards</string>
									<string>^You hurl yourself towards ([\w'\-]+) with a lightning-fast moon kick\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Left Arm</name>
									<script>if ak.ai() then return end
ak.deleteFull()
enableTrigger("Confirmed Hit Limbs")
if #ak.limbs.parriedlimbs&gt;0 then
	table.remove(ak.limbs.parriedlimbs,1)
end
disableTrigger("Monk Parry")
ak.limbs.ScoreRun = false
ak.limbs.LimbHit(target, "Me", "mnk", "leftarm", "none")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You connect to the left arm!</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Right Arm</name>
									<script>if ak.ai() then return end
ak.deleteFull()
enableTrigger("Confirmed Hit Limbs")
if #ak.limbs.parriedlimbs&gt;0 then
	table.remove(ak.limbs.parriedlimbs,1)
end
disableTrigger("Monk Parry")
ak.limbs.ScoreRun = false
ak.limbs.LimbHit(target, "Me", "mnk", "rightarm", "none")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You connect to the right arm!</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Monk Parry</name>
								<script>if ak.ai() then return end
ak.limbs.parriedlimbs = ak.limbs.parriedlimbs or {}
if not IsTargetted(matches[2]) then return end
if #ak.limbs.parriedlimbs == 0 then return end
targetparry = ak.limbs.parriedlimbs[1]
cecho("&lt;cyan&gt;\n\n YOU HIT PARRY(&lt;white&gt;"..targetparry:title().."&lt;cyan&gt;)!!\n\n")
cecho("&lt;yellow&gt;\n\n YOU HIT PARRY(&lt;white&gt;"..targetparry:title().."&lt;yellow&gt;)!!\n\n")
disableTrigger("Parry locate") 
disableTrigger("Monk Parry")
ak.scoreup(matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) steps into the attack, grabs your arm, and throw</string>
									<string>^([\w'\-]+) parries the attack with a deft manoeuvre.$</string>
									<string>^A chaos orb intercepts the attack against (\+) and renders it harmless\.$</string>
									<string>^([\w'\-]+) moves into your attack, knocking your blow aside before viciously countering with a strike to your head\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Sent Queue</name>
								<script>local combodraw = multimatches[2][2]
if not string.findPattern(combodraw,"hfp") and not string.findPattern(combodraw,"snk") and not string.findPattern(combodraw,"spp") and not string.findPattern(combodraw,"mnk") and not string.findPattern(combodraw,"drawslash") then
	return
end
combodraw = string.gsub(combodraw, "/", " ")
combodraw = combodraw:split(" ")
ak.limbs.parriedlimbs = {}
for i = 1, #combodraw do
   if string.findPattern(combodraw[i],"hfp") then
      table.insert(ak.limbs.parriedlimbs,combodraw[i+1]:lower().."leg")
   elseif string.findPattern(combodraw[i],"snk") then
      table.insert(ak.limbs.parriedlimbs,combodraw[i+1]:lower().."leg")
   elseif string.findPattern(combodraw[i],"spp") then
      table.insert(ak.limbs.parriedlimbs,combodraw[i+1]:lower().."arm")
   elseif string.findPattern(combodraw[i],"mnk") then
      table.insert(ak.limbs.parriedlimbs,combodraw[i+1]:lower().."arm")
	 elseif string.findPattern(combodraw[i],"drawslash") then
      table.insert(ak.limbs.parriedlimbs,combodraw[i+2]:lower().."arm")
   end 
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Alias "</string>
									<string>Alias \"\w+\" will now execute\: \"(.*)\"</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Queued Combo</name>
								<script>local combodraw = multimatches[2][2]:lower()
if not string.findPattern(combodraw,"hfp") and not string.findPattern(combodraw,"snk") and not string.findPattern(combodraw,"spp") and not string.findPattern(combodraw,"mnk") and not string.findPattern(combodraw,"drawslash") then
	return
end
combodraw = string.gsub(combodraw, "|", " ")
combodraw = combodraw:split(" ")
ak.limbs.parriedlimbs = {}
for i = 1, #combodraw do
   if string.findPattern(combodraw[i],"hfp") then
      table.insert(ak.limbs.parriedlimbs,combodraw[i+1]:lower().."leg")
   elseif string.findPattern(combodraw[i],"snk") then
      table.insert(ak.limbs.parriedlimbs,combodraw[i+1]:lower().."leg")
   elseif string.findPattern(combodraw[i],"spp") then
      table.insert(ak.limbs.parriedlimbs,combodraw[i+1]:lower().."arm")
   elseif string.findPattern(combodraw[i],"mnk") then
      table.insert(ak.limbs.parriedlimbs,combodraw[i+1]:lower().."arm")
	 elseif string.findPattern(combodraw[i],"drawslash") then
      table.insert(ak.limbs.parriedlimbs,combodraw[i+2]:lower().."arm")
   end 
end
ak.monkcombodraw = combodraw</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Running queued</string>
									<string>^Running queued \w+ command\: (.*)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>BladeMaster</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Stancing</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Arash</name>
									<script>ak.limbs.blademaster.stance.Me = "Arash"
ak.scoreup(target)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Mind set on the dancing flame, you take up the Arash stance.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Thyr</name>
									<script>ak.limbs.blademaster.stance.Me = "Thyr"
ak.scoreup(target)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Readying yourself with a flourish, you flow into the Thyr stance.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Mir</name>
									<script>ak.limbs.blademaster.stance.Me = "Mir"
ak.scoreup(target)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Resolving to move as water, you enter the Mir stance.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Doya</name>
									<script>ak.limbs.blademaster.stance.Me = "Doya"
ak.scoreup(target)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Lowering your centre of gravity, you drop into the Doya stance.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Sanya</name>
									<script>ak.limbs.blademaster.stance.Me = "Sanya"
ak.scoreup(target)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Clearing your mind, you sink into the Sanya stance.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Unstanced</name>
									<script>ak.limbs.blademaster.stance["Me"] = "None"
ak.scoreup(target)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You adopt a neutral stance.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>0</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Drawslash</name>
								<script>if ak.ai() then return end
local limb = ak.limbs.standardizeLimb(multimatches[2][3])
table.insert(ak.limbs.currentbreak.weapon,"drawslash")
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"blademaster")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>4</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With expert precision\, you draw .* from its scabbard and unleash a vicious slash towards ([\w'\-]+)\.$</string>
									<string>^Your blade bites deep into (his|her|His|Her) (.*)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>CompassSlash</name>
								<script>if ak.ai() then return end
local augment = "none"
local limb = ak.limbs.standardizeLimb(matches[2])
table.insert(ak.limbs.currentbreak.weapon,"compassslash")
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"blademaster")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Whispering a prayer to the [\w'\-]+ winds\, you draw .* and unleash a slash towards [\w'\-]+\'s (.*)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Centre Slash</name>
								<script>if ak.ai() then return end
local augment = "none"
local limb = ak.limbs.standardizeLimb(matches[3])
table.insert(ak.limbs.currentbreak.weapon,"centreslash")
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"blademaster")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^In a single motion, you draw .* from its scabbard and loose a vicious (rising|falling) slash at [\w'\-]+\'s ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>LegSlash</name>
								<script>if ak.ai() then return end
local augment = "none"
local limb = ak.limbs.standardizeLimb(matches[2].."leg")
table.insert(ak.limbs.currentbreak.weapon,"legslash")
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"blademaster")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With a smooth lunge to the ([\w'\-]+)\, you draw .* from its scabbard and deliver a powerful slash across [\w'\-]+\'s legs\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>ArmSlash</name>
								<script>if ak.ai() then return end
local augment = "none"
local limb = ak.limbs.standardizeLimb(matches[2].."arm")
table.insert(ak.limbs.currentbreak.weapon,"armslash")
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"blademaster")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Spinning to the ([\w'\-]+) as you draw .* from its sheath\, you unleash a precise slash across ([\w'\-]+)\'s arms\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Blunt</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Limb Hit Weapon Last</name>
								<script>if ak.ai() then return end
local weapon = matches[3]
local limb = ak.limbs.standardizeLimb(matches[2])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"blunt")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With a steady hand\, you batter [\w'\-]+\'s (right leg|left leg|right arm|left arm|head|torso) with (.*)\.$</string>
									<string>^You smash [\w'\-]+\'s (right leg|left leg|right arm|left arm|head|torso) with (.*)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Limb Hit Weapon First</name>
								<script>if ak.ai() then return end
local weapon = matches[2]
local limb = ak.limbs.standardizeLimb(matches[3])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"blunt")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You bring (.*) crashing down on [\w'\-]+\'s (right leg|left leg|right arm|left arm|head|torso)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Shatter</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shattered</name>
								<script>if ak.ai() then return end
local augment = "shattered"
ak.limbs.limb_table_check(matches[3])
local limb = ak.limbs.standardizeLimb(matches[2])
table.insert(ak.limbs.currentbreak.weapon,"shattered")
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,augment)
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")


</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You strike the (right leg|left leg|right arm|left arm|head|torso) of ([\w'\-]+) with a mighty blow\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Mangled</name>
								<script>if IsTargetted(matches[2]) then
	 if ak.ai() then return end
   local limbt = ak.limbs.standardizeLimb(matches[3]) 
   affstrack.score[limbt] = 300
   ak.scoreup(matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+)\'s (right leg|left leg|right arm|left arm|head|torso) has been beaten into uselessness\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>2H</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Hew</name>
								<script>if matches[3] == "flesh" then 
   return 
end
if ak.ai() then return end
local augment = ak.limbs.twoh.stance["Me"] or "knight"
local weapon = matches[2]
local limb = ak.limbs.standardizeLimb(matches[3])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,augment)
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Taking hold of (.+) with a firm two-handed grip\, you hew savagely at [\w'\-]+\'s (right leg|left leg|right arm|left arm|head|torso)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Overhand</name>
								<script>if matches[3] == "flesh" then 
   return 
end
if ak.ai() then return end
local augment = ak.limbs.twoh.stance["Me"] or "knight"
local weapon = matches[2]
local limb = ak.limbs.standardizeLimb(matches[3])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,augment)
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Raising (.+) above your head\, you bring it down upon [\w'\-]+\'s (head) with terrible force\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Undercut</name>
								<script>local augment = ak.limbs.twoh.stance["Me"] or "knight"
local weapon = matches[2]
local limb = "torso"
if ak.ai() then return end
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,augment)
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Bracing your feet\, you lunge upward at [\w'\-]+ with (.+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Pulverise</name>
								<script>if ak.ai() then return end
local augment = ak.limbs.twoh.stance["Me"] or "knight"
local weapon = matches[2]
local limb = ak.limbs.standardizeLimb(matches[4])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,augment)
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Throwing your full weight into the motion\, you bring (.*) across in a terrible blow toward (.*)\'s (right leg|left leg|right arm|left arm|head|torso)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Shikudo</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Thrust</name>
								<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if ak.shikudo.LimbBlock() then return end
local augment = "none"
local weapon = "thrust"
local limb = ak.limbs.standardizeLimb(matches[2])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[3])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Stepping forward\, you drive the end of .+ into the (right leg|left leg|right arm|left arm|head|torso) of ([\w'\-]+)\.$</string>
									<string>^Continuing your kata\, you spin .+ in your hands and drive it in a sharp thrust towards the (right leg|left leg|right arm|left arm|head|torso) of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Needle</name>
								<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if ak.shikudo.LimbBlock() then return end
local augment = "none"
local weapon = "needle"
local limb = ak.limbs.standardizeLimb("head")
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[2])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With pinpoint precision\, you drive .+ at the throat of ([\w'\-]+)\.$</string>
									<string>^Reversing your grip on .+\, you drive the top of the weapon into the throat of ([\w'\-]+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Dart</name>
								<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if ak.shikudo.LimbBlock() then return end
local augment = "none"
local weapon = "dart"
local limb = ak.limbs.standardizeLimb(matches[2])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[3])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Sharply extending out your arms in front of you\, you deliver a lightning\-fast thrust to the (right leg|left leg|right arm|left arm|head|torso) of ([\w'\-]+) with .+\.$</string>
									<string>^Spinning on one foot you bring .+ around in a lightning fast thrust at the (right leg|left leg|right arm|left arm|head|torso) of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ruku</name>
								<script>if ak.ai() then return end
--ak.limbs.ParseonLine()
if ak.shikudo.LimbBlock() then return end
local augment = "none"
local weapon = "ruku"
local limb = ak.limbs.standardizeLimb(matches[2])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[3])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You spin a full rotation\, bringing .+ around in a blur of motion to smash into the (left arm|right arm|head|torso|left leg|right leg) of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ruku Combo</name>
								<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if ak.shikudo.LimbBlock() then return end
local augment = "none"
local weapon = "ruku"
local limb = ak.limbs.standardizeLimb(matches[3])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[2])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You whip .+ at ([\w'\-]+) in a controlled arc\, bringing its length to crack against [\w'\-]+ (right leg|left leg|right arm|left arm|head|torso)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Front Kick</name>
								<script>if ak.ai() then return end
ak.limbs.ParseonLine()
local augment = "none"
local weapon = "frontkick"
local limb = ak.limbs.standardizeLimb(matches[2].."arm")
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[3])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You lash out with a straight kick at the ([\w'\-]+) shoulder of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Kuro</name>
								<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if ak.shikudo.LimbBlock() then return end
local augment = "none"
local weapon = "kuro"
local limb = ak.limbs.standardizeLimb(matches[2].." leg")
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[3])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Falling back into a low crouch\, you lash out with a swift strike at the ([\w'\-]+) thigh of ([\w'\-]+)\.$</string>
									<string>^Dropping into a lower stance\, you sweep a .+ at the ([\w'\-]+) thigh of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Livestrike</name>
								<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if ak.shikudo.LimbBlock() then return end
local augment = "none"
local weapon = "livestrike"
local limb = ak.limbs.standardizeLimb("torso")
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[2])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Lunging forward, you drive the end of .+ viciously into the solar plexus of ([\w'\-]+)\.$</string>
									<string>^Turning with the motion\, you channel the momentum of your previous strike into a thrust at the solar plexus of ([\w'\-]+) with .+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Nervestrike</name>
								<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if ak.shikudo.LimbBlock() then return end
local augment = "none"
local weapon = "nervestrike"
local limb = ak.limbs.standardizeLimb("head")
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[2])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You whip a .+ at the side of ([\w'\-]+)\'s neck\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Spinkick Torso</name>
								<script>if ak.ai() then return end
ak.limbs.ParseonLine()
local augment = "none"
local weapon = "spinkick"
local limb = ak.limbs.standardizeLimb("torso")
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[2])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Whirling around\, you bring the ball of your foot smashing into the ribs of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Spinkick Head</name>
								<script>if ak.ai() then return end
ak.limbs.ParseonLine()
local augment = "none"
local weapon = "spinkick"
local limb = ak.limbs.standardizeLimb("head")
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[2])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>2</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Whirling around\, you bring the ball of your foot crashing into the temple of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>SpinKick Advance</name>
									<script>affstrack.score.head = 200
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You feel something give way under your blow.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Flashheel</name>
								<script>if ak.ai() then return end
ak.limbs.ParseonLine()
local augment = "none"
local weapon = "flashheel"
ak.limbs.shikudo.flashed = matches[2]
local limb = ak.limbs.standardizeLimb(matches[2].." leg")
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker, "Me")
table.insert(ak.limbs.currentbreak.who,matches[3])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Snapping your leg out to its full extent\, you drive a heel into the ([\w'\-]+) knee of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>RisingKick</name>
								<script>if ak.ai() then return end
ak.limbs.ParseonLine()
local augment = "none"
local weapon = "risingkick"
local limb = ak.limbs.standardizeLimb(matches[2])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[3])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You drive your foot up in a rising kick at the ([\w'\-]+) of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Hiru</name>
								<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if ak.shikudo.LimbBlock() then return end
local augment = "none"
local weapon = "hiru"
local limb = ak.limbs.standardizeLimb("head")
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker, "Me")
table.insert(ak.limbs.currentbreak.who,matches[2])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Whirling .+ in a tight arc\, you bring the weapon around to crash into the side of the head of ([\w'\-]+)\.$</string>
									<string>^Snapping back into a ready stance\, you whirl .+ in a long sweep at the head of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Hiraku</name>
								<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if ak.shikudo.LimbBlock() then return end
local augment = "none"
local weapon = "hiraku"
local limb = ak.limbs.standardizeLimb("head")
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker, "Me")
table.insert(ak.limbs.currentbreak.who,matches[2])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Stepping forward\, you drive .+ at the face of ([\w'\-]+)\.$</string>
									<string>^Bracing your back foot\, you lunge forward with .+ at the face of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Hyperfocus</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>None</name>
									<script>if ak.ai() then return end
ak.limbs.hyperfocus = false
ak.scoreup()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are not currently focussing on exploiting flaws in defensive technique.</string>
										<string>You cease to focus on exploiting flaws in defensive technique.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Hyperfocus Chosen</name>
									<script>if ak.ai() then return end
ak.limbs.hyperfocus = ak.limbs.standardizeLimb(multimatches[2][2])
ak.scoreup()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You will now focus on bypassing attempts to deflect blows when striking the</string>
										<string>^You will now focus on bypassing attempts to deflect blows when striking the (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>2</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>DWB</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Limb Hit Weapon First</name>
								<script>if ak.ai() then return end
local weapon = matches[2]
local limb = ak.limbs.standardizeLimb(matches[3])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"whirl")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You whip (.*) toward the (right leg|left leg|right arm|left arm|head|torso) of [\w'\-]+\.$</string>
									<string>^You skilfully whirl (.*) toward the (right leg|left leg|right arm|left arm|head|torso) of [\w'\-]+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sentinel</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Trip</name>
								<script>if ak.ai() then return end
local weapon = matches[3]
local limb = ak.limbs.standardizeLimb(matches[4])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"trip")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You swiftly sweep ([\w'\-]+)'s feet out from beneath [\w'\-]+ with (.*) before driving the point of the weapon into [\w'\-]+ (right leg|left leg|right arm|left arm|head|torso)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Thrust</name>
								<script>if ak.ai() then return end
local weapon = matches[2]
local limb = ak.limbs.standardizeLimb(matches[3])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"sentinel")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You deftly thrust (.*) into the (right leg|left leg|right arm|left arm|head|torso) of [\w'\-]+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>RiveStrike</name>
								<script>if ak.ai() then return end
local weapon = ak.spear
local limb = ak.limbs.standardizeLimb(matches[2])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"sentinel")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Stepping forward\, you continue the motion of your initial thrust\, performing a second quick jab at the (right leg|left leg|right arm|left arm|head|torso) of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Lacerate</name>
								<script>if ak.ai() then return end
local weapon = matches[3]
local limb = ak.limbs.standardizeLimb(matches[2])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"sentinel")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You viciously lacerate the (right leg|left leg|right arm|left arm|head|torso) of [\w'\-]+ with (.*)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Gouge</name>
								<script>if ak.ai() then return end
local weapon = matches[4]
local limb = ak.limbs.standardizeLimb(matches[2])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[3])
table.insert(ak.limbs.currentbreak.augment,"sentinel")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You savagely gouge the (right leg|left leg|right arm|left arm|head|torso) of ([\w'\-]+) with (.*)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Doublestrike</name>
								<script>if ak.ai() then return end
local weapon = matches[2]
local limb = ak.limbs.standardizeLimb(matches[3])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[4])
table.insert(ak.limbs.currentbreak.augment,"sentinel")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You draw the blade of (.*) in an expert lateral slice across the (right leg|left leg|right arm|left arm|head|torso) of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>SnB</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Slice</name>
								<script>if ak.ai() then return end
local augment = "none"
local weapon = matches[3]
local limb = ak.limbs.standardizeLimb(matches[2])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"slice")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You slice into the (right leg|left leg|right arm|left arm|head|torso) of [\w'\-]+ with (.*)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Priest</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Smite</name>
								<script>if ak.ai() then return end
local weapon = matches[4]
local limb = ak.limbs.standardizeLimb(matches[3])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[2])
table.insert(ak.limbs.currentbreak.augment,"smite")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You utter a prayer and smite ([\w'\-]+)\'s (right leg|left leg|right arm|left arm|head|torso) with (.*)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Vodun/Puppetry</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Puppet Mangle</name>
								<script>if IsTargetted(matches[3]) then
	 if ak.ai() then return end
   local limbt = ak.limbs.standardizeLimb(matches[2]) 
   if affstrack.score[limbt] &gt; 0 then
	    affstrack.score[limbt] = 300
			ak.vodunmangled = true
			tempTimer(5,[[ak.vodunmangled = false]])
	 else
	    affstrack.score[limbt] = 200
	 end
   ak.scoreup(matches[3])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>The (right leg|left leg|right arm|left arm|head|torso) of ([\w'\-]+) is suddenly horribly mangled by an unseen force\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Magi</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Staff Strike</name>
								<script>if ak.ai() then return end
ak.defs.shield = false
if matches[2] == "Sllshya" then
   table.insert(ak.limbs.currentbreak.weapon, "waterstaff")
elseif matches[2] == "Garash" then
   table.insert(ak.limbs.currentbreak.weapon, "earthstaff")
elseif matches[2] == "Kkractle" then
   table.insert(ak.limbs.currentbreak.weapon, "firestaff")
elseif matches[2] == "Whiirh" then
   table.insert(ak.limbs.currentbreak.weapon, "airstaff")
end
local limb = ak.limbs.standardizeLimb(matches[4])
table.insert(ak.limbs.currentbreak.limb, limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[3])
enableTrigger("Missed Single Removal Limbs")
enableTrigger("Parry locate")          
enableTrigger("Confirmed Hit Limbs")




</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You call upon ([\w'\-]+) and unleash a forceful blow towards ([\w'\-]+)'s (right leg|left leg|right arm|left arm|head|torso) with your trusty staff\.*</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Jester</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Bop OFF</name>
								<script>if ak.ai() then return
else
return
end
local weapon = matches[4]
local limb = ak.limbs.standardizeLimb(matches[3])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[2])
table.insert(ak.limbs.currentbreak.augment,"sentinel")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You reach out and bop ([\w'\-]+)\'s (right leg|left leg|right arm|left arm|head|torso) with your blackjack.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>DWC</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Undercut</name>
								<script>if ak.ai() then return end
if matches[3] == "flesh" then 
   return 
end
local augment = "undercut"
local weapon = matches[2]
local limb = ak.limbs.standardizeLimb(matches[3])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,augment)
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You swing (.*) at the (right leg|left leg|right arm|left arm|head|torso) of [\w'\-]+ with all your might\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Combat Tracker</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Shield/Aura</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shield give</name>
						<script>local name = matches[2]
if (name == target.name and name ~= "Icsellom") then
	target.shield = true
	printTargetWindow()
end
--[[if (matches[2] == target.name) then
	target.shield = true
end]]

if (name == target.name) then
	expandAlias("autohit")
end

local name = matches[2]
if (name == target.name) then
	if (table.contains(target.afflictions, "heroism")) then
		targAffSub("heroism")
end
	if (table.contains(target.afflictions, "paralysis")) then
		targAffSub("paralysis")
	end	
	if (table.contains(target.afflictions, "numbness")) then
		targAffSub("numbness")
		cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED NUMBNESS&lt;cyan&gt;][][][][][]")
		printTargetWindow()
	end
end

selectString(line, 1) fg("purple") resetFormat()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#55007f</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A gentle hum arises from (\w+)'s seraph, as it raises a shield to protect \w+.$</string>
							<string>^A shimmering translucent shield forms around (\w+)\.$</string>
							<string>^A numbing energy runs up your limbs as your attack rebounds off of (\w+)'s shield\.$</string>
							<string>^(\w+) mumbles a prayer to the gods as \w+ waves \w+ shield in the air in front of \w+\.$</string>
							<string>^(\w+) grips \w+ shield tightly as a murky haze slowly rises from it, forming a protective translucent barrier around \w+\.$</string>
							<string>^(\w+) whips (his|her) shield swiftly in the air around him, tracing an algiz rune in the air. Blue streaks hang in the air in the wake of the shield's passage before expanding into a slightly translucent barrier that surrounds (him|her).$</string>
							<string>^(\w+) whips her shield swiftly in the air around her, tracing an algiz rune in the air. Blue streaks hang in the air in the wake of the shield's passage before expanding into a slightly translucent barrier that surrounds her.</string>
							<string>^(\w+) grasps (his|his) shield solidly in front of (him|her) as (he|she) mumbles a quick prayer. A faint glow begins to emanate from the shield, surrounding (him|her) with a slightly translucent barrier\.$</string>
							<string>^A divine seraph surrounds (\w+) with a protective shield\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Aura Give</name>
						<script>local name = matches[2]
if (name == target.name) then
	target.aura = true
	expandAlias("autohit")
	printTargetWindow()
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#55007f</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You suddenly perceive the vague outline of an aura of rebounding around (\w+)\.$</string>
							<string>^Your whip bounces off (\w+)'s aura of rebounding.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Aura Take</name>
						<script>local name = matches[2]
if (name == target.name) then
	target.aura = false
	expandAlias("autohit")
--	cecho("\n&lt;magenta&gt;[&lt;slate_gray&gt;^(&lt;yellow&gt;BATS&lt;slate_gray&gt;)^&lt;magenta&gt;]&lt;white&gt;: &lt;red&gt;- &lt;red&gt;Rebounding")
	printTargetWindow()
end
--[[if (matches[2] == target.name or matches[2] == "yourself") then
	target.aura = false
end]]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ffaaff</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You raze (\w+)'s aura of rebounding with .+\.$</string>
							<string>^(\w+)'s aura of weapons rebounding disappears\.$</string>
							<string>^You whip .+ through the air in front of (\w+), to no effect\.$</string>
							<string>^You drive a Trident of Fears through (\w+)'s aura of rebounding, destroying it\.$</string>
							<string>^The frost tears through (\w+)'s aura of rebounding, pelting (his|her) skin with sharp bits of ice. The bile melts through his translucent shield, burning (him|her) deeply\.$</string>
							<string>^(.+) springs on (\w+) and shreds (his|her) aura of rebounding with its foul claws\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shield Take</name>
						<script>local name = matches[2]
if (name == target.name) then
	target.shield = false
	expandAlias("autohit")
	printTargetWindow()
end
--[[if (matches[2] == target.name or matches[2] == "yourself") then
	target.shield = false
end]]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ffaaff</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You whip .+ through the air in front of (\w+), to no effect\.$</string>
							<string>^You raze (\w+)'s translucent shield with .+\.$</string>
							<string>^The arrow punches a hole through (\w+)'s shield, and it falls to the ground in ethereal shards\.$</string>
							<string>^You touch your tattoo and a massive, ethereal hammer rises up and shatters the translucent shield surrounding (\w+)\.$</string>
							<string>^Reaching out with your own aura, you send a shimmering strand of indigo fire at (\w+), which wraps around (him|her) and bathes (him|her) in a briskly cold wave of light\.$</string>
							<string>The strand of fire dissipates harmlessly.</string>
							<string>^The frost tears through (\w+)'s aura of rebounding, pelting (his|her) skin with sharp bits of ice. The bile melts through his translucent shield, burning (him|her) deeply\.$</string>
							<string>^You drive a Trident of Fears through (\w+)'s translucent shield, destroying it\.$</string>
							<string>^The shimmering translucent shield around (\w+) fades away\.$</string>
							<string>^\w+ razes (\w+)'s translucent shield with .+\.$</string>
							<string>You touch your tattoo and summon the hammer but find nothing to strike.</string>
							<string>^You jab a .* towards (\w+), piercing through and shattering .* translucent shield\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>3</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>3</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hammer</name>
						<script>target.shield = false
printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You touch your tattoo and summon the hammer but find nothing to strike.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Broad No Shield</name>
						<script>local name = matches[2]
if (name == target.name) then
	target.shield = false
	printTargetWindow()
end
--target.shield = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) is knocked unconscious, your arrow striking \w+ in the head\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Flay</name>
						<script>target.aura = false
cecho("\n&lt;yellow&gt;+++&lt;red&gt;Anti-weapon field down&lt;yellow&gt;+++")
cecho("\n&lt;yellow&gt;+++&lt;red&gt;Anti-weapon field down&lt;yellow&gt;+++")
printTargetWindow()
--target.aura = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your target has no aura for you to flay.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fenugreek Give</name>
						<script>local name = matches[2]
if (name == target.name) then
	target.fenugreek = true
	printTargetWindow()
end
--[[if (matches[2] == target.name) then
	target.fenugreek = true
end]]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You look to slit the veins of (\w+), but you cannot find one through the waxy skin\.$</string>
							<string>^A waxy shell of berry juice has dried to (\w+)'s skin\.$</string>
							<string>You look to slit the veins of Kaelegari, but you cannot find one through the waxy skin.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fenugreek Take</name>
						<script>local name = matches[2]
if (name == target.name) then
	target.fenugreek = false
	printTargetWindow()
end
--[[if (matches[2] == target.name) then
	target.fenugreek = false
end]]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You try to flay (\w+), to no effect\.$</string>
							<string>^You flay the waxy coating from (\w+).$</string>
							<string>^You lash out with your whip and brutally flay (\w+)'s skin from \w+ bones\.$</string>
							<string>^You flay away (\w+)'s speed defence\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Aura Rebounding Give</name>
						<script>target.aura = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The attack rebounds back onto you!$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Curseward Give</name>
						<script>selectString(line, 1) fg("purple") resetFormat() 

local name = matches[2]
if (name == target.name) then
	target.curseward = true
	printTargetWindow()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A shimmering curseward appears around (\w+)\.$</string>
							<string>^You try to give (\w+) the evileye, but (he|she) is warded\.$</string>
							<string>^You try to curse (\w+), but (he|she) is warded\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Curseward Take Mana Lost</name>
						<script>local name = multimatches[1][2]

if (name == target.name) then
	target.curseward = false
	printTargetWindow()
end
	</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>2</conditonLineDelta>
						<mStayOpen>2</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You point an imperious finger at (\w+)\.$</string>
							<string>Mana</string>
							<string>^(\w+) curseward has failed\!$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Curseward Take Oppression</name>
						<script>local name = multimatches[1][2]

if (name == target.name) then
	target.curseward = false
	printTargetWindow()
end
	</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>2</conditonLineDelta>
						<mStayOpen>2</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You point an imperious finger at (\w+)\.$</string>
							<string>The oppressive nature of the location exhausts you.</string>
							<string>^(\w+) curseward has failed\!$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>3</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Curseward Surge</name>
						<script>local name = multimatches[1][2]

if (name == target.name) then
	target.curseward = false
	printTargetWindow()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>4</conditonLineDelta>
						<mStayOpen>4</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You point an imperious finger at (\w+)\.$</string>
							<string>Mana</string>
							<string>You feel a slight surge of magickal power.</string>
							<string>Mana</string>
							<string>^(\w+) curseward has failed\!$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>2</integer>
							<integer>3</integer>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Curseward Take</name>
						<script>local name = multimatches[1][2]

if (name == target.name) then
	target.curseward = false
	printTargetWindow()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>1</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You point an imperious finger at (\w+)\.$</string>
							<string>^(\w+) curseward has failed\!$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Lyre Autocuring off</name>
						<script>send("autocuring off")
user.parry = false
guards = false
raid = false
user.shrugged = false
send("queue reset all")
disableTimer("cwho")
disableTimer("chameleon")
printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You strum a Golden Lyre of Shallah, and a prismatic barrier forms around you.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Lyre Autocuring on</name>
						<script>send("autocuring on")
user.parry = true
if reraid == true then
	raid = true
	reraid = false
end
if reguard == true then
	guards = true
	reguard = false
end
enableTimer("cwho")
enableTimer("chameleon")
printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your prismatic barrier dissolves into nothing.</string>
							<string>^Your preparation is successful and with a flick of your hand, you cause a flickering multicolored aura to form up around (\w+)\.$</string>
							<string>^You cease trying to warp the time around (\w+)\.$</string>
							<string>^An almost unbearable feeling of emptiness heralds the arrival of a cloaked and hooded figure carryinga blood-stained sickle. (\w+) gasps in terror as a skeletal hand emerges from the sleeve and points at her. She bows her head to the inevitable as the manifestation of Death swings its sickle at (his|her) neck. You watch in fascinated horror as (his|her) head is severed from (his|her) body\.$</string>
							<string>The ominous silence lifts as your concentration is broken.</string>
							<string>You cease your attempt to summon Marduk.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pierce Failed No Aura</name>
						<script>target.aura = false
target.shield = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your target has no protections you can pierce.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Rebounding Highlight</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff9e59</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You suddenly perceive the vague outline of an aura of rebounding around .*</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Curseward Failed</name>
						<script>selectString(line, 1) fg("purple") resetFormat()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) curseward has failed\!$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Team Combat</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Brazier Trigger</name>
						<script>if (Team.Brazier) then
	send("touch brazier " .. matches[2])
	printTargetWindow()
end

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(Ring\): \w+ says, "Brazier (\w+) now\."$</string>
							<string>^(\w+) departs, summoned by the might of \w+\.$</string>
							<string>^(\w+) is violently ripped from your location by a distant summoning\.$</string>
							<string>^\(Ring\): \w+ says, "Brazier (\w+)\."$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Target</name>
						<script>if (Team.Combat) then
	target.name = string.title(matches[2])
	target.aura = true
	printTargetWindow()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(Ring\): \w+ says, "MonkNet: Target is (\w+)\."$</string>
							<string>^\(Ring\): \w+ says, "Target: (\w+)\."$</string>
							<string>^\(Ring\): \w+ says, "My Target is \(\( (\w+) \)\)"$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Empress</name>
						<script>cecho("\n&lt;yellow&gt;+=+=+=+=+=+&lt;red&gt;" .. string.upper(matches[2]) .. " IS HERE&lt;yellow&gt;+=+=+=+=+=+")
cecho("\n&lt;yellow&gt;+=+=+=+=+=+&lt;red&gt;" .. string.upper(matches[2]) .. " IS HERE&lt;yellow&gt;+=+=+=+=+=+")
printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\w+ throws a tarot card at the ground and it quickly grows into a portal through which (\w+) quickly appears\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Vortex</name>
						<script>send(mmp.ranytolong(matches[2]))</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A dark, swirling vortex opens to the (\w+), and drags you through it\.$</string>
							<string>^Heeding the call, you mindlessly walk out to the (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Anti Health</name>
						<script>selectCurrentLine()
replace("")
cecho("&lt;red&gt;===================================\n&lt;red&gt;============&lt;white&gt;ANTI-HEALTH&lt;red&gt;============\n&lt;red&gt;===================================")
tempTimer(60,[[cecho("&lt;yellow&gt;===================================\n&lt;yellow&gt;==========&lt;purple&gt;ANTIHEALTH DOWN&lt;yellow&gt;==========\n&lt;yellow&gt;===================================")]])
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The air become stagnant, as though drained of life</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Target Tumbling</name>
						<script>if (matches[2] == target.name) then
	selectCurrentLine()
	replace("")
	cecho("&lt;yellow&gt;+++++++++++++++++++++++++++\n++++++&lt;red&gt;TARGET TUMBLING&lt;yellow&gt;++++++\n+++++++++++++++++++++++++++")
	send("queue eqbal dstab " .. target.name .. " opium opium")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You feel irresistibly compelled to "tumble</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Queue</name>
						<script>selectCurrentLine()
--replace("")
--cecho("&lt;OrangeRed&gt;------&gt;&lt;cyan&gt; Balance Queue Modified")
deleteLine()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>.* to your eqbal queue\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Battlecry</name>
						<script>local name = matches[2]
if (People[name]:getType() == "Ally") then
	if (target.name ~= matches[3]) then
		target.name = matches[3]
		sysEcho("TARGET IS " .. matches[3])
		if (user.Balance.balance and user.Balance.equilibrium) then
			expandAlias("g " .. target.name)
		end
	else
		if (user.Balance.balance and user.Balance.equilibrium) then
			expandAlias("g " .. target.name)
		end
	end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) gathers \w+ breath and hurls a piercing battlecry towards (\w+).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Impaled</name>
						<script>target.name = matches[2]
send("garrote " .. target.name)
send("worm choke " .. target.name)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Bathan draws back his blade and impales (\w+) to the hilt\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Cloaked</name>
						<script>if raid then
	send("rt " .. matches[2] .. " is cloaked.")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You feel that you cannot focus on (\w+) enough to summon \w+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Braziered</name>
						<script>sysEcho(matches[2] .. ": BRAZIERED!")
sysEcho(matches[2] .. ": BRAZIERED!")
printTargetWindow()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You wave your hand over the brazier tattoo and summon (\w+) to you\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Enemies</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Ferriter </string>
							<string>Juran </string>
							<string>Justus </string>
							<string>Kalon  </string>
							<string>Khizan </string>
							<string>Mercer </string>
							<string>Naidia </string>
							<string>Sarrius </string>
							<string>Shou </string>
							<string>Tikal </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Force Tumble</name>
						<script>Team.ForceTumble = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You feel irresistibly compelled to "tumble</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Tumbling</name>
						<script>if (Team.ForceTumble) then
	send("outr mandreake::eat mandrake::sleep::autocuring off")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You begin to tumble agilely to the</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Force Awake</name>
						<script>if (Team.ForceTumble) then
	send("sleep")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You are jerked awake by the pain.</string>
							<string>You open your eyes and stretch languidly, feeling deliciously well-rested.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Radiance</name>
						<script>sysEcho("RADIANCE LEAVE AREA!")
sysEcho("RADIANCE LEAVE AREA!")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A shiver runs down your spine, and you feel an instinctive urge to run as far and fast as you can.</string>
							<string>^A shimmering image of the face of \w+ appears fleetingly before you, frowning in concentration\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Enemy Transported</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) departs, summoned by the might of \w+\.$</string>
							<string>^(\w+) is violently ripped from your location by a distant summoning\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Desublimator Depleted</name>
						<script>send("outr 1 blueshard::queue eqbal insert shard in desublimator")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The shard within a metallic desublimator crumbles to dust, its energy fully depleted.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Icewalls Down</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The icewall to the (\w+) collapses into a pile of chipped ice\.$</string>
							<string>^The icewall to the (\w+) quickly melts into nothingness\.$</string>
							<string>^The icewall to the (\w+) glows a dim red and melts away\.$</string>
							<string>^The icewall to the (\w+) crumbles into pieces, as though hit with a mighty</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Target Tumble</name>
						<script>if (matches[2] == target.name) then
	send("queue eqbal dstab " .. target.name .. " opium opium")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) begins tumbling towards the \w+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Vortex</name>
						<script>if (Team.Brazier) then
	send("worm attach " .. matches[2])
	send("queue eqbal worm vortex " .. matches[2])
	target.name = string.title(matches[2])
	printTargetWindow()
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(Ring\): \w+ says, "Vortex (\w+)\."$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Incinerator depleted</name>
						<script>send("outr 1 blueshard::queue eqbal insert shard in incinerator")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The shard within a metallic incinerator crumbles to dust, its energy fully depleted.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Get head</name>
						<script>send("queue eqbal get body::queue bal get head")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You finally manage to sever the head from the corpse </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Flashwall</name>
						<script>send("conjure flashwall " .. matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(Ring\): \w+ says, "Flashwall (\w+)\."$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Worm Vortex</name>
						<script>send("worm vortex " .. matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(Ring\): \w+ says, "Worm Vortex (\w+) now\."$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Vortex Highlight</name>
						<script>selectString(line, 1) fg("purple") resetFormat() 

cecho("\n&lt;purple&gt;============&lt;white&gt;VORTEX!&lt;purple&gt;============")
cecho("\n&lt;purple&gt;============&lt;white&gt;VORTEX!&lt;purple&gt;============")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A swirling vortex violently spins about the room.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Prone</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Tumble</name>
						<script>cecho("&lt;green&gt;\n=========&lt;white&gt;" .. matches[2] .. " TUMBLING!&lt;green&gt;=========")
cecho("&lt;green&gt;\n=========&lt;white&gt;" .. matches[2] .. " TUMBLING!&lt;green&gt;=========")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) begins tumbling towards the \w+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Autoyank</name>
						<script>if matches[2] == target.name then
	if user.autoyank == true then
		expandAlias("y")
	else
		return
	end
end
	</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Your enhanced senses inform you that (\w+) has entered (.+?)(?: nearby)?\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Tumble</name>
						<script>cecho("&lt;green&gt;\n=========&lt;white&gt;" .. matches[2] .. " TUMBLED TO THE " .. matches[3] .. "!&lt;green&gt;=========")
cecho("&lt;green&gt;\n=========&lt;white&gt;" .. matches[2] .. " TUMBLED TO THE " .. matches[3] .. "!&lt;green&gt;=========")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) tumbles out to the (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Autoyank</name>
						<script>if matches[2] == "Brishi" or "Arakis" or "Cassius" then
	if user.autoyank == true then
		send("quickdraw whip shield")
		expandAlias("yank " .. matches[2])
	else
		return
	end
else
	return
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Your enhanced senses inform you that (\w+) has entered (.+?)(?: nearby)?\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Insta Kills</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Death</name>
						<script>instatar = matches[2]
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " FLUNG DEATH!&lt;red&gt;============")
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " FLUNG DEATH!&lt;red&gt;============")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) flings a tarot card at you and upon impact, it disappears. An ominous silence overtakes your surroundings.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hunger</name>
						<script>if (gmcp.Char.Vitals.bal == "1" and gmcp.Char.Vitals.eq == "1" and gmcp.Char.Vitals.aeon ~= "1" and aeon == false) then
	send("outr 10 pellet::eat pellet::eat pellet::eat pellet::eat pellet::eat pellet::eat pellet::eat pellet::eat pellet::eat pellet::eat pellet")
else
	return
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) glares at you intently, an umber glow in (his|her) eyes. The world around you suddenly blurs, then comes back into focus. You feel nauseous and suddenly hungry.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sap</name>
						<script>send("autocuring queue add mandrake")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.*) holy seraph casts a piercing glance at you.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Icewyrm Gorge</name>
						<script>instatar = matches[2]
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " GORGING!&lt;red&gt;============")
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " GORGING!&lt;red&gt;============")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+)'s icewyrm edges closer to (\w+), its tongue flicking in and out of its mouth with anticipation\.$</string>
							<string>^(\w+) lunges forward atop an (.*) icewyrm, beckoning it to feed on your body\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Wisp Cure</name>
						<script>send("autocuring toadstool 70")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The wisp poison has been cleared from your body.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Wisp Give</name>
						<script>send("autocuring toadstool 0")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A poisonous wisp flies at you and stings you painfully. An odd burning sensation floods your veins.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Druid Tendril</name>
						<script>send("autocuring queue add mandrake")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) waves (his|her) quarterstaff in front of you and an animated (\w+) root lashes out with a tendril, bewildering you\.$</string>
							<string>Sumie waves her quarterstaff in front of you and an animated apple root lashes out with a tendril, bewildering you.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Anti Health</name>
						<script>cecho("&lt;red&gt;\n===================================\n&lt;red&gt;============&lt;white&gt;ANTI-HEALTH! MOVE OUT THE ROOM&lt;red&gt;============\n&lt;red&gt;===================================")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The air become stagnant, as though drained of life.</string>
							<string>The air feels stagnant and dead here.</string>
							<string>You are alarmed by an unseen force which seems to grip your body.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Anti Body</name>
						<script>cecho("&lt;red&gt;\n===================================\n&lt;red&gt;============&lt;white&gt;ANTI-BODY! AFFLICT!&lt;red&gt;============\n&lt;red&gt;===================================")
send("dirk::dstab "..target.name.." ciguatoxin asthma")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You are alarmed by an unseen force which seems grips your body.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Aeon</name>
						<script>send("drink speed")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The curse of the Aeon wears off and you return to the normal timestream.</string>
							<string>You feel your perception somewhat clouded.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Tumble</name>
						<script>cecho("\n&lt;yellow&gt;===&lt;white&gt;" ..string.upper(matches[2]).. " TUMBLING!&lt;yellow&gt;===")
cecho("\n&lt;yellow&gt;===&lt;white&gt;" ..string.upper(matches[2]).. " TUMBLING!&lt;yellow&gt;===")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(.*) begins tumbling</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Noose</name>
						<script>cecho("&lt;yellow&gt;\n===================================\n&lt;yellow&gt;=====&lt;white&gt;SNARE SPRUNG! LAY SNARE!&lt;yellow&gt;======\n&lt;yellow&gt;===================================")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A trap is sprung and a loop of rope entwines around (.*), pulling (him|her) off (his|her) feet.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Scourge</name>
						<script>cecho("\n&lt;red&gt;[][][][][][&lt;white&gt;"..matches[2].." SCOUREGED!&lt;red&gt;][][][][][]")
target.scourged = true
enableTimer("Scourge Timer")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You lash out with your whip and brutally flay (.*)'s skin from (his|her) bones.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Basilisk Overpowered</name>
						<script>send("queue eqbal bulwark")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A silver-winged basilisk sprays out some substance right into your eyes, and the world around you suddenly looks different.</string>
							<string>A flame wreathed basilisk sprays out some substance right into your eyes, and the world around you suddenly looks different.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Metrazol</name>
						<script>expandAlias("s metrazol")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Kryss lashes out with her wicked talons, drawing slices across your body.A numbness seizes you, and your left arm and left leg goes limp.You are afflicted with metrazol.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Anti Mind</name>
						<script>cecho("&lt;red&gt;\n===================================\n&lt;red&gt;============&lt;white&gt;ANTI-MIND! GET OUT OF THE ROOM!&lt;red&gt;============\n&lt;red&gt;===================================")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You feel a strange magick invade your body and grip your mind.</string>
							<string>You feel a strange force gripping your mind.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Cleave</name>
						<script>instatar = matches[2]
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " CLEAVING!&lt;red&gt;============")
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " CLEAVING!&lt;red&gt;============")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) begins to bear down on you with (.*).$</string>
							<string>^(\w+) raises (.*) over (his|her) head and begins to swing it in a wide circle, gaining speed as (he|she) goes.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Root</name>
						<script>sysEcho("ROOT! LEAVE ROOM!")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>An animated (\w+) root wraps itself tightly around your neck, squeezing the life out of you.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Slain</name>
						<script>Worm.Attached = false
Worm.Environment = "None"
target.afflictions = {}
target.mentalaffs = {}
target.marked = false
markedwindow = "none"
target.marduk = false
rightarmbruise = false
leftarmbruise = false
rightlegbruise = false
leftlegbruise = false
target.speed = true
undeadwindow = "none"
target.infirmity = 0
kelpinfirmity = false
nightshadeinfirmity = false
mandrakeinfirmity = false
wormwoodinfirmity = false
orphineinfirmity = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You have been slain</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Seance</name>
						<script>sysEcho("SEANCE PULLED YOU OUT OF PHASE!")
sysEcho("SEANCE PULLED YOU OUT OF PHASE!")
sysEcho("SEANCE PULLED YOU OUT OF PHASE!")
expandAlias("qb enter grate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You feel yourself drawn to the material plane as a ritual seance calls out to you.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Retardation</name>
						<script>cecho("&lt;red&gt;\n===================================\n&lt;red&gt;============&lt;white&gt;RETARDATION!&lt;red&gt;============\n&lt;red&gt;===================================")
send("drop cobra")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>As the retardation vibration embeds itself, time itself appears to slow.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Lich</name>
						<script>send("queue eqbal GRAB " .. matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^High Lich Silantor lifts one arm up into the air and at his command, skeletal hands rise up out of the ground and grab at (\w+)'s legs and begin to pull him down into the ground. You must GRAB him quickly to prevent him from being dragged down to certain doom!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Judgement</name>
						<script>instatar = matches[2]
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " JUDGEMENT!&lt;red&gt;============")
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " JUDGEMENT!&lt;red&gt;============")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+)'s mace begins to make a high-pitched keening sound as it rapidly spins over (his|her) head. You have only moments left to escape before you are judged!$</string>
							<string>(\w+) swings the crackling mace about (his|her) head, gathering momentum as (he|she) bears down on you.$</string>
							<string>^(\w+) raises (his|her) spiritual mace over you, calling upon the Gods to pass judgement on your sins, and it begins to crackle with righteous fire.</string>
							<string>^(\w+)'s mace begins to make a high-pitched keening sound as it rapidly spins over (his|her) head\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Aeon true</name>
						<script>aeon = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You are afflicted with aeon.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Aeon false</name>
						<script>aeon = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You have cured aeon.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Amnesia</name>
						<script>send("stand::stand")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You are afflicted with amnesia.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Deliverance</name>
						<script>if matches[2] == target.name then
	expandAlias("t nothing")
end

cecho("\n&lt;red&gt;===== &lt;white&gt;Deliverance &lt;red&gt;=====")
cecho("\n&lt;red&gt;===== &lt;white&gt;Deliverance &lt;red&gt;=====")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) slowly raises (his|her) head and you see (his|her) eyes glowing bright white\.$</string>
							<string>^(\w+) bows (his|her) head in silent prayer\.$</string>
							<string>(\w+) is surrounded by a glowing white nimbus</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Devour</name>
						<script>instatar = matches[2]
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " DEVOUR!&lt;red&gt;============")
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " DEVOUR!&lt;red&gt;============")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A look of intense concentration is visible on (\w+)'s face as the swirling vortex moves closer and closer and its force threatens to lift you off the ground. You realise that you only have moments left to escape whatever fate awaits at the other end of the increasingly violent blackness that now looms directly above your head.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Outrider Reckless</name>
						<script>send("autocuring queue add mandrake")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>1</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>With two quick flicks of his wrist, Ozreas slaps you on each side of your face with a sturdy silver spear. Following the strikes with an effortless spin on his heel, he drives the butt of his spear into your forehead.</string>
							<string>You are afflicted with an unknown affliction.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Altar Summon</name>
						<script>cecho("\n&lt;red&gt;============&lt;white&gt;YOU ARE BEING SUMMONED!&lt;red&gt;============")
cecho("\n&lt;red&gt;============&lt;white&gt;YOU ARE BEING SUMMONED!&lt;red&gt;============")

local dir = {}

for k, v in pairs (gmcp.Room.Info.exits) do
  send("open door " .. k)
  send("queue eqbal " .. k)
  break
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You suddenly feel an unusual tugging feeling, as if someone was trying to summon you across a great distance.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Reclaim</name>
						<script>instatar = matches[2]
cecho("&lt;red&gt;===&lt;white&gt;" ..string.upper(matches[2]).. " RECLAIM!&lt;red&gt;===")
cecho("&lt;red&gt;===&lt;white&gt;" ..string.upper(matches[2]).. " RECLAIM!&lt;red&gt;===")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) holds a sharpened quarterstaff firmly in (his|her) hands, directs a hard stare at you, and concentrates upon the power of the Nature. A sense of dread overcomes you as harsh whispering fills the air, silent at first, but growing louder and more ominous with every passing second.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Holocaust</name>
						<script>cecho("&lt;red&gt;\n===================================\n&lt;red&gt;========&lt;white&gt;HOLOCAUST MOVE OUT THE ROOM&lt;red&gt;============\n&lt;red&gt;===================================")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) fashions a holocaust globe out of pure elemental fire and arms it\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shard already harvest</name>
						<script>send("get hazeward", false)
tempTimer(3, [[expandAlias("pf shard")]])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) is already harvesting a shard here\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Septus</name>
						<script>
	send("focus::autocuring queue add laurel::concentrate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You feel a faint touch in the farthest recesses of your mind.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Aeon</name>
						<script>send("def")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You have cured aeon.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Mage Lame</name>
						<script>cecho("&lt;red&gt;\n===================================\n&lt;red&gt;============&lt;white&gt;MAGE INSTAKILL&lt;red&gt;=========\n&lt;red&gt;===================================")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Brishi directs a frosty stare in your direction as he strains visibly against an unseen force. His chilly emotion externalizes into a swirling cloud of ice that swarms around Him.</string>
							<string>Chunks of stone buzz in from every direction to focus in a swirl around Brishi as he directs the powers of earth at you with a look of concentration. Jagged bits of rock lacerate his skin while spinning slabs circle his body.</string>
							<string>You are struck with a barrage of jagged stone as the swirling slabs surrounding Brishi move to you.</string>
							<string>Brishi directs a burning stare in your direction as he strains visibly against an unseen force. His raw emotion externalizes into liquid flames that leap about him in a hungry rush.</string>
							<string>Brishi directs an agitated stare in your direction as he strains visibly against an unseen force. His tension externalizes into sheets of lightning that arc in a chaotic dance through and around his body.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Speed Aeon</name>
						<script>cecho("&lt;red&gt;\n===================================\n&lt;red&gt;=====&lt;white&gt;SPEED LOST! EXPECT AEON!&lt;red&gt;=====\n&lt;red&gt;===================================")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You have lost the heightened speed defence.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>New Trigger</name>
						<script>send("queue eqbal metawake off")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>1</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You feel your will manipulated by the soulmaster entity.</string>
							<string>You order your mind to ensure you will not journey far into the dreamworld.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Focus Cadmus</name>
						<script>send("focus cadmus")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You are afflicted with peace.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Stupidity Clear</name>
						<script>send("autocuring queue clear")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You have cured stupidity.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Drown</name>
						<script>instatar = matches[2]
cecho("\n&lt;blue&gt;===&lt;white&gt;" ..string.upper(matches[2]).. " DROWNING!&lt;blue&gt;===")
cecho("\n&lt;blue&gt;===&lt;white&gt;" ..string.upper(matches[2]).. " DROWNING!&lt;blue&gt;===")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) focuses (his|her) gaze upon you and a look of utmost concentration appears on (his|her) face. The sound of rushing water echoes faintly in the distance.</string>
							<string>^As (\w+) maintains (his|her) focus upon you, the sound of rushing water draws nearer and nearer with everypassing second\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ciriosis</name>
						<script>send("queue eqbal diagnose")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You feel a noticeable change in your body's internal chemistry.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Disruption</name>
						<script>send("focus cadmus")
send("autocuring queue add wormwood")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>1</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You are afflicted with disruption.</string>
							<string>You are afflicted with confusion.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Wolf Track</name>
						<script>cecho("\n&lt;red&gt;============&lt;white&gt;" .. matches[2] .. " WOLF TRACKING AWAY!!&lt;red&gt;============")
cecho("\n&lt;red&gt;============&lt;white&gt;" .. matches[2] .. " WOLF TRACKING AWAY!!&lt;red&gt;============")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) lowers (his|her) head and closes (his|her) eyes, as if trying to remember something\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Incendiary Arrow</name>
						<script>cecho("\n&lt;red&gt;============&lt;white&gt;INCENDIARY ARROW!!! PULL OUT!&lt;red&gt;============")
cecho("\n&lt;red&gt;============&lt;white&gt;INCENDIARY ARROW!!! PULL OUT!&lt;red&gt;============")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Sparks catch your eye as an arrow cuts through the air, burying itself deep in your flesh. Noticing the fuse which burns upon it through the blinding pain, you are almost overcome with panic.</string>
							<string>The fuse on the arrow buried in your gut begins to burn low, your sense of alarm building.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Map Down</name>
						<script>selectString(line, 1) fg("yellow") resetFormat() 

cecho("\n&lt;yellow&gt;============&lt;white&gt;MAP DOWN!!!&lt;yellow&gt;============")
cecho("\n&lt;yellow&gt;============&lt;white&gt;MAP DOWN!!!&lt;yellow&gt;============")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The shimmering map folds up and vanishes into the ether.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Stop Sunder</name>
						<script>stopsunder = matches[2]
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " SUNDERING!&lt;red&gt;============")
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " SUNDERING!&lt;red&gt;============")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+), to the (\w+), begins to swing a curved sabre in a wide circle above (his|her) head\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Stop Sunder</name>
						<script>stopsunder = matches[3]
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[3]).. " SUNDERING!&lt;red&gt;============")
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[3]).. " SUNDERING!&lt;red&gt;============")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^To the (\w+), you see (\w+) begin to spur (his|her) mount in a wide circle, building up momentum\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Stop Sunder</name>
						<script>stopsunder = matches[3]
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[4]).. " SUNDERING!&lt;red&gt;============")
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[4]).. " SUNDERING!&lt;red&gt;============")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Swinging (.+) above (his|her) head, (\w+) charges in your direction\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Judgement Other</name>
						<script>instatar = matches[2]
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " JUDGEMENT!&lt;red&gt;============")
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " JUDGEMENT!&lt;red&gt;============")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) raises (his|her) spiritual mace over (\w+), calling upon (his|her) faith to pass judgement on (his|her) sins,and it begins to crackle with righteous fire\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Cleave Other</name>
						<script>instatar = matches[2]
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " CLEAVING " .. string.upper(matches[3]) .. "!&lt;red&gt;============")
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " CLEAVING " .. string.upper(matches[3]) .. "!&lt;red&gt;============")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) begins to bear down on (\w+) with (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Gorge Other</name>
						<script>instatar = matches[2]
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " GORGING " ..string.upper(matches[3]).. "!&lt;red&gt;============")
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " GORGING " ..string.upper(matches[3]).. "!&lt;red&gt;============")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) lunges forward atop an (.*) icewyrm, beckoning it to feed on (\w+)'s body\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Kantae</name>
						<script>instatar = matches[2]
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " KANTAE!&lt;red&gt;============")
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " KANTAE!&lt;red&gt;============")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) projects the single, pure note of (his|her) voice at you.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Kantae</name>
						<script>instatar = matches[2]
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " KANTAE!&lt;red&gt;============")
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " KANTAE!&lt;red&gt;============")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) holds (his|her) mouth open, a word of power continously emanating from (him|her)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Nirvana</name>
						<script>cecho("\n&lt;red&gt;============&lt;white&gt;" .. matches[2] .. " TRACKING TO NIRVANA!!&lt;red&gt;============")
cecho("\n&lt;red&gt;============&lt;white&gt;" .. matches[2] .. " TRACKING TO NIRVANA!!&lt;red&gt;============")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(\w+)'s guardian takes (him|her) by the hand, and they begin to slowly fade away\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Meteor Channel</name>
						<script>instatar = matches[2]
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " METEOR CHANNEL!&lt;red&gt;============")
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " METEOR CHANNEL!&lt;red&gt;============")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Focusing on the fluctuating power of Moradeim, the moon of Change, (\w+) prepares to summon a fiery meteor\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Meteor Channeld</name>
						<script>instatar = matches[2]
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " METEOR INCOMING!&lt;red&gt;============")
cecho("\n&lt;red&gt;============&lt;white&gt;" ..string.upper(matches[2]).. " METEOR INCOMING!&lt;red&gt;============")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) slowly raises (his|her) arms and a blazing red sphere appears high above you, descending swiftly towards your location\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Waymark</name>
						<script>cecho("\n&lt;red&gt;============&lt;white&gt;" .. matches[2] .. " WAYMARKING AWAY!!&lt;red&gt;============")
cecho("\n&lt;red&gt;============&lt;white&gt;" .. matches[2] .. " WAYMARKING AWAY!!&lt;red&gt;============")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) begins to chant softly, casting (his|her) voice and the music of (his|her) harp to the wind. (His|Her) appearance begins to fade slightly\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>nom (hunting)</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Look Resetting</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Grip Look</name>
					<script>if user.Bashing then
	if (gmcp.Room.Info.area == "the Sewage Tunnels of Stavenn") then
		send("stand::attack rat")
	elseif (gmcp.Room.Info.area == "the Ogre Fort, Erorag") then
		send("stand::attack ogre::ql::ih")
	elseif (gmcp.Room.Info.area == "Ancient Sewer Ruins") then
		send("stand::attack creeper::ql::ih")
	end
end

if fuckthis == 1 then
	tempTimer(2, [[send("ql::ih")]])
	mmp.customwalkdelay(2.4)
	fuckthis = 0
else
	fuckthis = 0
end

enableTimer("Fuckthis")

--Is our target even in the room?
function huntingCheck()
	for k, v in pairs (Targets) do
		if (demonnic.roomItems[k]) then
			user.targetInRoom = true
			break
		else
			user.targetInRoom = false
		end
	end
end

huntingCheck()

if user.Bashing == true then
user.Bashing = false
tempTimer(2, [[user.Bashing = true]])
tempTimer(2, [[expandAlias("aa"]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>2</conditonLineDelta>
					<mStayOpen>1</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You have gained the gripping defence.</string>
						<string>I do not recognize anything called that here.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Grip Look</name>
					<script>if user.Bashing then
	if (gmcp.Room.Info.area == "the Sewage Tunnels of Stavenn") then
		send("stand::attack rat")
	elseif (gmcp.Room.Info.area == "the Ogre Fort, Erorag") then
		send("stand::attack ogre::ql::ih")
	elseif (gmcp.Room.Info.area == "Ancient Sewer Ruins") then
		send("stand::attack creeper::ql::ih")
	end
end

if fuckthis == 1 then
	tempTimer(2, [[send("ql::ih")]])
	mmp.customwalkdelay(2.4)
	fuckthis = 0
else
	fuckthis = 0
end

enableTimer("Fuckthis")

--Is our target even in the room?
function huntingCheck()
	for k, v in pairs (Targets) do
		if (demonnic.roomItems[k]) then
			user.targetInRoom = true
			break
		else
			user.targetInRoom = false
		end
	end
end

huntingCheck()

if user.Bashing == true then
user.Bashing = false
tempTimer(2, [[user.Bashing = true]])
tempTimer(2, [[expandAlias("aa"]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>2</conditonLineDelta>
					<mStayOpen>1</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You have gained the gripping defence.</string>
						<string>Ahh, I am truly sorry, but I do not see anyone by that name here.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Grip Look</name>
					<script>if user.Bashing then
	if (gmcp.Room.Info.area == "the Sewage Tunnels of Stavenn") then
		send("stand::attack rat")
	elseif (gmcp.Room.Info.area == "the Ogre Fort, Erorag") then
		send("stand::attack ogre::ql::ih")
	elseif (gmcp.Room.Info.area == "Ancient Sewer Ruins") then
		send("stand::attack creeper::ql::ih")
	end
end

if fuckthis == 1 then
	tempTimer(2, [[send("ql::ih")]])
	mmp.customwalkdelay(2.4)
	fuckthis = 0
else
	fuckthis = 0
end

enableTimer("Fuckthis")

--Is our target even in the room?
function huntingCheck()
	for k, v in pairs (Targets) do
		if (demonnic.roomItems[k]) then
			user.targetInRoom = true
			break
		else
			user.targetInRoom = false
		end
	end
end

huntingCheck()

if user.Bashing == true then
user.Bashing = false
tempTimer(2, [[user.Bashing = true]])
tempTimer(2, [[expandAlias("aa"]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>2</conditonLineDelta>
					<mStayOpen>1</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You have gained the gripping defence.</string>
						<string>You detect nothing here by that name.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Grip Look</name>
					<script>if user.Bashing then
	if (gmcp.Room.Info.area == "the Sewage Tunnels of Stavenn") then
		send("stand::attack rat")
	elseif (gmcp.Room.Info.area == "the Ogre Fort, Erorag") then
		send("stand::attack ogre::ql::ih")
	elseif (gmcp.Room.Info.area == "Ancient Sewer Ruins") then
		send("stand::attack creeper::ql::ih")
	end
end

if fuckthis == 1 then
	tempTimer(2, [[send("ql::ih")]])
	mmp.customwalkdelay(2.4)
	fuckthis = 0
else
	fuckthis = 0
end

enableTimer("Fuckthis")

--Is our target even in the room?
function huntingCheck()
	for k, v in pairs (Targets) do
		if (demonnic.roomItems[k]) then
			user.targetInRoom = true
			break
		else
			user.targetInRoom = false
		end
	end
end

huntingCheck()

if user.Bashing == true then
user.Bashing = false
tempTimer(2, [[user.Bashing = true]])
tempTimer(2, [[expandAlias("aa"]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>2</conditonLineDelta>
					<mStayOpen>1</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You have gained the gripping defence.</string>
						<string>You do not see that individual here.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Grip Look</name>
					<script>if user.Bashing then
	if (gmcp.Room.Info.area == "the Sewage Tunnels of Stavenn") then
		send("stand::attack rat")
	elseif (gmcp.Room.Info.area == "the Ogre Fort, Erorag") then
		send("stand::attack ogre::ql::ih")
	elseif (gmcp.Room.Info.area == "Ancient Sewer Ruins") then
		send("stand::attack creeper::ql::ih")
	end
end

if fuckthis == 1 then
	tempTimer(2, [[send("ql::ih")]])
	mmp.customwalkdelay(2.4)
	fuckthis = 0
else
	fuckthis = 0
end

enableTimer("Fuckthis")

--Is our target even in the room?
function huntingCheck()
	for k, v in pairs (Targets) do
		if (demonnic.roomItems[k]) then
			user.targetInRoom = true
			break
		else
			user.targetInRoom = false
		end
	end
end

huntingCheck()

if user.Bashing == true then
user.Bashing = false
tempTimer(2, [[user.Bashing = true]])
tempTimer(2, [[expandAlias("aa"]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>2</conditonLineDelta>
					<mStayOpen>1</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You have gained the gripping defence.</string>
						<string>Nothing can be seen here by that name.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Quicklook</name>
					<script>if user.Bashing then
	if (gmcp.Room.Info.area == "the Sewage Tunnels of Stavenn") then
		send("stand::attack rat")
	elseif (gmcp.Room.Info.area == "the Ogre Fort, Erorag") then
		send("stand::attack ogre::ql::ih")
	elseif (gmcp.Room.Info.area == "Ancient Sewer Ruins") then
		send("stand::attack creeper::ql::ih")
	end
end

if fuckthis == 1 then
	tempTimer(2, [[send("ql::ih")]])
	mmp.customwalkdelay(2.4)
	fuckthis = 0
else
	fuckthis = 0
end

enableTimer("Fuckthis")

if user.Bashing == true then
user.Bashing = false
tempTimer(2, [[user.Bashing = true]])
tempTimer(2, [[expandAlias("aa"]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>2</conditonLineDelta>
					<mStayOpen>2</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You are already standing.</string>
						<string>Nothing can be seen here by that name.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Quicklook</name>
					<script>if user.Bashing then
	if (gmcp.Room.Info.area == "the Sewage Tunnels of Stavenn") then
		send("stand::attack rat")
	elseif (gmcp.Room.Info.area == "the Ogre Fort, Erorag") then
		send("stand::attack ogre::ql::ih")
	elseif (gmcp.Room.Info.area == "Ancient Sewer Ruins") then
		send("stand::attack creeper::ql::ih")
	end
end

if fuckthis == 1 then
	tempTimer(2, [[send("ql::ih")]])
	mmp.customwalkdelay(2.4)
	fuckthis = 0
else
	fuckthis = 0
end

enableTimer("Fuckthis")

--Is our target even in the room?
function huntingCheck()
	for k, v in pairs (Targets) do
		if (demonnic.roomItems[k]) then
			user.targetInRoom = true
			break
		else
			user.targetInRoom = false
		end
	end
end

huntingCheck()

if user.Bashing == true then
user.Bashing = false
tempTimer(2, [[user.Bashing = true]])
tempTimer(2, [[expandAlias("aa"]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>2</conditonLineDelta>
					<mStayOpen>2</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You are already standing.</string>
						<string>You do not see that individual here.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Quicklook</name>
					<script>if user.Bashing then
	if (gmcp.Room.Info.area == "the Sewage Tunnels of Stavenn") then
		send("stand::attack rat")
	elseif (gmcp.Room.Info.area == "the Ogre Fort, Erorag") then
		send("stand::attack ogre::ql::ih")
	elseif (gmcp.Room.Info.area == "Ancient Sewer Ruins") then
		send("stand::attack creeper::ql::ih")
	end
end

if fuckthis == 1 then
	tempTimer(2, [[send("ql::ih")]])
	mmp.customwalkdelay(2.4)
	fuckthis = 0
else
	fuckthis = 0
end

enableTimer("Fuckthis")

--Is our target even in the room?
function huntingCheck()
	for k, v in pairs (Targets) do
		if (demonnic.roomItems[k]) then
			user.targetInRoom = true
			break
		else
			user.targetInRoom = false
		end
	end
end

huntingCheck()

if user.Bashing == true then
user.Bashing = false
tempTimer(2, [[user.Bashing = true]])
tempTimer(2, [[expandAlias("aa"]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>2</conditonLineDelta>
					<mStayOpen>2</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You are already standing.</string>
						<string>You detect nothing here by that name.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Quicklook</name>
					<script>if user.Bashing then
	if (gmcp.Room.Info.area == "the Sewage Tunnels of Stavenn") then
		send("stand::attack rat")
	elseif (gmcp.Room.Info.area == "the Ogre Fort, Erorag") then
		send("stand::attack ogre::ql::ih")
	elseif (gmcp.Room.Info.area == "Ancient Sewer Ruins") then
		send("stand::attack creeper::ql::ih")
	end
end

if fuckthis == 1 then
	tempTimer(2, [[send("ql::ih")]])
	mmp.customwalkdelay(2.4)
	fuckthis = 0
else
	fuckthis = 0
end

enableTimer("Fuckthis")

--Is our target even in the room?
function huntingCheck()
	for k, v in pairs (Targets) do
		if (demonnic.roomItems[k]) then
			user.targetInRoom = true
			break
		else
			user.targetInRoom = false
		end
	end
end

huntingCheck()

if user.Bashing == true then
user.Bashing = false
tempTimer(2, [[user.Bashing = true]])
tempTimer(2, [[expandAlias("aa"]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>2</conditonLineDelta>
					<mStayOpen>2</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You are already standing.</string>
						<string>Ahh, I am truly sorry, but I do not see anyone by that name here.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Quicklook</name>
					<script>if user.Bashing then
	if (gmcp.Room.Info.area == "the Sewage Tunnels of Stavenn") then
		send("stand::attack rat")
	elseif (gmcp.Room.Info.area == "the Ogre Fort, Erorag") then
		send("stand::attack ogre::ql::ih")
	elseif (gmcp.Room.Info.area == "Ancient Sewer Ruins") then
		send("stand::attack creeper::ql::ih")
	end
end

if fuckthis == 1 then
	tempTimer(2, [[send("ql::ih")]])
	mmp.customwalkdelay(2.4)
	fuckthis = 0
else
	fuckthis = 0
end

enableTimer("Fuckthis")

--Is our target even in the room?
function huntingCheck()
	for k, v in pairs (Targets) do
		if (demonnic.roomItems[k]) then
			user.targetInRoom = true
			break
		else
			user.targetInRoom = false
		end
	end
end

huntingCheck()

if user.Bashing == true then
user.Bashing = false
tempTimer(2, [[user.Bashing = true]])
tempTimer(2, [[expandAlias("aa"]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>2</conditonLineDelta>
					<mStayOpen>1</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You are already standing.</string>
						<string>I do not recognize anything called that here.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Bashing</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>99</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Slain</name>
					<script>expandAlias("ql", false)
local list = gmcp.Char.Items.List
demonnic.roomItems = {}
for _, v in ipairs(list.items) do
  if not demonnic.roomItems[v.name] then
    demonnic.roomItems[v.name] = {}
  end
  table.insert(demonnic.roomItems[v.name], v.id)
end
send("queue add eqbal get gold")
hecho(
  rainbow(
    "\n--------------------------- Hunting Target Killed ---------------------------"
  )
)

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#aa0000</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You have slain</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>New Target</name>
					<script>if (user.followBashing) then
	user.FirstHit = true
elseif (user.Bashing) then
	user.Balance.Bashing = true
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>I do not recognize anything called that here.</string>
						<string>You detect nothing here by that name.</string>
						<string>You do not see that individual here.</string>
						<string>Nothing can be seen here by that name.</string>
						<string>Ahh, I am truly sorry, but I do not see anyone by that name here.</string>
						<string>You cannot see that being here.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Gold Pick Up</name>
					<script>user.Gold = false</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ffaa00</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You pick up some gold sovereigns.</string>
						<string>I see no "gold" to take.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Ally Attack</name>
					<script>local name = matches[2]
local mobile = string.lower(matches[3])
if (Hunting_Partners[name]) then
	if (user.followBashing and user.FirstHit) then
		target.name = Targets[mobile]
		user.FirstHit = false
		expandAlias("aa", false)
	end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) stares at (.+), giving \w+ the evil eye\.$</string>
						<string>^(\w+) steps in and executes a quick slash across (.+)'s torso, opening a ragged wound.$</string>
						<string>^(\w+) utters a prayer to .+ and smites (.+)\.$</string>
						<string>^A splash of blood slicks the ground as (\w+)'s knife slices into (.+)\.$</string>
						<string>^(\w+) leaps forwards onto (.+) and mauls \w+ viciously\.$</string>
						<string>^With a lightning\-quick motion, (\w+) slashes (.+) with .+\.$</string>
						<string>^(\w+) slides his hidden blade across (.+)'s exposed flesh, exposing \w+ blood to the open air\.$</string>
						<string>^(\w+) swings .+ powerfully at (.+), ravaging \w+ flesh\.$</string>
						<string>^(\w+) reaches out and clenches a fist before (.+), who screams and doubles over in agony as \w+ skin suddenly bubbles with gangrenous growths\.$</string>
						<string>^(\w+) viciously slashes (.+) with .+\.$</string>
						<string>^(\w+) utters a prayer to the Protector and smites (.+)\.$</string>
						<string>^(\w+) launches a powerful uppercut at (.+)\.$</string>
						<string>^(\w+) gives .+ a quick flourish before driving it forcefully into (.+)'s body\.$</string>
						<string>^^(\w+) slides .+ hidden blade across (.+)'s exposed flesh, exposing \w+ blood to the open air\.$</string>
						<string>^(\w+) slips behind (.+) and garrotes (him|her) with (her|his) whip\.$</string>
						<string>^(\w+) slashes into (.+)'s (\w+) with (.+)\.$</string>
						<string>^Lightning-quick, (\w+) jabs (.+)'s (\w+) with (.+)\.$</string>
						<string>^(\w+) points an imperious finger at (.+)\. (.*)\'s skin cracks and sizzles as flames spontaneously erupt all over (his|her) body\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>First Hit</name>
					<script>if (user.followBashing) then
	user.FirstHit = true
elseif (user.Bashing) then
	if (user.Slain) then
		if (user.Gold) then
			if (Wielded[1] == "dirk" or Wielded[2] == "dirk") then
				send("get gold::put gold in pack::get " .. target.name .. "::stand::puncture " .. target.name .. " with trioxin")
			elseif (Wielded[1] == "whip" or Wielded[2] == "whip") then
				send("get gold::open pouch::put gold in pouch::close pouch::get " .. target.name .. "::stand::attack " .. target.name)
			end
		else
			expandAlias("aa", false)
		end
	else
			expandAlias("aa", false)
	end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You are no longer stunned.</string>
						<string>You have writhed free</string>
						<string>You stand up and stretch your arms out wide.</string>
						<string>You have cured blackout.</string>
						<string>With an heroic effort you manage to writhe yourself free from the weapon that impaled you.</string>
						<string>^You point an imperious finger at</string>
						<string>^Drawing back the Tiodhlac-dha, a gold pommeled Dreadblade, you unleash  </string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>2</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>2</integer>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Attack</name>
					<script>user.FirstHit = false
user.Balance.Bashing = false</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You prick .+, exposing \w+ veins to your deadly toxins\.$</string>
						<string>You step in quickly with a slash across .+'s torso.</string>
						<string>You slip behind .+ and garrote .+ with your whip.</string>
						<string>^You point an imperious finger at</string>
						<string>You slash .+ with a truesilver longsword.</string>
						<string>Drawing back the Tiodhlac-dha, a gold pommeled Dreadblade, you unleash </string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>2</integer>
						<integer>1</integer>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Balance</name>
					<script>user.Balance.Bashing = true
-- selectCurrentLine()
-- replace("")
-- Parrying()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You have recovered balance.</string>
						<string>You have recovered balance on all limbs.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Equilibrium</name>
					<script>user.Balance.Bashing = true
-- selectCurrentLine()
-- replace("")
-- setFgColor(0, 85, 255)
-- Parrying()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You have regained your mental equilibrium.</string>
						<string>You have recovered equilibrium.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>MSTOP</name>
					<script>expandAlias("mstop")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A ghastly undead fisherman staggers in from the (\w+), puddles in every footstep.</string>
						<string>A water-swollen undead man drifts in from the (\w+), staring at you sightlessly with rheumy eyes.</string>
						<string>^Gliding in through a milky cloud of its own rotten flesh, an undead stingray enters from the (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Not Here</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>New Trigger</name>
					<script>send(" ")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You do not see that individual here.</string>
						<string>Nothing can be seen here by that name.</string>
						<string>You cannot see that being here.</string>
						<string>I do not recognise anything called that here.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Hunting Reflexes</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>zData</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName>zData</packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>zData</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Target Slain</name>
							<script>zData.char.killsCount = zData.char.killsCount + 1
table.insert(zData.char.killList, 1, matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have slain (.*), retrieving the corpse.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Catch Stats</name>
							<script>deleteLine()
if matches[2] == "strength" then
  zData.char.str = matches[3]
elseif matches[2] == "dexterity" then
  zData.char.dex = matches[3]
elseif matches[2] == "intelligence" then
  zData.char.int = matches[3]
elseif matches[2] == "constitution" then
  zData.char.con = matches[3]
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Your (\w+) is (\d+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Exp From DEF</name>
							<script>zData.defs.exp = matches[2]</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You are benefitting from a (\d+)\% bonus to experience gain.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Crit From DEF</name>
							<script>zData.defs.crit = matches[2]</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You are benefitting from a (\d+)\% bonus to critical hits.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Defences Updates Stats</name>
							<script>send("show str")
send("show dex")
send("show int")
send("show con")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You are protected by .+ defences.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Crit Hit</name>
							<script>zData.db.addChar("crithits")
if matches[3] == "CRITICAL" then
  zData.db.addChar("crit1")
elseif matches[3] == "CRUSHING CRITICAL" then
  zData.db.addChar("crit2")
elseif matches[3] == "OBLITERATING CRITICAL" then
  zData.db.addChar("crit3")
elseif matches[3] == "ANNIHILATINGLY POWERFUL CRITICAL" then
  zData.db.addChar("crit4")
elseif matches[3] == "WORLD-SHATTERING CRITICAL" then
  zData.db.addChar("crit5")
elseif matches[3] == "PLANE-RAZING CRITICAL" then
  zData.db.addChar("crit6")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ffaa00</mFgColor>
							<mBgColor>#000000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have scored (an|a) (.*) hit!$</string>
								<string>^You have scored (an|a) (.*) hit!!!$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>SoA Paragon</name>
							<script>zData.db.addChar("paragon")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your paragon completely absorbs the damage.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Maya Proc</name>
							<script>zData.db.addChar("mayafigure")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The coalescence of power suffusing you empowers your blow.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Seared Glyph Armour</name>
							<script>zData.db.addChar("searedglyph")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Fire lashes out .+, ravaging the unsuspecting form of .+ with its insatiable fury.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>SoA Shield</name>
							<script>zData.db.addChar("shield")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your shield completely absorbs the damage.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Picked Up Gold</name>
							<script>zData.char.gold = zData.char.gold + matches[2]
zData.char.ogold = tonumber(gmcp.Char.Status.gold)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You pick up (\d+) gold sovereigns.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Gold Attractor</name>
							<script>if zData.char.ogold ~= tonumber(gmcp.Char.Status.gold) then
  zData.char.gold = zData.char.gold + (tonumber(gmcp.Char.Status.gold) - zData.char.ogold)
  zData.char.ogold = tonumber(gmcp.Char.Status.gold)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^.+ from the corpse\, flying into your hands before they can reach the ground\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Talisman Found</name>
							<script>zData.char.taliCount = zData.char.taliCount + 1
local tempName = multimatches[2][2].." : "..multimatches[1][2] 
table.insert(zData.char.taliList, 1, tempName)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>2</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have slain (.*), retrieving the corpse.$</string>
								<string>^You have found (.+) \(level (\d+)\) talisman piece!$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Secret Exits</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>mirror caves</name>
						<script>send("pull pile")
send("d")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A pile of rocks and brush fills a narrow opening in the mountainside.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>mirror caves 2</name>
						<script>send("push pile")
send("u")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A pile of rocks blocks passage above to the outside.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Shrine Highlight</name>
					<script>cecho("\n&lt;green&gt;PANDORA SHRINE        PANDORA SHRINE        PANDORA SHRINE")
cecho("\n&lt;green&gt;PANDORA SHRINE        PANDORA SHRINE        PANDORA SHRINE")
cecho("\n&lt;green&gt;PANDORA SHRINE        PANDORA SHRINE        PANDORA SHRINE")
send("offer corpses")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>.* feminine laughter fill the air around this towering shrine to .*</string>
						<string>Echoes of delighted feminine laughter fill the air around this towering shrine to Pandora.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Assist to Target Conversion</name>
					<script>expandAlias("t " .. matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You are now targeting (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Manual Group Delay</name>
					<script>send("queue addclear eqbal writhe")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You have slain .*</string>
						<string>^.* has been slain by .*</string>
						<string>^You scoop up .*</string>
						<string>^You pick up .*</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Denizen Shielded</name>
					<script>hunting_raze = true
expandAlias("kill")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^A nearly invisible magical shield forms around .*</string>
						<string>^A dizzying beam of energy strikes you .*</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Quick Look On...</name>
					<script>expandAlias("ql")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You have cured the blackout affliction.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Gold Tracker</name>
				<script>goldtracked = goldtracked + tonumber(matches[2])
cecho(" &lt;red&gt;[&lt;gold&gt;GOLD EARNED&lt;red&gt;]: &lt;gold&gt;" .. goldtracked)</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^You put (\d+) gold sovereigns in .*</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Follow While in Group</name>
				<script>send("follow tamait")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>You are not in a group at present.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>3</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>nom (harvesting)</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Harvesting</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Harvesting Move</name>
					<script>harvDir()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You have already extracted minerals from this location.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>All harvested</name>
					<script>harvArea = "none"
sysEcho("Harvesting Done!")
disableTrigger("Harvesting")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You have harvested 2000 of 2000 herbs this month.</string>
						<string>Your personal Rift will hold no more</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Pluck Eagle</name>
					<script>send("pluck " .. matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>\"eagle(\d+)\"[ ]*a bald eagle</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>harvest off "minerals"</name>
					<script>if matches[2] == "Bisemutum" then
  if (not table.contains(Bisemutum, gmcp.Room.Info.num)) then
    table.insert(Bisemutum, gmcp.Room.Info.num)
    cecho(
      "\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;ROOM ADDED TO " .. matches[2] .. " MAP&lt;OrangeRed&gt;][][][][][]"
    )
  end
end
if matches[2] == "Antimony" then
  if (not table.contains(Antimony, gmcp.Room.Info.num)) then
    table.insert(Antimony, gmcp.Room.Info.num)
    cecho(
      "\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;ROOM ADDED TO " .. matches[2] .. " MAP&lt;OrangeRed&gt;][][][][][]"
    )
  end
end
if matches[2] == "Argentum" then
  if (not table.contains(Argentum, gmcp.Room.Info.num)) then
    table.insert(Argentum, gmcp.Room.Info.num)
    cecho(
      "\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;ROOM ADDED TO " .. matches[2] .. " MAP&lt;OrangeRed&gt;][][][][][]"
    )
  end
end
if matches[2] == "Arsenic" then
  if (not table.contains(Arsenic, gmcp.Room.Info.num)) then
    table.insert(Arsenic, gmcp.Room.Info.num)
    cecho(
      "\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;ROOM ADDED TO " .. matches[2] .. " MAP&lt;OrangeRed&gt;][][][][][]"
    )
  end
end
if matches[2] == "Aurum" then
  if (not table.contains(Aurum, gmcp.Room.Info.num)) then
    table.insert(Aurum, gmcp.Room.Info.num)
    cecho(
      "\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;ROOM ADDED TO " .. matches[2] .. " MAP&lt;OrangeRed&gt;][][][][][]"
    )
  end
end
if matches[2] == "Azurite" then
  if (not table.contains(Azurite, gmcp.Room.Info.num)) then
    table.insert(Azurite, gmcp.Room.Info.num)
    cecho(
      "\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;ROOM ADDED TO " .. matches[2] .. " MAP&lt;OrangeRed&gt;][][][][][]"
    )
  end
end
if matches[2] == "Calamine" then
  if (not table.contains(Calamine, gmcp.Room.Info.num)) then
    table.insert(Calamine, gmcp.Room.Info.num)
    cecho(
      "\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;ROOM ADDED TO " .. matches[2] .. " MAP&lt;OrangeRed&gt;][][][][][]"
    )
  end
end
if matches[2] == "Calcite" then
  if (not table.contains(Calcite, gmcp.Room.Info.num)) then
    table.insert(Calcite, gmcp.Room.Info.num)
    cecho(
      "\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;ROOM ADDED TO " .. matches[2] .. " MAP&lt;OrangeRed&gt;][][][][][]"
    )
  end
end
if matches[2] == "Cinnabar" then
  if (not table.contains(Cinnabar, gmcp.Room.Info.num)) then
    table.insert(Cinnabar, gmcp.Room.Info.num)
    cecho(
      "\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;ROOM ADDED TO " .. matches[2] .. " MAP&lt;OrangeRed&gt;][][][][][]"
    )
  end
end
if matches[2] == "Cuprum" then
  if (not table.contains(Cuprum, gmcp.Room.Info.num)) then
    table.insert(Cuprum, gmcp.Room.Info.num)
    cecho(
      "\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;ROOM ADDED TO " .. matches[2] .. " MAP&lt;OrangeRed&gt;][][][][][]"
    )
  end
end
if matches[2] == "Dolomite" then
  if (not table.contains(Dolomite, gmcp.Room.Info.num)) then
    table.insert(Dolomite, gmcp.Room.Info.num)
    cecho(
      "\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;ROOM ADDED TO " .. matches[2] .. " MAP&lt;OrangeRed&gt;][][][][][]"
    )
  end
end
if matches[2] == "Ferrum" then
  if (not table.contains(Ferrum, gmcp.Room.Info.num)) then
    table.insert(Ferrum, gmcp.Room.Info.num)
    cecho(
      "\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;ROOM ADDED TO " .. matches[2] .. " MAP&lt;OrangeRed&gt;][][][][][]"
    )
  end
end
if matches[2] == "Gypsum" then
  if (not table.contains(Gypsum, gmcp.Room.Info.num)) then
    table.insert(Gypsum, gmcp.Room.Info.num)
    cecho(
      "\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;ROOM ADDED TO " .. matches[2] .. " MAP&lt;OrangeRed&gt;][][][][][]"
    )
  end
end
if matches[2] == "Magnesium" then
  if (not table.contains(Magnesium, gmcp.Room.Info.num)) then
    table.insert(Magnesium, gmcp.Room.Info.num)
    cecho(
      "\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;ROOM ADDED TO " .. matches[2] .. " MAP&lt;OrangeRed&gt;][][][][][]"
    )
  end
end
if matches[2] == "Malachite" then
  if (not table.contains(Malachite, gmcp.Room.Info.num)) then
    table.insert(Malachite, gmcp.Room.Info.num)
    cecho(
      "\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;ROOM ADDED TO " .. matches[2] .. " MAP&lt;OrangeRed&gt;][][][][][]"
    )
  end
end
if matches[2] == "Plumbum" then
  if (not table.contains(Plumbum, gmcp.Room.Info.num)) then
    table.insert(Plumbum, gmcp.Room.Info.num)
    cecho(
      "\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;ROOM ADDED TO " .. matches[2] .. " MAP&lt;OrangeRed&gt;][][][][][]"
    )
  end
end
if matches[2] == "Potash" then
  if (not table.contains(Potash, gmcp.Room.Info.num)) then
    table.insert(Potash, gmcp.Room.Info.num)
    cecho(
      "\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;ROOM ADDED TO " .. matches[2] .. " MAP&lt;OrangeRed&gt;][][][][][]"
    )
  end
end
if matches[2] == "Quartz" then
  if (not table.contains(Quartz, gmcp.Room.Info.num)) then
    table.insert(Quartz, gmcp.Room.Info.num)
    cecho(
      "\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;ROOM ADDED TO " .. matches[2] .. " MAP&lt;OrangeRed&gt;][][][][][]"
    )
  end
end
if matches[2] == "Quicksilver" then
  if (not table.contains(Quicksilver, gmcp.Room.Info.num)) then
    table.insert(Quicksilver, gmcp.Room.Info.num)
    cecho(
      "\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;ROOM ADDED TO " .. matches[2] .. " MAP&lt;OrangeRed&gt;][][][][][]"
    )
  end
  if matches[2] == "Realgar" then
    if (not table.contains(Realgar, gmcp.Room.Info.num)) then
      table.insert(Realgar, gmcp.Room.Info.num)
      cecho(
        "\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;ROOM ADDED TO " .. matches[2] .. " MAP&lt;OrangeRed&gt;][][][][][]"
      )
    end
  end
  if matches[2] == "Stannum" then
    if (not table.contains(Stannum, gmcp.Room.Info.num)) then
      table.insert(Stannum, gmcp.Room.Info.num)
      cecho(
        "\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;ROOM ADDED TO " .. matches[2] .. " MAP&lt;OrangeRed&gt;][][][][][]"
      )
    end
  end
end
if matches[3] == "Sparse" then
  cecho("\n&lt;red&gt;[EXT] Not extracting, let it grow")
else
  send("queue addclear eqbal extract " .. matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+)       .*          (\w+)$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Harvest Trigger</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Harvest Balance</name>
					<script>user.Balance.harvesting = false</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You search the room for</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>nom (sailing)</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>nom (questing)</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Baneward Quest Items</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Bashing Panpipes</name>
					<script>send("queue eqbal get panpipes")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Panpipes made from oak wood tumbles out of the corpse of a bat winged ghoul.</string>
						<string>A black mahogany drum tumbles out of the corpse of a bat winged ghoul.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Poison Quest</name>
					<script>send("greet sielis::1")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Bone grinder's tent.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Poison Bone</name>
					<script>send("put splinter in barrel::get barrel")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Sielis the eccentric wytch shoves a bone splinter into your hands.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>New Trigger</name>
					<script>send("get knife")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A tanner's tent.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Morwid</name>
					<script>send("greet morwid::1")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Inside a cluttered tent.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Morwid 2</name>
					<script>send("1::2")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Morwid the Dirty says, "I will need two items. We will start with the ice shard, find it and return it to me."</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Morwid 3</name>
					<script>user.Balance.Bashing = true</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Morwid the Dirty gives you a nod of acknowledgement.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Ice Shard</name>
					<script>send("get ice")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Protruding from the ground as it slowly melts away is a small ice shard.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Morwid 4</name>
					<script>send("give ice to Morwid")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Morwid the Dirty says, "Why are you telling me, just hand me the ice."</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Morwid 5</name>
					<script>send("1::2")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Morwid the Dirty says, "Now I need some andesite. Quickly now, my patience is growing thin with you."</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Andesite</name>
					<script>send("get andesite")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A mud training pit.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Morwid 6</name>
					<script>send("give andesite to Morwid")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Morwid the Dirty says, "Just hand it over, stop stroking your ego."</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Morwid 7</name>
					<script>user.Balance.Bashing = true</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Morwid the Dirty grunts as he hands you a strange flask.</string>
						<string>Morwid the Dirty says, "I just helped someone get in. You can come back later."</string>
						<string>Morwid the Dirty says, "Why are you telling me, just hand me the ice."</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Fissure</name>
					<script>send("put flask in fissure")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Leading to behind a boulder.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Sell Magickers // Sell Zealots</name>
					<script>send("give 50 magicker to yfihe::give 50 zealot to yfihe")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Quiet crossroads.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Enter Catacombs</name>
					<script>send("d")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A flask of unimaginable power cracks as it lands in a massive fissure, the intense cold from the ice freezes the ground as the heat from the andesite forces the ice to crack and break, granting entrance into the catacombs.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Khous Quest</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Coins</name>
					<script>send("get coin")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A green-scabbed ancient coin glints dimly from beneath blackened silt here.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>nom (classes)</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Class Colour</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Class Colour</name>
					<script>selectCaptureGroup(1)
setFgColor(33, 158, 188)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You slip away to the .*</string>
						<string>You weave strands of melodies over your blade, tunesmithing it with the power of the accentato.</string>
						<string>^You let the grace of your voice shine forth with a Scarlattan cantata at .*</string>
						<string>'DWINNU! DWINNU!' you chant urgently as your bonds turn to dust.</string>
						<string>With a final chirp, the songbird upon your shoulder takes flight and wings swiftly away.</string>
						<string>The dazed look on a .*</string>
						<string>.* blinks his eyes .*</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Pariah</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>plague -/+</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>+ PLAGUE</name>
						<script>-- if IsTargetted(matches[3]) then
  -- OppGainedAff(matches[2])
-- end

local name = matches[3]
local plaguetype = matches[2]

if (name == target.name) then

if not table.contains(target.plagues, plaguetype) then
    targPlagueAdd(plaguetype)
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You sense your (\w+) plague take hold of (\w+)\.$</string>
							<string>^You sense your (\w+) plague taking hold of (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>- rebbies</name>
						<script>if (table.contains(target.plagues, "rebbies")) then
		targPlagueSub("rebbies")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The skin of .* ceases secreting slime\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>- mycalium</name>
						<script>if (table.contains(target.plagues, "mycalium")) then
		targPlagueSub("mycalium")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^.* ceases .* nervous trembling\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Epitaph Tracking</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Logographs</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Skein with Delay</name>
							<script>  if not table.contains(target.afflictions, "impatience") then
	  targAffAdd("impatience")
  end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) gasps a great lungful of air, .* face flushing with sudden colour\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>SKEIN impatience</name>
							<script>--As you complete the logograph you deliberately bring your knife slashing down, severing it in twain and cursing Ulvin.
--Ulvin gasps a great lungful of air, his face flushing with sudden colour.


logograph = "skein"




if heartbeat == 0 then

  if not table.contains(target.afflictions, "impatience") then
	  targAffAdd("impatience")
  end

end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^As you complete the logograph you deliberately bring your knife slashing down, severing it in twain and cursing .*</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sun with Delay</name>
							<script>  if not table.contains(target.afflictions, "impatience") then
	  targAffAdd("impatience")
  end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The glowing logograph upon the brow of (\w+) suddenly explodes into searing red light, winking out almost immediately\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>SUN epilepsy</name>
							<script>
logograph = "sun"




if heartbeat == 0 then
  if not table.contains(target.mentalaffs, "epilepsy") then
	  targMaffAdd("epilepsy")
  end

else

tempTimer(heartbeat - .8, [[

if not table.contains(target.mentalaffs, "epilepsy") then
	  targMaffAdd("epilepsy")
  end
  
]]

)

end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^As the logograph becomes fully formed it burns with a terrible crimson light, and .*</string>
								<string>^As the logograph becomes fully formed it leaps from air to the brow of .*</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>SERPENT paralysis</name>
							<script>-- cecho("\n&lt;orange&gt;++SERPENT! Paralysis Given")
-- OppGainedAff("paralysis")
logograph = "serpent"


-- 
-- local name = matches[2]
-- if (name == target.name) then  
if heartbeat == 0 then
  if not table.contains(target.afflictions, "paralysis") then
	  targAffAdd("paralysis")
  end
-- end
else
tempTimer(heartbeat - .8, [[

  if not table.contains(target.afflictions, "paralysis") then
	  targAffAdd("paralysis")
  end
  
]]

)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^As the logograph becomes fully formed it lashes out at .* ethereal fangs plunging into .*</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>NEST weariness</name>
							<script>-- cecho("\n&lt;orange&gt;++NEST! Weariness Given")
-- OppGainedAff("weariness")
logograph = "nest"

  if not table.contains(target.afflictions, "weariness") then
	  targAffAdd("weariness")
  end
-- if heartbeat == 0 then
-- 
  -- if not table.contains(target.afflictions, "weariness") then
	  -- targAffAdd("weariness")
  -- end
-- else
-- tempTimer(heartbeat - .8, [[
-- 
  -- if not table.contains(target.afflictions, "weariness") then
	  -- targAffAdd("weariness")
  -- end
  -- 
-- ]]
-- 
-- )
-- end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^.* suddenly sways, .* eyes drooping as .*</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>BEAR haemophilia</name>
							<script>-- cecho("\n&lt;orange&gt;++BEAR! Heamophilia Given")
-- OppGainedAff("haemophilia")
logograph = "bear"

if heartbeat == 0 then

  if not table.contains(target.afflictions, "haemophilia") then
	  targAffAdd("haemophilia")
  end
else
tempTimer(heartbeat - .8, [[

  if not table.contains(target.afflictions, "haemophilia") then
	  targAffAdd("haemophilia")
  end
  
]]

)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Even as the logograph becomes fully formed it leaps from the air to .* </string>
								<string>Ephemeral claws suddenly thrust from the chest of Ulvin, their ghostly edges slicing and rending.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>JACKAL asthma</name>
							<script>-- cecho("\n&lt;orange&gt;++JACKAL! Asthma Given")
-- OppGainedAff("asthma")
logograph = "jackal"


if heartbeat == 0 then

  if not table.contains(target.afflictions, "asthma") then
	  targAffAdd("asthma")
  end
else
tempTimer(heartbeat - .8, [[

  if not table.contains(target.afflictions, "asthma") then
	  targAffAdd("asthma")
  end
  
]]

)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^As the logograph becomes fully formed it leaps for .* ephemeral fangs closing about .*</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>SCARAB addiction</name>
							<script>-- cecho("\n&lt;orange&gt;++SCARAB! Addiction Given")
-- OppGainedAff("addiction")
logograph = "scarab"


if heartbeat == 0 then

  if not table.contains(target.afflictions, "addiction") then
	  targAffAdd("addiction")
  end
  
else
tempTimer(heartbeat - .8, [[

  if not table.contains(target.afflictions, "addiction") then
	  targAffAdd("addiction")
  end

  
]]

)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^As the logograph becomes fully formed it leaps from the air to .* ethereal legs scrabbling as it burrows into .*</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>SCALES clumsiness</name>
							<script>-- cecho("\n&lt;orange&gt;++SCALES! Clumsiness Given")
-- OppGainedAff("clumsiness")
logograph = "scales"

if heartbeat == 0 then

  if not table.contains(target.afflictions, "clumsiness") then
	  targAffAdd("clumsiness")
  end
else
tempTimer(heartbeat - .8, [[

  if not table.contains(target.afflictions, "clumsiness") then
	  targAffAdd("clumsiness")
  end

  
]]

)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^As the logograph becomes fully formed it suddenly shatters, an expression of trepidation overcoming .*</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>SCORPION scytherus</name>
							<script>-- cecho("\n&lt;orange&gt;++SCALES! Clumsiness Given")
-- OppGainedAff("clumsiness")
logograph = "scorpion"


if heartbeat == 0 then

  if not table.contains(target.afflictions, "scytherus") then
	  targAffAdd("scytherus")
  end
else
tempTimer(heartbeat - .8, [[

  if not table.contains(target.afflictions, "scytherus") then
	  targAffAdd("scytherus")
  end
  
]]

)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Your knife moves in perfect harmony with your mind as you trace the image of the striking scorpion before .*</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>+expose</name>
						<script>exposed = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You sense the weakness in .*</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>- expose</name>
						<script>exposed = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You sense that .* is no longer exposed to your .*</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>cycle increase</name>
						<script>
selectCurrentLine()
deleteLine()



cycle = cycle + 1</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Your knife moves in perfect harmony .*</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>epitaph reset</name>
						<script>epitaphcount = 0
--expandAlias("ee")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your epitaph now consists of 10 logographs.</string>
							<string>Your epitaph now consists of 20 logographs.</string>
							<string>Your epitaph now consists of 30 logographs.</string>
							<string>Your epitaph now consists of 40 logographs.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>wield knife</name>
					<script>send("queue add eqbal get knife::wield knife")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Where is your ritual knife, sorcerer?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>virulence back</name>
					<script>virulence_balance = true</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You may bring forth the virulent once again.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Virulence</name>
					<script>

if table.contains(target.plagues, "pyramides") and table.contains(target.plagues, "flushings") then
  if not table.contains(target.afflictions, "healthleech") then
    targAffAdd("healthleech")
  end
end

if table.contains(target.plagues, "pyramides") and table.contains(target.plagues, "rebbies") then
  if not table.contains(target.afflictions, "slickness") then
    targAffAdd("slickness")
  end
end

if table.contains(target.plagues, "rebbies") and table.contains(target.plagues, "flushings") then
  if not table.contains(target.afflictions, "darkshade") then
    targAffAdd("darkshade")
  end
end

if table.contains(target.plagues, "sandfever") and table.contains(target.plagues, "flushings") then
  if not table.contains(target.mentalaffs, "anorexia") then
  	  targMaffAdd("anorexia")
  end
end

if table.contains(target.plagues, "sandfever") and table.contains(target.plagues, "mycalium") then
  if not table.contains(target.mentalaffs, "dizziness") then
  	  targMaffAdd("dizziness")
  elseif not table.contains(target.mentalaffs, "stupidity") then
    targMaffAdd("stupidity")
  end
end

if table.contains(target.plagues, "sandfever") and table.contains(target.plagues, "mycalium") and table.contains(target.plagues, "rebbies") then
  if not table.contains(target.mentalaffs, "peace") then
  	  targMaffAdd("peace")
  end
end

virulence_balance = false</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You send an arcane pulse into .* seeking to make the latent become rampant\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Bard</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
			</TriggerGroup>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Pause On...</name>
				<script>expandAlias("pp on")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>Summoning up all your mental strength and physical agility, you begin to vibrate your body</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>2</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Unpause On...</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>A short burst of azure light fills your vision and when it is gone, you find yourself</string>
					<string>You cease to concentrate on phasing out of reality.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>2</integer>
					<integer>3</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>nom (killswitch)</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Rebounding / Shield</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>aura+</name>
					<script>local name = matches[2]
if (name == target.name) then
	target.aura = true
	expandAlias("ee")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You suddenly perceive the vague outline of an aura of rebounding around (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>aura-</name>
					<script>target.aura = false
expandAlias("ee")
printTargetWindow()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ffaaff</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^A coruscating tendril of flame bursts forth from your Seraphic guardian's eyes and shreds .* rebounding aura\.$</string>
						<string>^The flame explodes into a searing furnace, burning .*</string>
						<string>^Your Seraphic guardian's eyes glow menacingly but .* has no rebounding aura to raze\.$</string>
						<string>^The flame explodes into a searing furnace that strips .* aura of rebounding before vanishing entirely\.$</string>
						<string>^You jab .* but tumble forward slightly as it meets no resistance\.$</string>
						<string>^You jab a .* piercing through and shattering .* aura of rebounding\.$</string>
						<string>^You drive a Trident of Fears through .* aura of .* destroying it\.$</string>
						<string>Your target has no protections you can pierce.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>aura coming</name>
					<script>local name = matches[2]
if (name == target.name) then
	tempTimer(5.7, [[target.aura = true]])
	tempTimer(5.8, [[expandAlias("ee")]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#35c9ff</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) takes a long drag off .* exhaling a thick, white haze.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>-combat flee</name>
				<script>if pre_offense_pause then
  offense_paused = true
  pre_offense_pause = false
  tempTimer(12, [[expandAlias("huntpauseoff")]])
end
combat_evade = false
hunting_evade = false</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^You slip away to the .* and successfully evade your pursuers\.$</string>
					<string>A short burst of azure light fills your vision and when it is gone, you find yourself</string>
					<string>You see a single exit</string>
					<string>You see exits leading</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>2</integer>
					<integer>2</integer>
					<integer>2</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>-combat shield</name>
				<script>if pre_offense_pause then
  offense_paused = true
  pre_offense_pause = false
  tempTimer(12, [[expandAlias("huntpauseoff")]])
end
combat_shield = false</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ffaaff</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>You touch the tattoo and a nearly invisible magical shield forms around you.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>3</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>-combat diagnose</name>
				<script>combat_diagnose = false</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>You are:</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>3</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>-combat heal</name>
				<script>if pre_offense_pause then
  offense_paused = true
  pre_offense_pause = false
end
combat_heal = false</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>ncjlanclknavjklnsav</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>-combat raze</name>
				<script>combat_raze = false
hunting_raze = false</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>You prepare yourself to flick your tail at</string>
					<string>You flick your tail at</string>
					<string>^The point of the weapon comes to a sudden halt as it impacts the shield of .*</string>
					<string>^Stepping forward, you continue the motion of your initial .*</string>
					<string>^Your cantata shatters the magical shield surrounding .*</string>
					<string>^You let the grace of your voice shine forth with a Scarlattan cantata at .*</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>2</integer>
					<integer>2</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>nom (sounds)</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="yes" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Test</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>You may drink another health or mana elixir.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>3</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
	</TriggerPackage>
	<TimerPackage>
		<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
			<name>zGUI</name>
			<script></script>
			<command></command>
			<packageName>zGUI</packageName>
			<time></time>
			<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
				<name>zGUI</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<time>00:00:00.000</time>
				<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
					<name>Death Cape</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<time>00:00:00.000</time>
					<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>Deathcape Timer</name>
						<script>zgui.cape.watch = zgui.cape.watch or 0
zgui.cape.watch = zgui.cape.watch + 1
zgui.showCape()</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:01.000</time>
					</Timer>
				</TimerGroup>
				<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
					<name>Battlerage</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<time>00:00:00.000</time>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>RageSkill1</name>
						<script>if getStopWatchTime("rage1watch") &gt;= tonumber(zgui.RageTable[zgui.useRageClass][2][2]) then
  disableTimer("RageSkill1")
  zgui.brage.rage1:setValue(0, tonumber(zgui.RageTable[zgui.useRageClass][2][2]))
end
zgui.showBRage1()</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:00.100</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>RageSkill2</name>
						<script>if getStopWatchTime("rage2watch") &gt;= tonumber(zgui.RageTable[zgui.useRageClass][3][2]) then 
  disableTimer("RageSkill2")
  zgui.brage.rage2:setValue(0, tonumber(zgui.RageTable[zgui.useRageClass][3][2]))
end
zgui.showBRage2()</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:00.100</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>RageSkill3</name>
						<script>if getStopWatchTime("rage3watch") &gt;= tonumber(zgui.RageTable[zgui.useRageClass][4][2]) then
  disableTimer("RageSkill3")
  zgui.brage.rage3:setValue(0, tonumber(zgui.RageTable[zgui.useRageClass][4][2]))
end
zgui.showBRage3()</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:00.100</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>RageSkill4</name>
						<script>if getStopWatchTime("rage4watch") &gt;= tonumber(zgui.RageTable[zgui.useRageClass][5][2]) then
  disableTimer("RageSkill4")
  zgui.brage.rage4:setValue(0, tonumber(zgui.RageTable[zgui.useRageClass][5][2]))
end
zgui.showBRage4()</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:00.100</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>RageSkill5</name>
						<script>if getStopWatchTime("rage5watch") &gt;= tonumber(zgui.RageTable[zgui.useRageClass][6][2]) then
  disableTimer("RageSkill5")
  zgui.brage.rage5:setValue(0, tonumber(zgui.RageTable[zgui.useRageClass][6][2]))
end
zgui.showBRage5()</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:00.100</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>RageSkill6</name>
						<script>if getStopWatchTime("rage6watch") &gt;= tonumber(zgui.RageTable[zgui.useRageClass][7][2]) then
  disableTimer("RageSkill6")
  zgui.brage.rage6:setValue(0, tonumber(zgui.RageTable[zgui.useRageClass][7][2]))
end
zgui.showBRage6()</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:00.100</time>
					</Timer>
				</TimerGroup>
				<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Stay Connected</name>
					<script>sendGMCP("Core.KeepAlive")</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:30.000</time>
				</Timer>
			</TimerGroup>
		</TimerGroup>
		<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
			<name>NOMAD</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<time>00:00:00.000</time>
			<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
				<name>[BATMAN]</name>
				<script></script>
				<command></command>
				<packageName>Sabotuer</packageName>
				<time>00:00:00.000</time>
				<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
					<name>General Timers</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<time>00:00:00.000</time>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>shardcd</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<time>00:00:00.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>herbbalance</name>
						<script>target.herbBalance = true
disableTimer("herbbalance")</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:01.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>Fuckthis</name>
						<script>fuckthis = 1
disableTimer("Fuckthis")</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:01.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>peace</name>
						<script>target.peace = false
disableTimer("peace")</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:05.500</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>Ciguatoxin</name>
						<script>target.paralysis = false
cecho("&lt;red&gt;===========&lt;&lt;Ciguatoxin Timer Off&gt;&gt;")
disableTimer("Ciguatoxin")</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:05.200</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>Sacrifice</name>
						<script>expandAlias("sac")</script>
						<command></command>
						<packageName></packageName>
						<time>00:15:00.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>Bash Diag</name>
						<script>expandAlias("qb diag")</script>
						<command></command>
						<packageName></packageName>
						<time>00:02:00.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>Train Pet</name>
						<script>expandAlias("train")</script>
						<command></command>
						<packageName></packageName>
						<time>00:34:00.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>cwho</name>
						<script>send("qw")
send("who " .. target.name)</script>
						<command></command>
						<packageName></packageName>
						<time>00:10:00.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>tree timer</name>
						<script>target.tree = true
--cecho("&lt;green&gt;===========&lt;&lt;TREE Timer Off&gt;&gt;")
disableTimer("tree timer")</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:10.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>numbness check</name>
						<script>if (table.contains(target.afflictions, "numbness")) then
	targAffSub("numbness")
	cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED NUMBNESS&lt;cyan&gt;][][][][][]")
	printTargetWindow()
end

disableTimer("numbness check")</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:07.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>mutilated left arm butisol</name>
						<script>disableTimer("mutilated left arm butisol")
targAffSub("mutilated left arm")
targAffSub("crippled left arm")
cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED MUTILATED LEFT ARM&lt;cyan&gt;][][][][][]")
printTargetWindow()</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:06.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>mutilated right arm butisol</name>
						<script>disableTimer("mutilated right arm butisol")
targAffSub("mutilated right arm")
targAffSub("crippled right arm")
cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED MUTILATED RIGHT ARM&lt;cyan&gt;][][][][][]")
printTargetWindow()</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:06.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>mutilated right leg butisol</name>
						<script>targAffSub("mutilated right leg")
targAffSub("crippled right leg")
cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED MUTILATED RIGHT LEG&lt;cyan&gt;][][][][][]")
printTargetWindow()

disableTimer("mutilated right leg butisol")</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:06.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>mutilated left leg butisol</name>
						<script>disableTimer("mutilated left leg butisol")
targAffSub("mutilated left leg")
targAffSub("crippled left leg")
cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED MUTILATED LEFT LEG&lt;cyan&gt;][][][][][]")
printTargetWindow()</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:06.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>mutilated left arm</name>
						<script>disableTimer("mutilated left arm")
targAffSub("mutilated left arm")
targAffSub("crippled left arm")
cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED MUTILATED LEFT ARM&lt;cyan&gt;][][][][][]")
printTargetWindow()</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:04.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>mutilated right arm</name>
						<script>disableTimer("mutilated right arm")
targAffSub("mutilated right arm")
targAffSub("crippled right arm")
cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED MUTILATED RIGHT ARM&lt;cyan&gt;][][][][][]")
printTargetWindow()</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:04.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>mutilated right leg</name>
						<script>disableTimer("mutilated right leg")
targAffSub("mutilated right leg")
targAffSub("crippled right leg")
cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED MUTILATED RIGHT LEG&lt;cyan&gt;][][][][][]")
printTargetWindow()</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:04.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>mutilated left leg</name>
						<script>disableTimer("mutilated left leg")
targAffSub("mutilated left leg")
targAffSub("crippled left leg")
cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED MUTILATED LEFT LEG&lt;cyan&gt;][][][][][]")
printTargetWindow()</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:04.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>forcerestoration</name>
						<script>forcerestoration = false
disableTimer("forcerestoration")</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:06.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>purge timer</name>
						<script>target.purge = true
--cecho("&lt;green&gt;===========&lt;&lt;TREE Timer Off&gt;&gt;")
disableTimer("tree timer")</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:10.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>mutilated head butisol</name>
						<script>disableTimer("mutilated head butisol")
targAffSub("mutilated head")
cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED MUTILATED head&lt;cyan&gt;][][][][][]")
printTargetWindow()</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:06.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>mutilated head</name>
						<script>disableTimer("mutilated head")
targAffSub("mutilated head")
cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;CURED MUTILATED head&lt;cyan&gt;][][][][][]")
printTargetWindow()</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:04.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>crypt search</name>
						<script>send("queue add eqbal swarm enthrall mosquitos")</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:02.000</time>
					</Timer>
				</TimerGroup>
				<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
					<name>Profession Specific</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<time>00:00:00.000</time>
					<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
						<name>Deathknight</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<time>00:00:00.000</time>
						<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
							<name>soulquench</name>
							<script>soulquenchclaymore = false
soulquenchsabre = false
disableTimer("soulquench")</script>
							<command></command>
							<packageName></packageName>
							<time>00:00:35.000</time>
						</Timer>
					</TimerGroup>
				</TimerGroup>
				<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
					<name>Parry System</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<time>00:00:00.000</time>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>rightlegbruise</name>
						<script>rightlegbruise = false
sysEcho("Right Leg Bruise Faded!")
disableTimer("rightlegbruise")</script>
						<command></command>
						<packageName></packageName>
						<time>00:01:00.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>leftlegbruise</name>
						<script>leftlegbruise = false
sysEcho("Left Leg Bruise Faded!")
disableTimer("leftlegbruise")</script>
						<command></command>
						<packageName></packageName>
						<time>00:01:00.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>leftarmbruise</name>
						<script>leftarmbruise = false
sysEcho("Left Arm Bruise Faded!")
disableTimer("leftarmbruise")</script>
						<command></command>
						<packageName></packageName>
						<time>00:01:00.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>rightarmbruise</name>
						<script>rightarmbruise = false
sysEcho("Right Arm Bruise Faded!")
disableTimer("rightarmbruise")
</script>
						<command></command>
						<packageName></packageName>
						<time>00:01:00.000</time>
					</Timer>
				</TimerGroup>
				<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
					<name>Harvesting</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<time>00:00:00.000</time>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>harvestmove</name>
						<script>harvDir()
disableTimer("harvestmove")</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:10.000</time>
					</Timer>
				</TimerGroup>
			</TimerGroup>
		</TimerGroup>
		<TimerGroup isActive="no" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
			<name>AK Opponent Tracking</name>
			<script></script>
			<command></command>
			<packageName>AK Opponent Tracking</packageName>
			<time>00:00:00.000</time>
			<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
				<name>AK Opponent Tracking</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<time>00:00:00.000</time>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Hypochondria Timer</name>
					<script>if affstrack.score.hypochondria &gt; 0 then
   for i = 1, #affstrack.hypo do
      if affstrack.score[affstrack.hypo[i]] ~= 100 then
         if affstrack.hypo[i] ~= "impatience" then
            affstrack.score[affstrack.hypo[i]] = 100
            ak.scoreup(target)
            return
         end
      end
   end
else
   disableTimer("Hypochondria Timer")
end</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:02.500</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Hypnosis Timer</name>
					<script>if hypnosis_table[target] and hypnosis_table[target].load and #hypnosis_table[target].load &gt; 0  then
   if hypnosis_table[target].load[#hypnosis_table[target].load] ~= "impatience" then
      OppGainedAff(hypnosis_table[target].load[#hypnosis_table[target].load])
      ak.scoreup(target)
   end
   table.remove(hypnosis_table[target].load, #hypnosis_table[target].load)
   if #hypnosis_table[target].load  == 0 then
      disableTimer("Hypnosis Timer")
      resetHypno = tempTimer(1,[[
         hypnosis_table[target].load = {}
      ]])
      ak.scoreup(target)
   end
else
   disableTimer("Hypnosis Timer")
   resetHypno = tempTimer(1,[[
      hypnosis_table[target].load = {}
   ]])
   ak.scoreup(target)
end</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:02.000</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Wrench Torso Timer</name>
					<script>--ak.HeadWrench
ak = ak or {}
if affstrack.score.wrenchhead then
   if ak.InitialWrench then
      ak.InitialWrench = false
   else
      local aff = "epilepsy"
      OppGainedAff(aff)
   end
else
   disableTimer("Wrench Torso Timer")
end</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:04.000</time>
				</Timer>
				<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
					<name>2h</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<time>00:00:00.000</time>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>AK_SkullTimer</name>
						<script>ak.skullcount = ak.skullcount or 0
ak.skullcount = ak.skullcount + 1
if ak.twoh.skull == 0 then
	disableTimer("AK_SkullTimer")
	ak.skullcount = 0
elseif ak.twoh.skull == 1 and ak.skullcount == 5 then
	ak.skullcount = 0
	OppGainedAff("nausea")
elseif ak.twoh.skull == 2 and ak.skullcount == 4 then
	ak.skullcount = 0
	OppGainedAff("nausea")
elseif ak.twoh.skull == 3 and ak.skullcount == 3  then
	ak.skullcount = 0
	OppGainedAff("nausea")
elseif ak.twoh.skull == 4 and ak.skullcount == 2 then
	ak.skullcount = 0
	OppGainedAff("nausea")
elseif ak.twoh.skull == 5 and ak.skullcount == 1 then
	ak.skullcount = 0
	OppGainedAff("nausea")
end 
</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:01.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>AK_RibsTimer</name>
						<script>ak.ribscount = ak.ribscount or 0
ak.ribscount = ak.ribscount + 1
if ak.twoh.ribs == 0 then
	disableTimer("AK_RibsTimer")
	ak.ribscount = 0
elseif ak.twoh.ribs == 1 and ak.ribscount == 5 then
	ak.ribscount = 0
	OppGainedAff("prefarar")
elseif ak.twoh.ribs == 2 and ak.ribscount == 4 then
	ak.ribscount = 0
	OppGainedAff("prefarar")
elseif ak.twoh.ribs == 3 and ak.ribscount == 3  then
	ak.ribscount = 0
	OppGainedAff("prefarar")
elseif ak.twoh.ribs == 4 and ak.ribscount == 2 then
	ak.ribscount = 0
	OppGainedAff("prefarar")
elseif ak.twoh.ribs == 5 and ak.ribscount == 1 then
	ak.ribscount = 0
	OppGainedAff("prefarar")
end </script>
						<command></command>
						<packageName></packageName>
						<time>00:00:01.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>AK_TendonTimer</name>
						<script>ak.tendonscount = ak.tendonscount or 0
ak.tendonscount = ak.tendonscount + 1
if ak.twoh.tendons == 0 then
	disableTimer("AK_TendonTimer")
	ak.tendonscount = 0
elseif ak.twoh.tendons == 1 and ak.tendonscount == 5 then
	ak.tendonscount = 0
	OppGainedAff("clumsiness")
elseif ak.twoh.tendons == 2 and ak.tendonscount == 4 then
	ak.tendonscount = 0
	OppGainedAff("clumsiness")
elseif ak.twoh.tendons == 3 and ak.tendonscount == 3  then
	ak.tendonscount = 0
	OppGainedAff("clumsiness")
elseif ak.twoh.tendons == 4 and ak.tendonscount == 2 then
	ak.tendonscount = 0
	OppGainedAff("clumsiness")
elseif ak.twoh.tendons == 5 and ak.tendonscount == 1 then
	ak.tendonscount = 0
	OppGainedAff("clumsiness")
end </script>
						<command></command>
						<packageName></packageName>
						<time>00:00:01.000</time>
					</Timer>
				</TimerGroup>
			</TimerGroup>
		</TimerGroup>
		<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
			<name>chameleon</name>
			<script>local mimicname = math.random(#namelist)

send("touch chameleon "..namelist[mimicname])</script>
			<command></command>
			<packageName></packageName>
			<time>00:00:30.000</time>
		</Timer>
		<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
			<name>1.5 seconds</name>
			<script>if user.Bashing == true and #gmcp.Room.Players == tonumber(huntingnumber) then
  if blackout == true and nextbashArea == Iskadar then
    send("queue addclear eqbal stand::vault direwolf::light pipes::get gold::put gold in pack::wield rapier buckler::moulinet dwarf::howlslash dwarf::jab dwarf::play trill at dwarf")
  else
    checkRoom()
    huntingCheck()
    bashing()
    if user.targetInRoom == true then
      expandAlias("kill")
    end
  end
end
-- send("minerals::extract potash")</script>
			<command></command>
			<packageName></packageName>
			<time>00:00:01.500</time>
		</Timer>
		<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
			<name>10 seconds</name>
			<script>checkRoom()
huntingCheck()
bashing()
expandAlias("kill")</script>
			<command></command>
			<packageName></packageName>
			<time>00:00:10.000</time>
		</Timer>
		<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
			<name>60 seconds</name>
			<script>send("board ship sgrace::score")
expandAlias("ql")
send("qw")
</script>
			<command></command>
			<packageName></packageName>
			<time>00:01:00.000</time>
		</Timer>
		<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
			<name>Mudlet Mapper</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<time>00:00:00.000</time>
			<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
				<name>Check for updates periodically</name>
				<script>mmp.checkforupdate()</script>
				<command></command>
				<packageName></packageName>
				<time>01:00:00.000</time>
			</Timer>
		</TimerGroup>
		<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
			<name>Sneaky Hunter 1hr</name>
			<script>if (user.Bashing) then
  expandAlias("bashoff")
else
  send("disembark")
  expandAlias("bash Ulsyndar")
end</script>
			<command></command>
			<packageName></packageName>
			<time>01:00:00.000</time>
		</Timer>
	</TimerPackage>
	<AliasPackage>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>imported systems**</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>deleteOldProfiles</name>
				<script></script>
				<command></command>
				<packageName>deleteOldProfiles</packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>delete old profiles</name>
					<script>deleteOldProfiles(matches[3], matches[2])

--Syntax examples: "delete old profiles"  -&gt; deletes profiles older than 31 days
--					"delete old maps 10"	-&gt; deletes maps older than 10 days</script>
					<command></command>
					<packageName></packageName>
					<regex>^delete old (profiles|maps|modules)(?: (\d+))?$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>echo</name>
				<script></script>
				<command></command>
				<packageName>echo</packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>`echo</name>
					<script>local s = matches[2]

s = string.gsub(s, "%$", "\n")
feedTriggers("\n" .. s .. "\n")
echo("\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>`echo (.+)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>`cecho</name>
					<script>local s = matches[2]

s = string.gsub(s, "%$", "\n")
cfeedTriggers("\n" .. s .. "\n")
echo("\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>`cecho (.+)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>`decho</name>
					<script>local s = matches[2]

s = string.gsub(s, "%$", "\n")
dfeedTriggers("\n" .. s .. "\n")
echo("\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>`decho (.+)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>`hecho</name>
					<script>local s = matches[2]

s = string.gsub(s, "%$", "\n")
hfeedTriggers("\n" .. s .. "\n")
echo("\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>`hecho (.+)</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>run-lua-code-v4</name>
				<script></script>
				<command></command>
				<packageName>run-lua-code-v4</packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>run lua code</name>
					<script>local f, e = loadstring("return "..matches[2])
if not f then
  f, e = assert(loadstring(matches[2]))
end

local r =
  function(...)
    if not table.is_empty({...}) then
      display(...)
    end
  end
r(f())</script>
					<command></command>
					<packageName></packageName>
					<regex>^lua (.*)$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>zGUI</name>
				<script></script>
				<command></command>
				<packageName>zGUI</packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>zGUI</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>(ZGUI)</name>
						<script>zgui.modules = {}
zgui.running = false
zgui.zStartup()</script>
						<command></command>
						<packageName></packageName>
						<regex>^zgui$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>(ZGUIS) zGUI Size</name>
						<script>--------------------------------------------------------------------

  zgui.chatSize = 9

  zgui.loggerSize = 9
  zgui.promptSize = 12
  zgui.goldSize = 9

  zgui.defenceSize = 9
  zgui.afflictionSize = 9
  zgui.targetAffsSize = 9
  zgui.targetListSize = 9
  zgui.enemySize = 9
  zgui.allySize = 9

  zgui.roomDenizensSize = 9
  zgui.roomItemsSize = 9
  zgui.roomPlayersSize = 9

  zgui.mapSize = 9

--------------------------------------------------------------------
 setFontSize("All", zgui.chatSize)
 setFontSize("City", zgui.chatSize)
 setFontSize("House", zgui.chatSize)
 setFontSize("Order", zgui.chatSize)
 setFontSize("Party", zgui.chatSize)
 setFontSize("Clans", zgui.chatSize)
 setFontSize("Tells", zgui.chatSize)
 setFontSize("Market", zgui.chatSize)
 setFontSize("Misc", zgui.chatSize)
 
 setFontSize("logDisplay", zgui.loggerSize)
 setFontSize("myPrompt", zgui.promptSize) 
 setFontSize("Gold Collection", zgui.goldSize)
 
 setFontSize("defenceDisplay", zgui.defenceSize)
 setFontSize("afflictionDisplay", zgui.afflictionSize) 
 setFontSize("targetafflictionDisplay", zgui.targetAffsSize) 
 setFontSize("targetListDisplay", zgui.targetListSize)

 setFontSize("enemyDisplay", zgui.enemySize) 
 setFontSize("allyDisplay", zgui.allySize)
 
 setFontSize("roomDenizensDisplay", zgui.roomDenizensSize)
 setFontSize("roomItemsDisplay", zgui.roomItemsSize)
 setFontSize("roomPlayersDisplay", zgui.roomPlayersSize)  
 
 setFontSize("Ocean", zgui.mapSize)
 setFontSize("Wilderness", zgui.mapSize)
--------------------------------------------------------------------</script>
						<command></command>
						<packageName></packageName>
						<regex>^zguis$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>(ZSHOW) Show Windows</name>
						<script>if matches[2] then
  local showThis = string.title(matches[2])
  if showThis == "All" then
    for i=1, #zgui.modules, 1 do
      zgui["build"..zgui.modules[i]]()
    end 
  elseif zgui["build"..showThis] then
    zgui["build"..showThis]()
    cecho("\n&lt;purple&gt; -Ran: zgui\.build"..showThis.."\(\) \n")
  else
    cecho("\n&lt;purple&gt; -No &lt;white&gt;\["..showThis.."\]&lt;purple&gt; Found for zgui\.build"..showThis.."\(\) check capitalization \n")
  end
else
  cecho("\n&lt;purple&gt; --------------------------------------------------------")
  cecho("\n&lt;purple&gt; -To display all windows type: &lt;white&gt;zshow all\n")
  cecho("\n&lt;white&gt; Modules Installed:")
  for i=1, #zgui.modules, 1 do
    cecho("\n&lt;purple&gt; - &lt;SteelBlue&gt;"..zgui.modules[i])
  end 
  cecho("\n\n&lt;purple&gt; -To display a single window type:")
  cecho("\n&lt;white&gt;    zshow Log")
  cecho("\n&lt;white&gt;    zshow RoomItems")
  cecho("\n&lt;purple&gt; --------------------------------------------------------\n")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^zshow(?: (\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>(ZSTYLE) Style Windows</name>
						<script>if matches[2] then
  local showThis = string.lower(matches[2])
  local foundIt = false
  for k,v in pairs(zgui.styles) do
    if k == showThis then
      foundIt = true
      zgui.useStyle = showThis
      zgui.restyle()
    end
  end
  if not foundIt then
    cecho("\n&lt;purple&gt; -No &lt;white&gt;\["..showThis.."\]&lt;purple&gt; Found \n")
  end
else
  cecho("\n&lt;purple&gt; --------------------------------------------------------")
  cecho("\n&lt;purple&gt;      GUI Styler\n")
  cecho("\n&lt;purple&gt; Styles Already Installed:")
  for k,v in pairs(zgui.styles) do
    cecho("\n&lt;white&gt; -"..k.."&lt;purple&gt; = "..zgui.styles[k].."&lt;gray&gt;\(\)")
  end 
  cecho("\n\n&lt;purple&gt; -To Switch Styles Type:")
  cecho("\n&lt;white&gt;    zstyle greygroove")
  cecho("\n&lt;white&gt;    zstyle greeninset")
  cecho("\n&lt;purple&gt; --------------------------------------------------------\n")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^zstyle(?: (\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>(ZFIX) Default a Window</name>
						<script>if matches[2] then
  local showThis = matches[2]
  if zgui[matches[2]] and zgui[matches[2]].adjustable then
    zgui[matches[2]].adjustable = Adjustable.Container:new({name="zgui."..matches[2]..".adjustable", autoLoad=false})
    cecho("\n&lt;purple&gt; -NEW ADJUSTABLE CREATED:\n")
    cecho("\n&lt;purple&gt; -&lt;red&gt;\[zgui."..showThis..".adjustable\]\n")    
  elseif zgui[matches[2]] and zgui[matches[2]].window then
    zgui[matches[2]].window = Adjustable.Container:new({name="zgui."..matches[2]..".window", autoLoad=false})    
    cecho("\n&lt;purple&gt; -NEW WINDOW CREATED:\n")
    cecho("\n&lt;purple&gt; -&lt;red&gt;\[zgui."..showThis..".window\]\n")        
  else
    cecho("\n&lt;purple&gt; -No Version of Either:\n")
    cecho("\n&lt;purple&gt; -&lt;white&gt;\[zgui.&lt;red&gt;"..showThis.."&lt;white&gt;.adjustable\]\n")
    cecho("\n&lt;purple&gt; -&lt;white&gt;\[zgui.&lt;red&gt;"..showThis.."&lt;white&gt;.window\]\n")
  end
else
  cecho("\n&lt;purple&gt; --------------------------------------------------------")
  cecho("\n&lt;purple&gt; -To type: &lt;white&gt;\n")
  for k,v in pairs(zgui) do
    if type(zgui[k]) == "table" then
      if  zgui[k].window then
        cecho("\n&lt;purple&gt; -&lt;white&gt;\[zgui.&lt;red&gt;"..k.."&lt;white&gt;.window\]")
      end
      if  zgui[k].adjustable then
        cecho("\n&lt;purple&gt; -&lt;white&gt;\[zgui.&lt;red&gt;"..k.."&lt;white&gt;.adjustable\]")
      end      
    end
  end
  cecho("\n\n&lt;purple&gt; -To Fix a Window Type:")
  cecho("\n&lt;white&gt;    zfix map")
  cecho("\n&lt;white&gt;    zfix logger")
  cecho("\n&lt;white&gt;    zfix targetaffliction")  
  cecho("\n&lt;purple&gt; --------------------------------------------------------\n")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^zfix(?: (\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>(ZCHAT) Toggle Chat Command Line</name>
						<script>if not zgui.chat then zgui.buildChat() end

if not zgui.chat.useCmdLine then
 zgui.chat.useCmdLine = true
 zgui.chat.allchat:enableCommandLine()
 zgui.chat.citychat:enableCommandLine()
 zgui.chat.orderchat:enableCommandLine()
 zgui.chat.partychat:enableCommandLine()
 zgui.chat.marketchat:enableCommandLine()
 zgui.chat.housechat:enableCommandLine()
else
 zgui.chat.useCmdLine = false
 zgui.chat.allchat:disableCommandLine()
 zgui.chat.citychat:disableCommandLine()
 zgui.chat.orderchat:disableCommandLine()
 zgui.chat.partychat:disableCommandLine()
 zgui.chat.marketchat:disableCommandLine()
 zgui.chat.housechat:disableCommandLine()
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^zchat$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>(ZHELP)</name>
						<script>zgui.buildHelp()
zgui.showHelp()</script>
						<command></command>
						<packageName></packageName>
						<regex>^zhelp$</regex>
					</Alias>
					<AliasGroup isActive="no" isFolder="yes">
						<name>zTrade</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Harvest / Gather</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>(ZHARVEST) Setup zTrade Harvesting</name>
								<script>zTrade.showHarvest()</script>
								<command></command>
								<packageName></packageName>
								<regex>^zharvest$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>(ZGATHER) Setup zTrade Gathering</name>
								<script>zTrade.showGather()</script>
								<command></command>
								<packageName></packageName>
								<regex>^zgather$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>(ZHARV) Auto Harvest Toggle</name>
								<script>if zTrade.autoHarvesting then
  zTrade.autoHarvesting = false
  zTrade.autoGathering = false
  zTrade.echo(" Auto Harvest-Gather OFF")
else
  zTrade.autoHarvesting = true
  zTrade.autoGathering = true
  zTrade.echo(" Auto Harvest-Gather ON")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^zharv$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>(zharvall)</name>
								<script>zTrade.autoHarvest = {
  "ash",
  "bayberry",
  "blueberry",
  "bellwort",
  "cohosh",
  "bloodroot",
  "burdock",
  "echinacea",
  "elm",
  "ginseng",
  "ginger",
  "goldenseal",  
  "hawthorn",
  "kelp",  
  "kola",  
  "kuzu",  
  "lobelia",
  "myrrh",
  "moss",
  "pear",
  "sileris",
  "skullcap",
  "slipper", 
  "valerian",
  "weed",   
}</script>
								<command></command>
								<packageName></packageName>
								<regex>^zharvall$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Conjuration</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>(Zconj) Item</name>
								<script>zTrade.conjuration.create(tonumber(matches[2]), matches[3]) </script>
								<command></command>
								<packageName></packageName>
								<regex>^zconj (\d+) (\w+)$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>MapExplorer</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>explore-map</name>
							<script>MapExporter:export()
MapExporter:openUrl()
</script>
							<command></command>
							<packageName></packageName>
							<regex>^\/explore-map$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>export-map</name>
							<script>MapExporter:export()
</script>
							<command></command>
							<packageName></packageName>
							<regex>^\/export-map$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>link-map</name>
							<script>MapExporter:export()
MapExporter:echoUrl()
</script>
							<command></command>
							<packageName></packageName>
							<regex>^\/link-map</regex>
						</Alias>
					</AliasGroup>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>zData</name>
				<script></script>
				<command></command>
				<packageName>zData</packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>zData</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>(zBash)</name>
						<script>if matches[3] then
  zData.db.showData(matches[2], matches[3])
elseif matches[2] then
  zData.db.showData(matches[2])
else
  zData.db.showData()
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^zbash(?: (\w+))?(?: (\w+))?$</regex>
					</Alias>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Mudlet Mapper</name>
				<script>mudlet = mudlet or {}; mudlet.mapper_script = true</script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Go to ID or area</name>
					<script>local where = matches[2]:lower()
local gallop
if command:ends("gallop") then
  gallop = "gallop"
  where = where:sub(1, -8)
elseif command:ends("sprint") then
  gallop = "sprint"
  where = where:sub(1, -8)
elseif command:ends("dash") then
  gallop = "dash"
  where = where:sub(1, -6)
elseif command:ends("runaway") then
  gallop = "runaway"
  where = where:sub(1, -9)
elseif command:ends("glide") then
  gallop = "glide"
  where = where:sub(1, -7)
end
if mmp.debug then
  mmp.gotoPerf = mmp.gotoPerf or createStopWatch()
  startStopWatch(mmp.gotoPerf)
end
-- goto room ID
if tonumber(where) then
  mmp.gotoRoom(where, gallop)
else
  -- goto area or feature
  local split = where:split(" ")
  if split[1] == "feature" then
	  table.remove(split, 1)
    mmp.gotoFeature(table.concat(split, " "), gallop)
  else
    if tonumber(split[#split]) then
      mmp.gotoArea(where:sub(1, -#(split[#split]) - 2), tonumber(split[#split]), gallop)
    else
      mmp.gotoArea(where, nil, gallop)
    end
  end
end
if mmp.debug then
  mmp.echo("goto alias took " .. stopStopWatch(mmp.gotoPerf) .. "s to run.")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^goto (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>View roomID or area</name>
					<script>local where = matches[2]

if not where then
	centerview(mmp.currentroom)
elseif tonumber(where) then -- view a room ID
	centerview(where)
else -- view an area
	mmp.viewArea (where)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^mmap ?(.+)?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Toggle pause</name>
					<script>mmp.pause(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^mpp(?:\s?(on|off))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Stop walking</name>
					<script>mmp.stop()</script>
					<command></command>
					<packageName></packageName>
					<regex>^mstop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Option</name>
					<script>if not matches[2] then
	mmp.settings:showAllOptions(mmp.game)
	return
end

local val = matches[4]
if val == "true" or val == "yes" or val == "on" then val = true end
if val == "false" or val == "no" or val == "off" then val = false end
local numberVal = tonumber(val)
val = numberVal and numberVal or val
mmp.settings:setOption(matches[3], val)</script>
					<command></command>
					<packageName></packageName>
					<regex>^mconfig( (\w+) (.*))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Display area for lock/unlock</name>
					<script>mmp.doLockArea(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^arealock(?: (.*))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Add a room label</name>
					<script>mmp.roomLabel(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^room label (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>View/delete area labels</name>
					<script>mmp.areaLabels(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^area labels ?(.+)?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Room find</name>
					<script>mmp.roomFind(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^(?:rf|room find) (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Room look</name>
					<script>mmp.roomLook(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^(?:rl|room look)(?: (.+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Room list</name>
					<script>mmp.echoRoomList(matches[2] or mmp.areatabler[getRoomArea(mmp.currentroom)])</script>
					<command></command>
					<packageName></packageName>
					<regex>^room list(?: (.+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Area list</name>
					<script>mmp.echoAreaList()</script>
					<command></command>
					<packageName></packageName>
					<regex>^area list$</regex>
				</Alias>
				<AliasGroup isActive="no" isFolder="yes">
					<name>mm Mapping</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Manually set the room coordinates</name>
						<script>-- want the current room, but we're lost
if matches[2] == '' and (not mmp.currentroom or not mmp.roomexists(mmp.currentroom)) then mmp.echo("Don't know where we are at the moment.") return end

-- want another room, but it doesn't actually exist
if matches[2] ~= '' and not mmp.roomexists(matches[2]) then mmp.echo("v"..matches[2].." doesn't exist.") return end

local m = matches[3]
local rid, rname = (matches[2] ~= "" and matches[2] or mmp.currentroom),
  (matches[2] ~= "" and getRoomName(matches[2]) or mmp.currentroomname)
local x,y,z

local function set() -- small func to set things
  setRoomCoordinates(rid, x, y, z)
  mmp.echo(string.format("%s (%d) is now at %dx, %dy, %dz.\n", rname, rid, x,y,z))
  centerview(rid)
end

-- let's be flexible and allow several ways if giving an arg
-- rc x y z
x,y,z = string.match(m, "(%-?%d+) (%-?%d+) (%-?%d+)")
if x then
  set(); return
end

-- rc xx? yy? zz?
x,y,z = string.match(m, "(%-?%d+)x"), string.match(m, "(%-?%d+)y"), string.match(m, "(%-?%d+)z")
if x or y or z then
  -- merge w/ old coords if any are missing
  local ox, oy, oz = getRoomCoordinates(rid)
  x = x or ox; y = y or oy; z = z or oz
  set(); return
end

-- rc left/west, right/east, ...
local ox, oy, oz = getRoomCoordinates(rid)
local has = table.contains
for w in string.gmatch(m, "%a+") do
  if has({"west", "left", "w", "l"}, w) then
    x = (x or ox) - 1; y = (y or oy); z = (z or oz)
  elseif has({"east", "right", "e", "r"}, w) then
    x = (x or ox) + 1; y = (y or oy); z = (z or oz)
  elseif has({"north", "top", "n", "t"}, w) then
    x = (x or ox); y = (y or oy) + 1; z = (z or oz)
  elseif has({"south", "bottom", "s", "b"}, w) then
    x = (x or ox); y = (y or oy) - 1; z = (z or oz)
  elseif has({"northwest", "topleft", "nw", "tl"}, w) then
    x = (x or ox) - 1; y = (y or oy) + 1; z = (z or oz)
  elseif has({"northeast", "topright", "ne", "tr"}, w) then
    x = (x or ox) + 1; y = (y or oy) + 1; z = (z or oz)
  elseif has({"southeast", "bottomright", "se", "br"}, w) then
    x = (x or ox) + 1; y = (y or oy) - 1; z = (z or oz)
  elseif has({"southwest", "bottomleft", "sw", "bl"}, w) then
    x = (x or ox) - 1; y = (y or oy) - 1; z = (z or oz)
  elseif has({"up", "u"}, w) then
    x = (x or ox); y = (y or oy); z = (z or oz) + 1
  elseif has({"down", "d"}, w) then
    x = (x or ox); y = (y or oy); z = (z or oz) - 1
  end

end
if x then set(); return end

mmp.echo([[Where do you want to move the room to?
  You can use direct coordinates or relative directions.]])</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:rc|room coords) (?:v(\d+) )?(.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Add a special exit</name>
						<script>-- spe clear and spe list match on this
if matches[2] == "clear" or matches[2] == "list" then return end

-- need the current room, but we're lost
if not mmp.currentroom or not mmp.roomexists(mmp.currentroom) then mmp.echo("Don't know where we are at the moment.") return end

local otherroom = tonumber(matches[2]) or mmp.relativeroom(mmp.currentroom, matches[2])

-- need the another room, but it doesn't actually exist
if not otherroom or not mmp.roomexists(otherroom) then mmp.echo(matches[2].." doesn't exist.") return end

addSpecialExit(mmp.currentroom, tonumber(otherroom), matches[3])
addSpecialExit(mmp.currentroom, tonumber(otherroom), matches[3])
mmp.echo(string.format("Added special exit with command '%s' to %s (%d).", matches[3], getRoomName(otherroom), otherroom))
centerview(mmp.currentroom)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:spe|exit special) (\w+) (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Add a special exit from one remote room to another</name>
						<script>local room1, room2 = tonumber(matches[2]), tonumber(matches[3])

if not room1 or not mmp.roomexists(room1) then
  mmp.echo("Room #"..matches[2].." doesn't exist - create it first, or make sure you got the room ID right?")
  return
end

if not room2 or not mmp.roomexists(room2) then
  mmp.echo("Room #"..matches[3].." doesn't exist - create it first, or make sure you got the room ID right?")
  return
end

addSpecialExit(room1, room2, matches[4])
mmp.echo(string.format("Added special exit with command '%s' to from %s (%d) to %s (%d).", matches[4], getRoomName(room1), room1, getRoomName(room2), room2))</script>
						<command></command>
						<packageName></packageName>
						<regex>^spev (\d+) (\d+) (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>List special exits</name>
						<script>mmp.listSpecialExits(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^spe list(?: (.+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Clear all special exits</name>
						<script>-- want the current room, but we're lost
if not matches[2] and (not mmp.currentroom or not mmp.roomexists(mmp.currentroom)) then mmp.echo("Don't know where we are at the moment.") return end

-- want another room, but it doesn't exist
if matches[2] and tonumber(matches[2]) and not mmp.roomexists(matches[2]) then mmp.echo("v"..matches[2].." doesn't exist.") return end

-- or a relative one
if matches[2] and not tonumber(matches[2]) and not mmp.relativeroom(mmp.currentroom, matches[2]) then mmp.echo("There is no room "..matches[2].. " of us.") return end

local rid = (not matches[2] and mmp.currentroom or (tonumber(matches[2]) or mmp.relativeroom(mmp.currentroom, matches[2])))

clearSpecialExits(rid)
mmp.echo(string.format("Cleared all special exits in %s (%d).\n", getRoomName(rid), rid))</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:spe clear|exit special clear) ?(\w+)?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Create a room</name>
						<script>local m = matches[2]
if m:starts("feature") then
  -- another alias was meant.
  return
end
local rid, rname
if mmp.roomexists(mmp.currentroom) then
  rid, rname = mmp.currentroom, mmp.currentroomname
end
local x, y, z

local function set(newid)
  -- small func to set things
  local rid = newid or createRoomID()
  addRoom(rid)
  setRoomCoordinates(rid, x, y, z)
  if mmp.roomexists(mmp.currentroom) then
    setRoomArea(rid, getRoomArea(mmp.currentroom))
  end
  if mmp.roomexists(mmp.currentroom) then
    setRoomEnv(rid, getRoomEnv(mmp.currentroom))
  end
  setExit(mmp.currentroom, rid, m)
  mmp.echo(string.format("Created new room (%d) at %dx, %dy, %dz.\n", rid, x, y, z))
  centerview(mmp.roomexists(mmp.currentroom) and mmp.currentroom or rid)
  if not mmp.roomexists(mmp.currentroom) then
    mmp.currentroom = rid;
    mmp.currentroomname = ""
  end
end

-- let's be flexible and allow several ways if giving an arg
-- rc v# x y z
newid, x, y, z = string.match(m, "v(%d+) (%-?%d+) (%-?%d+) (%-?%d+)")
if x then
  set(newid);
  return
end
-- rc x y z
x, y, z = string.match(m, "(%-?%d+) (%-?%d+) (%-?%d+)")
if x then
  set();
  return
end
if not rid then
  mmp.echo("Don't know where we are at the moment in order to use relative coordinates.")
  return
end
-- rc xx? yy? zz?
x, y, z = string.match(m, "(%-?%d+)x"), string.match(m, "(%-?%d+)y"), string.match(m, "(%-?%d+)z")
if x or y or z then
  -- merge w/ old coords if any are missing
  local ox, oy, oz = getRoomCoordinates(rid)
  x = x or ox;
  y = y or oy;
  z = z or oz
  set();
  return
end
-- rc left/west, right/east, ...
local ox, oy, oz = getRoomCoordinates(rid)
local has = table.contains
for w in string.gmatch(m, "%a+") do
  if has({"west", "left", "w", "l"}, w) then
    x = (x or ox) - 1;
    y = (y or oy);
    z = (z or oz)
  elseif has({"east", "right", "e", "r"}, w) then
    x = (x or ox) + 1;
    y = (y or oy);
    z = (z or oz)
  elseif has({"north", "top", "n", "t"}, w) then
    x = (x or ox);
    y = (y or oy) + 1;
    z = (z or oz)
  elseif has({"south", "bottom", "s", "b"}, w) then
    x = (x or ox);
    y = (y or oy) - 1;
    z = (z or oz)
  elseif has({"northwest", "topleft", "nw", "tl"}, w) then
    x = (x or ox) - 1;
    y = (y or oy) + 1;
    z = (z or oz)
  elseif has({"northeast", "topright", "ne", "tr"}, w) then
    x = (x or ox) + 1;
    y = (y or oy) + 1;
    z = (z or oz)
  elseif has({"southeast", "bottomright", "se", "br"}, w) then
    x = (x or ox) + 1;
    y = (y or oy) - 1;
    z = (z or oz)
  elseif has({"southwest", "bottomleft", "sw", "bl"}, w) then
    x = (x or ox) - 1;
    y = (y or oy) - 1;
    z = (z or oz)
  elseif has({"up", "u"}, w) then
    x = (x or ox);
    y = (y or oy);
    z = (z or oz) + 1
  elseif has({"down", "d"}, w) then
    x = (x or ox);
    y = (y or oy);
    z = (z or oz) - 1
  end
end
if x then
  set();
  return
end
mmp.echo(
  [[Where do you want to move the room to?
  You can use direct coordinates or relative directions.]]
)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:rlc|room create) (.+)?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Create a link between two rooms</name>
						<script>-- need the current room, but we're lost
if not mmp.currentroom or not mmp.roomexists(mmp.currentroom) then mmp.echo("Don't know where we are at the moment.") return end

-- make sure the dir is valid
local dir = mmp.anytolong(matches[3])
if not dir then mmp.echo(matches[3].." isn't a valid normal exit.") return end

-- if we don't give a room number, then we want to auto-locate an appropriate room nearby.
local otherroom
if matches[2] == "" then
  local w = matches[3]
  local ox, oy, oz, x,y,z = getRoomCoordinates(mmp.currentroom)
  local has = table.contains
  if has({"west", "left", "w", "l"}, w) then
    x = (x or ox) - 1; y = (y or oy); z = (z or oz)
  elseif has({"east", "right", "e", "r"}, w) then
    x = (x or ox) + 1; y = (y or oy); z = (z or oz)
  elseif has({"north", "top", "n", "t"}, w) then
    x = (x or ox); y = (y or oy) + 1; z = (z or oz)
  elseif has({"south", "bottom", "s", "b"}, w) then
    x = (x or ox); y = (y or oy) - 1; z = (z or oz)
  elseif has({"northwest", "topleft", "nw", "tl"}, w) then
    x = (x or ox) - 1; y = (y or oy) + 1; z = (z or oz)
  elseif has({"northeast", "topright", "ne", "tr"}, w) then
    x = (x or ox) + 1; y = (y or oy) + 1; z = (z or oz)
  elseif has({"southeast", "bottomright", "se", "br"}, w) then
    x = (x or ox) + 1; y = (y or oy) - 1; z = (z or oz)
  elseif has({"southwest", "bottomleft", "sw", "bl"}, w) then
    x = (x or ox) - 1; y = (y or oy) - 1; z = (z or oz)
  elseif has({"up", "u"}, w) then
    x = (x or ox); y = (y or oy); z = (z or oz) + 1
  elseif has({"down", "d"}, w) then
    x = (x or ox); y = (y or oy); z = (z or oz) - 1
  end

  local carea = getRoomArea(mmp.currentroom)
  if not carea then mmp.echo("Don't know what area are we in.") return end

  otherroom = select(2, next(getRoomsByPosition(carea,x,y,z)))

  if not otherroom then
    mmp.echo("There isn't a room to the "..w.." that I see - try with an exact room id.") return
  end

else
  if not mmp.roomexists(matches[2]) then -- check that an explicit other room ID is valid
    mmp.echo("A room with id "..matches[2].. " doesn't exist.") return
  else
    otherroom = tonumber(matches[2])
  end
end

if setExit(mmp.currentroom, otherroom, matches[3]) then
  if not matches[4] then setExit(otherroom, mmp.currentroom, mmp.ranytolong(matches[3])) end

  mmp.echo(string.format("Linked %s (%d) to %s (%d) via a %s%s exit.",
    (getRoomName(mmp.currentroom) ~= "" and getRoomName(mmp.currentroom) or "''"), mmp.currentroom, (getRoomName(otherroom) ~= "" and getRoomName(otherroom) or "''"), otherroom, (matches[4] and "one-way " or ''), matches[3]))
else
  mmp.echo("Couldn't create an exit.")
end
centerview(mmp.currentroom)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:rlk|room link) ?(\d+)? (\w+)( one)?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Delete a room</name>
						<script>-- want the current room, but we're lost
if not matches[2] and (not mmp.currentroom or not mmp.roomexists(mmp.currentroom)) then mmp.echo("Don't know where we are at the moment.") return end

-- want another room, but it doesn't exist
if matches[2] and tonumber(matches[2]) and not mmp.roomexists(matches[2]) then mmp.echo("v"..matches[2].." doesn't exist.") return end

-- or a relative one
if matches[2] and not tonumber(matches[2]) and not mmp.relativeroom(mmp.currentroom, matches[2]) then mmp.echo("There is no room "..matches[2].. " of us.") return end

local rid = (not matches[2] and mmp.currentroom or (tonumber(matches[2]) or mmp.relativeroom(mmp.currentroom, matches[2])))

local n = getRoomName(rid)
deleteRoom(rid)
mmp.echo(string.format("Deleted the %s (%d) room.\n", (n ~= "" and n or "''"), rid))
centerview(mmp.currentroom)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:rld|room delete) ?(\w+)?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Delete a link</name>
						<script>-- need the current room, but we're lost
if not mmp.currentroom or not mmp.roomexists(mmp.currentroom) then mmp.echo("Don't know where we are at the moment.") return end

-- make sure the dir is valid
local dir = mmp.anytolong(matches[2])
if not dir then mmp.echo(matches[2].." isn't a valid normal exit.") return end

-- gone already?
if not getRoomExits(mmp.currentroom)[dir] then mmp.echo(dir.." link doesn't exist already.") end

-- locate the room on the other end, so we can unlink it from there as well if necessary
local otherroom
if getRoomExits(getRoomExits(mmp.currentroom)[dir])[mmp.ranytolong(dir)] then
  otherroom = getRoomExits(mmp.currentroom)[dir]
end

if setExit(mmp.currentroom, -1, dir) then
  if otherroom then
    if setExit(otherroom, -1, mmp.ranytolong(dir)) then
      mmp.echo(string.format("Deleted the %s exit from %s (%d).",
        dir, getRoomName(mmp.currentroom), mmp.currentroom))
     else mmp.echo("Couldn't delete the incoming exit.") end
  else
    mmp.echo(string.format("Deleted the one-way %s exit from %s (%d).",
      dir, getRoomName(mmp.currentroom), mmp.currentroom))
  end
else
  mmp.echo("Couldn't delete the outgoing exit.")
end
centerview(mmp.currentroom)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:urlk|room unlink) (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Move room to another area</name>
						<script>mmp.roomArea(matches[2], matches[3])</script>
						<command></command>
						<packageName></packageName>
						<regex>^room area (?:v(\d+) )?(.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Set a room character</name>
						<script>local room = matches[3] or mmp.currentroom
room = tonumber(room) or mmp.relativeroom(mmp.currentroom, room)
if not room or not mmp.roomexists(room) then
  mmp.echo("Sorry - which room do you want to put this character in? I don't know where you are at the moment, if you want to do the current room.")
  return
end

local char = matches[2]

if char == "clear" then
  setRoomChar(room, ' ')
  mmp.echo("Cleared the character from "..room.." ("..getRoomName(room)..")")
else
  setRoomChar(room, char)
  mmp.echo("Set the "..char:sub(1,1).." character on "..room.." ("..getRoomName(room)..")")
end
centerview(mmp.currentroom)</script>
						<command></command>
						<packageName></packageName>
						<regex>^rcc ([^ ]+)(?: (\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Set room weight</name>
						<script>local weight = tonumber(matches[3]), room
if matches[2] == '' then room = mmp.currentroom
else
  room = tonumber(matches[2]) or mmp.relativeroom(mmp.currentroom, matches[2])
end

if not room or not mmp.roomexists(room) then
  mmp.echo("Sorry - which room do you want to set the weight on? I don't know where you are at the moment, if you want to do the current room.")
  return
end

if not weight then
  mmp.echo("What weight do you want to set on #"..room.."?")
end

local oldweight = getRoomWeight(room)
setRoomWeight(room, weight)

if weight &gt; oldweight then
  mmp.echo("Increased the room weight on #"..room.." ("..getRoomName(room)..") by "..(weight-oldweight).." to "..weight.." - making it less desirable to travel through.")
elseif weight &lt; oldweight then
  mmp.echo("Decreased the room weight on #"..room.." ("..getRoomName(room)..") by "..(oldweight-weight).." to "..weight.." - making it more desirable to travel through.")
else
  mmp.echo("The room weight on #"..room.." ("..getRoomName(room)..") is already "..weight..".")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^rw(?: (\w+))? (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Set exit weight</name>
						<script>local room = (matches[2] ~= "" and tonumber(matches[2]) or mmp.currentroom)

local weight, exit = tonumber(matches[3]), matches[4]

if not roomExists(room) then mmp.echo("Room "..room.." doesn't exist. It has to before we can set weights on exits.") return end

setExitWeight(room, exit, weight)

mmp.echo(string.format("Set the weight on the %d room going %s to %s. If it's a two-way exit, please set the reverse exit as well.", room, exit, weight))</script>
						<command></command>
						<packageName></packageName>
						<regex>^rwe(?: (\d+))? (\d+) (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Add/delete doors</name>
						<script>local room = (matches[2] ~= "" and tonumber(matches[2]) or mmp.currentroom)

local direction, status = matches[3], matches[4]

if not roomExists(room) then mmp.echo("Room "..room.." doesn't exist. It has to before we can make doors in it.") return end

local validdirs = {'e', 's', 'w', 'n', 'ne', 'se', 'sw', 'nw', 'in', 'out', 'up', 'down'}

if not table.contains(validdirs, direction) then
  mmp.echo("Can't make a door in the '"..direction.."' direction - available choices are:\n  "..table.concat(validdirs, ', '))
  return
end

local statusnum

if status == "" or status == "open" or status == "o" then
  statusnum = 1
elseif status == "closed" or status ==  "c" then
  statusnum = 2
elseif status == "locked" or status ==  "l" then
  statusnum = 3
elseif status == "clear" or status == "gone" then
  statusnum = 0
end

if not statusnum then mmp.echo("Unrecognized option - a door can be open, closed, locked or gone.") return end

setDoor(room, direction, statusnum)

if statusnum == 0 then
  mmp.echo("OK, door removed.")
else
  mmp.echo("OK, door added/adjusted.")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^rd(?: (\d+))? (\w+)(?: (\w+))?$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>-- (area functions)</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Create an area</name>
						<script>local t = getAreaTable(); local tr = {}; for k,v in pairs(t) do tr[v] = k end
local newid = table.maxn(tr) + 1

setAreaName( newid, matches[2] )
mmp.echo(string.format("Created new area %s (%d)", matches[2], newid))
centerview(mmp.currentroom)
raiseEvent("mmp areas changed")</script>
						<command></command>
						<packageName></packageName>
						<regex>^area add (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Delete an area</name>
						<script>mmp.deleteArea(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^area delete (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Cancel area deletion</name>
						<script>if not mmp.deletingarea then mmp.echo("I wasn't deleting any areas already.") return end

local areaname = mmp.deletingarea.areaname
mmp.deletingarea = nil

mmp.echo("Stopped deleting rooms in the '"..areaname.."'. The area is partially missing its rooms now, you'll want to restart the process to finish it.")</script>
						<command></command>
						<packageName></packageName>
						<regex>^cancel area deletion$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Rename an area</name>
						<script>mmp.renameArea(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^area rename (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>List continents</name>
						<script>local continents = mmp.getcontinents()

if not next(continents) then mmp.echo("No continents known.")
else
  for continent, areadata in pairs(continents) do
    mmp.echo(continent.." continent:")

    for _, areaid in ipairs(areadata) do
      cecho("  "..getRoomAreaName(areaid).."\n")
    end
  end
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:acl|area continents)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Add area to continent</name>
						<script>-- aca continent [optional area]

local continent = matches[2]:title()
local area
if not matches[3] then area = getRoomArea(mmp.currentroom)
elseif tonumber(matches[3]) then
  area = tonumber(matches[3])
  if getRoomAreaName(area) == -1 then area = nil end
else
  local areas = getAreaTable()

  for karea, id in pairs(areas) do if karea:lower():find(matches[3]:lower(), 1, true) then area = id break end end
end

if not area then mmp.echo(matches[3].." isn't a known area. Which one do you want to set?") return end

local res, error = mmp.addcontinent(area, continent)
if res then
  mmp.echo("Recorded that "..getRoomAreaName(area).." is on the "..continent.." continent.")
else
  mmp.echo(error)
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^aca ([\w']+)(?: (.+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>remove area from continent</name>
						<script>-- acr continent [optional area]

local continent = matches[2]:title()
local area
if not matches[3] then area = getRoomArea(mmp.currentroom)
elseif tonumber(matches[3]) then
  area = tonumber(matches[3])
  if getRoomAreaName(area) == -1 then area = nil end
else
  local areas = getAreaTable()

  for karea, id in pairs(areas) do if karea:lower():find(matches[3]:lower(), 1, true) then area = id break end end
end

if not area then mmp.echo(matches[3].." isn't a known area. Which one do you want to set?") return end

local res, error = mmp.removecontinent(area, continent)
if res then
  mmp.echo("Recorded that "..getRoomAreaName(area).." is not on the "..continent.." continent.")
else
  mmp.echo(error)
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^acr ([\w']+)(?: (.+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Add/remove a ferry room</name>
						<script>local room = tonumber(matches[2])

if matches[3] == "add" then
  if mmp.ferry_rooms[room] then
    mmp.echo("Ferry room #"..room.." is already recorded as such.") return
  else
    mmp.ferry_rooms[room] = true; mmp.echo("Added #"..room.." to be a ferry room.")
  end
else
  if not mmp.ferry_rooms[room] then
    mmp.echo("Room #"..room.." isn't a ferry one already.") return
  else
    mmp.ferry_rooms[room] = nil; mmp.echo("Removed #"..room.." from being a ferry room.")
  end
end

local keys = {}; for k,_ in pairs(mmp.ferry_rooms) do keys[#keys+1] = k end

setRoomUserData(1, "ferry rooms", yajl.to_string(keys))</script>
						<command></command>
						<packageName></packageName>
						<regex>^fr (\d+) (add|remove)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Show ferry rooms</name>
						<script>mmp.echo("Ferry rooms available:")
if not next(mmp.ferry_rooms) then  mmp.echo("(none)") return end

for k, _ in pairs(mmp.ferry_rooms) do
  mmp.echo(string.format("  (%d) - %s\n", k, getRoomName(k)))
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^fr show$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Weight ferry exits</name>
						<script>local ferryCommands = {
  ["buy passage to"] = {"achaea"},
  ["takeoff to"] = {"starmourn"},
  ["station transfer to"] = {"starmourn"}
}
local c = 0
local weight = 200
for area in pairs(mmp.areatabler) do
  local rooms = getAreaRooms(area) or {}
  for i = 0, #rooms do
    local exits = getSpecialExits(rooms[i] or 0)
    if exits and next(exits) then
      for exit, cmd in pairs(exits) do
        if type(cmd) == "table" then
          cmd = next(cmd)
        end
        local lowerCommand = cmd:lower()
        local found = false
        for ferryCommand, games in pairs(ferryCommands) do
          if table.contains(games, mmp.game) and lowerCommand:find(ferryCommand, 1, true) then
            found = true
            break
          end
        end
        if found then
          setExitWeight(rooms[i], cmd, weight)
          mmp.echo(
            "Weighted " .. cmd .. " going to " .. rooms[i] .. " (" .. getRoomName(rooms[i]) .. ")."
          )
          c = c + 1
        end
      end
    end
  end
end
mmp.echo(
  string.format(
    "%s ferry exits weighted to %s (so we don't take them over too short distances).", c, weight
  )
)</script>
						<command></command>
						<packageName></packageName>
						<regex>^weight ferry exits$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>-- (Map feature functions)</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Create map feature</name>
						<script>mmp.createMapFeature(matches[2]:trim(), (matches[3] and matches[3]:trim()))</script>
						<command></command>
						<packageName></packageName>
						<regex>^feature create (.+?)(?: char (.+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Add map feature to room</name>
						<script>mmp.roomCreateMapFeature(matches[3], matches[2] == "" and mmp.currentroom or tonumber(matches[2]))</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:room create feature|rcf) (?:v(\d+) )?(.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Delete map feature from room</name>
						<script>mmp.roomDeleteMapFeature(matches[3], matches[2] == "" and mmp.currentroom or tonumber(matches[2]))</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:room delete feature|rdf) (?:v(\d+) )?(.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Delete map feature</name>
						<script>mmp.deleteMapFeature(matches[2]:trim())</script>
						<command></command>
						<packageName></packageName>
						<regex>^feature delete (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>migrate features</name>
						<script>local translation
if mmp.game == "starmourn" then
  translation =
  {
    ["@"] = "landing dock",
    ["C"] = "cloning",
    ["R"] = "repair",
    ["$"] = "denizen shop",
    ["I"] = "insurance office",
    ["T"] = "transport",
    ["J"] = "junk",
    ["M"] = "mail",
    ["L"] = "lift",
    ["P"] = "ptp",
    ["TT"] = "trade terminal",
  }
else
  mmp.echo("Sorry, don't know which room character maps to which map feature for your game. Please contact us at https://discord.gg/PPUNnc3 to get this sorted out.")
	return
end
mmp.echo("Migrating room characters to map features...")
for char, feature in pairs(translation) do
  mmp.createMapFeature(feature, char)
end
for key in pairs(getRooms()) do
  local char = getRoomChar(key)
  if char ~= "" then
    if translation[char] then
      if not mmp.roomCreateMapFeature(translation[char], key) then
			  mmp.echo("An error occurred when migrating room characters, see messages above for details. Migration incomplete!")
			  return
			end
    end
  end
end
mmp.echo("Migration done.")</script>
						<command></command>
						<packageName></packageName>
						<regex>^feature migrate$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>-- (dangerous functions)</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Clear the map completely</name>
						<script>if not mmp.map_delete_warning then
  mmp.echo("Are you really, really, really sure you want to delete all of the map to go to a blank state? Do the command again if you're certain.")
  mmp.map_delete_warning = true
  return
end

mmp.echo("Okay, deleting...")

tempTimer(.1, function()
  for name, id in pairs(getAreaTable()) do
    deleteArea(tonumber(id))
  end

  mmp.echo("Deleted everything. It's all gone.")
  mmp.map_delete_warning = nil
  centerview(1)
end)</script>
						<command></command>
						<packageName></packageName>
						<regex>^map delete all$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Delete shop stockroom exits</name>
						<script>mmp.echo("Deleting all known stockroom exits (rooms with $ and a down exit)")
local c = 0

for area, areaname in pairs(mmp.areatabler) do
  local rooms = getAreaRooms(area) or {}
  for i = 0, #rooms do
    if rooms[i] then
      local char = getRoomChar(rooms[i])
      if char == '$' then
        local exits = getRoomExits(rooms[i]) -- retrieve after $, more efficient

        if exits.down then
          setExit(rooms[i], -1, 'down')
          mmp.echo(string.format("Deleted the stockroom exit at %s (#%d in %s)", getRoomName(rooms[i]), rooms[i], mmp.areatabler[getRoomArea(rooms[i])]))
          c = c + 1
        end
      end
    end

  end
end

mmp.echo(string.format("Deleted %s known stockroom exit%s.", c, (c ~= 1 and 's' or '')))
centerview(mmp.currentroom)</script>
						<command></command>
						<packageName></packageName>
						<regex>^delete known stockrooms$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Clear continent data</name>
						<script>if not mmp.wipingcontinents then
  mmp.wipingcontinents = true
  mmp.echo("Are you sure you want to wipe all continent data? If yes, do this again.")
  return
end
mmp.wipingcontinents = nil

local toserialize = yajl.to_string{}
setRoomUserData(1, "areaContinents", toserialize)
mmp.echo("Wiped all continents data.")</script>
						<command></command>
						<packageName></packageName>
						<regex>^clear continent data$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Delete suffixed periods</name>
						<script>mmp.echo("Deleting removing all periods at the end of room names...")
local c = 0

for area, areaname in pairs(mmp.areatabler) do
  local rooms = getAreaRooms(area) or {}
  for i = 0, #rooms do
    local name = getRoomName(rooms[i] or 0)
    if string.ends(name, ".") then
      name = string.sub(name, 1, (#name-1))
      setRoomName(rooms[i], name)
      mmp.echo(string.format("Patched up room #%s - '%s'", rooms[i], name))
      c = c + 1
    end
  end
end

mmp.echo(string.format("Fixed up %s room%s.", c, (c ~= 1 and 's' or '')))</script>
						<command></command>
						<packageName></packageName>
						<regex>^delete suffixed periods$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Find single exits</name>
						<script>local c = 0

local getAreaRooms, getRoomExits, contains, echoLink, getRoomEnv, envidsr =
  getAreaRooms, getRoomExits, table.contains, echoLink, getRoomEnv, mmp.envidsr

for area, id in pairs(getAreaTable()) do
  for _, roomid in pairs(getAreaRooms(id)) do
    local exits = getRoomExits(roomid)
    for dir, otherroom in pairs(exits) do
      local otherexits = getRoomExits(otherroom) or {}
      if not contains(otherexits, roomid) then
        echoLink(string.format("%s -&gt; %s is oneway (%s-&gt;%s type)\n", roomid, otherroom,
          (envidsr and envidsr[getRoomEnv(roomid)] or "?"),
          (envidsr and envidsr[getRoomEnv(otherroom)] or "?")),
        [[mmp.gotoRoom(]]..roomid..[[)]], "Click to go to the start room "..roomid, true)
        c = c + 1
     end
    end
  end
end

mmp.echo(string.format("Found %s oneways.%s", c, (c &gt; 10 and " Have fun. Click on lines to go to the rooms." or "")))</script>
						<command></command>
						<packageName></packageName>
						<regex>^find single exits$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Show char marks</name>
						<script>local c = 0
local m = {}
local areas = getAreaTable()
local show_area = table.size(areas) &gt; 1 and true or false

for area, id in pairs(areas) do
  for _, roomid in pairs(getAreaRooms(id)) do
    local c = getRoomChar(roomid)
    if c ~= '' and c ~= ' ' then
      m[c] = m[c] or {}
      m[c][#m[c]+1] = roomid
    end
  end
end

if not next(m) then mmp.echo("This map has no char marks on it. Do mc on and rcc &lt;mark&gt; in a room to add them!") return end

for letter, rooms in pairs(m) do
  table.sort(rooms)
  mmp.echo("Rooms with the &lt;"..mmp.settings.echocolour.."&gt;"..letter.."&lt;reset&gt; character on them:")
  for i = 1, #rooms do
    if not show_area then
      cecho(string.format("  &lt;sea_green&gt;%-5s&lt;reset&gt; %s\n", rooms[i], getRoomName(rooms[i])))
    else
      cecho(string.format("  &lt;sea_green&gt;%-5s&lt;reset&gt; %-35s &lt;dim_grey&gt;(in&lt;reset&gt; %s&lt;dim_grey&gt;)\n", rooms[i], getRoomName(rooms[i]), mmp.areatabler[getRoomArea(rooms[i])]))
    end
  end
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^show char marks$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Delete all special exits across a map</name>
						<script>mmp.delSpecialExits(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^spe delete all(?: (.+))?$</regex>
					</Alias>
				</AliasGroup>
				<Alias isActive="yes" isFolder="no">
					<name>Toggle mapping mode</name>
					<script>if (matches[2] and matches[2] == "on") or (not matches[2] and not mmp.editing) then
  mmp.editing = true
  enableAlias("mm Mapping")

  mmp_regenerate_areas()
  mmp.highlight_unfinished_rooms()

  mmp.echo("Mapping mode enabled. Happy mapping!")
elseif (matches[2] and matches[2] == "off") or (not matches[2] and mmp.editing) then
  mmp.editing = false
  disableAlias("mm Mapping")
  mmp.echo("Mapping mode disabled.")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^(?:mc|map create) ?(on|off)?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>List map features</name>
					<script>mmp.listMapFeatures()</script>
					<command></command>
					<packageName></packageName>
					<regex>^feature list$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Save a map</name>
					<script>local function s(location, format)
  local savednormal, savedjson = "not saved", "not saved"
  if format == "json" then
    savedjson = saveJsonMap(location)
  elseif format == "all" then
    savedjson = saveJsonMap(location)
    savednormal = saveMap(location)
  elseif format == nil or format == "" then
    savednormal = saveMap(location)
  end

  if savednormal == nil then
    mmp.echo("Couldn't save the map :(")
  elseif savednormal == true then
    mmp.echo(location ~= "" and "Map saved." or "Saved the default map.")
  end
  if savedjson == nil then
    mmp.echo("Couldn't save the JSON map :(")
  elseif savedjson == true then
    mmp.echo(location ~= "" and "Map saved in JSON." or "Saved the default map in JSON.")
  end
end

if matches[2] and (matches[2] == "json" or matches[2] == "all") and not saveJsonMap then
  mmp.echo("Your Mudlet can't save maps in JSON, please upgrade first.")
  return
end
if matches[3] and matches[3] == "custom" then
  s(
    invokeFileDialog(false, "Please select the folder to save the map in and hit Open") ..
    "/Mudlet map from " ..
    os.date("%A %d, %b '%y") ..
    ".dat",
    matches[2]
  )
elseif matches[3] then
  s(getMudletHomeDir() .. "/map/" .. matches[3], matches[2])
else
  s("", matches[2])
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^map save(?: (json|all))?(?: (.+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Load a map</name>
					<script>local function s(loc)
  if string.ends(loc, ".json") and not loadJsonMap then
    mmp.echo("Your Mudlet can't load maps in JSON, please upgrade first.")
    return
  end

  local allok = true
  if string.ends(loc, ".json") then
    allok = loadJsonMap(loc)
  else
    allok = loadMap(loc)
  end

  if not allok then
    mmp.echo("Couldn't load the map :(")
  else
    mmp.lockWormholes();
    mmp.lockSewers();
    mmp.lockPebble();
    if mmp.settings.waterwalk then
      mmp.enableWaterWalk()
    else
      mmp.disableWaterWalk()
    end
    if loc ~= "" then
      mmp.echo("Map loaded.")
    else
      mmp.echo("Loaded the default map.")
    end
    raiseEvent("mmapper updated map")
  end
end

if matches[2] and matches[2] == "custom" then
  s(invokeFileDialog(true, "Please select the map file and click Open to load it"))
elseif matches[2] then
  s(getMudletHomeDir() .. "/map/" .. matches[2])
else
  s("")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^map load(?: (.+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Get dirs</name>
					<script>if not matches[2] and not matches[3] then
  mmp.echo("Where do you want to showpath to?")
elseif matches[2] and not matches[3] then
  mmp.echoPath(mmp.currentroom, matches[2])
else
  mmp.echoPath(matches[2], matches[3])
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^showpath(?: (\d+))?(?: (\d+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Check wholist</name>
					<script>enableTrigger("Parse wholist")
send("who b")
tempTimer(10, [[disableTrigger'Parse wholist']])</script>
					<command></command>
					<packageName></packageName>
					<regex>^who b$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Add Room Mark</name>
					<script>local tmp = getRoomUserData(1, "gotoMapping")
local maptable = {}

if tmp ~= "" then
  maptable = yajl.to_value(tmp)
end

local location, markname
if not matches[3] then
  markname = matches[2]
  location = mmp.currentroom
elseif tonumber(matches[2]) then
  location = matches[2]; markname = matches[3]
else
  location = matches[3]; markname = matches[2]
end

-- can't allow mark name to ne a number - yajl then generates a giant table of null's
if tonumber(markname) then
  mmp.echo("The mark name can't be a number.") return
end

maptable[markname] = location
local tmp2 = yajl.to_string(maptable)

if not mmp.roomexists(1) then
  addRoom(1)
end

setRoomUserData(1, "gotoMapping", tmp2)
mmp.echo(string.format("Room mark for '%s' set to room %s.", markname, location))</script>
					<command></command>
					<packageName></packageName>
					<regex>^room mark (\w+)(?: (\w+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Remove Room Mark</name>
					<script>local tmp= getRoomUserData(1, "gotoMapping")
if tmp~="" then
  local maptable=yajl.to_value(tmp)
  if not maptable[matches[2]] then mmp.echo("Don't have such a mark in the db.") return end

  maptable[matches[2]]=nil
  local tmp2=yajl.to_string(maptable)
  setRoomUserData(1, "gotoMapping", tmp2)
  mmp.echo("Removed the "..matches[2].." mark.")
else
  mmp.echo("We don't have any marks stored anyway.")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^room unmark (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Display Room Marks</name>
					<script>local tmp= getRoomUserData(1, "gotoMapping")
if tmp~="" then
	local maptable = yajl.to_value(tmp) or {}
    local sortedkeys = {}
    for k in pairs(maptable) do sortedkeys[#sortedkeys+1] = k end
    table.sort(sortedkeys)

    mmp.echo("Known marks in this map:")
    if next(maptable) then
      for i = 1, #sortedkeys do echo(string.format("  %-21s  %s\n", tostring(sortedkeys[i]), tostring(maptable[sortedkeys[i]]))) end
    else
      echo("  (none)\n")
    end
else
	mmp.echo("No marks are recorded in this map.")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^room marks$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Toggle map sizes</name>
					<script>local size = matches[2]

if size == "biggest" then
  mapper = Geyser.Mapper:new({
    name = "mapper",
    x = 0, y = 0,
    width = "100%", height = "97%"
  })
  mmp.echo("Map size set to pretty damn big.")

elseif size == "small" then
  mapper = Geyser.Mapper:new({
    x = "70%", y = 0,
    width = "28%", height = "50%"
  })
  mmp.echo("Map size set to comfortable.")

elseif size == "big" then
  local window_width, window_height = getMainWindowSize()
  local used_width = getMainConsoleWidth()

  local available_space = window_width - used_width

  if matches[3] then available_space = available_space - tonumber(matches[3]) end

  mapper = Geyser.Mapper:new({
    x = available_space*-1, y = 0,
    width = available_space, height = "100%"
  })

  mmp.echo("Set the map size to big - it'll cover all of the space on the right that game text isn't using. You'll want to call this alias again if you resize the window to update.")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^(small|big|biggest)map(?: (\d+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Set debug mode</name>
					<script>if matches[2] == "on" then
  mmp.debug = true
else
  mmp.debug = false
end

mmp.echo("Debug &amp; performance telemetry "..(mmp.debug and "enabled" or "disabled")..".")</script>
					<command></command>
					<packageName></packageName>
					<regex>^(?:mdg|mdebug) (on|off)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>measure getPath()</name>
					<script>mmp = mmp or {}

mmp.getPathPerf = mmp.getPathPerf or createStopWatch()
startStopWatch(mmp.getPathPerf)

local from, to = tonumber(matches[2]), tonumber(matches[3])

getPath(from, to)

mmp.echon = mmp.echon or echo
mmp.echon("a new getPath() from "..from.." to "..to.." took "..stopStopWatch(mmp.getPathPerf).."s. There are "..#speedWalkPath.." rooms to visit in it.")
echo(" ")
echoLink("[unhighlight]", [[
  for room in pairs(mmp.getpathhighlights) do
    unHighlightRoom(room)
  end
]], "Click me to remove highlighting from getpath")

mmp.getpathhighlights = mmp.getpathhighlights or {}

for room in pairs(mmp.getpathhighlights) do
  unHighlightRoom(room)
end

mmp.getpathhighlights = {}

local r,g,b = unpack(color_table.yellow)
local br,bg,bb = unpack(color_table.yellow)
-- add the first room to the speedWalkPath, as we'd like it highlighted as well
table.insert(speedWalkPath, 1, from)
for i = 1, #speedWalkPath do
  local room = speedWalkPath[i]
  highlightRoom(room, r,g,b,br,bg,bb, 1, 255, 255)
  mmp.getpathhighlights[room] = true
end

centerview(from)</script>
					<command></command>
					<packageName></packageName>
					<regex>^getpath (?:from )?(\d+) (?:to )?(\d+)$</regex>
				</Alias>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Game-specific</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Lusternia</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>Lock or unlock pathfinding exits</name>
							<script>mmp.lockpaths(matches[2]:lower()=="lock")</script>
							<command></command>
							<packageName></packageName>
							<regex>(?i)^(lock|unlock) paths$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Link through manse</name>
							<script>local portalRooms = {
gaudiguch="19861",
glomdoring="7747",
celest="6834",
serenwilde="6833",
hallifax="19937",
magnagora="6832",
aetherplex="6831",
}

if mmp.game ~= "lusternia" then return end
matches[2]=matches[2]:lower()
matches[3]=matches[3]:lower()
local manse, city
if portalRooms[matches[2]] then
	city=matches[2]
	manse=matches[3]
elseif portalRooms[matches[3]] then
	city=matches[3]
	manse=matches[2]
else
	mmp.echo("Invalid city")
	return
end
if not gmcp.Room.Info.area:find("(manse)") then
	mmp.echo("You are not in a manse")
else
	if	searchRoom(gmcp.Room.Info.num):sub(0,11)=="searchRoom:" then
		addRoom(gmcp.Room.Info.num)
	end
	if getRoomArea(gmcp.Room.Info.num)==-1 then
		setRoomArea(gmcp.Room.Info.num,addAreaName(manse:title().." Manse"))
	end
	setRoomChar(gmcp.Room.Info.num,"A")
	addSpecialExit(portalRooms[city],gmcp.Room.Info.num,"Portal enter "..manse)
	addSpecialExit(portalRooms["aetherplex"],gmcp.Room.Info.num,"Portal enter "..manse)
	addSpecialExit(gmcp.Room.Info.num,portalRooms["aetherplex"],"portal exit aetherplex")
	addSpecialExit(gmcp.Room.Info.num,portalRooms[city],"portal exit "..city)
	mmp.echo(city:title().." has been linked to the Aetherplex through "..manse:title())
end</script>
							<command></command>
							<packageName></packageName>
							<regex>(?i)^manselink (\w+) (\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Wildnodes toggle</name>
							<script>if mmp.game ~= "lusternia" then return end
mmp.wildnodes(matches[2]:lower()=="on")
mmp.echo("All astral nodes have been "..(matches[2]:lower()=="on" and "" or "un").."linked.")</script>
							<command></command>
							<packageName></packageName>
							<regex>(?i)^nodes (on|off)$</regex>
						</Alias>
					</AliasGroup>
				</AliasGroup>
			</AliasGroup>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>nom (general)</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>Activate Resists</name>
				<script>send("activate fire resistance::activate cold resistance::activate magic resistance::activate electric resistance")</script>
				<command></command>
				<packageName></packageName>
				<regex>^re$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>call ents WM</name>
				<script>send("queue add eqbal whistle mount")</script>
				<command></command>
				<packageName></packageName>
				<regex>^wm$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Run Away</name>
				<script>expandAlias("goto ")</script>
				<command></command>
				<packageName></packageName>
				<regex>^run$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Arrived</name>
				<script>-- send("minerals")</script>
				<command></command>
				<packageName></packageName>
				<regex>^arrived$</regex>
			</Alias>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Eleusis</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Hey</name>
					<script>if matches[2] == "say" then
send("'Lo-da'i")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^(\w+) hey$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Bye</name>
					<script>send("'Laiq tsuura")</script>
					<command></command>
					<packageName></packageName>
					<regex>^bye$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Hello</name>
					<script>send("'Lenhiema boora")</script>
					<command></command>
					<packageName></packageName>
					<regex>^hello$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Goodbye</name>
					<script>send("'Moraia morain")</script>
					<command></command>
					<packageName></packageName>
					<regex>^goodbye$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>tactical chat</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>My Room</name>
					<script>--roomnum = true
--send("roomnum")

send("reply I'm at: #" .. gmcp.Room.Info.num .. " " .. gmcp.Room.Info.name .. ". (" .. gmcp.Room.Info.area .. ")")</script>
					<command></command>
					<packageName></packageName>
					<regex>^room$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Raid On/Off</name>
					<script>if matches[2] == "on" then
	raid = true
	raidwindow = "true"
	send("pt Activated")
	printTargetWindow()
elseif matches[2] == "off" then
	raid = false
	raidwindow = "false"
	send("pt not active")
	printTargetWindow()
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^raid (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Guards On/Off</name>
					<script>if matches[2] == "on" then
	guards = true
	guardswindow = "true"
	send("pt Reporting on")
	printTargetWindow()
elseif matches[2] == "off" then
	guards = false
	guardswindow = "false"
	printTargetWindow()
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^guards (\w+)$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Target</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Who Here</name>
					<script>send("ql::who here", false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^wh$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Farsee</name>
					<script>send("farsee "..matches[2], false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^far (.*)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Enemy</name>
					<script>send("enemy "..target.name)</script>
					<command></command>
					<packageName></packageName>
					<regex>^en$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Who</name>
					<script>send("who "..target.name, false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^wo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Target</name>
					<script>send("enemy " .. matches[2])
cycle = 0
improved_serpent = false
target.burrowed = {}
heartbeat = 0
trace = ""
-- logograph = ""
target.plagues = {}
epitaphcount = 0
epitaphdelay = 0
epitaph = ""
swarmcommand = ""
plague = ""
exposed = false
target.shielder = false
target.evader = false
target.solostrat = true
target.teamstrat = false
target.reflection = false
throwToxin = ""
target.kill = false
target.sketchlink = true
target.hitlimb = ""
target.juggle = false
target.handaxe = false
target.fitter = false
target.diagnose = false
target.bleedcount = "0"
target.limbparry = "none"
target.name = string.title(matches[2])
target.afflictions = {}
target.aura = true
target.shield = false
target.tree = true
target.purge = true
target.focus = true
target.fenugreek = true
setTarget(matches[2])
target.mentalaffs = {}
target.curseward = true
purgeblood = false
tree = false
bardtree = false
loshre = false
nairat = false
mannaz = false
kena = false
sowulu = false
pithakhan = false
nauthiz = false
target.peace = false
target.confounded = false
target.obstruct = false
target.marked = false
markedwindow = "none"
target.speed = true
target.marduk = false
steal = true
rightarmbruise = false
leftarmbruise = false
rightlegbruise = false
leftlegbruise = false
physical_affs = 0
mental_affs = 0
spark = 0
incinerate = false
target.hierophant = false
target.infirmity = 0
kelpinfirmity = false
nightshadeinfirmity = false
mandrakeinfirmity = false
wormwoodinfirmity = false
orphineinfirmity = false
timewarptime = false
limbcountrightarm = 0
limbcountleftarm = 0
limbcountrightleg = 0
limbcountleftleg = 0
limbcounthead = 0

revelation = false
dissonance = false
lullaby = false
bedazzlement = false
yoth = false

separator = "::"

whirl = whirl or 1
whirl_timer = whirl_timer or ""
hound = 181341
treant = 184732
flail = 228982
seeds = seeds or 0
shroud = shroud or "bile"
thornroot = thornroot or {}

thornroot.on = thornroot.on or 0
thornroot.tick = thornroot.tick or 0
thornroot.timer = thornroot.timer or 0
thornroot.time = thornroot.time or 0

thornroot.show_timer = thornroot.show_timer or true

defiler_blood = {
	93648,
}

treant_attacking = treant_attacking or ""

splintered = splintered or {
	beech = false,
	birch = false,
	blackthorn = false,
	elder = false,
	hazel = false,
	honeysuckle = false,
	hawthorn = false,
	willow = false,
}

splintered_timers = splintered_timers or {
	beech = 0,
	birch = 0,
	blackthorn = 0,
	elder = 0,
	hazel = 0,
	honeysuckle = 0,
	hawthorn = 0,
	willow = 0,
}

defiler_toxins = {
	"sunallergy",
	"nausea",
	"numbness",
	"metrazol",
	"hemotoxin",
} 

apparition = apparition or {
	timer = "",
	room = "",
	vnum = "",
}


--send("pt Target: " .. target.name, false)



cecho("&lt;cyan&gt; Target Changed to "..target.name)

if danaeustarget == matches[2] then
	danaeustarget = "none"
else
return
end
</script>
					<command></command>
					<packageName></packageName>
					<regex>^t (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Reset</name>
					<script>target.afflictions = {}
target.mentalaffs = {}
target.aura = true
target.instilled = false
target.instilled2 = false
target.instilled3 = false
target.tree = true
target.purge = true
mental_affs = 0
physical_affs = 0
target.curseward = true
purgeblood = false
tree = false
bardtree = false
loshre = false
nairat = false
kena = false
mannaz = false
sowulu = false
pithakhan = false
nauthiz = false
target.peace = false
target.confounded = false
target.obstruct = false
target.marked = false
markedwindow = "none"
steal = true
spark = 0
timewarptime = false
limbcountrightarm = 0
limbcountleftarm = 0
limbcountrightleg = 0
limbcountleftleg = 0
limbcounthead = 0
wolverinesurge = false
lynxsurge = false
leopardsurge = false
frostheart = false
revelation = false
dissonance = false
lullaby = false
bedazzlement = false
yoth = false
sketchlink = true
ta = false
myried = false
combat_shield = false</script>
					<command></command>
					<packageName></packageName>
					<regex>^reset$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Farsee Target</name>
					<script>send("farsee "..target.name, false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^fr$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Limb Reset</name>
					<script>limbcountrightarm = 0
limbcountleftarm = 0
limbcountrightleg = 0
limbcountleftleg = 0
limbcounthead = 0
printTargetWindow()</script>
					<command></command>
					<packageName></packageName>
					<regex>^lreset$</regex>
				</Alias>
			</AliasGroup>
			<Alias isActive="yes" isFolder="no">
				<name>Tumble Anywhere</name>
				<script>for k, v in pairs (gmcp.Room.Info.exits) do
  send("tumble " .. k)
  break
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^tum$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>quicklook with a space</name>
				<script>cecho("\n")
send("ql")</script>
				<command></command>
				<packageName></packageName>
				<regex>^ql$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>nom (aff tracker)</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>nom (hunting)</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Bashing</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>bash mapping</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>bash map</name>
						<script>if (not table.contains(bashmap, gmcp.Room.Info.num)) then
	table.insert(bashmap, gmcp.Room.Info.num)
	cecho("\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;ROOM ADDED TO BASHING MAP&lt;OrangeRed&gt;][][][][][]")
end
send("ih")</script>
						<command></command>
						<packageName></packageName>
						<regex>^addbashmap$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>show bash map</name>
						<script>for k,v in pairs(bashmap) do
 echo(v ..", ")  
end
bashmap = {}</script>
						<command></command>
						<packageName></packageName>
						<regex>^showbashmap$</regex>
					</Alias>
				</AliasGroup>
				<Alias isActive="yes" isFolder="no">
					<name>Bash Area</name>
					<script>if (not matches[2]) then
	if (user.Bashing) then
		user.Bashing = false
		user.Balance.Bashing = true
		user.Slain = false
		user.Gold = false
		disableTrigger("Bash Diag")
		expandAlias("calccrits")
		sysEcho("Bashing Off")
    hunting = false
	else
		user.Bashing = true
		user.Balance.Bashing = true
		user.Slain = false
		user.Gold = false
		enableTrigger("Bash Diag")
		sysEcho("Bashing On")
		expandAlias("clearcrits")
    hunting = true
	end
end

if (matches[2] == "Mog") then
  shieldarea = false
  hunting = true
	bashArea = Moghedu
	nextbashArea = Moghedu
	bashRoom = 1
	user.Bashing = true
	enableTrigger("Bash Diag")
	send(" ")
	user.Balance.bashing = true
elseif (matches[2] == "Azdun") then
  shieldarea = false
  hunting = true
	bashArea = Azdun
	nextbashArea = Azdun
	bashRoom = 1
	user.Bashing = true
	enableTrigger("Bash Diag")
	send(" ")
elseif (matches[2] == "Grukai") then
  shieldarea = true
  hunting = true
	bashArea = Grukai
	nextbashArea = Grukai
	bashroom = 1
	user.Bashing = true
		enableTrigger("Bash Diag")
	send(" ")
elseif (matches[2] == "Sirocco") then
  shieldarea = false
  hunting = true
	bashArea = Sirocco
	nextbashArea = Sirocco
	bashroom = 1
	user.Bashing = true
		enableTrigger("Bash Diag")
	send(" ")
elseif (matches[2] == "Ulsyndar") then
  shieldarea = false
  hunting = true
	bashArea = Ulsyndar
	nextbashArea = Ulsyndar
	bashroom = 1
	user.Bashing = true
		enableTrigger("Bash Diag")
	send(" ")
elseif (matches[2] == "Iskadar") then
  shieldarea = false
  hunting = true
	bashArea = Iskadar
	nextbashArea = Iskadar
	bashroom = 1
	user.Bashing = true
		enableTrigger("Bash Diag")
	send(" ")
elseif (matches[2] == "Mirror") then
  shieldarea = true
  hunting = true
	bashArea = Mirror
	nextbashArea = Mirror
	bashroom = 1
	user.Bashing = true
		enableTrigger("Bash Diag")
	send(" ")
elseif (matches[2] == "Dralhu") then
  shieldarea = false
  hunting = true
	bashArea = Dralhu
	nextbashArea = Dralhu
	bashroom = 1
	user.Bashing = true
		enableTrigger("Bash Diag")
	send(" ")
elseif (matches[2] == "Mourning") then
  shieldarea = false
  hunting = true
	bashArea = Mourning
	nextbashArea = Mourning
	bashroom = 1
	user.Bashing = true
		enableTrigger("Bash Diag")
	send(" ")
elseif (matches[2] == "Colchis") then
  shieldarea = false
  hunting = true
	bashArea = Colchis
	nextbashArea = Colchis
	bashroom = 1
	user.Bashing = true
		enableTrigger("Bash Diag")
	send(" ")

elseif (matches[2] == "none") then
  shieldarea = true
  hunting = true
	bashArea = None
	nextbashArea = None
	bashroom = 1
	user.Bashing = false
	send(" ")
else
	sysEcho("No such area!")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^bash(?: (\w+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Follow Bash</name>
					<script>if (user.followBashing) then
	user.followBashing = false
	user.FirstHit = false
	sysEcho("Follow Bashing Off")
	disableTrigger("Bash Diag")
elseif (not user.followBashing) then
	user.followBashing = true
	--user.FirstHit = true
	sysEcho("Follow Bashing On")
	enableTrigger("Bash Diag")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^fbash$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Hunting Number</name>
					<script>huntingnumber = matches[2]
sysEcho("Hunt Number = " .. matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^huntnum (\d+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Clear Gold</name>
					<script>goldtracked = 0
cecho("&lt;red&gt;[&lt;gold&gt;Gold&lt;yellow&gt;:: &lt;gold&gt;Gold &lt;red&gt;Reset]")</script>
					<command></command>
					<packageName></packageName>
					<regex>^cleargold$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>stop bashing</name>
					<script>		user.Bashing = false
		user.Balance.Bashing = true
		user.Slain = false
		user.Gold = false
		disableTrigger("Bash Diag")
		expandAlias("calccrits")
		sysEcho("Bashing Off")
    hunting = false
    expandAlias("goto 33195")</script>
					<command></command>
					<packageName></packageName>
					<regex>^bashoff$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Bash Attack</name>
					<script>expandAlias("kill")</script>
					<command></command>
					<packageName></packageName>
					<regex>^aa$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Hunt Pause Off</name>
					<script>offense_paused = false
pre_offense_pause = false
combat_shield = false
expandAlias("ql")
expandAlias("ts off")
expandAlias("kill")</script>
					<command></command>
					<packageName></packageName>
					<regex>huntpauseoff</regex>
				</Alias>
			</AliasGroup>
			<Alias isActive="yes" isFolder="no">
				<name>bash function</name>
				<script>huntingCheck()</script>
				<command></command>
				<packageName></packageName>
				<regex>^bf$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>walk fast</name>
				<script>mmp.customwalkdelay(0)</script>
				<command></command>
				<packageName></packageName>
				<regex>^fastwalk$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>nom (harvesting)</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Harvesting</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Set Harvest</name>
					<script>harvplant = matches[2]
cecho("&lt;white&gt;[&lt;green&gt;HARVEST&lt;white&gt;]: Searching for "..matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^harvplant (.*)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Harvest Area</name>
					<script>if (matches[2] == "potash") then
	harvArea = Potash
	harvRoom = 1
	enableTrigger("Harvesting")
elseif (matches[2] == "underground") then
	harvArea = Underground
	harvRoom = 1
	enableTrigger("Harvesting")
elseif (matches[2] == "amount") then
	send("harvest amount")
elseif (matches[2] == "on") then
	enableTrigger("Harvesting")
	sysEcho("Harvesting On!")
	expandAlias("shard off")
elseif (matches[2] == "off") then
	harvArea = "none"
	disableTrigger("Harvesting")
	sysEcho("Harvesting Off!")
else
	sysEcho("Don't know that area or command!")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^harvest(?: (\w+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Manual Move</name>
					<script>harvDir()</script>
					<command></command>
					<packageName></packageName>
					<regex>^harmove$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Harvest Alias</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Harvest Area</name>
					<script>if (matches[2] == "hills") then
	harvArea = hills
	harvRoom = 1
	send("queue eqbal path find 1424")
elseif (matches[2] == "underground") then
	harvArea = Underground
	harvRoom = 1
	send("queue eqbal path find 20943")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^harvest(?: (\w+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>HarvDir</name>
					<script>harvDir()</script>
					<command></command>
					<packageName></packageName>
					<regex>^harvdir$</regex>
				</Alias>
			</AliasGroup>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>nom (sailing)</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Sailing</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>lower anchor</name>
					<script>
  send("queue addclear ship ship lower anchor::ship lower plank", false)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^la$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>raise anchor</name>
					<script>
  send("queue addclear ship ship raise anchor::ship raise plank", false)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^ra$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>slowest</name>
					<script>
	send("queue addclear ship ship sails set 10::ship relax oars",false)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^slowest$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>slow</name>
					<script>send("queue addclear ship ship sails set 30::ship relax oars")</script>
					<command></command>
					<packageName></packageName>
					<regex>^slow$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>fast</name>
					<script>
	send("queue addclear ship ship sails set 100::ship row",false)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^fast$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>sail mode</name>
					<script>sailing = true
cecho("\n\nNORMAL MOVEMENT REMOVED, SAILING NOW")</script>
					<command></command>
					<packageName></packageName>
					<regex>^sail$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>foot mode</name>
					<script>sailing = false
cecho("\n\nNO LONGER SAILING")</script>
					<command></command>
					<packageName></packageName>
					<regex>^foot$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>turn ship</name>
					<script>send("queue add ship ship stop turn::ship turn " .. matches[2], false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^sh (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ship stop (sos)</name>
					<script>
	send("queue addclear ship ship all stop::ship repair all",false)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^sos$</regex>
				</Alias>
			</AliasGroup>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>nom (questing)</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>nom (classes)</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>nom (killswitch)</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>killswitch list</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Toggle KillSwitch</name>
					<script>if offense_paused then
  cecho("\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;Offense has been UNPAUSED&lt;OrangeRed&gt;][][][][][]")
  offense_paused = false
else
  cecho("\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;Offense has been **PAUSED&lt;OrangeRed&gt;][][][][][]")
  offense_paused = true
end

expandAlias("kill")</script>
					<command></command>
					<packageName></packageName>
					<regex>^`$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Kill Alias (ee)</name>
					<script>expandAlias("kill")</script>
					<command></command>
					<packageName></packageName>
					<regex>^ee$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>1 combat evade</name>
					<script>combat_evade = true
expandAlias("ee")
cecho("\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;Combat Flee Prepared&lt;OrangeRed&gt;][][][][][]")</script>
					<command></command>
					<packageName></packageName>
					<regex>^1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>2 combat shield</name>
					<script>combat_shield = true
expandAlias("ee")
cecho("\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;Combat Shield On&lt;OrangeRed&gt;][][][][][]")</script>
					<command></command>
					<packageName></packageName>
					<regex>^2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>3 combat diagnose</name>
					<script>combat_diagnose = true
expandAlias("kill")
cecho("\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;Combat Diagnose Queued&lt;OrangeRed&gt;][][][][][]")</script>
					<command></command>
					<packageName></packageName>
					<regex>^3$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>4 combat heal</name>
					<script>combat_heal = true
expandAlias("kill")
cecho("\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;Combat Heal Prepared&lt;OrangeRed&gt;][][][][][]")</script>
					<command></command>
					<packageName></packageName>
					<regex>^4$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Artifacts</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="no" isFolder="no">
					<name>Evade</name>
					<script>send("queue eqbal evade " .. matches[2] .. "::evade " .. matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^ev (.+)$</regex>
				</Alias>
				<Alias isActive="no" isFolder="no">
					<name>+reflection</name>
					<script>send("queue eqbal point wand117284 at me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^pr$</regex>
				</Alias>
				<Alias isActive="no" isFolder="no">
					<name>+portal</name>
					<script>send("queue addclear eqbal embed sonicportal "..matches[2], false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^port (.*)$</regex>
				</Alias>
				<Alias isActive="no" isFolder="no">
					<name>+enterPortal</name>
					<script>send("queue addclear eqbal enter portal")</script>
					<command></command>
					<packageName></packageName>
					<regex>^ep$</regex>
				</Alias>
				<Alias isActive="no" isFolder="no">
					<name>+stonewall</name>
					<script>send("queue eqbal sketchlink icewall ".. matches[2], false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^wall (.*)$</regex>
				</Alias>
				<Alias isActive="no" isFolder="no">
					<name>-stonewall</name>
					<script>send("queue eqbal sketchlink firelash icewall".. matches[2], false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^melt (.*)$</regex>
				</Alias>
			</AliasGroup>
			<Alias isActive="no" isFolder="no">
				<name>Dragon Killswitch</name>
				<script>--Conditionals
--Conditionals
if hunting then
  if tonumber(gmcp.Char.Vitals.hp) &lt; 3000 then
    if shieldarea then
      combat_shield = true
    else
      hunting_evade = true
    end
  end
end
--Active Defenses
--Active Defenses
if combat_evade then
  pre_offense_pause = true
  for k, v in pairs(gmcp.Room.Info.exits) do
    send("queue addclear eqbal stand::" .. k)
    break
  end
elseif combat_shield then
  expandAlias("ts on")
  pre_offense_pause = true
elseif combat_diagnose then
  send("queue addclear eqbal stand::diagnose")
elseif combat_heal then
  send("")
  --Combat Paused
  --Combat Paused
elseif offense_paused then
  cecho("\n&lt;green&gt;Hold your attacks!! Be calm!")
else
  --If PvP Combat
  --If PvP Combat
  if combat then
    if combat_raze then
      send(
        "queue addclear eqbal stand::touch chameleon " ..
        namelist[mimicname] ..
        "::get gold::put gold in pack::tailsmash " ..
        target.name ..
        "::override " ..
        target.name
      )
    else
      send(
        "queue addclear eqbal stand::touch chameleon " ..
        namelist[mimicname] ..
        "::get gold::put gold in pack::dragonsting " ..
        target.name ..
        "::override " ..
        target.name ..
        "::gut " ..
        target.name ..
        "::dragonspit " ..
        target.name
      )
    end
    --If Hunting
    --If Hunting
  elseif hunting then
    if hunting_evade then
      pre_offense_pause = true
      local safety = bashroom - 2
      expandAlias("goto " .. bashArea(safety))
    elseif hunting_raze then
      send(
        "queue addclear eqbal stand::touch chameleon " ..
        namelist[mimicname] ..
        "::get gold::put gold in pack::tailsmash " ..
        target.name ..
        "::override " ..
        target.name
      )
    else
      send(
        "queue addclear eqbal stand::touch chameleon " ..
        namelist[mimicname] ..
        "::get gold::put gold in pack::dragonsting " ..
        target.name ..
        "::override " ..
        target.name ..
        "::gut " ..
        target.name ..
        "::dragonspit " ..
        target.name
      )
    end
    --Failsafe
    --Failsafe
  else
    cecho("improper code")
  end
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^kill$</regex>
			</Alias>
			<Alias isActive="no" isFolder="no">
				<name>Sentinel Killswitch</name>
				<script>-- Defenses
--Conditionals
--Conditionals
if hunting then
  if tonumber(gmcp.Char.Vitals.hp) &lt; 3000 then
    if shieldarea then
      combat_shield = true
    else
      hunting_evade = true
    end
  end
end
--Active Defenses
--Active Defenses
if combat_evade then
  pre_offense_pause = true
  for k, v in pairs(gmcp.Room.Info.exits) do
    send("queue addclear eqbal stand::" .. k)
    break
  end
elseif combat_shield then
  expandAlias("ts on")
  pre_offense_pause = true
elseif combat_diagnose then
  send("queue addclear eqbal stand::diagnose")
elseif combat_heal then
  send("")
  --Combat Paused
  --Combat Paused
elseif offense_paused then
  cecho("\n&lt;green&gt;Hold your attacks!! Be calm!")
else
  --If PvP Combat
  --If PvP Combat
  if hunting then
    if hunting_evade then
      pre_offense_pause = true
      local safety = tonumber(bashRoom) - 2
      expandAlias("goto " .. bashArea[safety])
    elseif hunting_raze then
      send(
        "queue addclear eqbal stand::vault direwolf::touch chameleon " ..
        namelist[mimicname] ..
        "::get gold::put gold in pack::wield spear shield::rivestrike " ..
        target.name ..
        "::skewer " ..
        target.name
      )
    else
      send(
        "queue addclear eqbal stand::vault direwolf::touch chameleon " ..
        namelist[mimicname] ..
        "::get gold::put gold in pack::wield spear shield::skewer " ..
        target.name ..
        "::thrust " ..
        target.name ..
        "::pester " ..
        target.name
      )
    end
    --Failsafe
    --Failsafe
  else
  end
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^kill$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Bardic Killswitch</name>
				<script>-- Defenses
--Conditionals
--Conditionals
if hunting == true and combat_shield == false then
  if tonumber(gmcp.Char.Vitals.hp) &lt; 3000 then
    if shieldarea then
      combat_shield = true
    else
      hunting_evade = true
    end
  end
end
--Active Defenses
--Active Defenses
if combat_evade then
  pre_offense_pause = true
  for k, v in pairs(gmcp.Room.Info.exits) do
    send("queue addclear eqbal stand::" .. k)
    break
  end
elseif combat_shield then
  pre_offense_pause = true
  expandAlias("ts on")
elseif combat_diagnose then
  send("queue addclear eqbal stand::diagnose")
elseif combat_heal then
  send("")
  --Combat Paused
  --Combat Paused
elseif offense_paused then
  cecho("\n&lt;green&gt;Hold your attacks!! Be calm!")
else
  --If PvP Combat
  --If PvP Combat
  if hunting then
    if hunting_evade then
      pre_offense_pause = true
      local safety = tonumber(bashRoom) - 2
      expandAlias("goto " .. bashArea[safety])
    elseif hunting_raze then
      send(
        "queue addclear eqbal stand::vault direwolf::light pipes::touch chameleon " ..
        namelist[mimicname] ..
        "::get gold::put gold in pack::wield rapier buckler::sing cantata at " ..
        target.name ..
        "::moulinet " ..
        target.name ..
        "::howlslash " ..
        target.name ..
        "::tunesmith rapier accentato::jab " ..
        target.name
      )
    else
      send(
        "queue addclear eqbal stand::vault direwolf::light pipes::touch chameleon " ..
        namelist[mimicname] ..
        "::get gold::put gold in pack::wield rapier buckler::moulinet " ..
        target.name ..
        "::howlslash " ..
        target.name ..
        "::jab " ..
        target.name ..
        "::play trill at " ..
        target.name
      )
    end
    --Failsafe
    --Failsafe
  else
  end
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^kill$</regex>
			</Alias>
			<Alias isActive="no" isFolder="no">
				<name>Newbie Killswitch</name>
				<script>-- Defenses
--Conditionals
--Conditionals
if hunting then
  if tonumber(gmcp.Char.Vitals.hp) &lt; 50 then
    if shieldarea then
      combat_shield = true
    else
      hunting_evade = true
    end
  end
end
--Active Defenses
--Active Defenses
if combat_evade then
  pre_offense_pause = true
  for k, v in pairs(gmcp.Room.Info.exits) do
    send("queue addclear eqbal stand::" .. k)
    break
  end
elseif combat_shield then
  expandAlias("ts on")
  pre_offense_pause = true
elseif combat_diagnose then
  send("queue addclear eqbal stand::diagnose")
elseif combat_heal then
  send("")
  --Combat Paused
  --Combat Paused
elseif offense_paused then
  cecho("\n&lt;green&gt;Hold your attacks!! Be calm!")
else
  --If PvP Combat
  --If PvP Combat
  if hunting then
    if hunting_evade then
      pre_offense_pause = true
      local safety = tonumber(bashRoom) - 2
      expandAlias("goto " .. bashArea[safety])
    elseif hunting_raze then
      send(
        "queue addclear eqbal stand::get gold::put gold in pack::wield knife::trace serpent " ..
        target.name
      )
    else
      send(
        "queue addclear eqbal stand::get gold::put gold in pack::wield knife::trace serpent " ..
        target.name
      )
    end
    --Failsafe
    --Failsafe
  else
  end
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^kill$</regex>
			</Alias>
			<Alias isActive="no" isFolder="no">
				<name>Pariah Killswitch</name>
				<script>



-- Defensive Actions

------evade
if target.evader then
	combat_evade()

------shield

elseif target.shielder then
	combat_shield()

------diagnose

elseif target.diagnose then
	combat_diagnose()

------reflection

elseif target.reflection then
	combat_reflect()

------flashheal

elseif target.healme then
	combat_heal()

elseif offense_pause then
  cecho("\n&lt;green&gt;Hold your attacks!! Be calm!")

-- Begin Main Attack
else

if pariah_hunting then

	   if logograph == "serpent" then
        	trace = "nest"
      elseif logograph == "nest" then
        	trace = "bear"
      elseif logograph == "bear" then
        	trace = "jackal"
      elseif logograph == "jackal" then
        	trace = "serpent"
      else
        	trace = "serpent"
      end

	if huntpaused then
 		huntpaused = true
	
	else
		if shieldarea then
		    	if tonumber(gmcp.Char.Vitals.hp) &lt; 3500 then
			      expandAlias("ts on")
				    huntpaused = true
				    tempTimer(12, [[expandAlias("huntpauseoff")]])
			  else
			    	  send("queue addclear eqbal stand::get gold::put gold in pack::wield knife::trace " .. trace .. " " .. target.name .. "::swarm feast ".. target.name .."::blood boil ".. target.name)
			  end
			  
		elseif tonumber(gmcp.Char.Vitals.hp) &lt; 3000 then
			combat_evade()
			huntpaused = true
			tempTimer(12, [[expandAlias("huntpauseoff")]])
		else
			send("queue addclear eqbal stand::get gold::put gold in pack::wield knife::trace " .. trace .. " " .. target.name .. "::swarm feast ".. target.name .."::blood boil ".. target.name)
		end
	end

else

	-- Which Plague?

	plague = ""
	if not table.contains(target.plagues, "pyramides") then
		plague = "pyramides"
	elseif not table.contains(target.plagues, "sandfever") then
		plague = "sandfever"
	elseif not table.contains(target.plagues, "flushings") then
		plague = "flushings"
	elseif not table.contains(target.plagues, "mycalium") then
		plague = "mycalium"
	elseif not table.contains(target.plagues, "rebbies") then
		plague = "rebbies"
	else
		if virulence_balance and table.contains(target.afflictions, "asthma") and table.contains(target.afflictions, "rebbies") and table.contains(target.afflictions, "pyramides") and table.contains(target.afflictions, "flushings") and table.contains(target.afflictions, "sandfever") and not table.contains(target.afflictions, "slickness") and not table.contains(target.mentalaffs, "anorexia") then
	    		
	    		plague = "virulence"
	  	else
	    		plague = "blood wrack"
	  	end
	end


	-- Sting or Virulence?

	if exposed then
	  	if plague == "virulence" then
	    		attack1 = "virulence " .. target.name 
	  	else
	    		attack1 = "swarm sting " .. plague .." " ..target.name
	  	end

	else
	  	if plague == "virulence" then
	    		attack1 = "virulence " .. target.name 
	  	else
	  	  	attack1 = "stand"
	    		cecho("\n&lt;OrangeRed&gt;[][][][][][&lt;cyan&gt;UNEXPOSED&lt;OrangeRed&gt;][][][][][]")
	  	end
	end


	--Serpent  (para)        ---&gt; Nest and Skein
	--Bear     (haemo)       ---&gt; Jackal and Scarab
	--Sun      (epilepsy)    ---&gt; Serpent
	--Nest     (weariness)   ---&gt; Bear and Scales
	--Scales   (clumsiness)  ---&gt; Skein
	--Skein    (impatience)  ---&gt; Scarab and Sun
	--Scarab   (addiction)   ---&gt; Jackal and Scales
	--Jackal   (asthma)      ---&gt; Serpent
	--Scorpion (scytherus)   ---&gt; Serpent

	--What Trace?
  
	if logograph == "none" or logograph == "" then
	    	trace = "bear"
	    
	elseif logograph == "serpent" then        
	    	if not table.contains(target.afflictions, "weariness") then         -- Weariness
	      	trace = "nest"                    
	    	elseif not table.contains(target.afflictions, "impatience") then    -- Impatience Second Prio
	      	trace = "skein"
	    	else
	      	trace = "nest"
	    	end

	elseif logograph == "nest" then           
	    	if not table.contains(target.afflictions, "haemophilia") then       -- Haemophilia Prio
	      	trace = "bear"
	    	elseif not table.contains(target.afflictions, "clumsiness") then
	      	trace = "scales"
	    	else
	      	trace = "bear"
	    	end
	    
	elseif logograph == "scales" then
	    	trace = "skein"

	elseif logograph == "skein" then
	    	if not table.contains(target.mentalaffs, "epilepsy") and table.contains(target.plagues, "mycalium") then
	      	trace = "sun"
	    	elseif not table.contains(target.afflictions, "addiction") then
	      	trace = "scarab"
	    	else
	      	trace = "sun"    
	    	end

	elseif logograph == "scarab" then         
	    	if not table.contains(target.afflictions, "asthma") then              -- Asthma Prio
	      	trace = "jackal"
	    	elseif not table.contains(target.afflictions, "clumsiness") then
	      	trace = "scales"
	    	else
	      	trace = "jackal"
	    	end
	 
	elseif logograph == "sun" then
	    	trace = "serpent"
	   
	elseif logograph == "bear" then           
	    	if not table.contains(target.afflictions, "asthma") then              -- Asthma Prio
	      	trace = "jackal"
	    	else
	      	trace = "scarab"
	    	end
	    
	elseif logograph == "jackal" then
	    	trace = "serpent"
	    
	elseif logograph == "scorpion" then
	    	trace = "serpent"   

	-- Failsafe

	else 
	    	trace = "bear"
	    	cecho("\n&lt;cyan&gt;[][][][][][&lt;OrangeRed&gt;Trace Fucked Up&lt;cyan&gt;][][][][][]")
	end
      
	-- Heartbeat Cycle

	if cycle &gt;= 4 then
	  	cycle = 0
	end
	if trace == "serpent" then
	  	heartbeat = 0
	elseif trace == "jackal" then
	  	heartbeat = 0
	elseif cycle == 0 then
	  	heartbeat = 4
	elseif cycle == 1 then
	  	heartbeat = 2
	elseif trace == "serpent" then
	  	heartbeat = 0
	else
	  	heartbeat = 0
	end

	-- Non-Exposed Heartbeat?
	if not exposed then
	  	if trace == "serpent" then
	    		heartbeat = 0
	  	else
	  		heartbeat = 4
	  	end
	end



	if heartbeat == 0 then
    		attack2 = "trace " .. trace .. " " .. target.name
  	else
    		attack2 = "trace " .. trace .. " " .. target.name .. " " .. heartbeat .. " heartbeats"
	end

	send("queue addclear eqbal stand::wield knife::" .. attack1 .. "::" .. attack2)

end

end</script>
				<command></command>
				<packageName></packageName>
				<regex>^kill$</regex>
			</Alias>
		</AliasGroup>
		<Alias isActive="yes" isFolder="no">
			<name>discord test</name>
			<script>sendToDiscordWebhook(null, null, "My Boring Message")</script>
			<command></command>
			<packageName></packageName>
			<regex>^todisc$</regex>
		</Alias>
	</AliasPackage>
	<ActionPackage />
	<ScriptPackage>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>imported systems**</name>
			<packageName></packageName>
			<script></script>
			<eventHandlerList />
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>deleteOldProfiles</name>
				<packageName>deleteOldProfiles</packageName>
				<script></script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>deleteOldProfiles script</name>
					<packageName></packageName>
					<script>function deleteOldProfiles(keepdays_arg, delete_folder)
  --[[
  Deletes old profiles/maps/modules in the "current"/"map"/"moduleBackups" folders of the Mudlet home directory.
  The following files are NOT deleted:
  - Files newer than the amount of days specified as an argument to deleteOldProfiles(), or 31 days if not specified.
  - One file for every month before that. Specifically: The first available file of every month prior to this.
  Setting the second argument to true will delete maps instead of profiles. (e.g. deleteOldProfiles(10, true))
  --]]

  -- Ensure correct value is passed for second argument
  assert(type(delete_folder) == "string", "Wrong type for delete_folder; expected string, got " .. type(delete_folder))
  assert(table.contains({"profiles", "maps", "modules"}, delete_folder), "delete_folder must be profiles, maps or modules")

  local keepdays = tonumber(keepdays_arg) or 31
  local profile_table = {}
  local used_last_mod_months = {}
  local slash = (string.char(getMudletHomeDir():byte()) == "/") and "/" or "\\"
  local delnum = 0

  local to_folder = {
    profiles = "current",
    maps = "map",
  }

  local dirpath = delete_folder == "modules"
    and getMudletHomeDir()..slash..".."..slash..".."..slash.."moduleBackups"
    or getMudletHomeDir()..slash..to_folder[delete_folder]

  -- Traverse the profiles folder and create a table of files:
  for filename in lfs.dir(dirpath) do
    if filename~="." and filename~=".." then
      profile_table[#profile_table+1] = {
        name = filename,
        last_mod = lfs.attributes(dirpath..slash..filename, "modification")
      }
    end
  end

  -- Sort the table according to last modification date from old to new:
  table.sort(profile_table, function (a,b) return a.last_mod &lt; b.last_mod end)

  echo(string.format(
    "\nDeleting old %s. Files newer than %d days and one for every month before that will be kept.",
    delete_folder,
    keepdays
  ))

  for i, v in ipairs(profile_table) do
    local days = math.floor(os.difftime(os.time(), v.last_mod) / 86400)
    local last_mod_month = os.date("%Y/%m", v.last_mod)
    if days &gt; keepdays then
      -- For profiles older than X days, check if we already kept a table for this month:
      if not table.contains(used_last_mod_months, last_mod_month) then
        -- If not, do nothing and mark this month as "kept".
        used_last_mod_months[#used_last_mod_months+1] = last_mod_month
      else
        -- Otherwise remove the file:
        local success, errorstring = os.remove(dirpath..slash..v.name)
        if success then
          delnum = delnum + 1
        else
          cecho("\n&lt;red&gt;ERROR: "..errorstring)
        end
      end
    end
  end

  echo(string.format("\nDeletion complete. %d/%d files were removed successfully.", delnum, #profile_table))
end
</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>zGUI</name>
				<packageName>zGUI</packageName>
				<script></script>
				<eventHandlerList />
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>zGUI</name>
					<packageName></packageName>
					<script>-------------------------------------------------
-- Zulah GUI build 
-- 6/15/21
-- v4.0
-- convert Adjustable.Containers to UserWindows and back
-- v0.1
-- Note: saving if UserWindow won't bring back as UserWindow if reloading
-- by Edru 7th October 2020
-------------------------------------------------
zgui = zgui or {}

function zgui.echo(text)
  if zgui.huntMode then
    cecho("\n&lt;ansiCyan&gt;[ &lt;black&gt;zGui&lt;ansiCyan&gt; ]: &lt;NavajoWhite&gt;"..text)
  else
	  cecho("\n&lt;ansiCyan&gt;[ &lt;gray&gt;zGui&lt;ansiCyan&gt; ]: &lt;NavajoWhite&gt;"..text)
  end
end

zgui.modules = zgui.modules or {}
zgui.styles = zgui.styles or {  
    ["greygroove"] = "background-color:rgba(0,0,0,0%); border: 5px groove grey;",
    ["greengroove"] = "background-color:rgba(0,0,0,100%); border: 5px groove green;",
    
    ["dimgreyinset"] = "background-color:rgba(20,20,20,100%); border: 5px inset dimgray;",
    ["greyinset"] = "background-color:rgba(0,0,0,100%); border: 10px inset grey;",
    ["greeninset"] = "background-color:rgba(0,0,0,100%); border: 5px inset green;",
    ["chaosinset"] = "background-color:rgba(0,40,100,100%); border: 5px inset purple;",
    
    ["greydouble"] = "background-color:rgba(0,0,0,0%); border: 5px double grey;",
    ["greendouble"] = "background-color:rgba(0,0,0,50%); border: 5px double green;",    
    ["golddouble"] = "background-color:rgba(0,0,0,50%); border: 5px double gold;",
}

zgui.debug = false
zgui.trueTime = 0

zgui.vitals = {
  h = 5000,
 	m = 5000,
 	maxh = 5000,
 	maxm = 5000,
  oh = 5000, --old health
  om = 5000, --old mana
 	xp = 0,
  oxp = 0, --old xp
}</script>
					<eventHandlerList />
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>DarkTheme</name>
						<packageName>DarkTheme</packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>DarkTheme</name>
							<packageName></packageName>
							<script>local packagepath = getMudletHomeDir():gsub("\\", "/")..[[/zGUI/DarkTheme/Images/]]
local txt_col =  "#808080"
local txt_col2 = "#404040"
local bg_col =  "#181818"
local bg_col2 = "#1c1c1c"
local bg_col3 = "#202020"
local bg_col_hover = "#282828"
local bd_col =  "#383838"
local bd_col2 = "#404040"
local bd_col_hover = "#909090"
local dim_col =  "#080808"
local dim_col2 = "#0e0e0e"
local hi_col = "#303030"
local test_col = "#ff0000"
--border styles: ridge, outset, inset, groove, double, dotted, dashed, dot-dash, and dot-dot-dash

dark_style1 = [[
QMainWindow, 
QSplitter, 
QSplitterHandle, 
QWidget#mainArea, 
dlgConnectionProfiles, 
QWidget#panel, 
QWidget#widget_searchAreaTop,
QMessageBox,
QWidget#widget_top,
QWidget#widget_right,
QWidget#widget_bottom {
   background-color: ]]..bg_col..[[; 
	 color: ]]..txt_col..[[;
}
QCheckBox[enabled="false"] {
   color: ]]..txt_col2..[[;
}
QToolTip {
    background-color:]]..bg_col2..[[; 
    color: ]]..txt_col..[[;
    padding: 5px;
    opacity: 220;
		border-width: 1px;
		border-style: solid;
		border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
}
QWidget {
   color: ]]..txt_col..[[;
}
QDialog {
    background-color: ]]..bg_col..[[; 
}
QDockWidget {
    background-color: ]]..bg_col3..[[;
		color: ]]..txt_col..[[;
}
QDockWidget::close-button, QDockWidget::float-button {
    background: transparent;
}
QDockWidget::close-button:hover, QDockWidget::float-button:hover {
    background: rgba(255, 255, 255, 60);
		border-width: 1px;
		border-style: solid;
		border-color: ]]..bd_col..[[;
}
QDockWidget::close-button:pressed, QDockWidget::float-button:pressed {
    padding: 1px -1px -1px 1px;
    background: rgba(255, 255, 255, 60);
}
QWidget:item:selected {
    background-color: ]]..hi_col..[[;
}
QMenuBar {
    background-color: ]]..bg_col..[[;
		color: ]]..txt_col..[[;
}
QMenu {
    border-width: 1px;
		border-style: solid;
    border-color: ]]..bd_col..[[;
		background-color: ]]..bg_col..[[;
    color: ]]..txt_col..[[;
    margin: 0px;
}
QMenu::separator {
    height: 1px;
    background-color: ]]..dim_col..[[;
    padding-left: 4px;
    margin-left: 5px;
    margin-right: 5px;
}
QMenuBar::item:pressed {
    border-width: 1px;
		border-style: solid;
		border-color: ]]..bd_col..[[;
    color: ]]..txt_col..[[;
    margin-bottom:-1px;
    padding-bottom:1px;
}
QMenu::item:selected {
    color: ]]..txt_col..[[;
}
QMenu::item:disabled {
    background-color: ]]..bg_col..[[;
    color: ]]..txt_col2..[[;
}
QMenu:hover {
    background-color: ]]..bg_col..[[;
}
QMenu::item:hover {
    background-color: ]]..dim_col..[[;
}
QMenu::indicator {
    width: 18px;
    height: 18px;
}
QComboBox {
    background-color: ]]..dim_col..[[;
    selection-background-color: ]]..hi_col..[[;
    border-width: 1px;
    border-left-color: ]]..dim_col..[[;
		border-top-color: ]]..dim_col..[[;
		border-right-color: ]]..hi_col..[[;
		border-bottom-color: ]]..hi_col..[[;
    border-style: solid;
}
QComboBox::drop-down {
    background-color: ]]..bg_col..[[;
		color: #ff0000;
    subcontrol-origin: padding;
    subcontrol-position: top right;
    width: 12px;
		border-width: 2px;
		border-style: solid;
		border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
    border-radius: 0px;
}
QAbstractSpinBox {
    padding: 1px;
		border-style: solid;
    border-left-color: ]]..dim_col..[[;
		border-top-color: ]]..dim_col..[[;
		border-right-color: ]]..hi_col..[[;
		border-bottom-color: ]]..hi_col..[[;
    background-color: ]]..dim_col..[[;
    color: ]]..txt_col..[[;
    border-radius: 0px;
}
QAbstractSpinBox:up-button {
    background-color: ]]..bg_col2..[[;
		border-width: 1px;
    border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
    border-style: solid;
    border-radius: 0px;
}
QAbstractSpinBox:down-button {
    background-color: ]]..bg_col2..[[;
		border-width: 1px;
		border-style: solid;
    border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
    border-radius: 0px;
}

QToolBar {
    background-color: ]]..bg_col..[[;
		border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
}
QToolButton {
    background-color: ]]..bg_col..[[;
    border-radius: 0px;
    padding: 3px;
}
QToolButton:hover, QToolButton::menu-button:hover {
    background-color: ]]..bg_col2..[[;
		border-width: 2px;
		border-style: solid;
    border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;		
}
QToolButton:checked, QToolButton:pressed,
QToolButton::menu-button:pressed {
    background-color: ]]..dim_col..[[;;
		border-width: 2px;
		border-style: solid;
    border-left-color: ]]..dim_col..[[;
		border-top-color: ]]..dim_col..[[;
		border-right-color: ]]..hi_col..[[;
		border-bottom-color: ]]..hi_col..[[;
}
QToolButton:checked {
    background-color: transparent;
    border-width: 1px;
		border-style: solid;
		border-color: ]]..bd_col..[[;
}
QToolButton#togglePanel {
    background-color: ]]..bg_col..[[;
		border-width: 1px;
		border-style: solid;
		border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
}
QToolButton#togglePanel:hover {
    background-color: ]]..bg_col2..[[;
}
QPushButton::menu-indicator  {
    background-color: ]]..bg_col..[[;
    subcontrol-origin: padding;
    subcontrol-position: bottom right;
    left: 0px;
}
QPushButton {
    color: ]]..txt_col..[[;
    background-color: ]]..bg_col2..[[;
}
QPushButton:disabled {
    background-color: ]]..bg_col2..[[;
    border-width: 1px;
    border-color: ]]..dim_col..[[;
    border-style: solid;
    border-radius: 0px;
    color: ]]..txt_col..[[;
		padding-top: 4px;
    padding-bottom: 4px;
    padding-left: 10px;
    padding-right: 10px;
}
QPushButton:focus {
    background-color: ]]..bg_col2..[[;
    color: ]]..txt_col..[[;
}
QPushButton:pressed
{
    background-color: ]]..bg_col2..[[;
    padding-top: -15px;
    padding-bottom: -17px;
}
/* scrolling window background */
QAbstractScrollArea {
    border-radius: 0px;
    border-top:    1px solid ]]..dim_col..[[;
		border-left:   1px solid ]]..dim_col..[[;
		border-bottom: 1px solid ]]..hi_col..[[;
		border-right:  1px solid ]]..hi_col..[[;
    background-color: ]]..dim_col..[[;
		color: ]]..txt_col..[[;
}
]]
--
-- ================================== PART TWO ====================================
--
dark_style2 = [[
QListView::item:!selected:hover, QTreeView::item:!selected:hover  {
    background: rgba(40, 40, 40, 0.6);
    color:]]..txt_col..[[;
}
QListView::item:selected:hover, QTreeView::item:selected:hover  {
    background: #404040;
    color: ]]..txt_col..[[;
}
QListView::item:selected, QTreeView::item:selected  {
    background: ]]..bg_col2..[[;
    color: ]]..txt_col..[[;
}
QHeaderView::section  {
    background-color: ]]..bg_col..[[;
    color: ]]..txt_col..[[;
    padding: 1px;
		border-width: 1px;
		border-style: solid;
    border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
    border-radius: 0px;
    text-align: center;
}
QHeaderView {
    background-color: ]]..bg_col..[[;
    border: 1px transparent;
    border-radius: 0px;
    margin: 0px;
    padding: 0px;
}
QLineEdit {
    background-color: ]]..dim_col..[[;
    padding: 1px;
    border-radius: 0px;
		border-top:    1px solid ]]..dim_col..[[;
		border-left:   1px solid ]]..dim_col..[[;
		border-bottom: 1px solid ]]..hi_col..[[;
		border-right:  1px solid ]]..hi_col..[[;
}
QLineEdit#pattern {
    background-color: ]]..bg_col..[[;
    padding: 1px;
		border-width: 1px;
		border-style: solid;
    border-color: ]]..bd_col..[[;
    border-radius: 0px;
}
QLineEdit#qt_spinbox_lineedit {
    padding: 1px;
		background-color: ]]..dim_col..[[;
}

/* --------profile area---------*/
QDialog#profile_preferences {
    background-color: ]]..dim_col2..[[;
}
QStackedWidget {
    color: ]]..txt_col..[[;
    background-color: ]]..bg_col3..[[;
}

/* PREFERENCES TABS */
/* unselected tabs */
QTabBar::tab:!selected {
    padding: 5px;
		margin-top: 2px;
    color: ]]..txt_col..[[;
    background-color: ]]..bg_col..[[;
		border-width: 1px;
		border-style: solid;
		border-top-color: ]]..bd_col..[[;
		border-left-color: ]]..bd_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom: 0px transparent black;
		border-top-left-radius: 1px;
    border-top-right-radius: 1px;
}
/*selected tab*/
QTabBar::tab:selected {  
    padding: 5px;
    color: ]]..txt_col..[[;
		background-color: ]]..bg_col3..[[;
    border-top-left-radius: 1px;
    border-top-right-radius: 1px;
		border-width: 1px;
		border-style: solid;
		border-top-color: ]]..bd_col..[[;
		border-left-color: ]]..bd_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom: 0px transparent black;
}
QTabBar::tab:top:!selected:hover {
    color: ]]..txt_col..[[;
    background-color: ]]..bg_col_hover..[[;
}
QTabBar::tab:top:selected:hover {
    color: ]]..txt_col..[[;
    background-color: ]]..bg_col_hover..[[;
}
QColorDialog, QColorLuminancePicker {
    background-color: ]]..bg_col..[[;
}
QTabWidget::pane {
    border-width: 1px;
		border-style: solid;
    border-color-top: ]]..bg_col..[[;
		border-color-left: ]]..bg_col2..[[;
	  border-color-bottom: ]]..dim_col..[[;
		border-color-right: ]]..dim_col..[[;
    padding: 0px;
    margin: 0px;
}
QGroupBox {
    border-radius: 0px;
    margin-top: 5px;
		border-width: 1px;
		border-style: solid;
		border-top: ]]..bg_col..[[;
		border-left: ]]..bg_col..[[;
	  border-bottom: ]]..dim_col..[[;
		border-right: ]]..dim_col..[[;
}
QGroupBox::title {
    subcontrol-origin: margin;
    subcontrol-position: top center;
    padding-left:  0px;
    padding-right: 1px;
    margin-top: -5px;
}
QGroupBox {
    border: 1px solid ]]..bd_col..[[;
		padding: 5px;
		margin: 5px;
}
dlgRoomExits {
    background-color: ]]..bg_col..[[;
}
QGroupBox#groupBox_normalExits, QGroupBox#groupBox_specialExits {
    background-color: ]]..bg_col2..[[;
}
QFrame#frame_key {
    background-color: ]]..bg_col..[[;
		border-width: 1px;
		border-style: solid;
		border-color: ]]..bd_col..[[;
}
/* SCROLLBAR AREA */
/*vertical scroll*/
  QScrollBar:vertical {
    background: ]]..dim_col2..[[;
    width: 15px;
    margin: 16px 0 16px 0;
  }
  QScrollBar::handle:vertical {
    background-color: ]]..bg_col..[[;
    min-height: 20px;
		border-width: 2px;
		border-style: solid;
    border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
  }
  QScrollBar::add-line:vertical {
    background-color: ]]..bg_col..[[;
    height: 12px;
    subcontrol-position: bottom;
    subcontrol-origin: margin;
	  border-width: 2px;
		border-style: solid;
    border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
  }

  QScrollBar::sub-line:vertical {
    background-color: ]]..bg_col..[[;
    height: 12px;
    subcontrol-position: top;
    subcontrol-origin: margin;
		border-width: 2px;
		border-style: solid;
    border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
  }
  QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {
    background: grey;
    width: 4px;
    height: 4px;
  }
  QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {
    background: none;
  }
	
/* --- horizontal scroll --- */
  QScrollBar:horizontal {
    background: ]]..dim_col2..[[;
    height: 16px;
    margin: 0 16px 0 16px;
  }
	
  QScrollBar::handle:horizontal {
    background-color: ]]..bg_col..[[;
    min-width: 20px;
		height: 15px;
    border-radius: 1px;
		border-width: 2px;
		border-style: solid;
    border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
  }
	
  QScrollBar::add-line:horizontal {
    background-color: ]]..bg_col..[[;
    height: 12px;
    width: 12px;
    subcontrol-position: right;
    subcontrol-origin: margin;
		border-width: 2px;
		border-style: solid;
    border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
  }
	
  QScrollBar::sub-line:horizontal {
    background-color: ]]..bg_col..[[;
    height: 12px;
    width: 12px;
    subcontrol-position: left;
    subcontrol-origin: margin;
		border-width: 2px;
		border-style: solid;
    border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
  }
	QScrollBar::left-arrow:horizontal, QScrollBar::right-arrow:horizontal {
    background: grey;
    width: 4px;
    height: 4px;
  }
  QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {
    background: none;
  }
 ]]
 dark_style3 = [[
 
 /* Trigger Area Elements */
 QWidget#widget_top, QLabel#label_patternNumber {
     background-color: ]]..bg_col..[[; }
 QWidget#widget_4 {
      background-color: ]]..bg_col..[[; }
 QGroupBox#groupBox_stayOpen {
     background-color: #2a2a20; }
 QGroupBox#groupBox_soundTrigger {
     background-color: #202a20; }
 QWidget#widget_13, QWidget#widget_3 {
     background-color: ]]..bg_col..[[; }
 QGroupBox#groupBox_multiLineTrigger {
     background-color: #252530; }
 QWidget#widget_12 {
     background-color: ]]..bg_col..[[; }
 QGroupBox#groupBox_filterTrigger {
      background-color: #302530; }
 QWidget#widget_11 {
     background-color: ]]..bg_col..[[; }
 QGroupBox#groupBox_perlSlashGOption {
     background-color: #382525; }
 QGroupBox#groupBox_triggerColorizer {
     background-color: #203038; }
 QWidget#widget_10 {
     background-color: ]]..bg_col..[[; }
		 
 /* ------ variable area things-------- */
 QWidget#widget_variable_key_type { background-color: #352535; }
 QWidget#widget_variable_var_type { background-color: #352525; }
 QWidget#widget_variable_hide { background-color: #353525; }
 
 QTabBar QToolButton::right-arrow:enabled {
     image: url(]]..packagepath..[[right_arrow.png);
 }
 QTabBar QToolButton::left-arrow:enabled {
     image: url(]]..packagepath..[[left_arrow.png);
 }
QTabBar QToolButton::right-arrow:disabled {
     image: url(]]..packagepath..[[right_arrow_disabled.png);
}
 QTabBar QToolButton::left-arrow:disabled {
     image: url(]]..packagepath..[[left_arrow_disabled.png);
}


QTreeView::branch {
        border-image: url(]]..packagepath..[[transparent.png);
    }
    QTreeView::branch:closed:has-children {
        image: url(]]..packagepath..[[branch_closed.png);
    }
    QTreeView::branch:open:has-children {
        image: url(]]..packagepath..[[branch_open.png);
    }
    QTreeView::branch:closed:has-children:hover {
        image: url(]]..packagepath..[[branch_closed-on.png);
    }
    QTreeView::branch:open:has-children:hover  {
        image: url(]]..packagepath..[[branch_open-on.png);
    }
 
 
QSizeGrip {
    image: url(]]..packagepath..[[sizegrip.png);
    width: 12px;
    height: 12px;
}
QToolBar::handle:horizontal {
    image: url(]]..packagepath..[[Hmovetoolbar.png);
}
QToolBar::handle:vertical {
    image: url(]]..packagepath..[[Vmovetoolbar.png);
}
QToolBar::separator:horizontal {
    image: url(]]..packagepath..[[Hsepartoolbar.png);
}
QToolBar::separator:vertical {
    image: url(]]..packagepath..[[Vsepartoolbar.png);
}
QAbstractSpinBox::up-arrow,QAbstractSpinBox::up-arrow:disabled,QAbstractSpinBox::up-arrow:off {
    image: url(]]..packagepath..[[up_arrow_disabled.png);
    width: 8px;
    height: 8px;
}
QAbstractSpinBox::up-arrow:hover {
    image: url(]]..packagepath..[[up_arrow.png);
}
QAbstractSpinBox::down-arrow,QAbstractSpinBox::down-arrow:disabled,QAbstractSpinBox::down-arrow:off {
    image: url(]]..packagepath..[[down_arrow_disabled.png);
    width: 8px;
    height: 8px;
}
QAbstractSpinBox::down-arrow:hover {
    image: url(]]..packagepath..[[down_arrow.png);
}
]]
DarkStyle = dark_style1..dark_style2..dark_style3
function DarkTheme()
zgui.darkmode = true
setAppStyleSheet(DarkStyle)
  zgui.echo("Mudlet Stylesheet Set to Dark Mode.")
end</script>
							<eventHandlerList>
								<string>sysLoadEvent</string>
								<string>sysInstall</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>DarkThemeUninstall</name>
							<packageName></packageName>
							<script>function DarkThemeUninstall()
  zgui.darkmode = false
  setAppStyleSheet([[]])
  zgui.echo("Mudlet Stylesheet reverted to default.")
end</script>
							<eventHandlerList>
								<string>sysUninstallPackage</string>
							</eventHandlerList>
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Extra Code</name>
						<packageName>convertToUserWindow</packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>convertAdj.Init</name>
							<packageName></packageName>
							<script>-- convert Adjustable.Containers to UserWindows and back
-- v0.1
-- Note: saving if UserWindow won't bring back as UserWindow if reloading
-- by Edru 7th October 2020

convertAdj = convertAdj or {}
function Adjustable.Container:onDoubleClick()
  self.isUserWindow = self.isUserWindow or false
  if not self.isUserWindow then
    self.userwindow = self.userwindow or Geyser.UserWindow:new({name = self.name.."userWindow"})
    self.userwindow:show()
    self.userwindow:setTitle(self.name)
    self.userwindow:move(self:get_x(), self:get_y())
    self.userwindow:resize(self:get_width(), self:get_height())
    self:changeContainer(self.userwindow)
    self:move(0,0)
    self:resize("100%", "100%")
    self:lockContainer("standard")
  else
    registerAnonymousEventHandler("sysWindowMousePressEvent", "convertAdj.sendToPosition", true)
    convertAdj.container = self
    self.userwindow:hide_impl()
  end
  self.isUserWindow = self.isUserWindow == false and true or false 
end

function convertAdj.Init()
  Adjustable.Container:doAll(function(self) self.adjLabel:setDoubleClickCallback(function(event) self:onDoubleClick() end)end)
  local newWrapper = Adjustable.Container.new
  local saveWrapper = Adjustable.Container.save
  
  function Adjustable.Container:new(cons, container)
    local me = newWrapper(self, cons, container)
    me.adjLabel:setDoubleClickCallback(function(event) me:onDoubleClick() end)
    return me
  end
  
  function Adjustable.Container:save(slot, dir)
    if self.isUserWindow then
      local tempWindowName = self.windowname
      self.windowname = "main"
      self:setAbsolute(true, true)
      self:unlockContainer()
      saveWrapper(self, slot, dir)
      self:lockContainer()
      self.windowname = tempWindowName
      self:setPercent(true, true)
    else
      saveWrapper(self, slot, dir)
    end
    return true
  end
  
end

function convertAdj.sendToPosition(event, button, x, y, windowname)
    local self = convertAdj.container
    local newContainer = Geyser
    if windowname ~= "main" then
        newContainer = Geyser.windowList[windowname.."Container"].windowList[windowname]
    end
    self:resize(self:get_width(), self:get_height())
    self:move(x, y)
    self:changeContainer(Geyser)
    self:setPercent(true, true)
    self:unlockContainer()
    self:show()
    convertAdj.container = nil
end</script>
							<eventHandlerList>
								<string>sysLoadEvent</string>
								<string>sysInstall</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>ansiArt()</name>
							<packageName></packageName>
							<script>function zgui.ansiArt(artWork, showWord)
  local ansiColor = "red"
  local ansiColor2 = "red"
  if artWork == "skull" then
    ansiColor = "red"
    cecho("\n&lt;"..ansiColor.."&gt;            .                                                      .")
    cecho("\n&lt;"..ansiColor.."&gt;          .n                   .                 .                  n.")
    cecho("\n&lt;"..ansiColor.."&gt;    .   .dP                  dP                   9b                 9b.    .")
    cecho("\n&lt;"..ansiColor.."&gt;   4    qXb         .       dX                     Xb       .        dXp     t")
    cecho("\n&lt;"..ansiColor.."&gt;  dX.    9Xb      .dXb    __                         __    dXb.     dXP     .Xb")
    cecho("\n&lt;"..ansiColor.."&gt;  9XXb._       _.dXXXXb dXXXXbo.                 .odXXXXb dXXXXb._       _.dXXP")
    cecho("\n&lt;"..ansiColor.."&gt;   9XXXXXXXXXXXXXXXXXXXVXXXXXXXXOo.           .oOXXXXXXXXVXXXXXXXXXXXXXXXXXXXP")
    cecho("\n&lt;"..ansiColor.."&gt;    `9XXXXXXXXXXXXXXXXXXXXX'~   ~`OOO8b   d8OOO'~   ~`XXXXXXXXXXXXXXXXXXXXXP'")
    cecho("\n&lt;"..ansiColor.."&gt;      `9XXXXXXXXXXXP' `9XX'          `98v8P'          `XXP' `9XXXXXXXXXXXP'")
    cecho("\n&lt;"..ansiColor.."&gt;          ~~~~~~~       9X.          .db|db.          .XP       ~~~~~~~")
    cecho("\n&lt;"..ansiColor.."&gt;                          )b.  .dbo.dP'`v'`9b.odb.  .dX(")
    cecho("\n&lt;"..ansiColor.."&gt;                        ,dXXXXXXXXXXXb     dXXXXXXXXXXXb.")
    cecho("\n&lt;"..ansiColor.."&gt;                       dXXXXXXXXXXXP'   .   `9XXXXXXXXXXXb")
    cecho("\n&lt;"..ansiColor.."&gt;                      dXXXXXXXXXXXXb   d|b   dXXXXXXXXXXXXb")
    cecho("\n&lt;"..ansiColor.."&gt;                      9XXb'   `XXXXXb.dX|Xb.dXXXXX'   `dXXP")
    cecho("\n&lt;"..ansiColor.."&gt;                       `'      9XXXXXX(   )XXXXXXP      `'")
    cecho("\n&lt;"..ansiColor.."&gt;                                XXXX X.`v'.X XXXX")
    cecho("\n&lt;"..ansiColor.."&gt;                                XP^X'`b   d'`X^XX")
    cecho("\n&lt;"..ansiColor.."&gt;                                X. 9  `   '  P )X")
    cecho("\n&lt;"..ansiColor.."&gt;                                `b  `       '  d'")
    cecho("\n&lt;"..ansiColor.."&gt;                                 `             '")
    cecho("\n")
  end
  
  if artWork == "relic" then
    if showWord then
      zgui.relicWord = showWord
    else
      zgui.relicWord = "Relic Found"
    end
    ansiColor = "gold"
    ansiColor2 = "red"
    cecho("\n&lt;"..ansiColor.."&gt;           \/\\                         &lt;"..ansiColor2.."&gt;"..zgui.relicWord.."&lt;"..ansiColor.."&gt;                         \/\\")
    cecho("\n&lt;"..ansiColor.."&gt; _         )( ______________________  &lt;"..ansiColor2.."&gt;"..zgui.relicWord.."&lt;"..ansiColor.."&gt;  ______________________ )(         _")
    cecho("\n&lt;"..ansiColor.."&gt;(_)///////(**)______________________) &lt;"..ansiColor2.."&gt;"..zgui.relicWord.."&lt;"..ansiColor.."&gt; (______________________(**)\\\\\\\\\\\\\\(_)")
    cecho("\n&lt;"..ansiColor.."&gt;           )(                         &lt;"..ansiColor2.."&gt;"..zgui.relicWord.."&lt;"..ansiColor.."&gt;                         )(")
    cecho("\n&lt;"..ansiColor.."&gt;           \\\/                         &lt;"..ansiColor2.."&gt;"..zgui.relicWord.."&lt;"..ansiColor.."&gt;                         \\\/")
    cecho("\n&lt;"..ansiColor.."&gt;")
  end

end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<Script isActive="yes" isFolder="no">
						<name>EDIT ME: Startup Main</name>
						<packageName></packageName>
						<script>-------------------------------------------------
-- Zulah GUI build 
-- 6/15/21
-- v4.0
-- convert Adjustable.Containers to UserWindows and back
-- v0.1
-- Note: saving if UserWindow won't bring back as UserWindow if reloading
-- by Edru 7th October 2020
-------------------------------------------------

local startupEvent = registerAnonymousEventHandler("gmcp.Char", "zgui.zStartup", true)

function zgui.zStartup() 
 if not zgui.running then
  zgui.running = true
--------------------------------------------------------------------
-- Change the Font Size of each window on startup to fit your screen size better if needed
  zgui.chatSize = 10
  zgui.loggerSize = 9
  zgui.promptSize = 9
  zgui.goldSize = 9
  zgui.defenceSize = 9
  zgui.afflictionSize = 9
  zgui.targetAffsSize = 9
  zgui.targetListSize = 9
  zgui.enemySize = 9
  zgui.allySize = 9
  zgui.roomDenizensSize = 9
  zgui.roomItemsSize = 9
  zgui.roomPlayersSize = 9
  zgui.mapSize = 9
--------------------------------------------------------------------
  setBorderColor("0","0","0")  -- Change this if you attach windows to side borders and want to color the background of those borders
                               -- setBorderColor("218","218","218") -- Mudlet Default Menu Grey
                               -- setBorderColor("RED","GREEN","BLUE")
--------------------------------------------------------------------       
-- Which Style To Start With?  
  if not zgui.useStyle then zgui.useStyle = "dimgreyinset" end    
                      
  for k,v in pairs(zgui.styles) do
    if zgui.useStyle == k then
      zgui.adjLabelstyle = v
    end
  end   
----------------------------------------------------------------------------------------------------------------------------------------
    zgui.setupDefences() 
    
    sendGMCP([[Core.Supports.Add ["Comm.Channel 1"] ]])
    sendGMCP('Core.Supports.Add ["IRE.Tasks 1"]')
    sendGMCP('Core.Supports.Add ["IRE.Time 1"]')
    sendGMCP('Core.Supports.Add ["IRE.Misc 1"]')
    sendGMCP('Core.Supports.Add ["IRE.Display 1"]')
    sendGMCP('Core.Supports.Add ["IRE.Sound 1"]')
    
    if not table.contains(zgui.modules, "Chat") then table.insert(zgui.modules, "Chat") end
    if not table.contains(zgui.modules, "Map") then table.insert(zgui.modules, "Map") end  
    if not table.contains(zgui.modules, "Balances") then table.insert(zgui.modules, "Balances") end
    if not table.contains(zgui.modules, "Exp") then table.insert(zgui.modules, "Exp") end
    if not table.contains(zgui.modules, "Logger") then table.insert(zgui.modules, "Logger") end
    if not table.contains(zgui.modules, "Prompt") then table.insert(zgui.modules, "Prompt") end
    if not table.contains(zgui.modules, "Gold") then table.insert(zgui.modules, "Gold") end  
    if not table.contains(zgui.modules, "Ally") then table.insert(zgui.modules, "Ally") end
    if not table.contains(zgui.modules, "Enemy") then table.insert(zgui.modules, "Enemy") end
    if not table.contains(zgui.modules, "Defence") then table.insert(zgui.modules, "Defence") end
    if not table.contains(zgui.modules, "Affliction") then table.insert(zgui.modules, "Affliction") end 
    if not table.contains(zgui.modules, "Afflictionlock") then table.insert(zgui.modules, "Afflictionlock") end 
    if not table.contains(zgui.modules, "Targetaffliction") then table.insert(zgui.modules, "Targetaffliction") end
    if not table.contains(zgui.modules, "Roomplayers") then table.insert(zgui.modules, "Roomplayers") end
    if not table.contains(zgui.modules, "Roomdenizens") then table.insert(zgui.modules, "Roomdenizens") end
    if not table.contains(zgui.modules, "Roomitems") then table.insert(zgui.modules, "Roomitems") end
    --if not table.contains(zgui.modules, "Targetlist") then table.insert(zgui.modules, "Targetlist") end
    if not table.contains(zgui.modules, "Brage") then table.insert(zgui.modules, "Brage") end
    if not table.contains(zgui.modules, "Charstat") then table.insert(zgui.modules, "Charstat") end
    if not table.contains(zgui.modules, "Ship") then table.insert(zgui.modules, "Ship") end 
    if not table.contains(zgui.modules, "Healthbar") then table.insert(zgui.modules, "Healthbar") end
    if not table.contains(zgui.modules, "Manabar") then table.insert(zgui.modules, "Manabar") end
    if not table.contains(zgui.modules, "Help") then table.insert(zgui.modules, "Help") end
    
    for i=1, #zgui.modules, 1 do
      zgui["build"..zgui.modules[i]]()
    end 
    
    ------------------------------------------------------------------------
    zgui.myTargetList = zgui.myTargetList or {} 
	  zgui.allies = zgui.allies or {}
	  zgui.enemies = zgui.enemies or {}
  
    send("ql")    
    send("allies")
    send("enemies")
    ------------------------------------------------------------------------
    
    disableTimer("Deathcape Timer")
    
    killAnonymousEventHandler(startupEvent)
    Adjustable.Container.hideAll()
    zgui.buildHelp()
    Adjustable.Container:loadAll("default")
    zgui.showHelp()
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>EDIT ME: zGUI Defences</name>
						<packageName></packageName>
						<script>function zgui.setupDefences()
-------------------------------------------------------------
	zgui.defs = zgui.defs or {}
	zgui.defs.classless = {
		["basic"] = {
			"insomnia",
			"cloak",
			"mindseye",	
			"selfishness"},
		["combat"] = {
			"selfishness",
			"insomnia",
			"blindness",
			"cloak",
			"mindseye",				
			"thirdeye",
			"deafness",
			"deathsight",
			"alertness",
			"kola",
			"skywatch",
			"groundwatch",
			"levitating",
			"temperance",
			"insulation",
			"poisonresist",
			"speed",
			"nightsight"},
	}
-------------------------------------------------------------
	zgui.defs.class = {
		["none"] = {},
    ["Alchemist"] = {},
    ["Apostate"] = {},
		["Bard"] = {
			"tune",
			"lay"},        
		["Blademaster"] = {
			"shinbinding",
			"shintrance",
			"shinclarity",
			"mindnet",
			"twoartsstance",
			"weathering",
			"toughness"},
    ["Depthswalker"] = {},
    ["Druid"] = {},
    ["Infernal"] = {},
    ["Jester"] = {},
		["Magi"] = {
			"stoneskin",
			"stonefist",
			"chargeshield",
			"diamondskin"},                	
		["Monk"] = {                   
			"kaitrance",
			"vitality",
			"mindnet",
			"splitmind",
			"weathering",
			"toughness",
			"regeneration",
			"boostedregeneration",
			"vitality",
			"resistance",
			"constitution"},              
    ["Occultist"] = {},
    ["Paladin"] = {},
    ["Priest"] = {},
    ["Psion"] = {},
    ["Runewarden"] = {},
    ["Sentinel"] = {},         
		["Serpent"] = {
			"hiding",
			"shroud",
			"scales",
			"pacing",
			"lipreading",
			"ghost",
			"secondsight"},
    ["Shaman"] = {},
    ["Sylvan"] = {},         
	}
	
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>EDIT ME: Restyle GUI Colors</name>
						<packageName></packageName>
						<script>function zgui.restyle()
  zgui.styles = {  
     -- https://doc.qt.io/qt-5/stylesheet-reference.html (more info)                      
                                     --rgba(RED, GREEN, BLUE, Transparency)
    ["greygroove"] = "background-color:rgba(0,0,0,0%); border: 5px groove grey;",
    ["greengroove"] = "background-color:rgba(0,0,0,100%); border: 5px groove green;",
    
    ["dimgreyinset"] = "background-color:rgba(20,20,20,100%); border: 5px inset dimgray;",
    ["greyinset"] = "background-color:rgba(0,0,0,100%); border: 10px inset grey;",
    ["greeninset"] = "background-color:rgba(0,0,0,100%); border: 5px inset green;",
    ["chaosinset"] = "background-color:rgba(0,40,100,100%); border: 5px inset purple;",
    
    ["greydouble"] = "background-color:rgba(0,0,0,0%); border: 5px double grey;",
    ["greendouble"] = "background-color:rgba(0,0,0,50%); border: 5px double green;",    
    ["golddouble"] = "background-color:rgba(0,0,0,50%); border: 5px double gold;",
  }
--------------------------------------------------------------------
-- Which Style To Start With?  
  if not zgui.useStyle then zgui.useStyle = "dimgreyinset" end
  
----------------------------------------------------------------------------------------------------------------------------------------
  setBorderColor("0","0","0")  -- Change this if you attach windows to side borders and want to color the background of those borders
                               -- setBorderColor("218","218","218") -- Mudlet Default Menu Grey
                               -- setBorderColor("RED","GREEN","BLUE")
                               
                               
----------------------------------------------------------------------------------------------------------------------------------------                               
  for k,v in pairs(zgui.styles) do
    if zgui.useStyle == k then
      zgui.adjLabelstyle = v
    end
  end   
  
  for i=1, #zgui.modules, 1 do
    zgui["build"..zgui.modules[i]]()
  end  
----------------------------------------------------------------------------------------------------------------------------------------
end</script>
						<eventHandlerList />
					</Script>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Chat</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>buildChat</name>
							<packageName></packageName>
							<script>function zgui.buildChat()
  zgui.chatSize = zgui.chatSize or 9
  zgui.chat = {}
  zgui.chat.tabs = {"All","City","House","Order","Party","Clans","Tells","Market","Misc"}
  zgui.chat.color1 = "rgb(100,100,100)"
  zgui.chat.color2 = "rgb(0,0,0)"
  zgui.chat.color3 = "rgb(150,150,150)"
  zgui.chat.width = "100%"
  zgui.chat.height = "100%"
  zgui.chat.current = zgui.chat.tabs[1]
  zgui.chat.useCmdLine = false

  --Create the main container
  --Our tabbed window will need a container. This will be the bottom layer. Containers are invisible so no need to set a stylesheet. 
  zgui.chat.window = Adjustable.Container:new({
    name = "zgui.chat.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",  
    adjLabelstyle = zgui.adjLabelstyle,
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 10,
    buttonsize = 15,          
  },main)
  zgui.chat.window:changeMenuStyle("dark")

  --Create the main container
  --Our tabbed window will need a container. This will be the bottom layer. Containers are invisible so no need to set a stylesheet. 
  zgui.chat.container = Geyser.Container:new({
    name = "zgui.chat.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.chat.window)
  
 --Create an HBox
 --All of our tabs will be evenly spaced. So we'll create an HBox to sit at the top of our container. 
 zgui.chat.header = Geyser.HBox:new({
    name = "zgui.chat.header",
    x = 0, y = 0,
    width = "100%",
    height = "8%",
  },zgui.chat.container)  
  
  --Create a label
  --This label will serve as a container for each window. It sits right underneath the HBox we just created for the tabs. 
  zgui.chat.footer = Geyser.Label:new({
    name = "zgui.chat.footer",
    x = 0, y = "8%",
    width = "100%",
    height = "92%",
  },zgui.chat.container)
  
  --Each window actually has two labels.
  zgui.chat.center = Geyser.Label:new({
    name = "zgui.chat.center",
    x = 0, y = 0,
    width = "100%",
    height = "100%",
  },zgui.chat.footer)
  zgui.chat.center:setBackgroundImage(getMudletHomeDir()..[[\zGUI\Artwork\Wallpapers\slate.jpg]], "center")

  zgui.chat.click = function(tab)
    zgui.chat[zgui.chat.current.."tab"]:setStyleSheet([[
      background-color: ]]..zgui.chat.color1..[[;
      border-top-left-radius: 10px;
      border-top-right-radius: 10px;
      margin-right: 1px;
      margin-left: 1px;
    ]])
    zgui.chat[zgui.chat.current]:hide()
    zgui.chat.current = tab
    zgui.chat[zgui.chat.current]:show()
    zgui.chat[zgui.chat.current.."tab"]:setStyleSheet([[
      background-color: ]]..zgui.chat.color3..[[;
      border-top-left-radius: 20px;
      border-top-right-radius: 20px;
      margin-right: 2px;
      margin-left: 2px;
    ]])  
  end
  
  for k,v in pairs(zgui.chat.tabs) do
    zgui.chat[v.."tab"] = Geyser.Label:new({
      name = "zgui.chat."..v.."tab",
      fgColor = "black",
    },zgui.chat.header)
    
    zgui.chat[v.."tab"]:setStyleSheet([[
      background-color: ]]..zgui.chat.color1..[[;
      border-top-left-radius: 10px;
      border-top-right-radius: 10px;
      margin-right: 1px;
      margin-left: 1px;
    ]])
    
    zgui.chat[v.."tab"]:echo("&lt;center&gt;"..v)
    zgui.chat[v.."tab"]:setClickCallback("zgui.chat.click",v)

    zgui.chat[v] = Geyser.Label:new({
      name = "zgui.chat."..v,
      x = 0, y = 0,
      width = "100%",
      height = "100%",
    },zgui.chat.footer)

    zgui.chat[v.."center"] = Geyser.Label:new({
      name = "zgui.chat."..v.."center",
      x = 0, y = 0,
      width = "100%",
      height = "100%",
    },zgui.chat[v])
  
    zgui.chat[v]:hide()
  end
  
  -- Create each channel window
  zgui.chat.allchat = Geyser.MiniConsole:new({
    name = "All",
    x = 0, y = 0,
    autoWrap = true,
    width = "100%",
    height = "100%",
    color="black",
  },zgui.chat.Allcenter)     
  hideWindow("All")
  zgui.chat.allchat:setBackgroundImage(getMudletHomeDir()..[[\zGUI\Artwork\Wallpapers\slate.jpg]], "center")

  zgui.chat.citychat = Geyser.MiniConsole:new({
    name = "City",
    x = 0, y = 0,
    autoWrap = true,
    width = "100%",
    height = "100%",
    color="black",
  },zgui.chat.Citycenter)     
  hideWindow("City")
  zgui.chat.citychat:setBackgroundImage(getMudletHomeDir()..[[\zGUI\Artwork\Wallpapers\slate.jpg]], "center")
  
  zgui.chat.housechat = Geyser.MiniConsole:new({
    name = "House",
    x = 0, y = 0,
    autoWrap = true,
    width = "100%",
    height = "100%",
    color="black",
  },zgui.chat.Housecenter)       
  hideWindow("House")
  zgui.chat.housechat:setBackgroundImage(getMudletHomeDir()..[[\zGUI\Artwork\Wallpapers\slate.jpg]], "center")
  
  zgui.chat.orderchat = Geyser.MiniConsole:new({
    name = "Order",
    x = 0, y = 0,
    width = "100%",
    height = "100%",
    color="black",
  },zgui.chat.Ordercenter)       
  hideWindow("Order")
  zgui.chat.orderchat:setBackgroundImage(getMudletHomeDir()..[[\zGUI\Artwork\Wallpapers\slate.jpg]], "center")

  zgui.chat.partychat = Geyser.MiniConsole:new({
    name = "Party",
    x = 0, y = 0,
    autoWrap = true,
    width = "100%",
    height = "100%",
    color="black",
  },zgui.chat.Partycenter)       
  hideWindow("Party")
  zgui.chat.partychat:setBackgroundImage(getMudletHomeDir()..[[\zGUI\Artwork\Wallpapers\slate.jpg]], "center")

  zgui.chat.clanschat = Geyser.MiniConsole:new({
    name = "Clans",
    x = 0, y = 0,
    autoWrap = true,
    width = "100%",
    height = "100%",
    color="black",
  },zgui.chat.Clanscenter)       
  hideWindow("Clans")
  zgui.chat.clanschat:setBackgroundImage(getMudletHomeDir()..[[\zGUI\Artwork\Wallpapers\slate.jpg]], "center")
  
  zgui.chat.tellschat = Geyser.MiniConsole:new({
    name = "Tells",
    x = 0, y = 0,
    autoWrap = true,
    width = "100%",
    height = "100%",
    color="black",
  },zgui.chat.Tellscenter)         
  hideWindow("Tells")
  zgui.chat.tellschat:setBackgroundImage(getMudletHomeDir()..[[\zGUI\Artwork\Wallpapers\slate.jpg]], "center")
  
  zgui.chat.marketchat = Geyser.MiniConsole:new({
    name = "Market",
    x = 0, y = 0,
    autoWrap = true,
    width = "100%",
    height = "100%",
    color="black",
  },zgui.chat.Marketcenter)     
  hideWindow("Market")
  zgui.chat.marketchat:setBackgroundImage(getMudletHomeDir()..[[\zGUI\Artwork\Wallpapers\slate.jpg]], "center")
  
  zgui.chat.miscchat = Geyser.MiniConsole:new({
    name = "Misc",
    x = 0, y = 0,
    autoWrap = true,
    width = "100%",
    height = "100%",
    color="black",
  },zgui.chat.Misccenter)     
  hideWindow("Misc")
  zgui.chat.miscchat:setBackgroundImage(getMudletHomeDir()..[[\zGUI\Artwork\Wallpapers\slate.jpg]], "center")
  
  setFontSize("All", zgui.chatSize)
  setFontSize("City", zgui.chatSize)
  setFontSize("House", zgui.chatSize)
  setFontSize("Order", zgui.chatSize)
  setFontSize("Party", zgui.chatSize)
  setFontSize("Clans", zgui.chatSize)
  setFontSize("Tells", zgui.chatSize)
  setFontSize("Market", zgui.chatSize)
  setFontSize("Misc", zgui.chatSize)
  zgui.chat.window:setTitle("Chat","gray")
  zgui.chat.window:show()
  
  if not table.contains(zgui.modules, "Chat") then
    table.insert(zgui.modules, "Chat")
  end
end

</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>showChat</name>
							<packageName></packageName>
							<script>function zgui.showChat()
  local shortName = ""
  local chatWindow = ""
  local discordText = gmcp.Comm.Channel.Text.text
  local text = ansi2decho(gmcp.Comm.Channel.Text.text)
  local plaintext = ansi2string(gmcp.Comm.Channel.Text.text)
  for k,v in pairs(gmcp.Comm.Channel.List) do
    shortName = gmcp.Comm.Channel.List[k].command
  end
  
  if string.starts(gmcp.Comm.Channel.Start, "says") then
    chatWindow = "All"
  elseif string.starts(gmcp.Comm.Channel.Start, "armytell") then
    chatWindow = "City"
  elseif string.starts(gmcp.Comm.Channel.Start, "yell") then
    chatWindow = "Misc"
  elseif string.starts(gmcp.Comm.Channel.Start, "shout") then
    chatWindow = "Misc"    
  elseif string.starts(gmcp.Comm.Channel.Start, "ct") then
    chatWindow = "City"
  elseif string.starts(gmcp.Comm.Channel.Start, "ht") then
    chatWindow = "House"
  elseif string.starts(gmcp.Comm.Channel.Start, "hnt") then
    chatWindow = "House"
  elseif string.starts(gmcp.Comm.Channel.Start, "ot") then
    chatWindow = "Order"
  elseif string.starts(gmcp.Comm.Channel.Start, "party") then
    chatWindow = "Party"
  elseif string.starts(gmcp.Comm.Channel.Start, "clt17") then
    chatWindow = "Misc"
  elseif string.starts(gmcp.Comm.Channel.Start, "clt") then
    chatWindow = "Clans"
  elseif string.starts(gmcp.Comm.Channel.Start, "tell") then
    chatWindow = "Tells"
  elseif string.starts(gmcp.Comm.Channel.Start, "market") then
    chatWindow = "Market"    
  elseif string.starts(gmcp.Comm.Channel.Start, "newbie") then
    chatWindow = "Misc"    
  end    

  local sending = zgui.talkerIsDenizen()
  if not sending then return end
  
  sendToDiscordWebhook(null, null, plaintext)  
  
  decho(chatWindow, text.."\n")
  if chatWindow ~= "All" and not string.starts(gmcp.Comm.Channel.Start, "clt17") then
    decho("All", text.."\n")
  end
end

function zgui.talkerIsDenizen()
  local talker = gmcp.Comm.Channel.Text.talker
  if table.contains(zgui.roomDenizenList, talker) or table.contains(zgui.roomItemList, talker) then
    return false
  else
    return true
  end
end

registerAnonymousEventHandler("gmcp.Comm.Channel.Start", "zgui.showChat")</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Chat Cmd Prompt</name>
							<packageName></packageName>
							<script>zgui.chat.citychat:setCmdAction(zgui.chatSend, "ct")
zgui.chat.housechat:setCmdAction(zgui.chatSend, "ht")
zgui.chat.orderchat:setCmdAction(zgui.chatSend, "ot")
zgui.chat.partychat:setCmdAction(zgui.chatSend, "pt")
zgui.chat.marketchat:setCmdAction(zgui.chatSend, "market")

function zgui.chatSend(channel, text)
  send(channel.." "..text)
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Balances</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>buildBalances</name>
							<packageName></packageName>
							<script>function zgui.buildBalances()
  zgui.balances = {}
  
  --Create the main Adjustable
  zgui.balances.window = Adjustable.Container:new({
    name = "zgui.balances.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",  
    adjLabelstyle = zgui.adjLabelstyle,
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 10,
    buttonsize = 15,          
  },main)
  zgui.balances.window:changeMenuStyle("dark")

  --Create the log container
  zgui.balances.container = Geyser.Container:new({
    name = "zgui.balances.container",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.balances.window)  

  --Each Balance Toggle
-----------------------------------------------------------------------------  
  --Balance
  zgui.balances.b = Geyser.Label:new({
    name = "zgui.balances.b",
    x = "1%", y = "2%",
    width = "98%",
    height = "10%",
  },zgui.balances.container)
  zgui.balances.b:setStyleSheet([[
      background-color: rgba(150,50,50,50%);
      border-top-left-radius: 10px;
      border-top-right-radius: 10px;
      border-bottom-left-radius: 10px;
      border-bottom-right-radius: 10px;      
      margin-right: 1px;
      margin-left: 1px;
    ]])
  zgui.balances.b:echo("&lt;center&gt;Balance")

  --Equilibrium
  zgui.balances.e = Geyser.Label:new({
    name = "zgui.balances.e",
    x = "1%", y = "15%",
    width = "98%",
    height = "10%",
  },zgui.balances.container) 
  zgui.balances.e:setStyleSheet([[
      background-color: rgba(150,50,50,50%);
      border-top-left-radius: 10px;
      border-top-right-radius: 10px;
      border-bottom-left-radius: 10px;
      border-bottom-right-radius: 10px;      
      margin-right: 1px;
      margin-left: 1px;
    ]])
  zgui.balances.e:echo("&lt;center&gt;Equilibrium")    
  
  --Tree
  zgui.balances.tree = Geyser.Label:new({
    name = "zgui.balances.tree",
    x = "3%", y = "35%",
    width = "94%",
    height = "8%",
  },zgui.balances.container) 
  zgui.balances.tree:setStyleSheet([[
      background-color: rgba(150,50,50,50%);
      border-top-left-radius: 10px;
      border-top-right-radius: 10px;
      border-bottom-left-radius: 10px;
      border-bottom-right-radius: 10px;      
      margin-right: 1px;
      margin-left: 1px;
    ]])
  zgui.balances.tree:echo("&lt;center&gt;Tree") 

  --Focus
  zgui.balances.focus = Geyser.Label:new({
    name = "zgui.balances.focus",
    x = "3%", y = "45%",
    width = "94%",
    height = "8%",
  },zgui.balances.container) 
  zgui.balances.focus:setStyleSheet([[
      background-color: rgba(150,50,50,50%);
      border-top-left-radius: 10px;
      border-top-right-radius: 10px;
      border-bottom-left-radius: 10px;
      border-bottom-right-radius: 10px;      
      margin-right: 1px;
      margin-left: 1px;
    ]])
  zgui.balances.focus:echo("&lt;center&gt;Focus")   

  --Sipping
  zgui.balances.hm = Geyser.Label:new({
    name = "zgui.balances.hm",
    x = "3%", y = "65%",
    width = "94%",
    height = "8%",
  },zgui.balances.container) 
  zgui.balances.hm:setStyleSheet([[
      background-color: rgba(150,50,50,50%);
      border-top-left-radius: 10px;
      border-top-right-radius: 10px;
      border-bottom-left-radius: 10px;
      border-bottom-right-radius: 10px;      
      margin-right: 1px;
      margin-left: 1px;
    ]])
  zgui.balances.hm:echo("&lt;center&gt;Sipping")

  --Moss
  zgui.balances.moss = Geyser.Label:new({
    name = "zgui.balances.moss",
    x = "3%", y = "75%",
    width = "94%",
    height = "8%",    
  },zgui.balances.container) 
  zgui.balances.moss:setStyleSheet([[
      background-color: rgba(150,50,50,50%);
      border-top-left-radius: 10px;
      border-top-right-radius: 10px;
      border-bottom-left-radius: 10px;
      border-bottom-right-radius: 10px;      
      margin-right: 1px;
      margin-left: 1px;
    ]])
  zgui.balances.moss:echo("&lt;center&gt;Moss")   
  
  --Herb
  zgui.balances.herb = Geyser.Label:new({
    name = "zgui.balances.herb",
    x = "5%", y = "90%",
    width = "30%",
    height = "8%",    
  },zgui.balances.container) 
  zgui.balances.herb:setStyleSheet([[
      background-color: rgba(150,50,50,50%);
      border-top-left-radius: 5px;
      border-top-right-radius: 5px;
      border-bottom-left-radius: 5px;
      border-bottom-right-radius: 5px;      
      margin-right: 1px;
      margin-left: 1px;
    ]])
  zgui.balances.herb:echo("&lt;center&gt;Herb") 

  --Smoke
  zgui.balances.smoke = Geyser.Label:new({
    name = "zgui.balances.smoke",
    x = "35%", y = "90%",
    width = "30%",
    height = "8%",    
  },zgui.balances.container) 
  zgui.balances.smoke:setStyleSheet([[
      background-color: rgba(150,50,50,50%);
      border-top-left-radius: 5px;
      border-top-right-radius: 5px;
      border-bottom-left-radius: 5px;
      border-bottom-right-radius: 5px;      
      margin-right: 1px;
      margin-left: 1px;
    ]])
  zgui.balances.smoke:echo("&lt;center&gt;Smoke") 
    
  --Salve
  zgui.balances.salve = Geyser.Label:new({
    name = "zgui.balances.salve",
    x = "65%", y = "90%",
    width = "30%",
    height = "8%",    
  },zgui.balances.container) 
  zgui.balances.salve:setStyleSheet([[
      background-color: rgba(150,50,50,50%);
      border-top-left-radius: 5px;
      border-top-right-radius: 5px;
      border-bottom-left-radius: 5px;
      border-bottom-right-radius: 5px;      
      margin-right: 1px;
      margin-left: 1px;
    ]])
  zgui.balances.salve:echo("&lt;center&gt;Salve")    
  
----------------------------------------------------------------------------- 
  zgui.balances.window:setTitle("Survival","gray")
  zgui.balances.window:show()  
  
  if not table.contains(zgui.modules, "Balances") then
    table.insert(zgui.modules, "Balances")
  end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>showBals</name>
							<packageName></packageName>
							<script>function zgui.showBals()
  if wsys then
  for k,v in pairs(wsys.bals) do
    if k == "b" or k == "e" or k == "tree" or k == "focus" or k == "hm" or k == "moss" or k == "herb" or k == "smoke" or k == "salve" then
        if v then
          zgui.balances[k]:setStyleSheet([[
            background-color: rgba(50,150,50,25%);
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
            border-bottom-left-radius: 10px;
            border-bottom-right-radius: 10px;      
            margin-right: 5px;
            margin-left: 5px;
          ]])
        else
          zgui.balances[k]:setStyleSheet([[
            background-color: rgba(150,50,50,50%);
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
            border-bottom-left-radius: 10px;
            border-bottom-right-radius: 10px;      
            margin-right: 1px;
            margin-left: 1px;
          ]])   
        end
      end
    end
   end
end

  --[[
  fitness = true,
  immunity = true, --7s
  dragonheal = true,
  fool = true,
  voice = true,
  rage = true,
  shrugging = true,
  la
  ra
  legs
  ]]--</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Logger</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>buildLogger</name>
							<packageName></packageName>
							<script>function zgui.buildLogger()
  zgui.loggerSize = zgui.loggerSize or 9
  zgui.logger = {}

  --Create the main Adjustable
  zgui.logger.window = Adjustable.Container:new({
    name = "zgui.logger.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",  
    adjLabelstyle = zgui.adjLabelstyle,
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 10,
    buttonsize = 15,          
  },main)
  zgui.logger.window:changeMenuStyle("dark")

  --Create the log container
  zgui.logger.container = Geyser.Container:new({
    name = "zgui.logger.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.logger.window)  

  --Create the Logger Console
  zgui.logger.console = Geyser.MiniConsole:new({
    name = "logDisplay",
    x = 0, y = 0,
    autoWrap = true,
    width = "100%",
    height = "100%",
    color="black",
  },zgui.logger.container)

  setFontSize("logDisplay", zgui.loggerSize)
  zgui.logger.window:setTitle("Logger","gray")
  zgui.logger.window:show()  
  
  if not table.contains(zgui.modules, "Logger") then
    table.insert(zgui.modules, "Logger")
  end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>zgui.stats()</name>
							<packageName></packageName>
							<script>function zgui.stats()
	zgui.vitals = zgui.vitals or {
 		  h = 5000,
 		  m = 5000,
 		  maxh = 5000,
 	 	  maxm = 5000,
  		oh = 5000, --old health
  		om = 5000, --old mana
 	  	xp = 0,
   		oxp = 0, --old xp
	  }

  if gmcp.Char then
    zgui.vitals.h = tonumber(gmcp.Char.Vitals.hp)
    zgui.vitals.m = tonumber(gmcp.Char.Vitals.mp)
    zgui.vitals.e = tonumber(gmcp.Char.Vitals.ep)
    zgui.vitals.w = tonumber(gmcp.Char.Vitals.wp)
  
    zgui.vitals.maxh = tonumber(gmcp.Char.Vitals.maxhp)
    zgui.vitals.maxm = tonumber(gmcp.Char.Vitals.maxmp)
    zgui.vitals.maxe = tonumber(gmcp.Char.Vitals.maxep)
    zgui.vitals.maxw = tonumber(gmcp.Char.Vitals.maxwp)
	
	----------------------------------------------------------
	  zgui.statChange() -- If you want to see health and Mana changes in Log window

    zgui.vitals.oh = zgui.vitals.h
    zgui.vitals.om = zgui.vitals.m	
  end
end

registerAnonymousEventHandler("gmcp.Char.Vitals", "zgui.stats")</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>zgui.sendLogger</name>
							<packageName></packageName>
							<script>function zgui.sendLogger(colorCode, logMessage)
  zgui.trueTime = string.cut(getTime(true, "hh:mm:ss:zzz"), 11)
	cecho("logDisplay", "&lt;gold&gt;"..zgui.trueTime)
	cecho("logDisplay", "&lt;"..colorCode.."&gt;-- "..logMessage.."\n")
	--deleteLine()
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>zgui.statChange()</name>
							<packageName></packageName>
							<script>function zgui.statChange()
  zgui.trueTime = string.cut(getTime(true, "hh:mm:ss:zzz"), 11)
	local changeAmount = 0
	local sendThisString = ""
  zgui.tempOh = zgui.tempOh or 0
  if zgui.vitals.oh then
    if zgui.vitals.oh &gt; 0 then
      zgui.tempOh = zgui.vitals.oh
    end
  end
  if not zgui.vitals.h then
--BLACKOUT Most likely, don't even try.
  else
  if not zgui.vitals.oh then
    zgui.vitals.oh = 0
  end
	if (zgui.vitals.oh + 100) &lt; zgui.vitals.h then
		changeAmount = zgui.vitals.h - zgui.vitals.oh
		sendThisString = changeAmount.." Health Gain"
		cecho("logDisplay", "&lt;green&gt;"..zgui.trueTime)
		cecho("logDisplay", "&lt;green&gt;   "..sendThisString.."\n")
	elseif zgui.vitals.oh &gt; (zgui.vitals.h + 100) then
		changeAmount = zgui.vitals.oh - zgui.vitals.h
		sendThisString = changeAmount.." Health Loss"
		cecho("logDisplay", "&lt;red&gt;"..zgui.trueTime)
		cecho("logDisplay", "&lt;red&gt;   "..sendThisString.."\n")
	end
  if not zgui.vitals.om then
    zgui.vitals.om = 0
  end
	if (zgui.vitals.om + 100) &lt; zgui.vitals.m then
		changeAmount = zgui.vitals.m - zgui.vitals.om
		sendThisString = changeAmount.." Mana Gain"
		cecho("logDisplay", "&lt;blue&gt;"..zgui.trueTime)
		cecho("logDisplay", "&lt;blue&gt;   "..sendThisString.."\n")
	elseif zgui.vitals.om &gt; (zgui.vitals.m + 100) then
		changeAmount = zgui.vitals.om - zgui.vitals.m
		sendThisString = changeAmount.." Mana Loss"
		cecho("logDisplay", "&lt;red&gt;"..zgui.trueTime)
		cecho("logDisplay", "&lt;red&gt;   "..sendThisString.."\n")
	end
	end
  
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Mapper</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>wildMoved</name>
							<packageName></packageName>
							<script>function zgui.wildMoved()
  --Update Window On Movement  
  clearWindow("Wilderness") 
  clearWindow("Ocean")
  WildernessCoords()
end
-------------------------------------------------------------------
registerAnonymousEventHandler("gmcp.Room.Info", "zgui.wildMoved")</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>buildMap</name>
							<packageName></packageName>
							<script>function zgui.buildMap()
  zgui.mapSize = zgui.mapSize or 9
  zgui.map = {}
  zgui.map.tabs = {"Wilderness","Ocean","Mapper"}
  zgui.map.color1 = "rgb(218,218,218)"
  zgui.map.color2 = "rgb(0,0,0)"
  zgui.map.color3 = "rgb(150,150,150)"
  zgui.map.width = "100%"
  zgui.map.height = "100%"
  zgui.map.current = zgui.map.tabs[3]

  --Create the Adjustable container
  --Our tabbed window will need a container. This will be the bottom layer. Containers are invisible so no need to set a stylesheet. 
  zgui.map.window = Adjustable.Container:new({
    name = "zgui.map.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",  
    adjLabelstyle = zgui.adjLabelstyle,
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 10,
    buttonsize = 15,          
  },main)
  zgui.map.window:changeMenuStyle("dark")

  --Create the main container
  zgui.map.container = Geyser.Container:new({
    name = "zgui.map.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.map.window)
  
 --Create an HBox
 --All of our tabs will be evenly spaced. So we'll create an HBox to sit at the top of our container. 
 zgui.map.header = Geyser.HBox:new({
    name = "zgui.map.header",
    x = 0, y = 0,
    width = "100%",
    height = "0%",
  },zgui.map.container)  
  setBackgroundColor("zgui.map.header", 0,0,0,255) 
  
  --Create a label
  --This label will serve as a container for each window. It sits right underneath the HBox we just created for the tabs. 
  zgui.map.footer = Geyser.Label:new({
    name = "zgui.map.footer",
    x = 0, y = 0,
    width = "100%",
    height = "100%",
  },zgui.map.container)
  
  --Each window actually has two labels. One for the light blue background, and another for the dark blue center. This will create that dark blue center.
  zgui.map.center = Geyser.Label:new({
    name = "zgui.map.center",
    x = 0, y = 0,
    width = "100%",
    height = "100%",
  },zgui.map.footer)

    zgui.map.Mapper = Geyser.Label:new({
      name = "zgui.map.Mapper",
      x = 0, y = 0,
      width = "100%",
      height = "100%",
    },zgui.map.footer)
    zgui.map["Mappercenter"] = Geyser.Label:new({
      name = "zgui.map.Mappercenter",
      x = 0, y = 0,
      width = "100%",
      height = "100%",
      bgColor = "black",
    },zgui.map.Mapper)
    zgui.map.Mapper:hide()

    zgui.map.Wilderness = Geyser.Label:new({
      name = "zgui.map.Wilderness",
        x = 0, y = 0,
      width = "100%",
      height = "100%",
    },zgui.map.footer)
    zgui.map["Wildernesscenter"] = Geyser.Label:new({
      name = "zgui.map.Wildernesscenter",
      x = 0, y = 0,
      width = "100%",
      height = "100%",
      bgColor = "black",
    },zgui.map.Wilderness)
    zgui.map.Wilderness:hide()  
    
    zgui.map.Ocean = Geyser.Label:new({
      name = "zgui.map.Ocean",
      x = 0, y = 0,
      width = "100%",
      height = "100%",
      bgColor = "black",
    },zgui.map.footer)
    zgui.map["Oceancenter"] = Geyser.Label:new({
      name = "zgui.map.Oceancenter",
      x = 0, y = 0,
      width = "100%",
      height = "100%",
    },zgui.map.Ocean)
    zgui.map.Ocean:hide()     
  
  zgui.map.mapperWindow = Geyser.Mapper:new({
    name = "Mapper",
    x = 0, y = 0,
    width = "100%",
    height = "100%",
  },zgui.map.Mappercenter)
  showWindow("Mapper")
  
  zgui.map.oceanWindow = Geyser.MiniConsole:new({
    name = "Ocean",
    x = 0, y = 0,
    width = "100%",
    height = "100%",
  },zgui.map.Oceancenter)  
  setBackgroundColor("Ocean", 0,0,0,255)
  hideWindow("Ocean")
 
  zgui.map.wildernessWindow = Geyser.MiniConsole:new({
    name = "Wilderness",
    x = 0, y = 0,
    width = "100%",
    height = "100%",
  },zgui.map.Wildernesscenter)  
  setBackgroundColor("Wilderness", 0,0,0,255)  
  hideWindow("Wilderness")

  setFontSize("Ocean", zgui.mapSize)
  setFontSize("Wilderness", zgui.mapSize)
  zgui.map.window:setTitle("Map","gray")
  zgui.map.window:show()  
  
  if not table.contains(zgui.modules, "Map") then
    table.insert(zgui.modules, "Map")
  end
end</script>
							<eventHandlerList />
						</Script>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>WildWalker</name>
							<packageName></packageName>
							<script>wildernessLocations = wildernessLocations or {}</script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>WildernessCoords</name>
								<packageName></packageName>
								<script>function WildernessCoords(...)
 local displayRoomsWithin = 100
 if gmcp.Room.Info.ohmap and gmcp.Room.Info.environment ~= "Vessel" then
    local posx,posy,chunkx,chunky,x,y = translateWilderness()
    cecho("Wilderness", "&lt;gray&gt;-----[ Wilderness Coords ]----")
    cecho("Wilderness", "\n&lt;gray&gt;-- &lt;ansiLightBlack&gt;Chunk: &lt;ansiLightRed&gt;"..chunk)
--    cehco("\n&lt;ansiLightBlack&gt;Cx:&lt;ansiLightRed&gt;" .. chunkx .. " &lt;ansiLightBlack&gt;Cy:&lt;ansiLightRed&gt;".. chunky)
--    cecho("\n&lt;ansiLightBlack&gt;X:&lt;ansiLightRed&gt;"..x .. "&lt;ansiLightBlack&gt; Y:&lt;ansiLightRed&gt;"..y)
    cecho("Wilderness", " : &lt;ansiLightBlack&gt;X:&lt;ansiLightRed&gt;".. posx .. "&lt;ansiLightBlack&gt; Y:&lt;ansiLightRed&gt;"..posy.." &lt;gray&gt;--".."\n")
    --cecho("\n&lt;ansiGreen&gt;------------------------")
    for k,v in pairsByKeys(wildernessExits) do
    local dir,dash = directionsTo(k)
    local color = "&lt;ansiWhite&gt;"
      if dir == "enter" then dir = "&lt;ansiGreen&gt;all around you!" else dir = "to the " .. dir end
      if k == wildernessWhere then color = "&lt;ansiLightRed&gt;" end
      if k == wildernessWhere or (math.abs(posx-v.x)&lt;displayRoomsWithin  and 
                                  math.abs(posy-v.y)&lt;displayRoomsWithin) then
        cecho("\n".. color.. v.name .. " is " .. dir .. "")
      end -- if
    end-- for
  end-- if
end-- func

function translateWilderness(num)
  local info = gmcp.Room.Info
  local num = num or info.num
  local posx,posy,chunkx,chunky,x,y
  if info.ohmap then
    --wilderness rooms always have 6 digits for x and y, but can have
    --1, 2, or theoretically 3 digits for their chunk number
    chunk,x,y = string.match(num, "(.?.?.)(...)(...)")
    --4 chunks per row, so let's change the chunk number into a chunk position instead
    chunkx = chunk%4
    chunky = math.ceil(chunk/4)
    --set an actual x/y grid position based on our chunk and our current x/y
    posx = (chunkx-1)*250 + x 
    posy = ((chunky-1)*250 + y)*-1 --invert our y so grid math works right,
                                   --because Achaea y pos is top to bottom
  end
  return posx, posy, chunkx, chunky, x*1, y*1
end

local firstSpace, secondSpace = 25,30 </script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>Wilderness Walking Brains</name>
								<packageName></packageName>
								<script>function travelTo(where,dash) -- Tries to get where we are going. Does a decent job.
  local dash = dash or ""
  local dir, num = directionsTo(where:lower())
  if dir == false then
    return false
  elseif dir == "enter" then
    send("enter",false)
  end
  num = num or ""
  dir = closestDir(dir)
  send(dash .. " " .. dir .. " " .. num,false)
end

function closestDir(dir) -- gives us the closest dir in case of impassable exits
  local rexits = gmcp.Room.Info.exits
  if (rexits[translateDir[dir]] or dir == "enter") then return dir end
  local dir = translateDir[dir]
  local compass = {"n","ne","e","se","s","sw","w","nw"}
  local translateDir = {
    north = "n", northeast = "ne", east = "e", southeast = "se", 
    south = "s", southwest = "sw", west = "w", northwest = "nw" } 
  local untranslateDir = { 
    nw = "northwest", w = "west", se = "southeast", s = "south",
    sw = "southwest", ne = "northeast", e = "east", n = "north" }
  local exit
  --populate possible exits
  local want = table.index_of(compass,dir)
  
  for i = 1,4 do
    local ccw, cw = 0,0
    --these circle past the respective ends to the next exit on the circle
    if want-i &lt; 1 then
      ccw = 8
    end
    if want+i &gt; 8 then
      cw = 8
    end
    -- check if the exit exists, use it if it does
    exit = rexits[compass[want-i+ccw]] and compass[want-i+ccw]
    if exit then break end
    exit = rexits[compass[want+i-cw]] and compass[want+i-cw]
    if exit then break end 
  end
  
  return untranslateDir[exit]
  
end

function directionsTo(where)
  local going
  if wildernessExits[where] then
    going = wildernessExits[where]
  else
    echo("Don't know how to get there\n")
    return false
  end
  local x,y = translateWilderness()
  local riseDist,runDist
  riseDist = going.y-y
  runDist = going.x-x
  local rise,run = riserun(riseDist,runDist)
  riseDist = math.abs(riseDist)
  runDist = math.abs(runDist)
  currentHead = math.max(riseDist,runDist)
  local directionToGo = ""
  --More precise directional code
  if rise == 0 then
      if run &gt; 0 then -- directly east or west of us (or at us)
        directionToGo = "east"
      elseif run &lt; 0 then
        directionToGo = "west"
	  else
	    return "enter"
      end
  elseif run == 0 then
      if rise &gt; 0 then --directly north or south of us
        directionToGo = "north"
      elseif rise &lt; 0 then
        directionToGo = "south"
	else
	  cecho("&lt;red&gt;UNTRAPPED DIRECTION run 0")
      end
  -- if it's negative, it's southeast or northwest
  elseif rise/run &lt; -2 then -- at an angle, but a steep one
    if rise &lt; 0 then
      directionToGo = "south" -- south-southeast
    elseif run &lt; 0 then
      directionToGo = "north" -- north-northwest
	else
	  cecho("&lt;red&gt;UNTRAPPED DIRECTION &lt; -2")
    end
  elseif rise/run &lt; -0.5 then -- at a normal angle
    if rise &lt; 0 then
      directionToGo = "southeast"
    elseif run &lt; 0 then
      directionToGo = "northwest"
	else
	  cecho("&lt;red&gt;UNTRAPPED DIRECTION &lt; -0.5")
    end
  elseif rise/run &lt; 0 then -- at an angle, but a shallow one
      if rise &lt; 0 then
      directionToGo = "east" -- east-southeast
    elseif run &lt; 0 then
      directionToGo = "west" -- west-northwest
	else
	  cecho("&lt;red&gt;UNTRAPPED DIRECTION &lt; 0")
    end
  -- if it's positive, it's southwest or northeast
  elseif rise/run &gt; 2 then -- steep angle
    if rise &lt; 0 then
      directionToGo = "south" -- south-southwest
    elseif rise &gt; 0 then
      directionToGo = "north" -- north-northeast
	else
	  cecho("&lt;red&gt;UNTRAPPED DIRECTION &gt; 2")
    end  
  elseif rise/run &gt; 0.5 then -- normal angle
    if rise &lt; 0 then
      directionToGo = "southwest"
    elseif rise &gt; 0 then
      directionToGo = "northeast"
	else
	  cecho("&lt;red&gt;UNTRAPPED DIRECTION &gt; 0.5")
    end  
  elseif rise/run &gt; 0 then -- shallow angle
    if rise &lt; 0 then
      directionToGo = "west" -- west-southwest
    elseif rise &gt; 0 then
      directionToGo = "east" -- east-northeast
	else
	  cecho("&lt;red&gt;UNTRAPPED DIRECTION &gt; 0")
    end  
  else
    cecho("&lt;red&gt;UNTRAPPED DIRECTION")
  end
  --[[ old directional code
  --north south
  if y &lt; going.y then
    directionToGo = directionToGo .. "north"
  elseif y &gt; going.y then
    directionToGo = directionToGo .. "south"
  end
  --east west
  if x &gt; going.x then
    directionToGo = directionToGo .. "west"
  elseif x &lt; going.x then
    directionToGo = directionToGo .. "east"
  end  --]]
  return directionToGo, currentHead
end
</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>Wilderness Exits</name>
								<packageName></packageName>
								<script>wildernessExits = wildernessExits or {
aaleneast =                {name="The Aalen Forest (east)",       x = 427,  y = -700},
aalennorth =               {name="The Aalen Forest (north)",      x = 383,  y = -656},
aalensouth =               {name="The Aalen Forest (south)",      x = 401,  y = -750},
aalenwest =                {name="The Aalen Forest (west)",       x = 372,  y = -710},
aranriod =                 {name="The Village of Aran'riod",      x = 419,  y = -315},
ashtan =                   {name="Ashtan",                        x = 373,  y = -518},
baltoackeast =             {name="Bataoac, the Northern Giant (right leg)",x = 365,  y = -186},
baltoacwest =              {name="Bataoac, the Northern Giant (left leg)",x = 361,  y = -186},
cormorantrock =            {name="Cormorant Rock",                x = 396,  y = -486},
cyrene =                   {name="Cyrene",                        x = 475,  y = -782},
dardanicplainseast =       {name="Dardanic Plains (east)",        x = 520,  y = -405},
dardanicplainsnorth =      {name="Dardanic Plains (north)",       x = 450,  y = -420},
dardanicplainssouth =      {name="Dardanic Plains (south)",       x = 513,  y = -448},
dardanicplainssoutheast =  {name="Dardanic Plains (southeast)",   x = 560,  y = -451},
dardanicplainssouthwest =  {name="Dardanic Plains (southwest)",   x = 497,  y = -456},
dardanicplainswest =       {name="Dardanic Plains (west)",        x = 423,  y = -421},
deloseast =                {name="Delos (east)",                  x = 617,  y = -629},
deloswest =                {name="Delos (west)",                  x = 612,  y = -629},
digsiteblood =             {name="The Digsite of Blood",          x = 522,  y = -797},
digsiteequilibrium =       {name="The Digsite of Equilibrium",    x = 615,  y = -463},
digsitemind =              {name="The Digsite of the Mind",       x = 438,  y = -503},
digsitepain =              {name="Digsite of Pain",               x = 340,  y = -686},
digsitesoul =              {name="Digsite of the Soul",           x = 568,  y = -147},
digsitewealth =            {name="The Digsite of Wealth",         x = 498,  y = -864},
dreamspear =               {name="Dreamspear",                    x = 268,  y = -290},
eleusis =                  {name="Eleusis",                       x = 620,  y = -605},
falaqtor =                 {name="The Tower of Falaq'tor",        x = 575,  y = -152},
fissure =                  {name="The Fissure of Echoes",         x = 557,  y = -198},
harae =                    {name="The Isle of Harae",             x = 283,  y = -619},
hashan =                   {name="Hashan",                        x = 642,  y = -511},
hriddan =                  {name="Hriddan Settlement",            x = 278,  y = -202},
hthrak =                   {name="Vents of Hthrak",               x = 422,  y = -168},
inbhirness =               {name="Inbhir Ness",                   x = 262,  y = -331},
isaia =                    {name="Isaia",                         x = 263,  y = -189},
istareast =                {name="Istar Jungle (east)",           x = 458,  y = -191},
istarwest =                {name="Istar Jungle (west)",           x = 438,  y = -204},
kamleikan =                {name="The Village of Kamleikan",      x = 387,  y = -278},
mhaldor =                  {name="Mhaldor Harbour",               x = 218,  y = -568},
moghedu =                  {name="Moghedu",                       x = 528,  y = -771},
muurn =                    {name="Muurn River Valley Harbour",    x = 394,  y = -772},
newhope =                  {name="Isle of New Hope",              x = 623,  y = -818},
nithmia =                  {name="The Northern Ithmia",           x = 603,  y = -561},
northerntundra =           {name="Northern Tundra",               x = 356,  y = -147},
northreacheast =           {name="Northreach (east)",             x = 434,  y = -327},
northreachharbour =        {name="Northreach Forest Harbour",     x = 410,  y = -426},
northreachlake =           {name="Northreach Lake",               x = 465,  y = -326},
northreachnorth =          {name="Northreach (north)",            x = 403,  y = -334},
northreachwest =           {name="Northreach (west)",             x = 380,  y = -352},
phereklos =                {name="The ruins of Phereklos",        x = 387,  y = -370},
rheodad =                  {name="Rheodad",                       x = 268,  y = -372},
rheodadharbour =           {name="Rheodad Harbour",               x = 243,  y = -444},
riagath =                  {name="The Caverns of Riagath",        x = 409,  y = -221},
ripariumharbour =          {name="Riparium Harbour",              x = 717,  y = -622},
saoghal =                  {name="Saoghal Valley",                x = 248,  y = -311},
sealioncove =              {name="Sea Lion Cove",                 x = 514,  y = -842},
shallam =                  {name="Shallam",                       x = 642,  y = -758},
shallamharbour =           {name="The Harbour of Shallam",        x = 641,  y = -762},
shastaan =                 {name="Shastaan",                      x = 696,  y = -719},
shastaanharbour =          {name="Shastaan Harbour",              x = 705,  y = -717},
tasurke =                  {name="Tasur'ke",                      x = 684,  y = -504},
tasurkeharbour =           {name="Tasur'ke Harbour",              x = 685,  y = -500},
tasurkehouse =             {name="A private house in Tasur'ke",   x = 680,  y = -484},
tenwat =                   {name="Tenwat Prison",                 x = 556,  y = -277},
thera =                    {name="New Thera",                     x = 387,  y = -560},
thraasi =                  {name="Thraasi Harbour",               x = 326,  y = -652},
tomacula =                 {name="The Village of Tomacula",       x = 490,  y = -601},
valho =                    {name="Valho Coast",                   x = 640,  y = -211},
wegava =                   {name="Wegava Valley",                 x = 485,  y = -299},
} </script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>Wilderness Exit Utilities</name>
								<packageName></packageName>
								<script>local firstSpace, secondSpace = 25,30 

function makeWildExit(name,fullname,num)
  local first,second = firstSpace,secondSpace
  local blank1 = string.rep(" ", first-#name)
  local blank2 = string.rep(" ", second-#fullname)
  local x,y = translateWilderness(num)
  local s1 = string.rep(" ", 5-#(""..x))
--  echo(string.format([[%s =%s{name="%s",%sx = %s,%sy = %s},]].."\n",name:lower(),blank1,fullname,blank2,x,s1,y))
  wildernessExits[name] = {name = fullname, x = x, y = y}
  reDrawWildernessExitTable()
end

function reDrawWildernessExitTable()
  -- Just used for pretifying the table, makes it easier to change spacing and such.
  local first,second = firstSpace,secondSpace
  echo "wildernessExits = wildernessExits or {\n"
  for k,v in pairsByKeys(wildernessExits) do
    local name, fullname = k, v.name 
    local x,y = v.x,v.y
    local blank1 = string.rep(" ", first-#name)
    local blank2 = string.rep(" ", second-#fullname)
    local s1 = string.rep(" ", 5-#(""..x))
    echo(string.format([[%s =%s{name="%s",%sx = %s,%sy = %s},]].."\n",name,blank1,fullname,blank2,x,s1,y))
  end
  echo("} \n \n ")
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>rise and run</name>
								<packageName></packageName>
								<script>local function gcd(a, b)
    repeat
        if a == 0 or b == 0 then return 0 end
        a, b = b, a % b
    until b == 0
    return a
end

function riserun(numerator, denominator)
    local conumerator = 1
    local codenominator = 1

    if numerator &lt; 0 then
        conumerator = -1
        numerator = -numerator
    end

    if denominator&lt; 0 then
        codenominator = -1
        denominator= -denominator
    end
    local n = gcd(numerator, denominator)
    -- don't do div/0 math
    if numerator ~= 0 then numerator = numerator/n end
    if denominator ~= 0 then denominator = denominator/n end
    -- if 1 is 0 then the rise or run of the other is 1
    if (numerator == 0 or denominator == 0) and not (numerator == 0 and denominator == 0) then
      if numerator == 0 then denominator = 1 end
      if denominator == 0 then numerator = 1 end
      
    end

    return conumerator * numerator, codenominator * denominator
end
</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>Foray Exits</name>
								<packageName></packageName>
								<script>forayExits = {
arankesh = { jaru = {x = 478, y = -287}, 
 },
mirrortower = {
tenwat = {},
morindar = {},
phereklos = {},
shamtota = {},
},
sevet = {
shalakhulia = {}
},


}
</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>pairsByKeys</name>
								<packageName></packageName>
								<script>function pairsByKeys(t, f)
  local a = {}
  for n in pairs(t) do
    table.insert(a, n)
  end
  table.sort(a, f)
  local i = 0
  -- iterator variable
  local iter =
    function()
      -- iterator function
      i = i + 1
      if a[i] == nil then
        return nil
      else
        return a[i], t[a[i]]
      end
    end
  return iter
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>New script</name>
								<packageName></packageName>
								<script>
wildernessLocations["riagath"] = {["x"] = 409, ["y"] = 221, ["vnum"] = 2159221}
 
wildernessLocations["northreachnorth"] = {["x"] = 434, ["y"] = 327, ["vnum"] = 6153084}
wildernessLocations["northreachwest"] = {["x"] = 403, ["y"] = 334, ["vnum"] = 6184077}
wildernessLocations["northreachwestwest"] = {["x"] = 380, ["y"] = 352, ["vnum"] = 6130102}
 
--wildernessLocations["northreachwest"] = {["x"] = 434, ["y"] = 327}
--wildernessLocations["northreachnorth"] = {["x"] = 403, ["y"] = 334, ["vnum"] = 6184077}
wildernessLocations["aran'riod"]  = {["x"] = 419, ["y"] = 315, ["vnum"] = 6169065}
wildernessLocations["morindar"]   = {["x"] = 470, ["y"] = 260, ["vnum"] = 6220010}
wildernessLocations["fissure"]    = {["x"] = 557, ["y"] = 198, ["vnum"] = 3057198}
wildernessLocations["wegava"]     = {["x"] = 485, ["y"] = 299, ["vnum"] = 6235049}
wildernessLocations["saoghal"]    = {["x"] = 248, ["y"] = 311, ["vnum"] = 5248061}
wildernessLocations["dreamspear"] = {["x"] = 268, ["y"] = 290, ["vnum"] = 6018040}
wildernessLocations["pash"] =       {["x"] = 642, ["y"] = 758, ["vnum"] = 15142008}
wildernessLocations["rheodad"] =    {["x"] = 268, ["y"] = 372, ["vnum"] = 6018122}
wildernessLocations["moghedu"] =    {["x"] = 528, ["y"] = 771, ["vnum"] = 15028021}
wildernessLocations["dunvalley"] =  {["x"] = 437, ["y"] = 678, ["vnum"] = 10187178}
wildernessLocations["aalenforesteast"] = {["x"] = 427, ["y"] = 700, ["vnum"] = 10177200}
wildernessLocations["aalenforestwest"] = {["x"] = 372, ["y"] = 710, ["vnum"] = 10122210}
wildernessLocations["aalenforestnorth"] = {["x"] = 383, ["y"] = 656, ["vnum"] = 10133156}
wildernessLocations["easternithmia"] = {["x"] = 620, ["y"] = 605, ["vnum"] = 11120105}
 
--harbours
wildernessLocations["phereklos"] =  {["x"] = 387, ["y"] = 370, ["vnum"] = 6137120}
 
--digsites
wildernessLocations["digsitesoul"] = {["x"] = 568, ["y"] = 147, ["vnum"] = 3068147}  -- Northern Tip of Glacier north of Fissure
wildernessLocations["digsiterage"] = {["x"] = 527, ["y"] = 740, ["vnum"] = 11027240}  -- Middle of Mhojave
 
--Other
wildernessLocations["tenwat"] = {["x"] = 556, ["y"] = 277, ["vnum"] = 7056027}
 
--Harbours
wildernessLocations["valhoharbour"] = {["x"] = 640, ["y"] = 211, ["vnum"] = 3140211}</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Prompt</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>sendPrompt</name>
							<packageName></packageName>
							<script>function zgui.sendPrompt()

end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>buildPrompt</name>
							<packageName></packageName>
							<script>function zgui.buildPrompt()
  zgui.promptSize = zgui.promptSize or 9
  zgui.prompt = {}
  
  --Create the prompt Adjustable
  zgui.prompt.window = Adjustable.Container:new({
    name = "zgui.prompt.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",        
    adjLabelstyle = zgui.adjLabelstyle,
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 10,
    buttonsize = 15,
  },main)
  zgui.prompt.window:changeMenuStyle("dark")

  --Create the prompt container
  zgui.prompt.container = Geyser.Container:new({
    name = "zgui.prompt.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.prompt.window)  

  --Create the prompt Console
  zgui.prompt.console = Geyser.MiniConsole:new({
    name = "myPrompt",
    x = 0, y = 0,
    autoWrap = true,
    width = "100%",
    height = "100%",
    color="black",
  },zgui.prompt.container) 
 
  setFontSize("myPrompt", zgui.promptSize)
  zgui.prompt.window:setTitle("Prompt","gray")
  zgui.prompt.window:show()  
  
  if not table.contains(zgui.modules, "Prompt") then
    table.insert(zgui.modules, "Prompt")
  end
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Gold</name>
						<packageName></packageName>
						<script>gold = gold or {}
gold.t = gold.t or {}
gold.year = gold.year or false
gold.month = gold.month or false
gold.timer = gold.timer or false
gold.current = gold.current or false
gold.character = gold.character or false
-- variable to check if we asked for IRE.Time support
gold.coresupport = gold.coresupport or false
-- this is a variable temporarily holding the gold got in inventory (needed for attractors)
gold.attractor = gold.attractor or false</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>Gold Counter</name>
							<packageName></packageName>
							<script>function zgui.buildGold()
  zgui.goldSize = zgui.goldSize or 9
  zgui.gold = {}

  --Create the gold Adjustable
  zgui.gold.window = Adjustable.Container:new({
    name = "zgui.gold.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",    
    adjLabelstyle = zgui.adjLabelstyle,    
  },main)
  zgui.gold.window:changeMenuStyle("dark")

  --Create the gold container
  zgui.gold.container = Geyser.Container:new({
    name = "zgui.gold.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.gold.window)  

  --Create the gold Console
  zgui.gold.console = Geyser.MiniConsole:new({
    name = "Gold Collection",
    x = 0, y = 0,
    autoWrap = true,
    width = "100%",
    height = "100%",
    color="black",
  },zgui.gold.container) 
 
  setFontSize("Gold Collection", zgui.goldSize)
  zgui.gold.window:show()
  
  if not table.contains(zgui.modules, "Gold") then
    table.insert(zgui.modules, "Gold")
  end
  gold.show()
end


function gold.print(_text)
  cecho("Gold Collection", _text.."\n")
end

-- call this function from alias to show gold drops
function gold.show()

  if gold.character and gold.t[gold.character] then
  
    local _year, _month, _total, _text = 0, 0, 0, ""
    for _month=1,12,1 do
      if _month == gold.month then _text = _text.."&lt;white&gt;" else _text=_text.."&lt;dim_gray&gt;" end
      _text = _text..string.rep(" ",5-string.len(_month)).._month
    end
    _text = "&lt;dim_gray&gt; Year".._text.."  &lt;dim_gray&gt;Total"
  
    for k, v in pairs(gold.t[gold.character]) do
    
      if _year ~= v.year then
        _total = 0
        _month = 0
        _year = v.year
        -- change color if it's the same year as we have
        if _year == gold.year then _text = _text.."&lt;white&gt;" else _text=_text.."&lt;dim_gray&gt;" end
        _text = _text.."\n"..string.rep(" ",5-string.len(v.year))..v.year.." &lt;gold&gt;"
      end
      
      -- check for months without gold drops since last shown and add spaces
      for _ = _month, v.month-2, 1 do _text = _text..string.rep(" ",5) end
      _month = v.month
      
      -- add gold dropped for this month and add to the total
      _text = _text..string.rep(" ",4-string.len(math.floor(v.amount / 1000)))..math.floor(v.amount / 1000).."k"
      _total = _total + v.amount
      
      -- if this is the last month of the year add the total to the string
      if _month == 12 then
        _text = _text..string.rep(" ",5-string.len(math.floor(_total / 1000)))..math.floor(_total / 1000).."k"
      end
      
    end
    
    -- add spaces from the last month to get to the total
    for _ = _month, 11, 1 do _text = _text..string.rep(" ",5) end
    -- 
    _text = _text..string.rep(" ",5-string.len(math.floor(_total / 1000)))..math.floor(_total / 1000).."k"
    
    gold.print(_text)
    
  elseif gold.character then
    gold.print("&lt;gold&gt;No gold has been counted for this character: &lt;white&gt;"..gold.character:title().."&lt;gold&gt;.")
  else
    gold.print("&lt;gold&gt;No character found yet!")
  end 

end

registerAnonymousEventHandler("gmcp.Char.Status", "gold.increased")
function gold.increased()

  if not gold.coresupport then sendGMCP([[Core.Supports.Add ["IRE.Time 1"] ]]) gold.coresupport = true end

  -- check that we have gold status
	if gmcp.Char.Status and gmcp.Char.Status.gold then
  
    -- set current character name
    if gmcp.Char.Status.name then gold.character = string.lower(gmcp.Char.Status.name) end
    
    -- check that we have set the current gold and that our gold has increased and IF we recently got corpse and therefor set the timer)
    if gold.current and tonumber(gmcp.Char.Status.gold) &gt; gold.current and gold.timer then
          
      gold.add(tonumber(gmcp.Char.Status.gold) - gold.current)
    
    -- gold attractors
    -- this section adds our gold increase to a variable for 0.1 seconds so that the other
    -- gmcp for new corpse in inventory (which comes after gold drop) counts this gold as a denizen drop
    elseif gold.current and tonumber(gmcp.Char.Status.gold) &gt; gold.current then
    
      gold.attractor = tonumber(gmcp.Char.Status.gold) - gold.current
      tempTimer(0.1, [[ gold.attractor = false ]])
      
    end
  
    -- set current gold
    gold.current = tonumber(gmcp.Char.Status.gold)

  end
 
end


function gold.add(_amount)

  -- dont count anything if we dont know the year/month
  if not gold.month or not gold.year then return false end
  
  -- remove timer if any and reset variable
  if gold.timer then killTimer(gold.timer) gold.timer = false end
  
  -- create a table for this character if none exist
  if not gold.t[gold.character] then gold.t[gold.character] = {} end
  
  -- loop table and check if we have anything set already for this year and month, if so add amount, save and stop
  for k, v in pairs(gold.t[gold.character]) do
    if v.year == gold.year and v.month == gold.month then
      v.amount = v.amount + _amount
      gold.save()
      return true
    end
  end

  -- could'nt find any match in table we just looped, create new row for this year &amp; month, save
  table.insert(gold.t[gold.character], { year = gold.year, month = gold.month, amount = _amount })
  gold.save()

end


registerAnonymousEventHandler("gmcp.Char.Items.Add", "gold.slain")
function gold.slain()

  -- checks if a corpse has been added to the inventory
  if gmcp.Char.Items.Add.location == "inv" and string.find(gmcp.Char.Items.Add.item.name, "corpse") then

    -- check if we 0.1 seconds earlier got gold in our inventory, if so we count this gold as denizen drop from attractor
    if gold.attractor then
      gold.add(gold.attractor)
      gold.attractor = false
    -- if no gold.attractor, wait 6 seconds for a gold pickup
    else
      gold.timer = tempTimer(6, [[ gold.timer = false ]])
    end
    
  end

end


registerAnonymousEventHandler("gmcp.IRE.Time.Update", "gold.timeupdate")
function gold.timeupdate()
  if gmcp.IRE.Time.Update.year then gold.year = tonumber(gmcp.IRE.Time.Update.year) end
  if gmcp.IRE.Time.Update.mon then gold.month = tonumber(gmcp.IRE.Time.Update.mon) end
end


registerAnonymousEventHandler("gmcp.IRE.Time.List", "gold.timelist")
function gold.timelist()
  if gmcp.IRE.Time.List.year then gold.year = tonumber(gmcp.IRE.Time.List.year) end
  if gmcp.IRE.Time.List.mon then gold.month = tonumber(gmcp.IRE.Time.List.mon) end
end


function gold.save()
  table.save(getMudletHomeDir().."/gold", gold.t)
end


registerAnonymousEventHandler("sysConnectionEvent", "gold.timeload")
function gold.timeload()
  -- check if previous table exist if so load it
  if io.exists(getMudletHomeDir().."/gold") then table.load(getMudletHomeDir().."/gold", gold.t) end
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Allies</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>buildAlly</name>
							<packageName></packageName>
							<script>function zgui.buildAlly()
  zgui.allySize = zgui.allySize or 9
  zgui.ally = {}

  --Create the ally Adjustable
  zgui.ally.window = Adjustable.Container:new({
    name = "zgui.ally.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",  
    adjLabelstyle = zgui.adjLabelstyle,
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 10,
    buttonsize = 15,          
  },main)
  zgui.ally.window:changeMenuStyle("dark")

  --Create the ally container
  zgui.ally.container = Geyser.Container:new({
    name = "zgui.ally.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.ally.window)  

  --Create the ally Console
  zgui.ally.console = Geyser.MiniConsole:new({
    name = "allyDisplay",
    x = 0, y = 0,
    autoWrap = true,
    width = "100%",
    height = "100%",
    color="black",
  },zgui.ally.container) 

  setFontSize("allyDisplay", zgui.allySize)
  zgui.ally.window:setTitle("Allies","gray")
  zgui.ally.window:show()
  
  if not table.contains(zgui.modules, "Ally") then
    table.insert(zgui.modules, "Ally")
  end  
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>showAllies</name>
							<packageName></packageName>
							<script>function zgui.showAllies()
  clearWindow("allyDisplay")
	for i=1, table.size(zgui.allies), 1 do
		cecho("allyDisplay", "&lt;white&gt;"..i.."- &lt;gray&gt;"..zgui.allies[i].."\n")
	end
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Enemies</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>buildEnemy</name>
							<packageName></packageName>
							<script>function zgui.buildEnemy()
  zgui.enemySize = zgui.enemySize or 9
  zgui.enemy = {}

  --Create the enemy Adjustable
  zgui.enemy.window = Adjustable.Container:new({
    name = "zgui.enemy.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",  
    adjLabelstyle = zgui.adjLabelstyle,
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 10,
    buttonsize = 15,          
  },main)
  zgui.enemy.window:changeMenuStyle("dark")

  --Create the enemy container
  zgui.enemy.container = Geyser.Container:new({
    name = "zgui.enemy.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.enemy.window)  

  --Create the enemy Console
  zgui.enemy.console = Geyser.MiniConsole:new({
    name = "enemyDisplay",
    x = 0, y = 0,
    autoWrap = true,
    width = "100%",
    height = "100%",
    color="black",
  },zgui.enemy.container) 

  setFontSize("enemyDisplay", zgui.enemySize)
  zgui.enemy.window:setTitle("Enemies","gray")
  zgui.enemy.window:show()
  
  if not table.contains(zgui.modules, "Enemy") then
    table.insert(zgui.modules, "Enemy")
  end  
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>showEnemies</name>
							<packageName></packageName>
							<script>function zgui.showEnemies()
  clearWindow("enemyDisplay")
	for i=1, table.size(zgui.enemies), 1 do
		cecho("enemyDisplay", "&lt;white&gt;"..i.."- &lt;gray&gt;"..zgui.enemies[i].."\n")
	end
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Defences</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>buildDefs</name>
							<packageName></packageName>
							<script>function zgui.buildDefence()
  zgui.defenceSize = zgui.defenceSize or 9
  zgui.defence = {}

  --Create the defence Adjustable
  zgui.defence.window = Adjustable.Container:new({
    name = "zgui.defence.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",  
    adjLabelstyle = zgui.adjLabelstyle,
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 10,
    buttonsize = 15,          
  },main)
  zgui.defence.window:changeMenuStyle("dark")

  --Create the defence container
  zgui.defence.container = Geyser.Container:new({
    name = "zgui.defence.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.defence.window)  

  --Create the defence Console
  zgui.defence.console = Geyser.MiniConsole:new({
    name = "defenceDisplay",
    x = 0, y = 0,
    autoWrap = true,
    width = "100%",
    height = "100%",
    color="black",
  },zgui.defence.container) 

  setFontSize("defenceDisplay", zgui.defenceSize)
  zgui.defence.window:setTitle("Defences","gray")
  zgui.defence.window:show()
  
  if not table.contains(zgui.modules, "Defence") then
    table.insert(zgui.modules, "Defence")
  end  
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>showDefs</name>
							<packageName></packageName>
							<script>function zgui.showDefs()
  if zgui.defence then
  ----------------------------------------
  -- Player Defences		
	clearWindow("defenceDisplay")
	if table.size(gmcp_defs) &gt; 0 then
		--for i=1, table.size(gmcp_defs), 1 do
		--	cecho("defenceDisplay", "&lt;green&gt; - &lt;grey&gt;"..gmcp_defs[i].."\n")
		--end  
  
		local missingDefs = false
		for i=1, table.size(zgui.defs.classless.combat), 1 do
			if not table.contains(gmcp_defs, zgui.defs.classless.combat[i]) then
				setBackgroundColor("defenceDisplay",40,10,10,255)	
				missingDefs = true
				cecho("defenceDisplay", "&lt;red&gt;Missing:\n")
				break
			end
		end

		if not missingDefs then
			if zgui.defs.class[gmcp.Char.Status.class] then
			for i=1, table.size(zgui.defs.class[gmcp.Char.Status.class]), 1 do
				if not table.contains(gmcp_defs, zgui.defs.class[gmcp.Char.Status.class][i]) then
					setBackgroundColor("defenceDisplay",40,10,10,255)	
					missingDefs = true
					cecho("defenceDisplay", "&lt;red&gt;Missing:\n")
					break
				end
			end		
			end
		end
		
		if not missingDefs then
			setBackgroundColor("defenceDisplay", 0, 0, 0,255)	
		end	
		
		if zgui.defs.class[gmcp.Char.Status.class] then	
		for i=1, table.size(zgui.defs.class[gmcp.Char.Status.class]), 1 do
			if not table.contains(gmcp_defs, zgui.defs.class[gmcp.Char.Status.class][i]) then
				cecho("defenceDisplay", "&lt;red&gt; - &lt;red&gt;"..zgui.defs.class[gmcp.Char.Status.class][i].."\n")
			end		
		end
		end
			
		for i=1, table.size(zgui.defs.classless.combat), 1 do
			if not table.contains(gmcp_defs, zgui.defs.classless.combat[i]) then
				cecho("defenceDisplay", "&lt;red&gt; - &lt;red&gt;"..zgui.defs.classless.combat[i].."\n")
			end
		end

	end	

	if table.contains(gmcp_defs, "prismatic") then
		setBackgroundColor("defenceDisplay",10,40,20,255)
	end
  end
end</script>
							<eventHandlerList />
						</Script>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>GMCP Def Functions</name>
							<packageName></packageName>
							<script></script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>GMCP DEFS</name>
								<packageName></packageName>
								<script>gmcp_defs = gmcp_defs or {}
 
function gmcp_def_event_list(event)
    local def = ""
    if gmcp.Char.Defences.List then
        gmcp_defs = {}
        for k, v in pairs(gmcp.Char.Defences.List) do
            def = gmcp_def_parse(v.name)
            gmcp_defs[#gmcp_defs+1] = def
        end
    end
    zgui.showDefs()
end
 
registerAnonymousEventHandler("gmcp.Char.Defences.List", "gmcp_def_event_list")
 
function gmcp_def_event_add(event)
    local gmcp_limbs = {"parry right leg", "parry left leg", "parry left arm", "parry right arm", "parry head", "parry torso", "parry right", "parry left", "parry centre"}
    local def = ""
    if gmcp.Char.Defences.Add then
        def = gmcp.Char.Defences.Add.name
        def = gmcp_def_parse(def)
        if table.contains(gmcp_limbs, def) then
            for k,v in pairs(gmcp_limbs) do
                if table.contains(gmcp_defs, v) then
                    table.remove(gmcp_defs, table.index_of(gmcp_defs, v))
                end
            end
        end
        if string.match(def, "shield") then
            --cecho("DEF|&lt;green&gt; " ..string.upper(def).."\n")
            raiseEvent("got def", def)
        end
        gmcp_defs[#gmcp_defs+1] = def
    end
    zgui.showDefs()
end
 
registerAnonymousEventHandler("gmcp.Char.Defences.Add", "gmcp_def_event_add")
 
function gmcp_def_event_remove(event)
    local def = ""
    if gmcp.Char.Defences.Remove then
        def = gmcp.Char.Defences.Remove[1]
        def = gmcp_def_parse(def)
        if string.match(def, "shield") then
            --cecho("DEF|&lt;red&gt; " ..string.upper(def).."\n")
            raiseEvent("lost def", def)
        end
        if table.contains(gmcp_defs, def) then
            table.remove(gmcp_defs, table.index_of(gmcp_defs, def))
        end
    end
    zgui.showDefs()
end
 
registerAnonymousEventHandler("gmcp.Char.Defences.Remove", "gmcp_def_event_remove")
 
function gmcp_def_parse(def)
    local base_def = nil
    local limb = nil
    limb = string.match(def, "%a+ %((.-)%)")
    if limb then
        base_def = string.match(def, "(%a+) %(.-%)")
        if base_def == "parrying" or base_def == "guarding" or base_def == "clawparrying" then
            return "parry "..limb
        else
            return def
        end
    else
        return def
    end
end</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Afflictions</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>buildAffs</name>
							<packageName></packageName>
							<script>function zgui.buildAffliction()
  zgui.afflictionSize = zgui.afflictionSize or 9
  zgui.affliction = {}

  --Create the affliction Adjustable
  zgui.affliction.window = Adjustable.Container:new({
    name = "zgui.affliction.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",  
    adjLabelstyle = zgui.adjLabelstyle,
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 10,
    buttonsize = 15,          
  },main)
  zgui.affliction.window:changeMenuStyle("dark")

  --Create the affliction container
  zgui.affliction.container = Geyser.Container:new({
    name = "zgui.affliction.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.affliction.window)  

  --Create the affliction Console
  zgui.affliction.console = Geyser.MiniConsole:new({
    name = "afflictionDisplay",
    x = 0, y = 0,
    autoWrap = true,
    width = "100%",
    height = "100%",
    color="black",
  },zgui.affliction.container) 

  setFontSize("afflictionDisplay", zgui.afflictionSize)
  zgui.affliction.window:setTitle("Afflictions","gray")
  zgui.affliction.window:show()
  
  if not table.contains(zgui.modules, "Affliction") then
    table.insert(zgui.modules, "Affliction")
  end  
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>showAffs</name>
							<packageName></packageName>
							<script>function zgui.showAffs()
  if zgui.afflictionlock then
  	setBackgroundColor("pronAff", 0, 20, 0, 255)
	  setBackgroundColor("paraAff", 0, 20, 0, 255)
	  setBackgroundColor("impaAff", 0, 20, 0, 255)
	  setBackgroundColor("asthAff", 0, 20, 0, 255)
	  setBackgroundColor("anorAff", 0, 20, 0, 255)
	  setBackgroundColor("slicAff", 0, 20, 0, 255)
		for i=1, table.size(zgui.myAfflictions), 1 do
			if zgui.myAfflictions[i] == "prone" then
				setBackgroundColor("pronAff", 255, 0, 0, 255)
			end
			if zgui.myAfflictions[i] == "paralysis" then
				setBackgroundColor("paraAff", 255, 0, 0, 255)
			end		
			if zgui.myAfflictions[i] == "impatience" then
				setBackgroundColor("impaAff", 255, 0, 0, 255)
			end
			if zgui.myAfflictions[i] == "asthma" then
				setBackgroundColor("asthAff", 255, 0, 0, 255)
			end
			if zgui.myAfflictions[i] == "anorexia" then
				setBackgroundColor("anorAff", 255, 0, 0, 255)
			end
			if zgui.myAfflictions[i] == "slickness" then
				setBackgroundColor("slicAff", 255, 0, 0, 255)
			end	
		end  
  end
  if zgui.affliction then
----------------------------------------
-- All Afflictions		
  clearWindow("afflictionDisplay")
  if not zgui.lokiCount then zgui.lokiCount = 0 end
  if zgui.lokiCount &gt; 0 then
		setBackgroundColor("afflictionDisplay",128,0,0,255)  
		cecho("afflictionDisplay", "&lt;white:ansi_red&gt; - LOKI: &lt;gold&gt;"..zgui.lokiCount.."\n")    
  end
  
	if table.size(zgui.myAfflictions) &gt; 0 then
		setBackgroundColor("afflictionDisplay",128,0,0,255)
		for i=1, table.size(zgui.myAfflictions), 1 do
			cecho("afflictionDisplay", "&lt;white:ansi_red&gt; "..zgui.myAfflictions[i].."\n")
		end
	elseif not zgui.lokiCount or zgui.lokiCount == 0 then
		setBackgroundColor("afflictionDisplay", 0, 0, 0,255)	
	end
  end
end</script>
							<eventHandlerList />
						</Script>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>GMCP Aff Functions</name>
							<packageName></packageName>
							<script></script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>zgui.AffPlus</name>
								<packageName></packageName>
								<script>function zgui.AffPlus()
	if gmcp.Char.Afflictions.Add.name ~= "insomnia" and gmcp.Char.Afflictions.Add.name ~= "deafness" and gmcp.Char.Afflictions.Add.name ~= "blindness" then
		raiseEvent("got aff", gmcp.Char.Afflictions.Add.name)
		zgui.Aff[gmcp.Char.Afflictions.Add.name] = true
		affliction = gmcp.Char.Afflictions.Add.name
		--cecho("&lt;gray&gt;[&lt;coral&gt; AFF  &lt;gray&gt;] &lt;red&gt; "..affliction.."\n")

		if table.contains(zgui.myAfflictions, gmcp.Char.Afflictions.Add.name) then
			removeDupAff = table.index_of(zgui.myAfflictions, gmcp.Char.Afflictions.Add.name)
			table.remove(zgui.myAfflictions, removeDupAff) 
			table.insert(zgui.myAfflictions, 1, gmcp.Char.Afflictions.Add.name)
		else
			table.insert(zgui.myAfflictions, 1, gmcp.Char.Afflictions.Add.name)
		end
		zgui.trueTime = string.cut(getTime(true, "hh:mm:ss:zzz"), 11)
		cecho("logDisplay", "&lt;gold&gt;"..zgui.trueTime)
		cecho("logDisplay", "   &lt;gray&gt;[&lt;coral&gt;AFF&lt;gray&gt;]&lt;red&gt; "..affliction.."\n")		
		zgui.showAffs()
	end
end</script>
								<eventHandlerList>
									<string>gmcp.Char.Afflictions.Add</string>
								</eventHandlerList>
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>zgui.AffMinus</name>
								<packageName></packageName>
								<script>function zgui.AffMinus()
	local lostAff = ""
			lostAff = gmcp.Char.Afflictions.Remove[1]
			affliction = lostAff
			raiseEvent("lost aff", lostAff)
			canSwap = true
	if zgui.Aff[lostAff] then
		zgui.Aff[lostAff] = nil
	end
	--cecho("&lt;gray&gt;[&lt;lime_green&gt; AFF  &lt;gray&gt;] &lt;lawn_green&gt; "..lostAff:title().."\n")

	removeAffliction = table.index_of(zgui.myAfflictions, gmcp.Char.Afflictions.Remove[1])
	table.remove(zgui.myAfflictions, removeAffliction) 
  zgui.trueTime = string.cut(getTime(true, "hh:mm:ss:zzz"), 11)
	cecho("logDisplay", "&lt;gold&gt;"..zgui.trueTime)
	cecho("logDisplay", "   &lt;gray&gt;[&lt;lime_green&gt;AFF&lt;gray&gt;]&lt;lawn_green&gt; "..lostAff:title().."\n")	
	zgui.showAffs()
end
</script>
								<eventHandlerList>
									<string>gmcp.Char.Afflictions.Remove</string>
								</eventHandlerList>
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>zgui.AffDiag</name>
								<packageName></packageName>
								<script>function zgui.AffDiag()
	zgui.Aff = {}
	zgui.myAfflictions = {}
  zgui.lokiCount = 0
	for k, v in ipairs(gmcp.Char.Afflictions.List) do
		if gmcp.Char.Afflictions.List[k]["name"] ~= "blindness" and gmcp.Char.Afflictions.List[k]["name"] ~= "deafness" and gmcp.Char.Afflictions.List[k]["name"] ~= "insomnia" then
			zgui.Aff[gmcp.Char.Afflictions.List[k]["name"]] = true
			table.insert(zgui.myAfflictions, 1, gmcp.Char.Afflictions.List[k]["name"])
		end
	end
	zgui.showAffs()
end
	</script>
								<eventHandlerList>
									<string>gmcp.Char.Afflictions.List</string>
								</eventHandlerList>
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>Aff Table</name>
								<packageName></packageName>
								<script>zgui.Aff = {}
zgui.myAfflictions = {}</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Aff Lock Window</name>
							<packageName></packageName>
							<script></script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>buildAffLock</name>
								<packageName></packageName>
								<script>function zgui.buildAfflictionlock()
  zgui.afflictionlock = {}

  --Create the afflictionlock Adjustable
  zgui.afflictionlock.window = Adjustable.Container:new({
    name = "zgui.afflictionlock.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",  
    adjLabelstyle = zgui.adjLabelstyle,
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 10,
    buttonsize = 15,          
  },main)
  zgui.afflictionlock.window:changeMenuStyle("dark")

  --Create the afflictionlock container
  zgui.afflictionlock.container = Geyser.Container:new({
    name = "zgui.afflictionlock.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.afflictionlock.window)  

  zgui.afflictionlock.window:setTitle("Lock Out","gray")
  zgui.afflictionlock.window:show()

	zgui.afflictionlock.bg = Geyser.Label:new({
		name = "afflictionlockBG",
		color = "black",
		x = 0,	y = 0,
		width = 0,	height = 0
	}, zgui.afflictionlock.container)
  setBackgroundColor("afflictionlockBG", 0, 0, 0, 255)

---------------------------------------------------------------------------

	zgui.afflictionlock.pronLabel = Geyser.Label:new({
		name = "pronAff",
		x = "1%", y = "2%",
		width = "98%", height = "18%",
	}, zgui.afflictionlock.container)
	setBackgroundColor("pronAff", 80, 0, 0, 255)
	zgui.afflictionlock.pronLabel:echo("&lt;center&gt;Prone")	

	zgui.afflictionlock.paraLabel = Geyser.Label:new({
		name = "paraAff",
		x = "1%", y = "22%",
		width = "18%", height = "70%",
	}, zgui.afflictionlock.container)
	setBackgroundColor("paraAff", 80, 0, 0, 255)
	zgui.afflictionlock.paraLabel:echo("&lt;center&gt;Para")

	zgui.afflictionlock.impaLabel = Geyser.Label:new({
		name = "impaAff",
		x = "21%", y = "22%",
		width = "18%", height = "70%",
	}, zgui.afflictionlock.container)
	setBackgroundColor("impaAff", 80, 0, 0, 255)
	zgui.afflictionlock.impaLabel:echo("&lt;center&gt;Imp")
	
	zgui.afflictionlock.asthLabel = Geyser.Label:new({
		name = "asthAff",
		x = "41%", y = "22%",
		width = "18%", height = "70%",
	}, zgui.afflictionlock.container)
	setBackgroundColor("asthAff", 80, 0, 0, 255)
	zgui.afflictionlock.asthLabel:echo("&lt;center&gt;Ast")
	
	zgui.afflictionlock.anorLabel = Geyser.Label:new({
		name = "anorAff",
		x = "61%", y = "22%",
		width = "18%", height = "70%",
	}, zgui.afflictionlock.container)
	setBackgroundColor("anorAff", 80, 0, 0, 255)
	zgui.afflictionlock.anorLabel:echo("&lt;center&gt;Ano")
	
	zgui.afflictionlock.slicLabel = Geyser.Label:new({
		name = "slicAff",
		x = "81%", y = "22%",
		width = "18%", height = "70%",
	}, zgui.afflictionlock.container)
	setBackgroundColor("slicAff", 80, 0, 0, 255)
	zgui.afflictionlock.slicLabel:echo("&lt;center&gt;Sli")
  
  if not table.contains(zgui.modules, "Afflictionlock") then
    table.insert(zgui.modules, "Afflictionlock")
  end  
end</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Room Windows</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Room Players</name>
							<packageName></packageName>
							<script></script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>buildRoomPlayers</name>
								<packageName></packageName>
								<script>function zgui.buildRoomplayers()
  zgui.roomplayersSize = zgui.roomplayersSize or 9
  zgui.roomplayers = {}

  --Create the roomplayers Adjustable
  zgui.roomplayers.window = Adjustable.Container:new({
    name = "zgui.roomplayers.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",  
    adjLabelstyle = zgui.adjLabelstyle,
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 10,
    buttonsize = 15,          
  },main)
  zgui.roomplayers.window:changeMenuStyle("dark")

  --Create the roomplayers container
  zgui.roomplayers.container = Geyser.Container:new({
    name = "zgui.roomplayers.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.roomplayers.window)  

  --Create the roomplayers Console
  zgui.roomplayers.console = Geyser.MiniConsole:new({
    name = "roomPlayersDisplay",
    x = 0, y = 0,
    autoWrap = true,
    width = "100%",
    height = "100%",
    color="black",
  },zgui.roomplayers.container) 

  setFontSize("roomPlayersDisplay", zgui.roomplayersSize)
  zgui.roomplayers.window:setTitle("Players","gray")
  zgui.roomplayers.window:show()
  
  if not table.contains(zgui.modules, "Roomplayers") then
    table.insert(zgui.modules, "Roomplayers")
  end  
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>showRoomPlayers</name>
								<packageName></packageName>
								<script>function zgui.showRoomPlayers()
	clearWindow("roomPlayersDisplay")
  zgui.whoRoomList = {}
	if #gmcp.Room.Players &gt; 0 then
		for i=1, #gmcp.Room.Players, 1 do
			table.insert(zgui.whoRoomList, 1, gmcp.Room.Players[i].name)	
		end
	end
  zgui.updateRoomPlayers()
end

function zgui.roomPlayersAdd()
  zgui.whoRoomList = zgui.whoRoomList or {}
  local name = gmcp.Room.AddPlayer.name
  if not table.contains(zgui.whoRoomList, name) then
    table.insert(zgui.whoRoomList, name)
    table.sort(zgui.whoRoomList)
  end
  zgui.updateRoomPlayers()
end

function zgui.roomPlayersRemove()
  zgui.whoRoomList = zgui.whoRoomList or {}
  if table.contains(zgui.whoRoomList, gmcp.Room.RemovePlayer) then
    for n, player in pairs(zgui.whoRoomList) do
      if player == gmcp.Room.RemovePlayer then
        table.remove(zgui.whoRoomList, n)
        break
      end
    end
  end
  zgui.updateRoomPlayers()
end

function zgui.updateRoomPlayers()
	clearWindow("roomPlayersDisplay")
  if zgui.whoRoomList then
    if #zgui.whoRoomList &gt; 0 then
      cecho("roomPlayersDisplay", "&lt;orange&gt;(&lt;NavajoWhite&gt;"..#zgui.whoRoomList.."&lt;orange&gt;) Players:\n")
    end
    for i=1, #zgui.whoRoomList, 1 do
      --this line here will require an ndb check, if you wanna colour name.
      if sndNDB_getColour then
        cecho("roomPlayersDisplay", " &lt;"..sndNDB_getColour(zgui.whoRoomList[i]).."&gt;"..zgui.whoRoomList[i]..", ")
      else
        cecho("roomPlayersDisplay", " &lt;cyan&gt;"..zgui.whoRoomList[i]..", ")
      end
    end
  end
end

registerAnonymousEventHandler("gmcp.Room.Players", "zgui.showRoomPlayers")
registerAnonymousEventHandler("gmcp.Room.AddPlayer", "zgui.roomPlayersAdd")
registerAnonymousEventHandler("gmcp.Room.RemovePlayer", "zgui.roomPlayersRemove")</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Room Denizens</name>
							<packageName></packageName>
							<script></script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>buildRoomDenizens</name>
								<packageName></packageName>
								<script>function zgui.buildRoomdenizens()
  zgui.roomDenizensSize = zgui.roomDenizensSize or 6
  zgui.roomdenizens = {}

  --Create the roomdenizens Adjustable
  zgui.roomdenizens.window = Adjustable.Container:new({
    name = "zgui.roomdenizens.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",  
    adjLabelstyle = zgui.adjLabelstyle,
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 10,
    buttonsize = 15,          
  },main)
  zgui.roomdenizens.window:changeMenuStyle("dark")

  --Create the roomdenizens container
  zgui.roomdenizens.container = Geyser.Container:new({
    name = "zgui.roomdenizens.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.roomdenizens.window)  

  --Create the roomdenizens Console
  zgui.roomdenizens.console = Geyser.MiniConsole:new({
    name = "roomDenizensDisplay",
    x = 0, y = 0,
    autoWrap = true,
    width = "100%",
    height = "100%",
    color="black",
  },zgui.roomdenizens.container) 

  setFontSize("roomDenizensDisplay", zgui.roomDenizensSize)
  zgui.roomdenizens.window:setTitle("Denizens","gray")
  zgui.roomdenizens.window:show()
  
  if not table.contains(zgui.modules, "Roomdenizens") then
    table.insert(zgui.modules, "Roomdenizens")
  end  
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>showRoomDenizens</name>
								<packageName></packageName>
								<script>function zgui.showRoomDenizens()
  clearWindow("roomDenizensDisplay")
  if zgui.roomDenizenList then
    for k,v in pairs(zgui.roomDenizenList) do
      cecho("roomDenizensDisplay", " &lt;white&gt;"..zgui.roomDenizenList[k].." &lt;grey&gt;\("..k.."\),")
    end
  end  
end</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Room Items</name>
							<packageName></packageName>
							<script></script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>buildRoomItems</name>
								<packageName></packageName>
								<script>function zgui.buildRoomitems()
  zgui.roomItemsSize = zgui.roomItemsSize or 9
  zgui.roomitems = {}

  --Create the roomitems Adjustable
  zgui.roomitems.window = Adjustable.Container:new({
    name = "zgui.roomitems.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",  
    adjLabelstyle = zgui.adjLabelstyle,
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 10,
    buttonsize = 15,          
  },main)
  zgui.roomitems.window:changeMenuStyle("dark")

  --Create the roomitems container
  zgui.roomitems.container = Geyser.Container:new({
    name = "zgui.roomitems.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.roomitems.window)  

  --Create the roomitems Console
  zgui.roomitems.console = Geyser.MiniConsole:new({
    name = "roomItemsDisplay",
    x = 0, y = 0,
    autoWrap = true,
    width = "100%",
    height = "100%",
    color="black",
  },zgui.roomitems.container) 

  setFontSize("roomItemsDisplay", zgui.roomItemsSize)
  zgui.roomitems.window:setTitle("Items","gray")
  zgui.roomitems.window:show()
  
  if not table.contains(zgui.modules, "Roomitems") then
    table.insert(zgui.modules, "Roomitems")
  end  
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>showRoomItems</name>
								<packageName></packageName>
								<script>function zgui.showRoomItems()
  clearWindow("roomItemsDisplay")
  if zgui.roomGetItemList then
    for k,v in pairs(zgui.roomGetItemList) do
      cecho("roomItemsDisplay", " &lt;gold&gt;"..zgui.roomGetItemList[k]..",")
    end
  end  
  if zgui.roomItemList then
    for k,v in pairs(zgui.roomItemList) do
      cecho("roomItemsDisplay", " &lt;white&gt;"..zgui.roomItemList[k]..",")
    end
  end    
end

--new Items list on moving rooms
function zgui.updateroomitems()
  zgui.roomGetItemList = {}
  zgui.roomItemList = {}
  zgui.roomDenizenList = {}
  for k,v in pairs(gmcp.Char.Items.List.items) do
    if v.attrib == "m" then
      if not table.contains(zgui.roomDenizenList, v.id) then
        zgui.roomDenizenList[v.id] = v.name
      end
    elseif v.attrib == "t" then
      if not table.contains(zgui.roomGetItemList, v.id) then
        zgui.roomGetItemList[v.id] = v.name
      end   
    else
      if not table.contains(zgui.roomItemList, v.id) then
        zgui.roomItemList[v.id] = v.name
      end           
    end
  end -- for
  zgui.showRoomItems()
  zgui.showRoomDenizens()
end

registerAnonymousEventHandler("gmcp.Char.Items.List", "zgui.updateroomitems")

--item added to room
function zgui.addroomitem()
  --check if item was added to room
  if gmcp.Char.Items.Add.location == "room" then
    --check if item is already in roomitems table
    if gmcp.Char.Items.Add.item.attrib == "m" then
      if not table.contains(zgui.roomDenizenList, gmcp.Char.Items.Add.item.id) then
        zgui.roomDenizenList[gmcp.Char.Items.Add.item.id] = gmcp.Char.Items.Add.item.name
      end
    elseif gmcp.Char.Items.Add.item.attrib == "t" then
      if not table.contains(zgui.roomGetItemList, gmcp.Char.Items.Add.item.id) then
        zgui.roomGetItemList[gmcp.Char.Items.Add.item.id] = gmcp.Char.Items.Add.item.name
      end   
    else
      if not table.contains(zgui.roomItemList, gmcp.Char.Items.Add.item.id) then
        zgui.roomItemList[gmcp.Char.Items.Add.item.id] = gmcp.Char.Items.Add.item.name
      end  
    end
  end
  zgui.showRoomItems()
  zgui.showRoomDenizens()
end

--manually add item to room
function zgui.manualAddItem(id, name)
  if not table.contains(zgui.roomItemList, id) then
    zgui.roomItemList[id] = name
  end      
  zgui.showRoomItems()     
end

registerAnonymousEventHandler("gmcp.Char.Items.Add", "zgui.addroomitem")

--item removed from room
function zgui.removeroomitem()
  if gmcp.Char.Items.Remove.location == "room" then
    if table.contains(zgui.roomGetItemList, gmcp.Char.Items.Remove.item.id) then   
      zgui.roomGetItemList[gmcp.Char.Items.Remove.item.id] = nil
    elseif table.contains(zgui.roomDenizenList, gmcp.Char.Items.Remove.item.id) then   
      zgui.roomDenizenList[gmcp.Char.Items.Remove.item.id] = nil
    elseif table.contains(zgui.roomItemList, gmcp.Char.Items.Remove.item.id) then   
      zgui.roomItemList[gmcp.Char.Items.Remove.item.id] = nil
    end
  end
  zgui.showRoomItems()
  zgui.showRoomDenizens()
end

--manually remove person leaving room from people_here
function zgui.manualRemoveItem(id)
  if table.contains(zgui.roomItemList, id) then
    zgui.roomItemList[id] = nil
  elseif table.contains(zgui.roomDenizenList, id) then   
    zgui.roomDenizenList[id] = nil
  elseif table.contains(zgui.roomItemList, id) then   
    zgui.roomItemList[id] = nil 
  end
  zgui.showRoomItems()
  zgui.showRoomDenizens()
end

registerAnonymousEventHandler("gmcp.Char.Items.Remove", "zgui.removeroomitem")</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Target Windows</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Target Afflictions</name>
							<packageName></packageName>
							<script></script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>buildTarAffs</name>
								<packageName></packageName>
								<script>function zgui.buildTargetaffliction()
  zgui.targetAffsSize = zgui.targetAffsSize or 9
  zgui.targetaffliction = {}

  --Create the affliction Adjustable
  zgui.targetaffliction.window = Adjustable.Container:new({
    name = "zgui.targetaffliction.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",  
    adjLabelstyle = zgui.adjLabelstyle,
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 10,
    buttonsize = 15,          
  },main)
  zgui.targetaffliction.window:changeMenuStyle("dark")

  --Create the targetaffliction container
  zgui.targetaffliction.container = Geyser.Container:new({
    name = "zgui.targetaffliction.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.targetaffliction.window)  

  --Create the targetaffliction Console
  zgui.targetaffliction.console = Geyser.MiniConsole:new({
    name = "targetafflictionDisplay",
    x = 0, y = 0,
    autoWrap = true,
    width = "100%",
    height = "100%",
    color="black",
  },zgui.targetaffliction.container) 

  setFontSize("targetafflictionDisplay", zgui.targetAffsSize)
  zgui.targetaffliction.window:setTitle("Target Affs","gray")
  zgui.targetaffliction.window:show()
  
  if not table.contains(zgui.modules, "Targetaffliction") then
    table.insert(zgui.modules, "Targetaffliction")
  end  
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>showTarAffs</name>
								<packageName></packageName>
								<script>function zgui.showTarAffs()
  clearWindow("targetafflictionDisplay")
----------------------------------------
-- Target Afflictions		
local vFloor = 0
	for k,v in pairs(target.afflictions) do
		if k then
      vFloor = math.floor(v)
      if v == 100 then
        cecho("targetafflictionDisplay", "&lt;green&gt;"..k.."\n")
			elseif v &gt; 30 then
				cecho("targetafflictionDisplay", "&lt;CornflowerBlue&gt;"..k.." "..vFloor.."\n")
			elseif v &lt; 31 and v &gt; 0 then
				cecho("targetafflictionDisplay", "&lt;grey&gt;"..k.." "..vFloor.."\n")
			end
		end
	end
end</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Target Limbs</name>
							<packageName></packageName>
							<script></script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>buildTarLimbs</name>
								<packageName></packageName>
								<script>function zgui.buildTarLimbs()
  zgui.targetlimbs = {}

  --Create the targetlimbs Adjustable
  zgui.targetlimbs.window = Adjustable.Container:new({
    name = "zgui.targetlimbs.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",  
    adjLabelstyle = zgui.adjLabelstyle,
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 10,
    buttonsize = 15,          
  },main)

  --Create the targetlimbs container
  zgui.targetlimbs.container = Geyser.Container:new({
    name = "zgui.targetlimbs.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.targetlimbs.window)  

  --Create the targetlimbs Console
  zgui.targetlimbs.console = Geyser.MiniConsole:new({
    name = "targetlimbsDisplay",
    x = 0, y = 0,
    autoWrap = true,
    width = "100%",
    height = "100%",
    color="black",
  },zgui.targetlimbs.container) 

  setFontSize("targetlimbsDisplay", 9)
  zgui.targetlimbs.window:setTitle("Target Limbs","gray")
  zgui.targetlimbs.window:show()
  
  if not table.contains(zgui.modules, "TarLimbs") then
    table.insert(zgui.modules, "TarLimbs")
  end  
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>showTarLimbs</name>
								<packageName></packageName>
								<script>function zgui.showTarLimbs()

end</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Target List</name>
							<packageName></packageName>
							<script></script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>buildTargetList</name>
								<packageName></packageName>
								<script>function zgui.buildTargetList()
  zgui.targetListSize = zgui.targetListSize or 9
  zgui.targetList = {}

  --Create the targetList Adjustable
  zgui.targetList.window = Adjustable.Container:new({
    name = "zgui.targetList.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",  
    adjLabelstyle = zgui.adjLabelstyle,
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 10,
    buttonsize = 15,          
  },main)
  zgui.targetList.window:changeMenuStyle("dark")

  --Create the targetList container
  zgui.targetList.container = Geyser.Container:new({
    name = "zgui.targetList.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.targetList.window)  

  --Create the targetList Console
  zgui.targetList.console = Geyser.MiniConsole:new({
    name = "targetListDisplay",
    x = 0, y = 0,
    autoWrap = true,
    width = "100%",
    height = "100%",
    color="black",
  },zgui.targetList.container) 

  setFontSize("targetListDisplay", zgui.targetListSize)
  zgui.targetList.window:setTitle("Targets","gray")
  zgui.targetList.window:show()
  
  if not table.contains(zgui.modules, "TargetList") then
    table.insert(zgui.modules, "TargetList")
  end  
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>showTargetList</name>
								<packageName></packageName>
								<script>function zgui.showTargetList()
  clearWindow("targetListDisplay")
	for i=1, table.size(zgui.myTargetList), 1 do
    if i == 1 then
      cecho("targetListDisplay", "&lt;grey&gt;\[ &lt;gold&gt;\-\&gt; &lt;grey&gt;\]&lt;red&gt; 01- &lt;red&gt;"..zgui.myTargetList[i].."\n")
    elseif i &gt; 1 and i &lt; 10 then
		  cecho("targetListDisplay", "&lt;grey&gt;\[    &lt;gray&gt;\]&lt;gray&gt; 0"..i.."- &lt;white&gt;"..zgui.myTargetList[i].."\n")
    elseif i &lt; 21 then
		  cecho("targetListDisplay", "&lt;grey&gt;\[    &lt;gray&gt;\]&lt;gray&gt; "..i.."- &lt;white&gt;"..zgui.myTargetList[i].."\n")
    else
      break
    end
	end
end</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Deathcape</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>buildCape</name>
							<packageName></packageName>
							<script>function zgui.buildCape()
  zgui.cape = {}
  zgui.cape.count = 0
  --Create the cape Adjustable
  zgui.cape.window = Adjustable.Container:new({
    name = "zgui.cape.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",  
    adjLabelstyle = "background-color:rgba(50,50,50,0%);",
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 5,
    buttonsize = 10,          
  },main)
  zgui.cape.window:changeMenuStyle("dark")

  --Create the cape container
  zgui.cape.container = Geyser.Container:new({
    name = "zgui.cape.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.cape.window)  

  --Create the cape Gauge
  zgui.cape.capebar = Geyser.Gauge:new({
    name="capeDisplay",
    x="0%", y="0%",
    width="100%", height="100%",
  },zgui.cape.container) 
  zgui.cape.capebar:setValue(math.random(1,100),100)

	zgui.cape.capebar.front:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #621616, stop: 0.1 #640a0a, stop: 0.49 #8a0000, stop: 0.5 #560000, stop: 1 #260000);
		border-top: 1px black solid;
		border-left: 1px black solid;
		border-bottom: 1px black solid;
		border-radius: 7;
		padding: 3px;
	]])
	
	zgui.cape.capebar.back:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #555555, stop: 0.1 #555555, stop: 0.49 #333333, stop: 0.5 #333333, stop: 1 #555555);
		border-width: 1px;
		border-color: black;
		border-style: solid;
		border-radius: 7;
		padding: 3px;
	]])
  
  setFontSize("capeDisplay", 9)
  zgui.cape.window:setTitle("Deathcape","gray")
  zgui.cape.window:show()
  zgui.clearCape()
  
  if not table.contains(zgui.modules, "Cape") then
    table.insert(zgui.modules, "Cape")
  end 
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>showCape</name>
							<packageName></packageName>
							<script>function zgui.showCape()
  -- update the bar
  if zgui.cape.watch &lt; 240 then
    zgui.cape.capebar:setValue((240-zgui.cape.watch), 240)
    if zgui.cape.count &gt; 49 then
      zgui.cape.capebar.back:setStyleSheet([[
		    border-width: 2px;
		    border-color: darkred;
		    border-style: solid;
		    border-radius: 7;
		    padding: 3px;
	    ]])
      zgui.cape.capebar:echo("&lt;center&gt;FULL - "..(240-zgui.cape.watch).." seconds")
    else
      zgui.cape.capebar.back:setStyleSheet([[
	  	  background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #555555, stop: 0.1 #555555, stop: 0.49 #333333, stop: 0.5 #333333, stop: 1 #555555);
		    border-width: 1px;
		    border-color: black;
		    border-style: solid;
		    border-radius: 7;
		    padding: 3px;
	    ]])
      zgui.cape.capebar:echo("&lt;center&gt;"..zgui.cape.count.."/50 - "..(240-zgui.cape.watch).." seconds")
    end
  elseif zgui.cape.watch == 220 then
    cecho(" == WARNING: 20 SECONDS LEFT ON CAPE ==")  
    zgui.cape.capebar:setValue((240-zgui.cape.watch), 240)
    zgui.cape.capebar:echo("&lt;center&gt;"..zgui.cape.count.."/50 - "..(240-zgui.cape.watch).." seconds")
  else
    zgui.clearCape()   
  end
end

function zgui.renewCape()
  zgui.cape.watch = 0
  if not zgui.cape.count then zgui.cape.count = 0 end
  zgui.cape.count = zgui.cape.count + 1
  if zgui.cape.count &gt; 50 then zgui.cape.count = 50 end
  zgui.showCape()
  enableTimer("Deathcape Timer")
end

function zgui.clearCape()
  zgui.cape.watch = 0
  zgui.cape.count = 0
  zgui.cape.capebar:setValue(0, 240)
  disableTimer("Deathcape Timer")
    zgui.cape.capebar:echo("")
    zgui.cape.capebar.back:setStyleSheet([[
		  background-color:rgba(20,20,20,50%);
		  border-width: 1px;
		  border-color: black;
		  border-style: solid;
		  border-radius: 7;
		  padding: 3px;
	  ]])    
end

registerAnonymousEventHandler("You Died", "zgui.clearCape")
registerAnonymousEventHandler("You Starbursted", "zgui.clearCape")</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Experience</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>buildExp</name>
							<packageName></packageName>
							<script>function zgui.buildExp()
  zgui.exp = {}

  --Create the exp Adjustable
  zgui.exp.window = Adjustable.Container:new({
    name = "zgui.exp.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",  
    adjLabelstyle = "background-color:rgba(50,50,50,0%);",
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 5,
    buttonsize = 10,          
  },main)
  zgui.exp.window:changeMenuStyle("dark")

  --Create the exp container
  zgui.exp.container = Geyser.Container:new({
    name = "zgui.exp.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.exp.window)  

  --Create the cape Console
  zgui.exp.expbar = Geyser.Gauge:new({
    name="expDisplay",
    x=0, y=0,
    width="100%", height="100%",
  },zgui.exp.container) 
  zgui.exp.expbar:setValue(math.random(1,100),100)

	zgui.exp.expbar.front:setStyleSheet([[
		background-color:rgba(20,150,150,100%);
		border-top: 1px black solid;
		border-left: 1px black solid;
		border-bottom: 1px black solid;
		border-radius: 7;
		padding: 3px;
	]])
	
	zgui.exp.expbar.back:setStyleSheet([[
		background-color:rgba(20,20,20,50%);
		border-width: 1px;
		border-color: black;
		border-style: solid;
		border-radius: 7;
		padding: 3px;
	]])
  
  setFontSize("expDisplay", 9)
  zgui.exp.window:setTitle("Experience","gray")
  zgui.exp.window:show()
  
  if not table.contains(zgui.modules, "Exp") then
    table.insert(zgui.modules, "Exp")
  end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>showExp</name>
							<packageName></packageName>
							<script>function zgui.showExp()
  if gmcp.Char.Status.xp then
    zgui.exp.expbar:echo("&lt;center&gt;"..gmcp.Char.Status.xp)
    zgui.exp.expbar:setValue(tonumber(string.match(gmcp.Char.Status.xp,"%d+")), 100)
  end
end
-------------------------------------------------------------------
registerAnonymousEventHandler("gmcp.Char.Status", "zgui.showExp")</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Character Stats</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>buildCharstat</name>
							<packageName></packageName>
							<script>function zgui.buildCharstat()
  zgui.charstatSize = zgui.charstatSize or 9
  zgui.charstat = {}
  
  --Create the charstat Adjustable
  zgui.charstat.window = Adjustable.Container:new({
    name = "zgui.charstat.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",        
    adjLabelstyle = zgui.adjLabelstyle,
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 10,
    buttonsize = 15,
  },main)
  zgui.charstat.window:changeMenuStyle("dark")

  --Create the charstat container
  zgui.charstat.container = Geyser.Container:new({
    name = "zgui.charstat.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.charstat.window)  

  --Create the charstat Console
  zgui.charstat.console = Geyser.MiniConsole:new({
    name = "myCharstat",
    x = 0, y = 0,
    autoWrap = true,
    width = "100%",
    height = "100%",
    color="black",
  },zgui.charstat.container) 
 
  setFontSize("myCharstat", zgui.charstatSize)
  zgui.charstat.window:setTitle("Charstats","gray")
  zgui.charstat.window:show()  
  
  if not table.contains(zgui.modules, "Charstat") then
    table.insert(zgui.modules, "Charstat")
  end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>showCharstat</name>
							<packageName></packageName>
							<script>function zgui.showCharstat()
  clearWindow("myCharstat")
  cecho("myCharstat", "&lt;white&gt;"..gmcp.Char.Status.class.."\n")
  for k,v in pairs(gmcp.Char.Vitals.charstats) do
    cecho("myCharstat", "&lt;white&gt;(&lt;DimGrey&gt;"..k.."&lt;white&gt;) &lt;white&gt;"..v.."\n")
  end
end

registerAnonymousEventHandler("gmcp.Char.Vitals", "zgui.showCharstat")</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Battle Rage</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>showBrage</name>
							<packageName></packageName>
							<script>function zgui.showBrage()

  zgui.battleRageTable()
  zgui.setRageVars()
  
  for i=2, 7 do
    local rageI = "rage"..(i-1)
    if tonumber(string.match(gmcp.Char.Vitals.charstats[2],"%d+")) &gt;= zgui.RageTable[zgui.useRageClass][i][3] then 
      zgui.brage[rageI].back:setStyleSheet([[
		    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #2a3c1e, stop: 0.1 #456332, stop: 0.49 #577d3f, stop: 0.5 #577d3f, stop: 1 #2a3c1e);
		    border-width: 3px;
		    border-color: green;
		    border-style: solid;
	  	  border-radius: 7;
  		  padding: 3px;
	    ]]) 
    else
	    zgui.brage[rageI].back:setStyleSheet([[
  		  background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #555555, stop: 0.1 #555555, stop: 0.49 #333333, stop: 0.5 #333333, stop: 1 #555555);
	  	  border-width: 1px;
		    border-color: black;
		    border-style: solid;
	  	  border-radius: 7;
  		  padding: 3px;
	    ]]) 
    end
  end
end

registerAnonymousEventHandler("gmcp.Char.Vitals", "zgui.showBrage")

function zgui.showBRage1()
  if isActive("RageSkill1", "timer") then
    zgui.brage.rage1:setValue(getStopWatchTime("rage1watch"), tonumber(zgui.RageTable[zgui.useRageClass][2][2]))
  else
    resetStopWatch("rage1watch") 
    zgui.brage.rage1:setValue(0, tonumber(zgui.RageTable[zgui.useRageClass][2][2]))
  end
end

function zgui.showBRage2()
  if isActive("RageSkill1", "timer") then
    zgui.brage.rage2:setValue(getStopWatchTime("rage2watch"), tonumber(zgui.RageTable[zgui.useRageClass][3][2]))
  else
    resetStopWatch("rage2watch") 
    zgui.brage.rage2:setValue(0, tonumber(zgui.RageTable[zgui.useRageClass][3][2]))
  end
end

function zgui.showBRage3()
  if isActive("RageSkill3", "timer") then
    zgui.brage.rage3:setValue(getStopWatchTime("rage3watch"), tonumber(zgui.RageTable[zgui.useRageClass][4][2]))
  else
    resetStopWatch("rage3watch") 
    zgui.brage.rage3:setValue(0, tonumber(zgui.RageTable[zgui.useRageClass][4][2]))
  end
end

function zgui.showBRage4()
  if isActive("RageSkill4", "timer") then
    zgui.brage.rage4:setValue(getStopWatchTime("rage4watch"), tonumber(zgui.RageTable[zgui.useRageClass][5][2]))
  else
    resetStopWatch("rage4watch") 
    zgui.brage.rage4:setValue(0, tonumber(zgui.RageTable[zgui.useRageClass][5][2]))
  end
end

function zgui.showBRage5()
  if isActive("RageSkill5", "timer") then
    zgui.brage.rage5:setValue(getStopWatchTime("rage5watch"), tonumber(zgui.RageTable[zgui.useRageClass][6][2]))
  else
    resetStopWatch("rage5watch") 
    zgui.brage.rage5:setValue(0, tonumber(zgui.RageTable[zgui.useRageClass][6][2]))
  end
end

function zgui.showBRage6()
  if isActive("RageSkill6", "timer") then
    zgui.brage.rage6:setValue(getStopWatchTime("rage6watch"), tonumber(zgui.RageTable[zgui.useRageClass][7][2]))
  else
    resetStopWatch("rage6watch") 
    zgui.brage.rage6:setValue(0, tonumber(zgui.RageTable[zgui.useRageClass][7][2]))
  end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>buildBrage</name>
							<packageName></packageName>
							<script>function zgui.buildBrage()
  zgui.brageSize = zgui.brageSize or 9
  zgui.brage = {}
  
  --Create the brage Adjustable
  zgui.brage.window = Adjustable.Container:new({
    name = "zgui.brage.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",        
    adjLabelstyle = zgui.adjLabelstyle,
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 10,
    buttonsize = 15,
  },main)
  zgui.brage.window:changeMenuStyle("dark")

  --Create the brage container
  zgui.brage.container = Geyser.Container:new({
    name = "zgui.brage.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.brage.window)  
 
  setFontSize("mybrage", zgui.brageSize)
  zgui.brage.window:setTitle("BattleRage","gray")
  zgui.brage.window:show()  

---------------------------------------------------------------------

  --Create Rage 1 Gauge
  zgui.brage.rage1 = Geyser.Gauge:new({
    name="brage1Display",
    x="2%", y="3%",
    width="98%", height="15%",
  },zgui.brage.container) 
  zgui.brage.rage1:setValue(0,100)
	zgui.brage.rage1.front:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #621616, stop: 0.1 #640a0a, stop: 0.49 #8a0000, stop: 0.5 #560000, stop: 1 #260000);
		border-top: 1px black solid;
		border-left: 1px black solid;
		border-bottom: 1px black solid;
		border-radius: 7;
		padding: 3px;
	]])
	zgui.brage.rage1.back:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #555555, stop: 0.1 #555555, stop: 0.49 #333333, stop: 0.5 #333333, stop: 1 #555555);
		border-width: 1px;
		border-color: black;
		border-style: solid;
		border-radius: 7;
		padding: 3px;
	]])
  zgui.brage.rage1:echo("&lt;center&gt;Rage Skill 1") 
  zgui.brage.rage1use = Geyser.Label:new({
    name="zgui.rage1use",
    x=0, y=0,
    width="100%", height="100%",
  },zgui.brage.rage1)   
  zgui.brage.rage1use:setClickCallback("zgui.brage1Click")
  setBackgroundColor("zgui.rage1use", 0,0,0, 0)

  --Create Rage 2 Gauge
  zgui.brage.rage2 = Geyser.Gauge:new({
    name="brage2Display",
    x="2%", y="19%",
    width="98%", height="15%",
  },zgui.brage.container) 
  zgui.brage.rage2:setValue(0,100)
	zgui.brage.rage2.front:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #621616, stop: 0.1 #640a0a, stop: 0.49 #8a0000, stop: 0.5 #560000, stop: 1 #260000);
		border-top: 1px black solid;
		border-left: 1px black solid;
		border-bottom: 1px black solid;
		border-radius: 7;
		padding: 3px;
	]])
	zgui.brage.rage2.back:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #555555, stop: 0.1 #555555, stop: 0.49 #333333, stop: 0.5 #333333, stop: 1 #555555);
		border-width: 1px;
		border-color: black;
		border-style: solid;
		border-radius: 7;
		padding: 3px;
	]])
  zgui.brage.rage2:echo("&lt;center&gt;Rage Skill 2") 
  zgui.brage.rage2use = Geyser.Label:new({
    name="zgui.rage2use",
    x=0, y=0,
    width="100%", height="100%",
  },zgui.brage.rage2)   
  zgui.brage.rage2use:setClickCallback("zgui.brage2Click")
  setBackgroundColor("zgui.rage2use", 0,0,0, 0)
  
  
  --Create Rage 3 Gauge
  zgui.brage.rage3 = Geyser.Gauge:new({
    name="brage3Display",
    x="2%", y="35%",
    width="98%", height="15%",
  },zgui.brage.container) 
  zgui.brage.rage3:setValue(0,100)
	zgui.brage.rage3.front:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #621616, stop: 0.1 #640a0a, stop: 0.49 #8a0000, stop: 0.5 #560000, stop: 1 #260000);
		border-top: 1px black solid;
		border-left: 1px black solid;
		border-bottom: 1px black solid;
		border-radius: 7;
		padding: 3px;
	]])
	zgui.brage.rage3.back:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #555555, stop: 0.1 #555555, stop: 0.49 #333333, stop: 0.5 #333333, stop: 1 #555555);
		border-width: 1px;
		border-color: black;
		border-style: solid;
		border-radius: 7;
		padding: 3px;
	]])
  zgui.brage.rage3:echo("&lt;center&gt;Rage Skill 3")  
  zgui.brage.rage3use = Geyser.Label:new({
    name="zgui.rage3use",
    x=0, y=0,
    width="100%", height="100%",
  },zgui.brage.rage3)   
  zgui.brage.rage3use:setClickCallback("zgui.brage3Click")
  setBackgroundColor("zgui.rage3use", 0,0,0, 0)
   
  
  --Create Rage 4 Gauge
  zgui.brage.rage4 = Geyser.Gauge:new({
    name="brage4Display",
    x="2%", y="51%",
    width="98%", height="15%",
  },zgui.brage.container) 
  zgui.brage.rage4:setValue(0,100)
	zgui.brage.rage4.front:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #621616, stop: 0.1 #640a0a, stop: 0.49 #8a0000, stop: 0.5 #560000, stop: 1 #260000);
		border-top: 1px black solid;
		border-left: 1px black solid;
		border-bottom: 1px black solid;
		border-radius: 7;
		padding: 3px;
	]])
	zgui.brage.rage4.back:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #555555, stop: 0.1 #555555, stop: 0.49 #333333, stop: 0.5 #333333, stop: 1 #555555);
		border-width: 1px;
		border-color: black;
		border-style: solid;
		border-radius: 7;
		padding: 3px;
	]])
  zgui.brage.rage4:echo("&lt;center&gt;Rage Skill 4")  
  zgui.brage.rage4use = Geyser.Label:new({
    name="zgui.rage4use",
    x=0, y=0,
    width="100%", height="100%",
  },zgui.brage.rage4)   
  zgui.brage.rage4use:setClickCallback("zgui.brage4Click")
  setBackgroundColor("zgui.rage4use", 0,0,0, 0)
   
  
  --Create Rage 5 Gauge
  zgui.brage.rage5 = Geyser.Gauge:new({
    name="brage5Display",
    x="2%", y="67%",
    width="98%", height="15%",
  },zgui.brage.container) 
  zgui.brage.rage5:setValue(0,100)
	zgui.brage.rage5.front:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #621616, stop: 0.1 #640a0a, stop: 0.49 #8a0000, stop: 0.5 #560000, stop: 1 #260000);
		border-top: 1px black solid;
		border-left: 1px black solid;
		border-bottom: 1px black solid;
		border-radius: 7;
		padding: 3px;
	]])
	zgui.brage.rage5.back:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #555555, stop: 0.1 #555555, stop: 0.49 #333333, stop: 0.5 #333333, stop: 1 #555555);
		border-width: 1px;
		border-color: black;
		border-style: solid;
		border-radius: 7;
		padding: 3px;
	]])
  zgui.brage.rage5:echo("&lt;center&gt;Rage Skill 5") 
  zgui.brage.rage5use = Geyser.Label:new({
    name="zgui.rage5use",
    x=0, y=0,
    width="100%", height="100%",
  },zgui.brage.rage5)   
  zgui.brage.rage5use:setClickCallback("zgui.brage5Click")
  setBackgroundColor("zgui.rage5use", 0,0,0, 0)
  

  --Create Rage 6 Gauge
  zgui.brage.rage6 = Geyser.Gauge:new({
    name="brage6Display",
    x="2%", y="83%",
    width="98%", height="15%",
  },zgui.brage.container) 
  zgui.brage.rage6:setValue(0,100)
	zgui.brage.rage6.front:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #621616, stop: 0.1 #640a0a, stop: 0.49 #8a0000, stop: 0.5 #560000, stop: 1 #260000);
		border-top: 1px black solid;
		border-left: 1px black solid;
		border-bottom: 1px black solid;
		border-radius: 7;
		padding: 3px;
	]])
	zgui.brage.rage6.back:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #555555, stop: 0.1 #555555, stop: 0.49 #333333, stop: 0.5 #333333, stop: 1 #555555);
		border-width: 1px;
		border-color: black;
		border-style: solid;
		border-radius: 7;
		padding: 3px;
	]])  
  zgui.brage.rage6:echo("&lt;center&gt;Rage Skill 6")  
  zgui.brage.rage6use = Geyser.Label:new({
    name="zgui.rage6use",
    x=0, y=0,
    width="100%", height="100%",
  },zgui.brage.rage6)   
  zgui.brage.rage6use:setClickCallback("zgui.brage6Click")
  setBackgroundColor("zgui.rage6use", 0,0,0, 0)

---------------------------------------------------------------------

  createStopWatch("rage1watch")
  stopStopWatch("rage1watch")
  resetStopWatch("rage1watch")
  
  createStopWatch("rage2watch")
  stopStopWatch("rage2watch")
  resetStopWatch("rage2watch")  
  
  createStopWatch("rage3watch")
  stopStopWatch("rage3watch")
  resetStopWatch("rage3watch")  
  
  createStopWatch("rage4watch")
  stopStopWatch("rage4watch")
  resetStopWatch("rage4watch")  
  
  createStopWatch("rage5watch")
  stopStopWatch("rage5watch")
  resetStopWatch("rage5watch")  
  
  createStopWatch("rage6watch")
  stopStopWatch("rage6watch")
  resetStopWatch("rage6watch")  
      
---------------------------------------------------------------------
      
  if not table.contains(zgui.modules, "Brage") then
    table.insert(zgui.modules, "Brage")
  end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>BRage Callbacks</name>
							<packageName></packageName>
							<script>function zgui.brage1Click()
  local attackString = string.gsub(zgui.RageTable[zgui.useRageClass][2][6], "myTarget", gmcp.Char.Status.target)
  send(attackString)
end

function zgui.brage2Click()
  local attackString = string.gsub(zgui.RageTable[zgui.useRageClass][3][6], "myTarget", gmcp.Char.Status.target)
  send(attackString)
end

function zgui.brage3Click()
  local attackString = string.gsub(zgui.RageTable[zgui.useRageClass][4][6], "myTarget", gmcp.Char.Status.target)
  send(attackString)
end

function zgui.brage4Click()
  local attackString = string.gsub(zgui.RageTable[zgui.useRageClass][5][6], "myTarget", gmcp.Char.Status.target)
  send(attackString)
end

function zgui.brage5Click()
  local attackString = string.gsub(zgui.RageTable[zgui.useRageClass][6][6], "myTarget", gmcp.Char.Status.target)
  send(attackString)
end

function zgui.brage6Click()
  local attackString = string.gsub(zgui.RageTable[zgui.useRageClass][7][6], "myTarget", gmcp.Char.Status.target)
  send(attackString)
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Battlerage Variables</name>
							<packageName></packageName>
							<script>function zgui.setRageVars()
	--[i] = Class
	--[1]class name -- [2-7] = Skill Names
	--[1]name, [2]cooldown, [3]cost, [4]duration, [5]usable, [6]command, [7]tooltip

	for i=1, #zgui.RageTable, 1 do
		if gmcp.Char.Status.class == zgui.RageTable[i][1].Class then		
			zgui.useRageClass = i
		end
	end
  
  zgui.brage.rage1:echo("&lt;center&gt;"..string.title(zgui.RageTable[zgui.useRageClass][2][1])) 
  zgui.brage.rage2:echo("&lt;center&gt;"..string.title(zgui.RageTable[zgui.useRageClass][3][1])) 
  zgui.brage.rage3:echo("&lt;center&gt;"..string.title(zgui.RageTable[zgui.useRageClass][4][1])) 
  zgui.brage.rage4:echo("&lt;center&gt;"..string.title(zgui.RageTable[zgui.useRageClass][5][1])) 
  zgui.brage.rage5:echo("&lt;center&gt;"..string.title(zgui.RageTable[zgui.useRageClass][6][1])) 
  zgui.brage.rage6:echo("&lt;center&gt;"..string.title(zgui.RageTable[zgui.useRageClass][7][1])) 
end

function zgui.battleRageTable()
	zgui.RageTable = {	-- name, cooldown, cost, duration, usable, command, tooltip
	[1] = {
		{["Class"] = "Black Dragon",},
		{"dragonspit",      16, 14,  0, 1, "dragonspit myTarget",								"Damage over time"},
		{"dragonsting",     27, 25,  8, 1, "dragonsting myTarget",							"Aff:Sensitivity"},
		{"dissolve",         1, 17, 10, 1, "dissolve myTarget",								  "Aff:Shieldbreak"},
		{"override",        23, 36,  0, 1, "override myTarget",								  "Big Damage"},
		{"corrode",         23, 25,  0, 1, "corrode myTarget",									"Cond Damage: clumsiness/aeon"},
		{"dragonfear",      34, 29,  8, 1, "dragonfear myTarget",								"Aff:Fear"},
	},
	[2] = {
		{["Class"] = "Blue Dragon",},
		{"dragonchill",			16, 14,  0, 1, "dragonchill myTarget",							"Small Damage"},
		{"glaciate",				33, 26,  4, 1, "glaciate myTarget",								  "Aff:Stun"},
		{"frostrive",	 		   1, 17, 10, 1, "frostrive myTarget",								"Aff:Shieldbreak"},
		{"override",				23, 36,  0, 1, "override myTarget",								  "Big Damage"},
		{"frostwave",			  23, 25,  0, 1, "frostwave myTarget",								"Cond Damage: amnesia/recklessness"},
		{"ague",					  23, 14,  7, 1, "ague myTarget",										  "Aff:Clumsiness"},
	},
	[3] = {
		{["Class"] = "Golden Dragon",},
		{"overwhelm",		   16, 14,  0, 1, "overwhelm myTarget",								  "Small Damage"},
		{"deaden",			   35, 24,  6, 1, "deaden myTarget",									  "Aff:Aeon"},
		{"psishatter",		  1, 17, 10, 1, "psishatter myTarget",							  "Aff:Shieldbreak"},
		{"psiblast",			 23, 36,  0, 1, "psiblast myTarget",								  "Big Damage"},
		{"psistorm",			 23, 25,  0, 1, "psistorm myTarget",								  "Cond Damage: weakness/stun"},
		{"psidaze",			   41, 28,  6, 1, "psidaze myTarget",									  "Aff:Amnesia"},
	},
	[4] = {
		{["Class"] = "Green Dragon",},
		{"dragonspit",			16, 14,  0, 1, "dragonspit myTarget",							  "Small Damage over time"},
		{"scour",					  25, 18,  9, 1, "scour myTarget",									  "Aff:Inhibit"},
		{"deteriorate",			 1, 17, 10, 1, "deteriorate myTarget",						  "Aff:Shieldbreak"},
		{"override",				23, 36,  0, 1, "override myTarget",								  "Big Damage"},
		{"slaver",				  23, 25,  0, 1, "slaver on myTarget",						    "Cond Damage: sensitivity/clumsiness"},
		{"dragonsap", 			31, 22,  7, 1, "dragonsap myTarget",							  "Aff:Weakness"},
	},
	[5] = {
		{["Class"] = "Red Dragon",},
		{"overwhelm",			16, 14,  0, 1, "overwhelm myTarget",								  "Small Damage"},
		{"dragontaunt",		19, 18,  8, 1, "dragontaunt myTarget",							  "Aff:Recklessness"},
		{"melt",					 1, 17, 10, 1, "melt myTarget",										    "Aff:Shieldbreak"},
		{"dragonblaze",		23, 36,  0, 1, "dragonblaze myTarget",							  "Damage over time"},
		{"flamebath",			23, 25,  0, 1, "flamebath myTarget",								  "Cond Damage: sensitivity/clumsiness"},
		{"scorch",				25, 18,  9, 1, "scorch myTarget",									    "Aff:Inhibit"},
	},
	[6] = {
		{["Class"] = "Silver Dragon",},
		{"overwhelm",			16, 14,  0, 1, "overwhelm myTarget",								  "Small Damage"},
		{"sizzle",				27, 25,  8, 1, "sizzle myTarget",								    	"Aff:Sensitivity"},
		{"splinter",				 1, 17, 10, 1, "splinter myTarget",								  "Aff:Shieldbreak"},
		{"dragonspark",			23, 36,  0, 1, "dragonspark myTarget",							"Big Damage"},
		{"stormflare",			23, 25,  0, 1, "stormflare myTarget",								"Cond Damage: fear/amnesia"},
		{"galvanize",			19, 18, 15, 1, "galvanize myTarget",								  "Aff:Recklessness"},
	},
	[7] = {
		{["Class"] = "Alchemist",},
		{"miasma",				16, 14,  0, 1, "throw miasma at myTarget",						"Small Damage"},
		{"cadmium",				31, 22,  7, 1, "educe cadmium myTarget",							"Aff:Weakness"},
		{"caustic",				 1, 17, 10, 1, "throw caustic at myTarget",						"Aff:Shieldbreak"},
		{"magnesium",			23, 36,  0, 1, "educe magnesium myTarget",						"Big Damage"},
		{"pathogen",				23, 25,  0, 1, "throw pathogen at myTarget",				"Cond damage: recklessness/fear"},
		{"hypnotic",				41, 28,  4, 1, "throw hypnotic at myTarget",				"Aff:Amnesia"},
	},
	[8] = {
		{["Class"] = "Apostate",},
		{"convulsions",			16, 14,  0, 1, "stare myTarget convulsions",				"Small Damage"},
		{"horrify",				34, 29,  8, 1, "stare myTarget horrify",							"Aff:Fear"},
		{"shieldbreak",			 1, 17, 10, 1, "shieldbreak myTarget",							"Aff:Shieldbreak"},
		{"burrow",				23, 36,  0, 1, "daegger burrow myTarget",						  "Big Damage"},
		{"bloodlet",				23, 25,  8, 1, "bloodlet myTarget",								  "Cond damage: sensitivity/stun"},
		{"possess",				43, 32,  4, 1, "possess myTarget",									  "Aff:Charm"},
	},
	[9] = {
		{["Class"] = "Bard",},
		{"moulinet",			16, 14,  0, 1, "moulinet myTarget",								    "Small Damage"},
		{"trill",					41, 28,  4, 1, "play trill at myTarget",							"Aff:Amnesia"},
		{"resonance",			 1, 17, 10, 1, "play resonance at myTarget",					"Aff:Shieldbreak"},
		{"howlslash",			23, 36,  0, 1, "howlslash myTarget",								  "Big Damage"},
		{"cyclone",				23, 25,  4, 1, "cyclone myTarget",									  "Cond damage: clumsiness/stun"},
		{"charm",					43, 32,  4, 1, "play charm at myTarget",							"Aff:Charm"},
	},
	[10] = {
		{["Class"] = "Blademaster",},
		{"leapstrike",			16, 14,  0, 1, "leapstrike myTarget",								"Small Damage"},
		{"daze",					33, 26,  4, 1, "shin daze myTarget",								  "Aff:Stun"},
		{"shatter",			 	 1, 17, 10, 1, "shin shatter myTarget",							  "Aff:Shieldbreak"},
		{"spinslash",			23, 36,  0, 1, "spinslash myTarget",								  "Big Damage"},
		{"headstrike",			23, 25,  0, 1, "strike myTarget head",							"Cond damage: recklessness/fear"},
		{"nerveslash",			31, 22,  7, 1, "nerveslash myTarget",								"Aff:Weakness"},
	},
	[11] = {
		{["Class"] = "Druid",},
		{"strangle",				16, 14,  0, 1, "strangle myTarget",								  "Small Damage"},
		{"redeem",				31, 22,  7, 1, "reclamation redeem myTarget",					"Aff:Weakness"},
		{"vinecrack",			 1, 17, 10, 1, "vinecrack myTarget",								  "Aff:Shieldbreak"},
		{"ravage",				23, 36,  0, 1, "ravage myTarget",									    "Big Damage"},
		{"sear",					23, 25,  0, 1, "sear myTarget",										    "Cond Damage: recklessness/stun"},
		{"glare",					23, 14,  4, 1, "quarterstaff glare myTarget",					"Aff:Clumsiness"},
	},
	[12] = {
		{["Class"] = "Infernal",},
		{"ravage",				16, 14,  0, 1, "ravage myTarget",									    "Small Damage"},
		{"soulshield",			37, 20,  8, 1, "soulshield",											  "Temporary damage shield"},
		{"shiver",				 1, 17, 10, 1, "shive myTarget",									    "Aff:Shieldbreak"},
		{"spike",					23, 36,  0, 1, "spike myTarget",									    "Big Damage"},
		{"hellstrike",			23, 25,  0, 1, "hellstrike myTarget",								"Cond Damage: recklessness/fear"},
		{"deathlink",			43, 30,  5, 1, "deathlink myAlly",									  "Take 50% of ally's damage"},
	},
	[13] = {
		{["Class"] = "Jester",},
		{"noogie",				16, 14,  0, 1, "noogie myTarget",									    "Small Damage"},
		{"dustthrow",			25, 18,  9, 1, "dustthrow myTarget",								  "Aff:Inhibit"},
		{"jacks",					 1, 17, 10, 1, "throw jacks at myTarget",						  "Aff:Shieldbreak"},
		{"ensconce",				23, 36,  0, 1, "ensconce firecracker on myTarget",  "Big Damage"},
		{"befuddle",				23, 25,  6, 1, "befuddle myTarget",								  "Cond Damage: aeon/amnesia"},
		{"rap",					33, 26,  4, 1, "rap myTarget",										      "Aff:Stun"},
	},
	[14] = {
		{["Class"] = "Magi",},
		{"windlash",				16, 14,  0, 1, "cast windlash at myTarget",				  "Small Damage"},
		{"dilation",				35, 24,  6, 1, "cast dilation at myTarget",				  "Aff:Aeon"},
		{"disintegrate",		 1, 17, 10, 1, "cast disintegrate at myTarget",		  "Aff:Shieldbreak"},
		{"squeeze",				23, 36,  0, 1, "golem squeeze myTarget",							"Big Damage"},
		{"firefall",				23, 25,  7, 1, "cast firefall at myTarget",				  "Cond Damage: clumsiness/recklessness"},
		{"stormbolt",			27, 25,  8, 1, "cast stormbolt at myTarget",					"Aff:Sensitivity"},
	},
	[15] = {
		{["Class"] = "Monk",},
		{"spinningbackfist",	16, 14,  0, 1, "sbp myTarget",										"Small Damage"},
		{"scramble",			31, 22,  7, 1, "mind scramble myTarget",				      "Aff:Clumsiness"},
		{"splinterkick",	 1, 17, 10, 1, "spk myTarget",										    "Aff:Shieldbreak"},
		{"tornadokick",		23, 36,  0, 1, "tnk myTarget",										    "Big Damage"},
		{"mindblast",			23, 25,  0, 1, "mind blast myTarget",								  "Cond Damage: weakness/sensitivity"},
		{"ripplestrike",	27, 25,  9, 1, "rpst myTarget",										    "Aff:Inhibit"},
	},
	[16] = {
		{["Class"] = "Occultist",},
		{"harry",					16, 14,  0, 1, "harry myTarget",									    "Damage over time"},
		{"temper",				43, 32,  5, 1, "temper myTarget",									    "Aff:Charm"},
		{"ruin",					 1, 17, 10, 1, "ruin myTarget",										    "Break shield"},
		{"chaosgate",			23, 36,  0, 1, "chaosgate myTarget",								  "Big Damage"},
		{"fluctuate",			23, 25,  8, 1, "fluctuate myTarget",								  "Cond Damage: fear/amnesia"},
		{"stagnate",			35, 24,  6, 1, "stagnate myTarget",								    "Aff:Aeon"},
	},
	[17] = {
		{["Class"] = "Paladin",},
		{"harrow",				16, 14,  0, 1, "harrow myTarget",									         "Small Damage"},
		{"regeneration",	53, 33,  8, 1, "perform rite of regeneration",		         "Regenerate health"},
		{"faithrend",			 1, 17, 10, 1, "faithrend myTarget",								       "Aff:Shieldbreak"},
		{"shock",					23, 36,  0, 1, "perform rite of shock at myTarget",	       "Damage over time"},
		{"punishment",		23, 25,  0, 1, "perform rite of punishment at myTarget",	 "Cond Damage: weakness/clumsiness"},
		{"recovery",			44, 31,  6, 1, "perform rite of recovery at myAlly",       "Heal ally for next 6 seconds"},
	},
	[18] = {
		{["Class"] = "Priest",},
		{"torment",				16, 14,  0, 1, "angel torment myTarget",							     "Small Damage"},
		{"incense",				18, 19, 15, 1, "angel incense myTarget",							     "Aff:Recklessness"},
		{"crack",					 1, 17, 10, 1, "crack myTarget",									         "Aff:Shieldbreak"},
		{"desolation",		23, 36,  4, 1, "perform rite of desolation on myTarget",	 "Damage over time"},
		{"hammer",				23, 25,  0, 1, "hammer myTarget",									         "Cond Damage: clumsiness/amnesia"},
		{"horrify",				34, 29,  8, 1, "perform rite of horrify on myTarget",      "Aff:Fear"},
	},
	[19] = {
		{["Class"] = "Runewarden",},
		{"collide",				16, 14,  0, 1, "collide myTarget",									  "Small Damage"},
		{"bulwark",				45, 28, 15, 1, "bulwark",											        "Damage reduction for self"}, -- 25%
		{"fragment",			 1, 17, 10, 1, "fragment myTarget",								    "Aff:Shieldbreak"},
		{"onslaught",			23, 36,  0, 1, "onslaught myTarget",								  "Big Damage"},
		{"etch",					23, 25,  0, 1, "etch rune at myTarget",							  "Cond Damage: aeon/stun"},
		{"safeguard",			57, 35, 10, 1, "safeguard myAlly",									  "Damage reduction for ally"}, --40%
	},
	[20] = {
		{["Class"] = "Sentinel",},
		{"pester",				16, 14,  0, 1, "pester myTarget",									    "Small Damage"},
		{"tame",					43, 32,  5, 1, "tame myTarget",										    "Aff:Charm"},
		{"bore"		,			 1, 17, 10, 1, "bore myTarget",										      "Aff:Shieldbreak"},
		{"skewer",				23, 36,  0, 1, "skewer myTarget",									    "Big Damage"},
		{"swarm",					23, 25,  0, 1, "swarm myTarget",									    "Cond Damage: aeon/clumsiness"},
		{"goad",					19, 18, 15, 1, "goad myTarget",										    "Aff:Recklessness"},
	},
	[21] = {
		{["Class"] = "Serpent",},
		{"thrash",				16, 14,  0, 1, "thrash myTarget",									    "Small Damage"},
		{"flagellate",		27, 25,  6, 1, "flagellate myTarget",								  "Aff:Aeon"},
		{"excoriate",			 1, 17, 10, 1, "excoriate myTarget",								  "Aff:Shieldbreak"},
		{"throatrip",			23, 36,  0, 1, "throatrip myTarget",								  "Big Damage"},
		{"snare",					23, 25,  5, 1, "snare myTarget",									    "Cond Damage: inhibited/weakness"},
		{"obliviate",			41, 28,  4, 1, "obliviate myTarget",								  "Aff:Amnesia"},
	},
	[22] = {
		{["Class"] = "Shaman",},
		{"corruption",			16, 14,  0, 1, "curse myTarget corruption",			    "Small Damage"},
		{"korkma",				34, 29,  4, 1, "invoke korkma myTarget",					    "Aff:Fear"},
		{"vulnerability",		 1, 17, 10, 1, "curse myTarget vulnerability",	    "Aff:Shieldbreak"},
		{"haemorrhage",			23, 36,  0, 1, "curse myTarget haemorrhage",		    "Big Damage over time"},
		{"vurus",					23, 25,  0, 1, "invoke vurus myTarget",							  "Cond Damage: sensitivity/amnesia"},
		{"cesaret",				19, 18, 15, 1, "invoke cesaret myTarget",						  "Aff:Recklessness"},
	},
	[23] = {
		{["Class"] = "Sylvan",},
		{"torrent",				16, 14,  0, 1, "cast torrent at myTarget",						"Small Damage"},
		{"sandstorm",			34, 29,  8, 1, "cast sandstorm at myTarget",					"Aff:Fear"},
		{"shieldbreak",			 1, 17, 10, 1, "shieldbreak myTarget",							"Aff:Shieldbreak"},
		{"stonevine",			23, 36,  0, 1, "stonevine myTarget",								  "Big Damage"},
		{"leechroot",			23, 25,  0, 1, "leechroot myTarget",								  "Cond Damage: inhibited/weakness"},
		{"rockshot",				41, 28,  4, 1, "cast rockshot at myTarget",				  "Aff:Amnesia"},
	},
	[24] = {
		{["Class"] = "Depthswalker",},
		{"drain",				16, 14,  0, 1, "shadow drain myTarget",						      "Damage over Time"},
		{"lash",				23, 36,  8, 1, "shadow lash myTarget",						      "Big Damage"},
		{"curse",				35, 24, 10, 1, "chrono curse myTarget",						      "Aff:Aeon"},
		{"nakail",			 1, 17,  0, 1, "intone nakail myTarget",						    "Shieldbreak"},
		{"erasure",			23, 25,  0, 1, "chrono erasure myTarget",					      "Mid Damage"},
		{"boinad",			38, 32,  4, 1, "intone boinad myTarget",						    "Aff:Charm"},
	},
	[25] = {
		{["Class"] = "air Elemental Lord",},
		{"bolt",				 16, 14,  0, 1, "manifest bolt myTarget",					      "Small Damage"},
		{"suffocate",		 23, 36,  8, 1, "aero suffocate myTarget",					    "Aff:Weakness"},
		{"drill",				 35, 24, 10, 1, "manifest drill myTarget",					    "Aff:Shieldbreak"},
		{"pressurewave", 23, 36,  0, 1, "manifest pressurewave myTarget",	      "Big Damage"},
		{"compress",		 23, 25,  0, 1, "aero compress myTarget",					      "Cond Damage: sensitive/stun"},
		{"vacuum",			 38, 32,  4, 1, "manifest vacuum myTarget",				      "Aff:Inhibit"},
	},
  [26] = {
    {["Class"] = "earth Elemental Lord",},
    {"smash",        16, 14,  0, 1, "terran smash myTarget",               "Small Damage"},
    {"rockfall",     33, 26,  0, 1, "manifest rockfall myTarget",          "Aff:Stun"},
    {"charge",        0, 17,  0, 1, "terran charge myTarget",              "Aff:Shieldbreak"},
    {"flurry",       23, 36,  0, 1, "terran flurry myTarget",              "Big Damage"},
    {"magmaburst",   23, 25,  0, 1, "manifest magmaburst myTarget",        "Cond Damage: clumsy/reckless"},
    {"rampart",      40, 30,  0, 1, "terran rampart myAlly",               "Ally:Defended"},  
  },
	[27] = {
		{["Class"] = "Psion",},
		{"barbedblade",	 16, 14,  0, 1, "weave barbedblade myTarget",          "Small Damage"},
		{"devistate",		 23, 36,  8, 1, "psi devastate myTarget",              "Big Damage"},
		{"regrowth",		 35, 24, 10, 1, "enact regrowth myTarget",             "Aff:Inhibit"},
		{"pulverise",     1, 17,  0, 1, "weave pulverise myTarget",	           "Aff:Shieldbreak"},
		{"whirlwind",		 23, 25,  0, 1, "weave whirlwind myTarget",            "Mid Damage"},
		{"terror",			 38, 32,  4, 1, "psi terror myTarget",                 "Aff:Fear"},
	},  
	[28] = {
		{["Class"] = "Pariah",},
		{"boil",	       16, 14,  0, 1, "blood boil myTarget",                 "Small Damage"},
		{"feast",		     23, 36,  8, 1, "swarm feast myTarget",                "Big Damage"},
		{"symphony",		 35, 24, 10, 1, "swarm symphony myTarget",             "Aff:Fear"},
		{"scour",         1, 17,  0, 1, "accursed scour myTarget",	           "Aff:Shieldbreak"},
		{"spider",		   23, 25,  0, 1, "trace spider myTarget",               "Cond Damage: inhibited/sensitive"},
		{"wail",			   38, 32,  4, 1, "accursed wail myTarget",              "Aff:Clumsiness"},
	},    
}
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Rage Skill Used</name>
							<packageName></packageName>
							<script>function zgui.rage1SkillUsed()
  zgui.RageTable[zgui.useRageClass][2][5] = 0
  zgui.brage.rage1:setValue(0, tonumber(zgui.RageTable[zgui.useRageClass][2][2]))
  resetStopWatch("rage1watch")  
  startStopWatch("rage1watch")
  enableTimer("RageSkill1")
  zgui.timers = zgui.timers or {}
  if zgui.timers.rage1timer then killTimer(zgui.timers.rage1timer) end
  zgui.timers.rage1timer = tempTimer(tonumber(zgui.RageTable[zgui.useRageClass][2][2]),
      [[
        zgui.RageTable[zgui.useRageClass][2][5]=1;
        stopStopWatch("rage1watch");
        resetStopWatch("rage1watch");
        disableTimer("RageSkill1")
        zgui.brage.rage1:setValue(0, tonumber(zgui.RageTable[zgui.useRageClass][2][2]))
      ]])
  deleteLine()
  zgui.echo("&lt;white&gt;BRAGE: "..zgui.RageTable[zgui.useRageClass][2][1].." "..zgui.RageTable[zgui.useRageClass][2][7])
end

function zgui.rage2SkillUsed()
  zgui.RageTable[zgui.useRageClass][3][5] = 0
  zgui.brage.rage2:setValue(0, tonumber(zgui.RageTable[zgui.useRageClass][3][2]))
  resetStopWatch("rage2watch")  
  startStopWatch("rage2watch")
  enableTimer("RageSkill2")  
  if zgui.rage2timer then killTimer(zgui.rage2timer) end
  zgui.rage2timer = tempTimer(tonumber(zgui.RageTable[zgui.useRageClass][3][2]),
      [[
        zgui.RageTable[zgui.useRageClass][3][5]=1;
        stopStopWatch("rage2watch");
        resetStopWatch("rage2watch");
        disableTimer("RageSkill2")
        zgui.brage.rage2:setValue(0, tonumber(zgui.RageTable[zgui.useRageClass][3][2]))
      ]])
  deleteLine()
  zgui.echo("&lt;white&gt;BRAGE: "..zgui.RageTable[zgui.useRageClass][3][1].." "..zgui.RageTable[zgui.useRageClass][3][7])
end

function zgui.rage3SkillUsed()
  zgui.RageTable[zgui.useRageClass][4][5] = 0
  zgui.brage.rage3:setValue(0, tonumber(zgui.RageTable[zgui.useRageClass][4][2]))
  resetStopWatch("rage3watch")  
  startStopWatch("rage3watch")
  enableTimer("RageSkill3")  
  if zgui.rage3timer then killTimer(zgui.rage3timer) end
  zgui.rage3timer = tempTimer(tonumber(zgui.RageTable[zgui.useRageClass][4][2]),
      [[
        zgui.RageTable[zgui.useRageClass][4][5]=1;
        stopStopWatch("rage3watch");
        resetStopWatch("rage3watch");
        disableTimer("RageSkill3")
        zgui.brage.rage3:setValue(0, tonumber(zgui.RageTable[zgui.useRageClass][4][2]))
      ]])
  deleteLine()
  zgui.echo("&lt;white&gt;BRAGE: "..zgui.RageTable[zgui.useRageClass][4][1].." "..zgui.RageTable[zgui.useRageClass][4][7])
end

function zgui.rage4SkillUsed()
  zgui.RageTable[zgui.useRageClass][5][5] = 0
  zgui.brage.rage4:setValue(0, tonumber(zgui.RageTable[zgui.useRageClass][5][2]))
  resetStopWatch("rage4watch")  
  startStopWatch("rage4watch")
  enableTimer("RageSkill4")  
  if zgui.rage4timer then killTimer(zgui.rage4timer) end
  zgui.rage4timer = tempTimer(tonumber(zgui.RageTable[zgui.useRageClass][5][2]),
      [[
        zgui.RageTable[zgui.useRageClass][5][5]=1;
        stopStopWatch("rage4watch");
        resetStopWatch("rage4watch");
        disableTimer("RageSkill4")
        zgui.brage.rage4:setValue(0, tonumber(zgui.RageTable[zgui.useRageClass][5][2]))
      ]])
  deleteLine()
  zgui.echo("&lt;white&gt;BRAGE: "..zgui.RageTable[zgui.useRageClass][5][1].." "..zgui.RageTable[zgui.useRageClass][5][7])
end

function zgui.rage5SkillUsed()
  zgui.RageTable[zgui.useRageClass][6][5] = 0
  zgui.brage.rage5:setValue(0, tonumber(zgui.RageTable[zgui.useRageClass][6][2]))
  resetStopWatch("rage5watch")  
  startStopWatch("rage5watch")
  enableTimer("RageSkill5")  
  if zgui.rage5timer then killTimer(zgui.rage5timer) end
  zgui.rage5timer = tempTimer(tonumber(zgui.RageTable[zgui.useRageClass][6][2]),
      [[
        zgui.RageTable[zgui.useRageClass][6][5]=1;
        stopStopWatch("rage5watch");
        resetStopWatch("rage5watch");
        disableTimer("RageSkill5")
        zgui.brage.rage5:setValue(0, tonumber(zgui.RageTable[zgui.useRageClass][6][2]))
      ]])
  deleteLine()
  zgui.echo("BRAGE: "..zgui.RageTable[zgui.useRageClass][6][1].." "..zgui.RageTable[zgui.useRageClass][6][7])
end

function zgui.rage6SkillUsed()
  zgui.RageTable[zgui.useRageClass][7][5] = 0
  zgui.brage.rage6:setValue(0, tonumber(zgui.RageTable[zgui.useRageClass][7][2]))
  resetStopWatch("rage6watch")  
  startStopWatch("rage6watch")
  enableTimer("RageSkill6")  
  if zgui.rage6timer then killTimer(zgui.rage6timer) end
  zgui.rage6timer = tempTimer(tonumber(zgui.RageTable[zgui.useRageClass][7][2]),
      [[
        zgui.RageTable[zgui.useRageClass][7][5]=1;
        stopStopWatch("rage6watch");
        resetStopWatch("rage6watch");
        disableTimer("RageSkill6")
        zgui.brage.rage6:setValue(0, tonumber(zgui.RageTable[zgui.useRageClass][7][2]))
      ]])
  deleteLine()
  zgui.echo("&lt;white&gt;BRAGE: "..zgui.RageTable[zgui.useRageClass][7][1].." "..zgui.RageTable[zgui.useRageClass][7][7])
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Tradeskills</name>
						<packageName></packageName>
						<script>zTrade = zTrade or {}
zTrade.harvestRooms = {}

function zTrade.echo(text)
	cecho("\n&lt;cyan&gt;[&lt;magenta&gt;zTrade&lt;cyan&gt;]: &lt;NavajoWhite&gt;"..text)
end</script>
						<eventHandlerList />
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Harvesting</name>
							<packageName></packageName>
							<script>zTrade.autoHarvest = zTrade.autoHarvest or {}
zTrade.autoHarvesting = zTrade.autoHarvesting or false

zTrade.harvestHerbs = {
  "ash",
  "bayberry",
  "blueberry",
  "bellwort",
  "cohosh",
  "bloodroot",
  "burdock",
  "echinacea",
  "elm",
  "ginseng",
  "ginger",
  "goldenseal",  
  "hawthorn",
  "kelp",  
  "kola",  
  "kuzu",  
  "lobelia",
  "myrrh",
  "moss",
  "pear",
  "sileris",
  "skullcap",
  "slipper", 
  "valerian",
  "weed",   
}</script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>zTrade.harvesting()</name>
								<packageName></packageName>
								<script>function zTrade.harvesting()
  if #zTrade.harvest &gt; 0 then
    send("setalias harvestAlias harvest "..zTrade.harvest[1].."/inr all "..zTrade.harvest[1].." ")
    send("queue addclear eqbal harvestAlias")
  elseif #zTrade.harvest == 0 then
    send("clearqueue eqbal")
  end
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>zTrade.showHarvest()</name>
								<packageName></packageName>
								<script>function zTrade.showHarvest()
  local firstSpace, secondSpace = 25,30 
  local first,second = firstSpace,secondSpace
  local blank1 = ""
  local blank2 = ""

  zTrade.echo("Auto Harvest: ")
  cechoLink("&lt;ansi_red&gt;\[Reset "..#zTrade.harvestRooms.." Rooms\]", [[zTrade.harvestRooms = {};zTrade.echo("&lt;NavajoWhite&gt;All Harvested\/Gathered Rooms Reset")]], "Reset Rooms Already Done", true)
  if zTrade.autoHarvesting then
    cecho("\n&lt;ansi_cyan&gt;\[&lt;red&gt;X&lt;ansi_cyan&gt;\] ")
    cechoLink("&lt;NavajoWhite&gt;Auto Harvest Mode", [[zTrade.autoHarvesting = false;zTrade.showHarvest()]], "Deactivate Auto Harvest", true)
  else
    cecho("\n&lt;ansi_cyan&gt;\[ \] ")
    cechoLink("&lt;NavajoWhite&gt;Auto Harvest Mode", [[zTrade.autoHarvesting = true;zTrade.showHarvest()]], "Activate Auto Harvest", true)
  end   
  
  for i=1, #zTrade.harvestHerbs, 3 do
    if zTrade.harvestHerbs[i+3] then
      blank1 = string.rep(" ", first-#zTrade.harvestHerbs[i])
      blank2 = string.rep(" ", second-#zTrade.harvestHerbs[i+1])
      if table.contains(zTrade.autoHarvest, zTrade.harvestHerbs[i]) then
        cecho("\n&lt;ansi_cyan&gt;\[&lt;red&gt;X&lt;ansi_cyan&gt;\] ")
        cechoLink("&lt;white&gt;"..zTrade.harvestHerbs[i], [[table.remove(zTrade.autoHarvest, table.index_of(zTrade.autoHarvest, zTrade.harvestHerbs[]]..i..[[]));zTrade.showHarvest()]], "Remove Auto Harvest "..zTrade.harvestHerbs[i], true)      
      else
        cecho("\n&lt;ansi_cyan&gt;\[ \] ")
        cechoLink("&lt;white&gt;"..zTrade.harvestHerbs[i], [[table.insert(zTrade.autoHarvest, zTrade.harvestHerbs[]]..i..[[]);zTrade.showHarvest()]], "Auto Harvest "..zTrade.harvestHerbs[i], true)
      end       
      if table.contains(zTrade.autoHarvest, zTrade.harvestHerbs[i+1]) then
        cecho(blank1.."&lt;ansi_cyan&gt;\[&lt;red&gt;X&lt;ansi_cyan&gt;\] ")
        cechoLink("&lt;white&gt;"..zTrade.harvestHerbs[i+1], [[table.remove(zTrade.autoHarvest, table.index_of(zTrade.autoHarvest, zTrade.harvestHerbs[]]..(i+1)..[[]));zTrade.showHarvest()]], "Remove Auto Harvest "..zTrade.harvestHerbs[i+1], true)      
      else
        cecho(blank1.."&lt;ansi_cyan&gt;\[ \] ")
        cechoLink("&lt;white&gt;"..zTrade.harvestHerbs[i+1], [[table.insert(zTrade.autoHarvest, zTrade.harvestHerbs[]]..(i+1)..[[]);zTrade.showHarvest()]], "Auto Harvest "..zTrade.harvestHerbs[i+1], true)
      end
      if table.contains(zTrade.autoHarvest, zTrade.harvestHerbs[i+2]) then
        cecho(blank2.."&lt;ansi_cyan&gt;\[&lt;red&gt;X&lt;ansi_cyan&gt;\] ")
        cechoLink("&lt;white&gt;"..zTrade.harvestHerbs[i+2], [[table.remove(zTrade.autoHarvest, table.index_of(zTrade.autoHarvest, zTrade.harvestHerbs[]]..(i+2)..[[]));zTrade.showHarvest()]], "Remove Auto Harvest "..zTrade.harvestHerbs[i+2], true)      
      else
        cecho(blank2.."&lt;ansi_cyan&gt;\[ \] ")
        cechoLink("&lt;white&gt;"..zTrade.harvestHerbs[i+2], [[table.insert(zTrade.autoHarvest, zTrade.harvestHerbs[]]..(i+2)..[[]);zTrade.showHarvest()]], "Auto Harvest "..zTrade.harvestHerbs[i+2], true)
      end  
    elseif zTrade.harvestHerbs[i+2] then
      blank1 = string.rep(" ", first-#zTrade.harvestHerbs[i])
      blank2 = string.rep(" ", second-#zTrade.harvestHerbs[i+1])
      if table.contains(zTrade.autoHarvest, zTrade.harvestHerbs[i]) then
        cecho("\n&lt;ansi_cyan&gt;\[&lt;red&gt;X&lt;ansi_cyan&gt;\] ")
        cechoLink("&lt;white&gt;"..zTrade.harvestHerbs[i], [[table.remove(zTrade.autoHarvest, table.index_of(zTrade.autoHarvest, zTrade.harvestHerbs[]]..i..[[]));zTrade.showHarvest()]], "Remove Auto Harvest "..zTrade.harvestHerbs[i], true)      
      else
        cecho("\n&lt;ansi_cyan&gt;\[ \] ")
        cechoLink("&lt;white&gt;"..zTrade.harvestHerbs[i], [[table.insert(zTrade.autoHarvest, zTrade.harvestHerbs[]]..i..[[]);zTrade.showHarvest()]], "Auto Harvest "..zTrade.harvestHerbs[i], true)
      end       
      if table.contains(zTrade.autoHarvest, zTrade.harvestHerbs[i+1]) then
        cecho(blank1.."&lt;ansi_cyan&gt;\[&lt;red&gt;X&lt;ansi_cyan&gt;\] ")
        cechoLink("&lt;white&gt;"..zTrade.harvestHerbs[i+1], [[table.remove(zTrade.autoHarvest, table.index_of(zTrade.autoHarvest, zTrade.harvestHerbserbs[]]..(i+1)..[[]));zTrade.showHarvest()]], "Remove Auto Harvest "..zTrade.harvestHerbs[i+1], true)      
      else
        cecho(blank1.."&lt;ansi_cyan&gt;\[ \] ")
        cechoLink("&lt;white&gt;"..zTrade.harvestHerbs[i+1], [[table.insert(zTrade.autoHarvest, zTrade.harvestHerbs[]]..(i+1)..[[]);zTrade.showHarvest()]], "Auto Harvest "..zTrade.harvestHerbs[i+1], true)
      end      
    elseif zTrade.harvestHerbs[i] then
      if table.contains(zTrade.autoHarvest, zTrade.harvestHerbs[i]) then
        cecho("\n&lt;ansi_cyan&gt;\[&lt;red&gt;X&lt;ansi_cyan&gt;\] ")
        cechoLink("&lt;white&gt;"..zTrade.harvestHerbs[i], [[table.remove(zTrade.autoHarvest, table.index_of(zTrade.autoHarvest, zTrade.harvestHerbs[]]..i..[[]));zTrade.showHarvest()]], "Remove Auto Harvest "..zTrade.harvestHerbs[i], true)      
      else
        cecho("\n&lt;ansi_cyan&gt;\[ \] ")
        cechoLink("&lt;white&gt;"..zTrade.harvestHerbs[i], [[table.insert(zTrade.autoHarvest, zTrade.harvestHerbs[]]..i..[[]);zTrade.showHarvest()]], "Auto Harvest "..zTrade.harvestHerbs[i], true)
      end       
    end
  end
  echo("\n")
end</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Gathering</name>
							<packageName></packageName>
							<script>zTrade.autoGather = zTrade.autoGather or {}
zTrade.autoGathering = zTrade.autoGathering or false

zTrade.gatherHerbs = {
  "grain",
  "fruit",
  "cacao",
  "sugarcane",
  "lumic",
  "olive",
  "nut",
}</script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>zTrade.gathering()</name>
								<packageName></packageName>
								<script>function zTrade.gathering()
  if #zTrade.gather &gt; 0 then
    send("setalias harvestAlias gather "..zTrade.gather[1].."/inr all "..zTrade.gather[1].." ")
    send("queue addclear eqbal harvestAlias")
  elseif #zTrade.gather == 0 then
    send("clearqueue eqbal")
  end
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>zTrade.showGather()</name>
								<packageName></packageName>
								<script>function zTrade.showGather()
  local firstSpace, secondSpace = 25,30 
  local first,second = firstSpace,secondSpace
  local blank1 = ""
  local blank2 = ""
  
  zTrade.echo("Auto Gather: ")
  cechoLink("&lt;ansi_red&gt;\[Reset "..#zTrade.harvestRooms.." Rooms\]", [[zTrade.harvestRooms = {};zTrade.echo("&lt;NavajoWhite&gt;All Harvested\/Gathered Rooms Reset")]], "Reset Rooms Already Done", true)
  if zTrade.autoGathering then
    cecho("\n&lt;ansi_cyan&gt;\[&lt;red&gt;X&lt;ansi_cyan&gt;\] ")
    cechoLink("&lt;NavajoWhite&gt;Auto Gather Mode", [[zTrade.autoGathering = false;zTrade.showGather()]], "Deactivate Auto Gather", true)
  else
    cecho("\n&lt;ansi_cyan&gt;\[ \] ")
    cechoLink("&lt;NavajoWhite&gt;Auto Gather Mode", [[zTrade.autoGathering = true;zTrade.showGather()]], "Activate Auto Gather", true)
  end    
  
  for i=1, #zTrade.gatherHerbs, 3 do
    if zTrade.gatherHerbs[i+3] then
      blank1 = string.rep(" ", first-#zTrade.gatherHerbs[i])
      blank2 = string.rep(" ", second-#zTrade.gatherHerbs[i+1])
      if table.contains(zTrade.autoGather, zTrade.gatherHerbs[i]) then
        cecho("\n&lt;ansi_cyan&gt;\[&lt;red&gt;X&lt;ansi_cyan&gt;\] ")
        cechoLink("&lt;white&gt;"..zTrade.gatherHerbs[i], [[table.remove(zTrade.autoGather, table.index_of(zTrade.autoGather, zTrade.gatherHerbs[]]..i..[[]));zTrade.showGather()]], "Remove Auto Gather "..zTrade.gatherHerbs[i], true)      
      else
        cecho("\n&lt;ansi_cyan&gt;\[ \] ")
        cechoLink("&lt;white&gt;"..zTrade.gatherHerbs[i], [[table.insert(zTrade.autoGather, zTrade.gatherHerbs[]]..i..[[]);zTrade.showGather()]], "Auto Gather "..zTrade.gatherHerbs[i], true)
      end  
      if table.contains(zTrade.autoGather, zTrade.gatherHerbs[i+1]) then
        cecho(blank1.."&lt;ansi_cyan&gt;\[&lt;red&gt;X&lt;ansi_cyan&gt;\] ")
        cechoLink("&lt;white&gt;"..zTrade.gatherHerbs[i+1], [[table.remove(zTrade.autoGather, table.index_of(zTrade.autoGather, zTrade.gatherHerbs[]]..(i+1)..[[]));zTrade.showGather()]], "Remove Auto Gather "..zTrade.gatherHerbs[i+1], true)      
      else
        cecho(blank1.."&lt;ansi_cyan&gt;\[ \] ")
        cechoLink("&lt;white&gt;"..zTrade.gatherHerbs[i+1], [[table.insert(zTrade.autoGather, zTrade.gatherHerbs[]]..(i+1)..[[]);zTrade.showGather()]], "Auto Gather "..zTrade.gatherHerbs[i+1], true)
      end
      if table.contains(zTrade.autoGather, zTrade.gatherHerbs[i+2]) then
        cecho(blank2.."&lt;ansi_cyan&gt;\[&lt;red&gt;X&lt;ansi_cyan&gt;\] ")
        cechoLink("&lt;white&gt;"..zTrade.gatherHerbs[i+2], [[table.remove(zTrade.autoGather, table.index_of(zTrade.autoGather, zTrade.gatherHerbs[]]..(i+2)..[[]));zTrade.showGather()]], "Remove Auto Gather "..zTrade.gatherHerbs[i+2], true)      
      else
        cecho(blank2.."&lt;ansi_cyan&gt;\[ \] ")
        cechoLink("&lt;white&gt;"..zTrade.gatherHerbs[i+2], [[table.insert(zTrade.autoGather, zTrade.gatherHerbs[]]..(i+2)..[[]);zTrade.showGather()]], "Auto Gather "..zTrade.gatherHerbs[i+2], true)
      end       
    elseif zTrade.gatherHerbs[i+2] then
      blank1 = string.rep(" ", first-#zTrade.gatherHerbs[i])
      blank2 = string.rep(" ", second-#zTrade.gatherHerbs[i+1])
      if table.contains(zTrade.autoGather, zTrade.gatherHerbs[i]) then
        cecho("\n&lt;ansi_cyan&gt;\[&lt;red&gt;X&lt;ansi_cyan&gt;\] ")
        cechoLink("&lt;white&gt;"..zTrade.gatherHerbs[i], [[table.remove(zTrade.autoGather, table.index_of(zTrade.autoGather, zTrade.gatherHerbs[]]..i..[[]));zTrade.showGather()]], "Remove Auto Gather "..zTrade.gatherHerbs[i], true)      
      else
        cecho(blank1.."&lt;ansi_cyan&gt;\[ \] ")
        cechoLink("&lt;white&gt;"..zTrade.gatherHerbs[i], [[table.insert(zTrade.autoGather, zTrade.gatherHerbs[]]..i..[[]);zTrade.showGather()]], "Auto Gather "..zTrade.gatherHerbs[i], true)
      end
      if table.contains(zTrade.autoGather, zTrade.gatherHerbs[i+1]) then
        cecho(blank1.."&lt;ansi_cyan&gt;\[&lt;red&gt;X&lt;ansi_cyan&gt;\] ")
        cechoLink("&lt;white&gt;"..zTrade.gatherHerbs[i+1], [[table.remove(zTrade.autoGather, table.index_of(zTrade.autoGather, zTrade.gatherHerbs[]]..(i+1)..[[]));zTrade.showGather()]], "Remove Auto Gather "..zTrade.gatherHerbs[i+1], true)      
      else
        cecho("\n&lt;ansi_cyan&gt;\[ \] ")
        cechoLink("&lt;white&gt;"..zTrade.gatherHerbs[i+1], [[table.insert(zTrade.autoGather, zTrade.gatherHerbs[]]..(i+1)..[[]);zTrade.showGather()]], "Auto Gather "..zTrade.gatherHerbs[i+1], true)
      end      
    elseif zTrade.gatherHerbs[i] then  
      if table.contains(zTrade.autoGather, zTrade.gatherHerbs[i]) then
        cecho("\n&lt;ansi_cyan&gt;\[&lt;red&gt;X&lt;ansi_cyan&gt;\] ")
        cechoLink("&lt;white&gt;"..zTrade.gatherHerbs[i], [[table.remove(zTrade.autoGather, table.index_of(zTrade.autoGather, zTrade.gatherHerbs[]]..i..[[]));zTrade.showGather()]], "Remove Auto Gather "..zTrade.gatherHerbs[i], true)      
      else
        cecho("\n&lt;ansi_cyan&gt;\[ \] ")
        cechoLink("&lt;white&gt;"..zTrade.gatherHerbs[i], [[table.insert(zTrade.autoGather, zTrade.gatherHerbs[]]..i..[[]);zTrade.showGather()]], "Auto Gather "..zTrade.gatherHerbs[i], true)
      end
    end
  end
  echo("\n")
end</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
						<Script isActive="yes" isFolder="no">
							<name>zTrade.roomPlants()</name>
							<packageName></packageName>
							<script>function zTrade.roomPlants()
-- Auto Harvest/Gather
  if not table.contains(zTrade.harvestRooms, gmcp.Room.Info.num) then
    if zTrade.autoHarvesting or zTrade.autoGathering then
      table.insert(zTrade.harvestRooms, gmcp.Room.Info.num)
      send("plants")
    end
  end
end
registerAnonymousEventHandler("gmcp.Room.Info", "zTrade.roomPlants")</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Ship</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>buildShip()</name>
							<packageName></packageName>
							<script>function zgui.buildShip()
	zgui.shipmode = false
	zgui.ship = {}
  zgui.shipSize = zgui.shipSize or 9  
  zgui.ship.windDirection = ""
  zgui.ship.windSpeed = 0
  zgui.ship.direction = ""
  zgui.ship.speed = 0
	zgui.ship.hullHealth = 10
	zgui.ship.sailHealth = 10
  zgui.buildShipguages()
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>buildShipguages()</name>
							<packageName></packageName>
							<script>function zgui.buildShipguages()

  --Create the ship Adjustable
  zgui.ship.window = Adjustable.Container:new({
    name = "zgui.ship.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",  
    adjLabelstyle = zgui.adjLabelstyle,
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 10,
    buttonsize = 15,          
  },main)
  zgui.ship.window:changeMenuStyle("dark")

  --Create the ship container
  zgui.ship.container = Geyser.Container:new({
    name = "zgui.ship.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.ship.window)  

	zgui.ship.shiphpbar = Geyser.Gauge:new({
	  name="shiphpbar",
	  x=0, y=0,
	  width="100%", height="20%",
	  fgColor = "black",
	},zgui.ship.container)

	zgui.ship.shipshpbar = Geyser.Gauge:new({
	  name="shipshpbar",
	  x=0, y="25%",
	  width="100%", height="20%",
	  fgColor = "black",
	},zgui.ship.container)
  
	zgui.ship.shipDisplay = Geyser.MiniConsole:new({
	  name="shipDisplay",
	  x=0, y="55%",
	  width="100%", height="45%",
	  fgColor = "white",
	},zgui.ship.container)
  setBackgroundColor("shipDisplay", 0,0,0,255)  
  setFontSize("shipDisplay", (zgui.mapSize-1))	
  
	zgui.ship.shipshpbar:setValue(math.random(1,100),100)
	zgui.ship.shipshpbar:setValue(zgui.ship.sailHealth, 100, "&lt;b&gt;Sails: ".. zgui.ship.sailHealth .." / " .. "100" .. "&lt;/b&gt;")
	
	zgui.ship.shiphpbar:setValue(math.random(1,100),100)
	zgui.ship.shiphpbar:setValue(zgui.ship.hullHealth, 100, "&lt;b&gt;Hull: ".. zgui.ship.hullHealth .." / " .. "100" .. "&lt;/b&gt;")
	
	zgui.ship.shiphpbar.front:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #98f041, stop: 0.1 #8cf029, stop: 0.49 #66cc00, stop: 0.5 #52a300, stop: 1 #66cc00);
		border-top: 1px black solid;
		border-left: 1px black solid;
		border-bottom: 1px black solid;
		border-radius: 7;
		padding: 3px;
	]])
	
	zgui.ship.shiphpbar.back:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #555555, stop: 0.1 #555555, stop: 0.49 #333333, stop: 0.5 #333333, stop: 1 #555555);
		border-width: 1px;
		border-color: black;
		border-style: solid;
		border-radius: 7;
		padding: 3px;
	]])
 

	zgui.ship.shipshpbar.front:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #98f041, stop: 0.1 #8cf029, stop: 0.49 #66cc00, stop: 0.5 #52a300, stop: 1 #66cc00);
		border-top: 1px black solid;
		border-left: 1px black solid;
		border-bottom: 1px black solid;
		border-radius: 7;
		padding: 3px;
	]])
	
	zgui.ship.shipshpbar.back:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #555555, stop: 0.1 #555555, stop: 0.49 #333333, stop: 0.5 #333333, stop: 1 #555555);
		border-width: 1px;
		border-color: black;
		border-style: solid;
		border-radius: 7;
		padding: 3px;
	]])
  
  setFontSize("shipDisplay", zgui.shipSize)
  zgui.ship.window:setTitle("Ship Status","gray")
  zgui.ship.window:show()  
  
  if not table.contains(zgui.modules, "Ship") then table.insert(zgui.modules, "Ship") end  
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>showShip()</name>
							<packageName></packageName>
							<script>function zgui.showShip()
clearWindow("shipDisplay")
cecho("shipDisplay", "Heading: "..zgui.ship.windDirection.." | Speed: "..zgui.ship.speed.." | Wind: "..zgui.ship.windDirection.." | Wind Speed: "..zgui.ship.windSpeed)

if zgui.ship.hullHealth &lt; 50 then
	zgui.ship.shiphpbar.front:setStyleSheet([[
	background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #f04141, stop: 0.1 #ef2929, stop: 0.49 #cc0000, stop: 0.5 #a40000, stop: 1 #cc0000);
	    border-top: 1px black solid;
	    border-left: 1px black solid;
	    border-bottom: 1px black solid;
	    border-radius: 7;
	    padding: 3px;
	]])
	zgui.ship.shiphpbar.back:setStyleSheet([[
		 background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #555555, stop: 0.1 #555555, stop: 0.49 #333333, stop: 0.5 #333333, stop: 1 #555555);
	    border-width: 1px;
	    border-color: black;
	    border-style: solid;
	    border-radius: 7;
   		 padding: 3px;
	]])
	else
	zgui.ship.shiphpbar.front:setStyleSheet([[
	    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #98f041, stop: 0.1 #8cf029, stop: 0.49 #66cc00, stop: 0.5 #52a300, stop: 1 #66cc00);
		  border-top: 1px black solid;
	    border-left: 1px black solid;
	    border-bottom: 1px black solid;
	    border-radius: 7;
	    padding: 3px;
	]])
	zgui.ship.shiphpbar.back:setStyleSheet([[
		 background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #555555, stop: 0.1 #555555, stop: 0.49 #333333, stop: 0.5 #333333, stop: 1 #555555);
	    border-width: 1px;
	    border-color: black;
	    border-style: solid;
	    border-radius: 7;
   		 padding: 3px;
	]])
end
 
if zgui.ship.sailHealth &lt; 50 then
	zgui.ship.shipshpbar.front:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #f04141, stop: 0.1 #ef2929, stop: 0.49 #cc0000, stop: 0.5 #a40000, stop: 1 #cc0000);
		border-top: 1px black solid;
	  border-left: 1px black solid;
	  border-bottom: 1px black solid;
	  border-radius: 7;
	  padding: 3px;
	]])
	zgui.ship.shipshpbar.back:setStyleSheet([[
		 background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #555555, stop: 0.1 #555555, stop: 0.49 #333333, stop: 0.5 #333333, stop: 1 #555555);
	    border-width: 1px;
	    border-color: black;
	    border-style: solid;
	    border-radius: 7;
   		 padding: 3px;
	]])
	else
	zgui.ship.shipshpbar.front:setStyleSheet([[
	    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #98f041, stop: 0.1 #8cf029, stop: 0.49 #66cc00, stop: 0.5 #52a300, stop: 1 #66cc00);
		 border-top: 1px black solid;
	    border-left: 1px black solid;
	    border-bottom: 1px black solid;
	    border-radius: 7;
	    padding: 3px;
	]])
	zgui.ship.shipshpbar.back:setStyleSheet([[
		 background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #555555, stop: 0.1 #555555, stop: 0.49 #333333, stop: 0.5 #333333, stop: 1 #555555);
	    border-width: 1px;
	    border-color: black;
	    border-style: solid;
	    border-radius: 7;
   		 padding: 3px;
	]])
end
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>zHelp</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>buildHelp</name>
							<packageName></packageName>
							<script>function zgui.buildHelp()
  zgui.helpSize = zgui.helpSize or 9
  zgui.help = {}

  --Create the main Adjustable
  zgui.help.window = Adjustable.Container:new({
    name = "zgui.help.window",
    x = 0, y = 0,
    width = "25%",
    height = "70%",   
    adjLabelstyle = zgui.adjLabelstyle,
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 10,
    buttonsize = 15,          
  },main)
  zgui.help.window:changeMenuStyle("dark")

  --Create the help container
  zgui.help.container = Geyser.Container:new({
    name = "zgui.help.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.help.window)  

  --Create the help Console
  zgui.help.console = Geyser.MiniConsole:new({
    name = "helpDisplay",
    x = 0, y = "25%",
    autoWrap = true,
    scrollBar = true,
    width = "100%",
    height = "75%",
    color="black",
  },zgui.help.container)

---------------------------------------------------------
-- Window Style
  zgui.help.windowStyle = Geyser.Label:new({
    name="windowStyle",
    x="1%",y="7%",
    height="5%",width="98%",
    nestable=true,
    message="&lt;center&gt;Window Style: "..zgui.useStyle.."&lt;/center&gt;"
  },zgui.help.container)

  for k,v in pairs(zgui.styles) do
    zgui.help.windowStyle[k] = zgui.help.windowStyle:addChild({
      name=k.."WindowStyle",
      x="1%",y="1%",
      height=40,width=200,
      layoutDir="BV",
      flyOut=true,
      message="&lt;center&gt;"..k.."&lt;/center&gt;"
    })  
    zgui.help.windowStyle[k]:setStyleSheet(zgui.adjLabelstyle)
    zgui.help.windowStyle[k]:setClickCallback("zgui.styleSwap", k)    
  end
---------------------------------------------------------
-- Toggle Darkmode
  zgui.help.darkmode = Geyser.Label:new({
    name="darkmode",
    x="1%",y="13%",
    height="5%",width="98%",
    message="&lt;center&gt;Toggle Darkmode&lt;/center&gt;"
  },zgui.help.container)
  zgui.help.darkmode:setClickCallback("zgui.darkmodeToggle")
  
---------------------------------------------------------
-- Map Explorer
  zgui.help.mapExplorer = Geyser.Label:new({
    name="mapExplorer",
    x="1%",y="19%",
    height="5%",width="98%",
    message="&lt;center&gt;Map Explorer&lt;/center&gt;"
  },zgui.help.container)
  zgui.help.mapExplorer:setClickCallback("zgui.mapExplorer")
    
---------------------------------------------------------
-- Close All Windows
  zgui.help.closeAll = Geyser.Label:new({
    name="closeAll",
    x="35%",y="1%",
    height="5%",width="31%",
    message="&lt;center&gt;Close ALL&lt;/center&gt;"
  },zgui.help.container)
  zgui.help.closeAll:setClickCallback("zgui.closeAllWindows")

---------------------------------------------------------
-- Load Save Layout Buttons
  zgui.help.load = Geyser.Label:new({
    name="loadLayout",
    x="1%",y="1%",
    height="5%",width="33%",
    nestable=true,
    message="&lt;center&gt;Load&lt;/center&gt;"
  },zgui.help.container)
  
  zgui.help.load.default = zgui.help.load:addChild({
    name="loadDefaultLayout",
    x="1%",y="1%",
    height=40,width=200,
    layoutDir="BV",
    flyOut=true,
    message="Load DEFAULT Layout"
  })  
  zgui.help.load.default:setStyleSheet(zgui.adjLabelstyle)
  zgui.help.load.default:setClickCallback("zgui.loadDefault")

  zgui.help.load.combat = zgui.help.load:addChild({
    name="loadCombatLayout",
    x="1%",y="1%",
    height=40,width=200,
    layoutDir="BV",
    flyOut=true,
    message="Load COMBAT Layout"
  }) 
  zgui.help.load.combat:setStyleSheet(zgui.adjLabelstyle)
  zgui.help.load.combat:setClickCallback("zgui.loadCombat")

  zgui.help.load.hunting = zgui.help.load:addChild({
    name="loadHuntingLayout",
    x="1%",y="1%",
    height=40,width=200,
    layoutDir="BV",
    flyOut=true,
    message="Load HUNTING Layout"
  }) 
  zgui.help.load.hunting:setStyleSheet(zgui.adjLabelstyle)
  zgui.help.load.hunting:setClickCallback("zgui.loadHunting")
  
  zgui.help.load.sailing = zgui.help.load:addChild({
    name="loadSailingLayout",
    x="1%",y="1%",
    height=40,width=200,
    layoutDir="BV",
    flyOut=true,
    message="Load SAILING Layout"
  })  
  zgui.help.load.sailing:setStyleSheet(zgui.adjLabelstyle) 
  zgui.help.load.sailing:setClickCallback("zgui.loadSailing")
  
  zgui.help.save = Geyser.Label:new({
    name="saveLayout",
    x="67%",y="1%",
    height="5%",width="32%",
    nestable=true,
    message="&lt;center&gt;Save&lt;/center&gt;"
  },zgui.help.container)

  zgui.help.save.default = zgui.help.save:addChild({
    name="saveDefaultLayout",
    x="1%",y="1%",
    height=40,width=200,
    layoutDir="BV",
    flyOut=true,
    message="Save DEFAULT Layout",
  })  
  zgui.help.save.default:setStyleSheet(zgui.adjLabelstyle)
  zgui.help.save.default:setClickCallback("zgui.saveDefault")

  zgui.help.save.combat = zgui.help.save:addChild({
    name="saveCombatLayout",
    x="1%",y="1%",
    height=40,width=200,
    layoutDir="BV",
    flyOut=true,
    message="Save COMBAT Layout"
  }) 
  zgui.help.save.combat:setStyleSheet(zgui.adjLabelstyle)
  zgui.help.save.combat:setClickCallback("zgui.saveCombat")

  zgui.help.save.hunting = zgui.help.save:addChild({
    name="saveHuntingLayout",
    x="1%",y="1%",
    height=40,width=200,
    layoutDir="BV",
    flyOut=true,
    message="Save HUNTING Layout"
  }) 
  zgui.help.save.hunting:setStyleSheet(zgui.adjLabelstyle)
  zgui.help.save.hunting:setClickCallback("zgui.saveHunting")
  
  zgui.help.save.sailing = zgui.help.save:addChild({
    name="saveSailingLayout",
    x="1%",y="1%",
    height=40,width=200,
    layoutDir="BV",
    flyOut=true,
    message="Save SAILING Layout"
  }) 
  zgui.help.save.sailing:setStyleSheet(zgui.adjLabelstyle)
  zgui.help.save.sailing:setClickCallback("zgui.saveSailing")
    
  setFontSize("helpDisplay", zgui.helpSize)
  zgui.help.window:setTitle("Help","gray")
  zgui.help.window:show()  
  
  if not table.contains(zgui.modules, "Help") then
    table.insert(zgui.modules, "Help")
  end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>showHelp</name>
							<packageName></packageName>
							<script>function zgui.unTitle(str)
    local buf = {}
    for word in string.gmatch(str, "%S+") do          
        local first, rest = string.sub(word, 1, 1), string.sub(word, 2)
        table.insert(buf, string.lower(first) .. rest)
    end  
    return table.concat(buf, " ")
end

function zgui.showHelp()
  --zgui.buildHelp()
  clearWindow("helpDisplay")
  cecho("helpDisplay", "\n&lt;white&gt; -- Installed Modules --")
  for i=1, #zgui.modules, 1 do
    if zgui.modules[i] ~= "Help" then
      if zgui[zgui.unTitle(zgui.modules[i])].window.hidden then
        cechoLink("helpDisplay", "\n&lt;red&gt;OFF&lt;SteelBlue&gt; - "..zgui.modules[i], [[zgui.build]]..zgui.modules[i]..[[();zgui.showHelp()]], "Turn Off", true)
      else
        cechoLink("helpDisplay", "\n&lt;green&gt;ON &lt;SteelBlue&gt; - "..zgui.modules[i], [[zgui.]]..zgui.unTitle(zgui.modules[i])..[[.window.hidden="true";zgui.]]..zgui.unTitle(zgui.modules[i])..[[.window:hide();zgui.showHelp()]], "Turn On", true)
      end
    end
  end    
end
registerAnonymousEventHandler("gmcp.Char.Vitals", "zgui.showHelp")
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Help Click Callbacks</name>
							<packageName></packageName>
							<script>function zgui.styleSwap(style)
  zgui.useStyle = style
  zgui.restyle()
end

function zgui.mapExplorer()
  expandAlias("/explore-map")
end

function zgui.darkmodeToggle()
  if zgui.darkmode then
    DarkThemeUninstall()
    expandAlias("zhelp")
  else
    DarkTheme()
    expandAlias("zhelp")
  end
end

function zgui.closeAllWindows()
  Adjustable.Container.hideAll()
end

function zgui.loadDefault()
  Adjustable.Container:loadAll("default")
end

function zgui.loadCombat()
  Adjustable.Container:loadAll("combat")
end

function zgui.loadHunting()
  Adjustable.Container:loadAll("hunting")
end

function zgui.loadSailing()
  Adjustable.Container:loadAll("sailing")
end

function zgui.saveDefault()
  Adjustable.Container:saveAll("default")
end

function zgui.saveCombat()
  Adjustable.Container:saveAll("combat")
end

function zgui.saveHunting()
  Adjustable.Container:saveAll("hunting")
end

function zgui.saveSailing()
  Adjustable.Container:saveAll("sailing")
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>HealthBars</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>buildHealthbar</name>
							<packageName></packageName>
							<script>function zgui.buildHealthbar()
  zgui.healthbarSize = zgui.healthbarSize or 9
  zgui.healthbar = {}

  --Create the main Adjustable
  zgui.healthbar.window = Adjustable.Container:new({
    name = "zgui.healthbar.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",  
    adjLabelstyle = "border-radius: 0px;background-color:rgba(50,50,50,0%);",
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 5,
    buttonsize = 10,        
  },main)
  zgui.healthbar.window:changeMenuStyle("dark")

  --Create the healthbar container
  zgui.healthbar.container = Geyser.Container:new({
    name = "zgui.healthbar.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.healthbar.window)  

  --Create the healthbar guage
  zgui.healthbar.healthbar = Geyser.Gauge:new({
    name = "healthbarDisplay",
    x="0%", y="0%",
    width="100%", height="100%",
  },zgui.healthbar.container)
  
  zgui.healthbar.healthbar:setValue(math.random(1,100),100)

	zgui.healthbar.healthbar.front:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #00ff2e, stop: 0.2 #00d423, stop: 0.5 #008a00, stop: 0.7 #005100, stop: 0.9 #001800);
		border-top: 1px black solid;
		border-left: 1px black solid;
		border-bottom: 1px black solid;
		border-radius: 7;
		padding: 3px;
	]])
	
	zgui.healthbar.healthbar.back:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #333333, stop: 0.1 #333333, stop: 0.49 #111111, stop: 0.5 #111111, stop: 1 #333333);
		border-width: 1px;
		border-color: black;
		border-style: solid;
		border-radius: 7;
		padding: 3px;
	]])

  setFontSize("healthbarDisplay", zgui.healthbarSize)
  zgui.healthbar.window:setTitle("Health Bar","gray")
  zgui.healthbar.window:show()  
  
  if not table.contains(zgui.modules, "Healthbar") then
    table.insert(zgui.modules, "Healthbar")
  end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>buildManabar</name>
							<packageName></packageName>
							<script>function zgui.buildManabar()
  zgui.manabarSize = zgui.manabarSize or 9
  zgui.manabar = {}

  --Create the main Adjustable
  zgui.manabar.window = Adjustable.Container:new({
    name = "zgui.manabar.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",  
    adjLabelstyle = "border-radius: 0px;background-color:rgba(50,50,50,0%);",
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 5,
    buttonsize = 10,          
  },main)
  zgui.manabar.window:changeMenuStyle("dark")

  --Create the manabar container
  zgui.manabar.container = Geyser.Container:new({
    name = "zgui.manabar.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zgui.manabar.window)  

  --Create the manabar guage
  zgui.manabar.manabar = Geyser.Gauge:new({
    name = "manabarDisplay",
    x="0%", y="0%",
    width="100%", height="100%",
  },zgui.manabar.container)
  
  zgui.manabar.manabar:setValue(math.random(1,100),100)

	zgui.manabar.manabar.front:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #007eff, stop: 0.2 #0059d2, stop: 0.5 #003fb1, stop: 0.7 #002892, stop: 0.9 #001273);
		border-top: 1px black solid;
		border-left: 1px black solid;
		border-bottom: 1px black solid;
		border-radius: 7;
		padding: 3px;
	]])
	
	zgui.manabar.manabar.back:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #333333, stop: 0.1 #333333, stop: 0.49 #111111, stop: 0.5 #111111, stop: 1 #333333);
		border-width: 1px;
		border-color: black;
		border-style: solid;
		border-radius: 7;
		padding: 3px;
	]])

  setFontSize("manabarDisplay", zgui.manabarSize)
  zgui.manabar.window:setTitle("Mana Bar","gray")
  zgui.manabar.window:show()  
  
  if not table.contains(zgui.modules, "Manabar") then
    table.insert(zgui.modules, "Manabar")
  end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>showHealthbar</name>
							<packageName></packageName>
							<script>function zgui.showHealthbar()
  if tonumber(gmcp.Char.Vitals.hp) &gt; tonumber(gmcp.Char.Vitals.maxhp) then
  	zgui.healthbar.healthbar.front:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #00ff2e, stop: 0.2 #00d423, stop: 0.5 #008a00, stop: 0.7 #005100, stop: 0.9 #001800);
		border-top: 1px black solid;
		border-left: 1px black solid;
		border-bottom: 1px black solid;
		border-radius: 7;
		padding: 3px;
	  ]])  
    zgui.healthbar.healthbar:setValue(100, 100, "&lt;b&gt;&lt;center&gt;  "..tonumber(gmcp.Char.Vitals.hp).. "&lt;/center&gt;&lt;/b&gt;")
  elseif tonumber(gmcp.Char.Vitals.hp) &lt;= (tonumber(gmcp.Char.Vitals.maxhp)/2) then
    zgui.healthbar.healthbar:setValue(tonumber(gmcp.Char.Vitals.hp), tonumber(gmcp.Char.Vitals.maxhp), "&lt;b&gt;  "..tonumber(gmcp.Char.Vitals.hp).. "&lt;/b&gt;")
    zgui.healthbar.healthbar.front:setStyleSheet([[
		  background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #621616, stop: 0.1 #640a0a, stop: 0.49 #8a0000, stop: 0.5 #560000, stop: 1 #260000);
  		border-top: 1px black solid;
	  	border-left: 1px black solid;
		  border-bottom: 1px black solid;
		  border-radius: 7;
		  padding: 3px;
	  ]])
  else
  	zgui.healthbar.healthbar.front:setStyleSheet([[
		background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #00ff2e, stop: 0.2 #00d423, stop: 0.5 #008a00, stop: 0.7 #005100, stop: 0.9 #001800);
		border-top: 1px black solid;
		border-left: 1px black solid;
		border-bottom: 1px black solid;
		border-radius: 7;
		padding: 3px;
	  ]])
    zgui.healthbar.healthbar:setValue(tonumber(gmcp.Char.Vitals.hp), tonumber(gmcp.Char.Vitals.maxhp), "&lt;b&gt;&lt;center&gt;  "..tonumber(gmcp.Char.Vitals.hp).. "&lt;/center&gt;&lt;/b&gt;")
  end
end
registerAnonymousEventHandler("gmcp.Char.Vitals", "zgui.showHealthbar")</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>showManabar</name>
							<packageName></packageName>
							<script>function zgui.showManabar()
  if tonumber(gmcp.Char.Vitals.mp) &gt; tonumber(gmcp.Char.Vitals.maxmp) then
  	zgui.manabar.manabar.front:setStyleSheet([[
		  background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #007eff, stop: 0.2 #0059d2, stop: 0.5 #003fb1, stop: 0.7 #002892, stop: 0.9 #001273);
		  border-top: 1px black solid;
		  border-left: 1px black solid;
		  border-bottom: 1px black solid;
		  border-radius: 7;
		  padding: 3px;
	  ]])  
    zgui.manabar.manabar:setValue(100, 100, "&lt;b&gt;&lt;center&gt;  "..tonumber(gmcp.Char.Vitals.mp).. "&lt;/center&gt;&lt;/b&gt;")
  elseif tonumber(gmcp.Char.Vitals.mp) &lt;= (tonumber(gmcp.Char.Vitals.maxmp)/2) then
    zgui.manabar.manabar:setValue(tonumber(gmcp.Char.Vitals.mp), tonumber(gmcp.Char.Vitals.maxmp), "&lt;b&gt;  "..tonumber(gmcp.Char.Vitals.mp).. "&lt;/b&gt;")
    zgui.manabar.manabar.front:setStyleSheet([[
		  background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #621616, stop: 0.1 #640a0a, stop: 0.49 #8a0000, stop: 0.5 #560000, stop: 1 #260000);
  		border-top: 1px black solid;
	  	border-left: 1px black solid;
		  border-bottom: 1px black solid;
		  border-radius: 7;
		  padding: 3px;
	  ]])
  else
  	zgui.manabar.manabar.front:setStyleSheet([[
		  background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #007eff, stop: 0.2 #0059d2, stop: 0.5 #003fb1, stop: 0.7 #002892, stop: 0.9 #001273);
		  border-top: 1px black solid;
		  border-left: 1px black solid;
		  border-bottom: 1px black solid;
		  border-radius: 7;
		  padding: 3px;
	  ]])
    zgui.manabar.manabar:setValue(tonumber(gmcp.Char.Vitals.mp), tonumber(gmcp.Char.Vitals.maxmp), "&lt;b&gt;&lt;center&gt;  "..tonumber(gmcp.Char.Vitals.mp).. "&lt;/center&gt;&lt;/b&gt;")
  end
end
registerAnonymousEventHandler("gmcp.Char.Vitals", "zgui.showManabar")

</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Map Explorer</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>map-exporter</name>
							<packageName></packageName>
							<script>MapExporter = MapExporter or {
  areas = {},
  dir = getMudletHomeDir() .. "/zGUI/MudletMapExplorer-1/"
}

local fileLocation = MapExporter.dir .. "index.html"
local fileURL = "file:///" .. fileLocation
MapExporter.fileLocation = fileLocation
MapExporter.fileURL = fileURL

function MapExporter:echoUrl()
  cecho("&lt;blue&gt;(&lt;white&gt;Map Explorer&lt;blue&gt;) ")
  echoLink(fileLocation, string.format([[openUrl("%s")]], fileURL), "Open in browser", false)
  echo(" \n")
end

function MapExporter:openUrl()
  openUrl(fileURL)
end

function MapExporter:getRoomInfo(roomId)
  local x,y,z = getRoomCoordinates(roomId)
  local userDataKeys = getRoomUserDataKeys(roomId)
  local userData = {}
  for _,key in ipairs(userDataKeys) do
    userData[key] = getRoomUserData(roomId,key)
  end
  local roomInfo = {
    id = roomId,
    x = x,
    y = y,
    z = z,
    name = getRoomName(roomId),
    exits = getRoomExits(roomId),
    env = getRoomEnv(roomId),
    roomChar = getRoomChar(roomId),
    doors = getDoors(roomId),
    customLines = self:fixCustomLines(getCustomLines(roomId)),
    specialExits = getSpecialExitsSwap(roomId),
    stubs = getExitStubs1(roomId),
    userData = table.size(userData) &gt; 0 and userData or nil
  }
  return roomInfo
end

function MapExporter:getAreaRooms(areaId)
  areaId = tonumber(areaId)
  local rooms = getAreaRooms(areaId)
  local labelIds = getMapLabels(areaId)

  local labels = {}
  if type(labelIds) == "table" then
    for k,v in pairs(labelIds) do
      local label = getMapLabel(areaId, k)
      label.id = k
      table.insert(labels, label)
    end
  end

  local areaRooms = {
    areaId = areaId,
    areaName =  getRoomAreaName(areaId),
    rooms = {},
    labels = labels
  }
  for _, roomId in pairs(rooms) do
    local roomInfo = self:getRoomInfo(roomId)
    table.insert(areaRooms.rooms, roomInfo)
  end
  return areaRooms
end

function MapExporter:exportColors()
  local colors = {}
  local adjustedColors = {}
  for i=0,255 do
    if i ~= 16 then -- ansi 016 is ignored.
      local key = string.format("ansi_%03d",i)
      local envID
      if i == 0 or i == 8 then -- ansi 000 is set to envID 8, and ansi 008 is set to envID 16, due to envID starting at 1 and ansi colors at 0
        envID = i + 8
      else
        envID = i
      end
      colors[envID] = color_table[key]
    end
  end
  for k,v in pairs(getCustomEnvColorTable()) do
    colors[k] = v
  end
  for envID,color in pairs(colors) do
    table.insert(adjustedColors, {
      envId = envID,
      colors = color
    })
  end
  colors = adjustedColors

  local colorsFileName = self.dir .. "data/colors.js"
  local colorsFile = io.open (colorsFileName, "w+")
  colorsFile:write("colors = ")
  colorsFile:write(yajl.to_string(colors))
  colorsFile:close()
end

function MapExporter:exportCurrentLocation()
  local position = {
    area = getRoomArea(getPlayerRoom()),
    room = getPlayerRoom()
  }
  local currentPosition = self.dir .. "/data/current.js"
  currentPosition = io.open (currentPosition, "w+")
  currentPosition:write("position = ")
  currentPosition:write(yajl.to_string(position))
  currentPosition:close()
end

function MapExporter:export()
  local areas = {}
  for areaName, areaId in pairs(getAreaTable()) do
    if areaId &gt; 0 then
      local areaRooms = self:getAreaRooms(areaId)
      table.insert(areas, areaRooms)
    end
  end

  local fileName = self.dir .. "data/mapExport.js"
  local file = io.open (fileName, "w+")
  file:write("mapData = ")
  file:write(yajl.to_string(areas))
  file:close()

  self:exportColors()

  if getPlayerRoom() then
    self:exportCurrentLocation()
  end
end

function MapExporter:fixCustomLines(lineObj)
  for k,v in pairs(lineObj) do
    local tempPoints = {}
    local index = 1
    for i,j in pairs(v.points) do
      table.insert(tempPoints, math.max(1, tonumber(i)), j)
    end

    v.points = tempPoints
  end
  return lineObj
end

MapExporter.colorFixers = MapExporter.colorFixers or {}

function MapExporter.colorFixers.Imperian()
  setCustomEnvColor(1, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(2, Geyser.Color.parse("#808080"))
  setCustomEnvColor(3, Geyser.Color.parse("#808080"))
  setCustomEnvColor(4, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(5, Geyser.Color.parse("#FFFF00"))
  setCustomEnvColor(6, Geyser.Color.parse("#FFFF00"))
  setCustomEnvColor(7, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(8, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(9, Geyser.Color.parse("#00A0A0"))
  setCustomEnvColor(10, Geyser.Color.parse("#0000FF"))
  setCustomEnvColor(11, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(12, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(13, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(14, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(15, Geyser.Color.parse("#A000A0"))
  setCustomEnvColor(16, Geyser.Color.parse("#FFFFFF"))
  setCustomEnvColor(17, Geyser.Color.parse("#00FF00"))
  setCustomEnvColor(18, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(19, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(20, Geyser.Color.parse("#0000A0"))
  setCustomEnvColor(21, Geyser.Color.parse("#00FF00"))
  setCustomEnvColor(22, Geyser.Color.parse("#0000A0"))
  setCustomEnvColor(23, Geyser.Color.parse("#A00000"))
  setCustomEnvColor(24, Geyser.Color.parse("#0000A0"))
  setCustomEnvColor(25, Geyser.Color.parse("#0000A0"))
  setCustomEnvColor(26, Geyser.Color.parse("#0000A0"))
  setCustomEnvColor(27, Geyser.Color.parse("#FFFFFF"))
  setCustomEnvColor(28, Geyser.Color.parse("#808080"))
  setCustomEnvColor(30, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(31, Geyser.Color.parse("#A00000"))
  setCustomEnvColor(32, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(33, Geyser.Color.parse("#FF0000"))
  setCustomEnvColor(35, Geyser.Color.parse("#A00000"))
  setCustomEnvColor(36, Geyser.Color.parse("#808080"))
  setCustomEnvColor(37, Geyser.Color.parse("#A00000"))
  setCustomEnvColor(38, Geyser.Color.parse("#FFFF00"))
  setCustomEnvColor(39, Geyser.Color.parse("#A00000"))
  setCustomEnvColor(41, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(42, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(44, Geyser.Color.parse("#00FF00"))
  setCustomEnvColor(45, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(46, Geyser.Color.parse("#808080"))
  setCustomEnvColor(47, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(48, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(49, Geyser.Color.parse("#0000A0"))
  setCustomEnvColor(50, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(51, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(52, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(53, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(54, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(56, Geyser.Color.parse("#FF0000"))
  setCustomEnvColor(57, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(58, Geyser.Color.parse("#808080"))
  setCustomEnvColor(59, Geyser.Color.parse("#FF0000"))
  setCustomEnvColor(60, Geyser.Color.parse("#A000A0"))
  setCustomEnvColor(61, Geyser.Color.parse("#FF0000"))
  setCustomEnvColor(62, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(63, Geyser.Color.parse("#808080"))
  setCustomEnvColor(64, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(65, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(67, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(68, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(69, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(70, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(71, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(72, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(73, Geyser.Color.parse("#A000A0"))
  setCustomEnvColor(74, Geyser.Color.parse("#A000A0"))
  setCustomEnvColor(75, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(76, Geyser.Color.parse("#A000A0"))
  setCustomEnvColor(77, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(78, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(79, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(81, Geyser.Color.parse("#A000A0"))
  setCustomEnvColor(82, Geyser.Color.parse("#FFFFFF"))
  setCustomEnvColor(83, Geyser.Color.parse("#FF0000"))
  setCustomEnvColor(84, Geyser.Color.parse("#FF0000"))
  setCustomEnvColor(85, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(86, Geyser.Color.parse("#FFFF00"))
end

function MapExporter.colorFixers.Aetolia()
  setCustomEnvColor(1, Geyser.Color.parse("#A00000"))
  setCustomEnvColor(2, Geyser.Color.parse("#A00000"))
  setCustomEnvColor(3, Geyser.Color.parse("#A00000"))
  setCustomEnvColor(4, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(5, Geyser.Color.parse("#FFFF00"))
  setCustomEnvColor(6, Geyser.Color.parse("#FFFF00"))
  setCustomEnvColor(7, Geyser.Color.parse("#00FF00"))
  setCustomEnvColor(8, Geyser.Color.parse("#FFFFFF"))
  setCustomEnvColor(9, Geyser.Color.parse("#A00000"))
  setCustomEnvColor(10, Geyser.Color.parse("#0000FF"))
  setCustomEnvColor(11, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(12, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(13, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(14, Geyser.Color.parse("#A00000"))
  setCustomEnvColor(15, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(16, Geyser.Color.parse("#00A0A0"))
  setCustomEnvColor(17, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(19, Geyser.Color.parse("#00A0A0"))
  setCustomEnvColor(20, Geyser.Color.parse("#0000FF"))
  setCustomEnvColor(21, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(22, Geyser.Color.parse("#0000FF"))
  setCustomEnvColor(23, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(24, Geyser.Color.parse("#0000A0"))
  setCustomEnvColor(25, Geyser.Color.parse("#0000FF"))
  setCustomEnvColor(26, Geyser.Color.parse("#808080"))
  setCustomEnvColor(27, Geyser.Color.parse("#FFFFFF"))
  setCustomEnvColor(28, Geyser.Color.parse("#0000FF"))
  setCustomEnvColor(29, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(30, Geyser.Color.parse("#00FFFF"))
  setCustomEnvColor(31, Geyser.Color.parse("#808080"))
  setCustomEnvColor(32, Geyser.Color.parse("#A00000"))
  setCustomEnvColor(33, Geyser.Color.parse("#A000A0"))
  setCustomEnvColor(34, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(35, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(36, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(37, Geyser.Color.parse("#808080"))
  setCustomEnvColor(38, Geyser.Color.parse("#00A0A0"))
  setCustomEnvColor(39, Geyser.Color.parse("#FF0000"))
  setCustomEnvColor(40, Geyser.Color.parse("#0000A0"))
  setCustomEnvColor(41, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(42, Geyser.Color.parse("#FFFFFF"))
  setCustomEnvColor(43, Geyser.Color.parse("#00A0A0"))
  setCustomEnvColor(44, Geyser.Color.parse("#00A0A0"))
  setCustomEnvColor(45, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(46, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(48, Geyser.Color.parse("#0000FF"))
  setCustomEnvColor(49, Geyser.Color.parse("#0000FF"))
  setCustomEnvColor(50, Geyser.Color.parse("#0000FF"))
  setCustomEnvColor(52, Geyser.Color.parse("#A000A0"))
  setCustomEnvColor(53, Geyser.Color.parse("#00FFFF"))
  setCustomEnvColor(54, Geyser.Color.parse("#FFFF00"))
  setCustomEnvColor(55, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(56, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(57, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(58, Geyser.Color.parse("#A000A0"))
  setCustomEnvColor(59, Geyser.Color.parse("#808080"))
  setCustomEnvColor(60, Geyser.Color.parse("#FFFFFF"))
  setCustomEnvColor(61, Geyser.Color.parse("#808080"))
  setCustomEnvColor(62, Geyser.Color.parse("#808080"))
  setCustomEnvColor(63, Geyser.Color.parse("#00FF00"))
  setCustomEnvColor(65, Geyser.Color.parse("#00A0A0"))
  setCustomEnvColor(66, Geyser.Color.parse("#FFFFFF"))
  setCustomEnvColor(67, Geyser.Color.parse("#A000A0"))
  setCustomEnvColor(68, Geyser.Color.parse("#808080"))
  setCustomEnvColor(69, Geyser.Color.parse("#A00000"))
  setCustomEnvColor(70, Geyser.Color.parse("#00FFFF"))
  setCustomEnvColor(71, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(72, Geyser.Color.parse("#00FF00"))
  setCustomEnvColor(73, Geyser.Color.parse("#FF0000"))
  setCustomEnvColor(75, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(76, Geyser.Color.parse("#FFFF00"))
  setCustomEnvColor(77, Geyser.Color.parse("#FF0000"))
  setCustomEnvColor(78, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(79, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(80, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(81, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(82, Geyser.Color.parse("#FFFF00"))
  setCustomEnvColor(83, Geyser.Color.parse("#808080"))
  setCustomEnvColor(84, Geyser.Color.parse("#0000FF"))
  setCustomEnvColor(85, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(87, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(88, Geyser.Color.parse("#00FFFF"))
  setCustomEnvColor(89, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(90, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(91, Geyser.Color.parse("#FFFFFF"))
  setCustomEnvColor(92, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(93, Geyser.Color.parse("#C8C8C8"))
  setCustomEnvColor(94, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(96, Geyser.Color.parse("#FF0000"))
  setCustomEnvColor(98, Geyser.Color.parse("#808080"))
  setCustomEnvColor(99, Geyser.Color.parse("#808080"))
  setCustomEnvColor(100, Geyser.Color.parse("#808080"))
  setCustomEnvColor(101, Geyser.Color.parse("#FFFFFF"))
  setCustomEnvColor(102, Geyser.Color.parse("#A00000"))
  setCustomEnvColor(103, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(104, Geyser.Color.parse("#A00000"))
  setCustomEnvColor(105, Geyser.Color.parse("#808080"))
  setCustomEnvColor(106, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(107, Geyser.Color.parse("#00A0A0"))
  setCustomEnvColor(108, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(109, Geyser.Color.parse("#FFFF00"))
  setCustomEnvColor(110, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(113, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(114, Geyser.Color.parse("#00A0A0"))
  setCustomEnvColor(116, Geyser.Color.parse("#808080"))
  setCustomEnvColor(117, Geyser.Color.parse("#FFFFFF"))
  setCustomEnvColor(118, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(120, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(121, Geyser.Color.parse("#00FF00"))
  setCustomEnvColor(122, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(123, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(124, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(125, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(126, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(127, Geyser.Color.parse("#808080"))
  setCustomEnvColor(128, Geyser.Color.parse("#FF00FF"))
  setCustomEnvColor(129, Geyser.Color.parse("#B1B1B1"))
  setCustomEnvColor(130, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(131, Geyser.Color.parse("#A00000"))
  setCustomEnvColor(132, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(133, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(134, Geyser.Color.parse("#00FF00"))
  setCustomEnvColor(136, Geyser.Color.parse("#663300"))
  setCustomEnvColor(137, Geyser.Color.parse("#333300"))
  setCustomEnvColor(138, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(140, Geyser.Color.parse("#00A0A0"))
  setCustomEnvColor(142, Geyser.Color.parse("#6633FF"))
  setCustomEnvColor(143, Geyser.Color.parse("#CC6600"))
  setCustomEnvColor(144, Geyser.Color.parse("#FFFF00"))
  setCustomEnvColor(145, Geyser.Color.parse("#FF0000"))
  setCustomEnvColor(146, Geyser.Color.parse("#0066FF"))
  setCustomEnvColor(147, Geyser.Color.parse("#3333FF"))
  setCustomEnvColor(148, Geyser.Color.parse("#0099FF"))
  setCustomEnvColor(149, Geyser.Color.parse("#FF00FF"))
  setCustomEnvColor(150, Geyser.Color.parse("#99FF00"))
  setCustomEnvColor(151, Geyser.Color.parse("#00FF00"))
  setCustomEnvColor(152, Geyser.Color.parse("#FF9900"))
  setCustomEnvColor(153, Geyser.Color.parse("#FF3300"))
  setCustomEnvColor(154, Geyser.Color.parse("#6633CC"))
  setCustomEnvColor(155, Geyser.Color.parse("#00FF66"))
  setCustomEnvColor(156, Geyser.Color.parse("#434343"))
  setCustomEnvColor(157, Geyser.Color.parse("#FF0099"))
end

function MapExporter.colorFixers.Lusternia()
  setCustomEnvColor(1, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(2, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(3, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(4, Geyser.Color.parse("#00FF00"))
  setCustomEnvColor(5, Geyser.Color.parse("#FFFF00"))
  setCustomEnvColor(6, Geyser.Color.parse("#FFFF00"))
  setCustomEnvColor(7, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(8, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(9, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(10, Geyser.Color.parse("#00A0A0"))
  setCustomEnvColor(11, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(12, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(13, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(14, Geyser.Color.parse("#A0A000"))
  setCustomEnvColor(15, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(16, Geyser.Color.parse("#FFFFFF"))
  setCustomEnvColor(17, Geyser.Color.parse("#00FF00"))
  setCustomEnvColor(18, Geyser.Color.parse("#FF0000"))
  setCustomEnvColor(19, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(20, Geyser.Color.parse("#0000FF"))
  setCustomEnvColor(21, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(22, Geyser.Color.parse("#0000A0"))
  setCustomEnvColor(23, Geyser.Color.parse("#00A0A0"))
  setCustomEnvColor(24, Geyser.Color.parse("#0000A0"))
  setCustomEnvColor(25, Geyser.Color.parse("#00FFFF"))
  setCustomEnvColor(27, Geyser.Color.parse("#FFFFFF"))
  setCustomEnvColor(28, Geyser.Color.parse("#00FF00"))
  setCustomEnvColor(29, Geyser.Color.parse("#A00000"))
  setCustomEnvColor(30, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(31, Geyser.Color.parse("#00B300"))
  setCustomEnvColor(32, Geyser.Color.parse("#FF0000"))
  setCustomEnvColor(33, Geyser.Color.parse("#FFFFFF"))
  setCustomEnvColor(34, Geyser.Color.parse("#A00000"))
  setCustomEnvColor(35, Geyser.Color.parse("#A000A0"))
  setCustomEnvColor(36, Geyser.Color.parse("#A000A0"))
  setCustomEnvColor(37, Geyser.Color.parse("#FFFFFF"))
  setCustomEnvColor(38, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(39, Geyser.Color.parse("#FF00FF"))
  setCustomEnvColor(40, Geyser.Color.parse("#C0C0C0"))
end

function MapExporter.colorFixers.Achaea()
  setCustomEnvColor(2, Geyser.Color.parse("#80735f"))
  setCustomEnvColor(3, Geyser.Color.parse("#765116"))
  setCustomEnvColor(4, Geyser.Color.parse("#36662e"))
  setCustomEnvColor(5, Geyser.Color.parse("#ffffcc"))
  setCustomEnvColor(6, Geyser.Color.parse("#f9fd00"))
  setCustomEnvColor(7, Geyser.Color.parse("#1dc713"))
  setCustomEnvColor(8, Geyser.Color.parse("#bda0cb"))
  setCustomEnvColor(9, Geyser.Color.parse("#2d7720"))
  setCustomEnvColor(10, Geyser.Color.parse("#00ddff"))
  setCustomEnvColor(11, Geyser.Color.parse("#837766"))
  setCustomEnvColor(12, Geyser.Color.parse("#7c7c7c"))
  setCustomEnvColor(13, Geyser.Color.parse("#41ab2f"))
  setCustomEnvColor(14, Geyser.Color.parse("#584a34"))
  setCustomEnvColor(15, Geyser.Color.parse("#76843c"))
  setCustomEnvColor(16, Geyser.Color.parse("#c5fcff"))
  setCustomEnvColor(17, Geyser.Color.parse("#89e14b"))
  setCustomEnvColor(18, Geyser.Color.parse("#ab9e6d"))
  setCustomEnvColor(19, Geyser.Color.parse("#56a574"))
  setCustomEnvColor(20, Geyser.Color.parse("#0000ff"))
  setCustomEnvColor(21, Geyser.Color.parse("#94e45d"))
  setCustomEnvColor(22, Geyser.Color.parse("#5ff0f0"))
  setCustomEnvColor(23, Geyser.Color.parse("#918010"))
  setCustomEnvColor(24, Geyser.Color.parse("#003366"))
  setCustomEnvColor(25, Geyser.Color.parse("#f98167"))
  setCustomEnvColor(27, Geyser.Color.parse("#ffffff"))
  setCustomEnvColor(28, Geyser.Color.parse("#00e342"))
  setCustomEnvColor(29, Geyser.Color.parse("#990000"))
  setCustomEnvColor(30, Geyser.Color.parse("#4d42d4"))
  setCustomEnvColor(31, Geyser.Color.parse("#dd4400"))
  setCustomEnvColor(32, Geyser.Color.parse("#ddba82"))
  setCustomEnvColor(33, Geyser.Color.parse("#837766"))
  setCustomEnvColor(34, Geyser.Color.parse("#0000ff"))
  setCustomEnvColor(35, Geyser.Color.parse("#ffffff"))
  setCustomEnvColor(36, Geyser.Color.parse("#918010"))
  setCustomEnvColor(39, Geyser.Color.parse("#918010"))
  setCustomEnvColor(40, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(41, Geyser.Color.parse("#C0C0C0"))
  setCustomEnvColor(42, Geyser.Color.parse("#cf1020"))
  setCustomEnvColor(43, Geyser.Color.parse("#00701f"))
  setCustomEnvColor(48, Geyser.Color.parse("#f98167"))
end

function MapExporter.colorFixers.Starmourn()
  setCustomEnvColor(1  , Geyser.Color.parse("#d7875f"))
  setCustomEnvColor(2  , Geyser.Color.parse("#87d7d7"))
  setCustomEnvColor(3  , Geyser.Color.parse("#ff875f"))
  setCustomEnvColor(4  , Geyser.Color.parse("#87d7d7"))
  setCustomEnvColor(5  , Geyser.Color.parse("#87d7d7"))
  setCustomEnvColor(6  , Geyser.Color.parse("#0000ff"))
  setCustomEnvColor(7  , Geyser.Color.parse("#ffd700"))
  setCustomEnvColor(8  , Geyser.Color.parse("#008000"))
  setCustomEnvColor(9  , Geyser.Color.parse("#c6c6c6"))
  setCustomEnvColor(10 , Geyser.Color.parse("#afffff"))
  setCustomEnvColor(11 , Geyser.Color.parse("#5f00ff"))
  setCustomEnvColor(12 , Geyser.Color.parse("#005f00"))
  setCustomEnvColor(13 , Geyser.Color.parse("#c6c6c6"))
  setCustomEnvColor(14 , Geyser.Color.parse("#00afff"))
  setCustomEnvColor(15 , Geyser.Color.parse("#87d7d7"))
  setCustomEnvColor(16 , Geyser.Color.parse("#8787ff"))
  setCustomEnvColor(17 , Geyser.Color.parse("#eeeeee"))
  setCustomEnvColor(18 , Geyser.Color.parse("#c6c6c6"))
  setCustomEnvColor(19 , Geyser.Color.parse("#008700"))
  setCustomEnvColor(20 , Geyser.Color.parse("#87af00"))
  setCustomEnvColor(21 , Geyser.Color.parse("#c6c6c6"))
  setCustomEnvColor(22 , Geyser.Color.parse("#c6c6c6"))
  setCustomEnvColor(23 , Geyser.Color.parse("#c6c6c6"))
  setCustomEnvColor(26 , Geyser.Color.parse("#c6c6c6"))
  setCustomEnvColor(27 , Geyser.Color.parse("#eeeeee"))
  setCustomEnvColor(28 , Geyser.Color.parse("#5faf00"))
  setCustomEnvColor(29 , Geyser.Color.parse("#949494"))
  setCustomEnvColor(30 , Geyser.Color.parse("#00ff00"))
  setCustomEnvColor(31 , Geyser.Color.parse("#d78700"))
  setCustomEnvColor(32 , Geyser.Color.parse("#87d7d7"))
  setCustomEnvColor(34 , Geyser.Color.parse("#87d7d7"))
  setCustomEnvColor(35 , Geyser.Color.parse("#005fff"))
  setCustomEnvColor(36 , Geyser.Color.parse("#87d7d7"))
  setCustomEnvColor(37 , Geyser.Color.parse("#d75f00"))
  setCustomEnvColor(38 , Geyser.Color.parse("#87d7d7"))
  setCustomEnvColor(39 , Geyser.Color.parse("#87d7d7"))
  setCustomEnvColor(40 , Geyser.Color.parse("#878700"))
  setCustomEnvColor(42 , Geyser.Color.parse("#875f00"))
  setCustomEnvColor(43 , Geyser.Color.parse("#c6c6c6"))
  setCustomEnvColor(44 , Geyser.Color.parse("#c6c6c6"))
  setCustomEnvColor(45 , Geyser.Color.parse("#ff5f5f"))
  setCustomEnvColor(46 , Geyser.Color.parse("#87d7d7"))
  setCustomEnvColor(47 , Geyser.Color.parse("#87d7d7"))
  setCustomEnvColor(48 , Geyser.Color.parse("#875f00"))
  setCustomEnvColor(49 , Geyser.Color.parse("#00afff"))
  setCustomEnvColor(50 , Geyser.Color.parse("#00afff"))
  setCustomEnvColor(51 , Geyser.Color.parse("#af8700"))
  setCustomEnvColor(52 , Geyser.Color.parse("#008787"))
  setCustomEnvColor(53 , Geyser.Color.parse("#008000"))
  setCustomEnvColor(54 , Geyser.Color.parse("#870000"))
  setCustomEnvColor(55 , Geyser.Color.parse("#c6c6c6"))
  setCustomEnvColor(56 , Geyser.Color.parse("#800000"))
  setCustomEnvColor(57 , Geyser.Color.parse("#ff0000"))
  setCustomEnvColor(58 , Geyser.Color.parse("#c6c6c6"))
  setCustomEnvColor(59 , Geyser.Color.parse("#5f5f00"))
  setCustomEnvColor(60 , Geyser.Color.parse("#87d7d7"))
  setCustomEnvColor(61 , Geyser.Color.parse("#87d700"))
  setCustomEnvColor(62 , Geyser.Color.parse("#87d7d7"))
  setCustomEnvColor(63 , Geyser.Color.parse("#87d7d7"))
  setCustomEnvColor(64 , Geyser.Color.parse("#00afff"))
  setCustomEnvColor(65 , Geyser.Color.parse("#87ffaf"))
  setCustomEnvColor(66 , Geyser.Color.parse("#87d7d7"))
  setCustomEnvColor(67 , Geyser.Color.parse("#87d7d7"))
  setCustomEnvColor(69 , Geyser.Color.parse("#878700"))
  setCustomEnvColor(70 , Geyser.Color.parse("#5f5f00"))
  setCustomEnvColor(71 , Geyser.Color.parse("#87d7d7"))
  setCustomEnvColor(72 , Geyser.Color.parse("#878700"))
  setCustomEnvColor(73 , Geyser.Color.parse("#878700"))
  setCustomEnvColor(75 , Geyser.Color.parse("#00875f"))
  setCustomEnvColor(76 , Geyser.Color.parse("#87af5f"))
  setCustomEnvColor(77 , Geyser.Color.parse("#87af5f"))
  setCustomEnvColor(78 , Geyser.Color.parse("#87af5f"))
  setCustomEnvColor(79 , Geyser.Color.parse("#87af5f"))
  setCustomEnvColor(80 , Geyser.Color.parse("#87af5f"))
  setCustomEnvColor(81 , Geyser.Color.parse("#87af5f"))
  setCustomEnvColor(82 , Geyser.Color.parse("#87af5f"))
  setCustomEnvColor(83 , Geyser.Color.parse("#87af5f"))
  setCustomEnvColor(84 , Geyser.Color.parse("#87af5f"))
  setCustomEnvColor(85 , Geyser.Color.parse("#00afff"))
  setCustomEnvColor(86 , Geyser.Color.parse("#d75f00"))
  setCustomEnvColor(87 , Geyser.Color.parse("#0000ff"))
  setCustomEnvColor(88 , Geyser.Color.parse("#87d7d7"))
  setCustomEnvColor(89 , Geyser.Color.parse("#87d7d7"))
  setCustomEnvColor(92 , Geyser.Color.parse("#af0087"))
  setCustomEnvColor(93 , Geyser.Color.parse("#808000"))
end
</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
				</ScriptGroup>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>zData</name>
				<packageName>zData</packageName>
				<script></script>
				<eventHandlerList />
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>zData</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--                                             --
--       Zulah's Hunting Database: zData       --
--            Last Update: 3/17/22             --
--                                             --
-------------------------------------------------
--                                             --
--                    Setup                    --
--                                             --
-------------------------------------------------
zData = zData or {}

zData.bardName = "Jaskier"
zData.bardVoice = " with a melodic voice"

function zData.echo(text)
	hecho(rainbow("\n"..zData.bardName..", appears strumming his lute to a tune of your greatness.\nEager to record your recent hunt in lavish detail and song, "..zData.bardName.." frantically works his quill."))
  cecho("\n\n&lt;gold&gt;"..zData.bardName.."&lt;cyan&gt; says to you"..zData.bardVoice..", \"Quite the slaughter you had at "..text.."\"\n\n")
end

zData.deleteAble = false

createStopWatch("zoneHuntWatch")
stopStopWatch("zoneHuntWatch")
resetStopWatch("zoneHuntWatch")

zData.db = zData.db or {}

zData.defs = zData.defs or {}

zData.char = zData.char or {}
zData.char = {
  lastArea = "NA", 
  
  tempTime = 0,
  minuteTime = 0,
  xpGains = 0,
  xpGainsMin = 0,
  killsPerMinute = 0, 
  
  totalAttacks = 0,
  crithits = 0,
  crit1 = 0,
  crit2 = 0,
  crit3 = 0,
  crit4 = 0,
  crit5 = 0,
  crit6 = 0,
  searedglyph = 0,
  shield = 0,
  paragon = 0,
  mayafigure = 0,
  
  ogold = 0,         -- old gold
  gold = 0,
  gpm = 0,          -- gold per minute
  
 	xp = 0,
  oxp = 0,       --old xp
  
  str = 0,
  dex = 0,
  int = 0,
  con = 0,
  
  killsCount = 0,
  killList = {},
  
  taliCount = 0,
  taliList = {},
  
  when = 0,
}

zData.classList =  {                                                       -- List of classes for searching the database by class
  ["alchemist"] = {["int"] = zData.char.int,},
  ["apostate"] = {["int"] = zData.char.int,},
  ["bard"] = {["str"] = zData.char.str,},
  ["blademaster"] = {["str"] = zData.char.str,},
  ["depthswalker"] = {["str"] = zData.char.str,},
  ["druid"] = {["str"] = zData.char.str,},
  ["infernal"] = {["str"] = zData.char.str,},
  ["jester"] = {["str"] = zData.char.str,},
  ["magi"] = {["int"] = zData.char.int,},
  ["monk"] = {["str"] = zData.char.str,["int"] = zData.char.int,},
  ["occultist"] = {["int"] = zData.char.int,},
  ["paladin"] = {["str"] = zData.char.str,},
  ["pariah"] = {["int"] = zData.char.int,},
  ["priest"] = {["int"] = zData.char.int,},
  ["psion"] = {["str"] = zData.char.str,["int"] = zData.char.int,},
  ["runewarden"] = {["str"] = zData.char.str,},
  ["sentinel"] = {["str"] = zData.char.str,},
  ["serpent"] = {["dex"] = zData.char.dex,},
  ["shaman"] = {["int"] = zData.char.int,},
  ["sylvan"] = {["int"] = zData.char.int,},
  ["unnamable"] = {["str"] = zData.char.str,},
  ["red dragon"] = {["str"] = zData.char.str,["int"] = zData.char.int,},
  ["blue dragon"] = {["str"] = zData.char.str,["int"] = zData.char.int,},
  ["gold dragon"] = {["str"] = zData.char.str,["int"] = zData.char.int,},
  ["silver dragon"] = {["str"] = zData.char.str,["int"] = zData.char.int,},
  ["green dragon"] = {["str"] = zData.char.str,["int"] = zData.char.int,},
  ["black dragon"] = {["str"] = zData.char.str,["int"] = zData.char.int,},
  ["dragon"] = "na",
  ["elemental"] = "na",                                                         
}</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Experience Database</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--                                             --
--                    Setup                    --
--                                             --
-------------------------------------------------
db:create("exp_db", 
  {
    zones={             
      "area",
      "class",
      "boost",
      "critpercent",
      "time",
      "epm",
      "exp",
      "kill",
      "kpm",
      "gold",
      "gpm",
      "str",
      "dex",
      "int",
      "con",  
      "attacks",
      "crits","crits1","crits2","crits3","crits4","crits5","crits6",
      "soa",
      "soaparagon",
      "glyph",
      "maya",
      "tali",
      "killlist",
      "talilist",
      "when",
      },
  })                                                 -- This creates database exp_db (if not already)
zData.db.expdb = db:get_database("exp_db")           -- This assigns the database name to a variable for ease of use purposes.
 
-------------------------------------------------
--                                             --
--  Add a new records: zData.db.zoneAdd(stuff) --
--                                             --
-------------------------------------------------
function zData.db.zoneAdd(area, class, boost, critpercent, time, epm, exp, kill, kpm, gold, gpm, str, dex, int, con, attacks, crits, crits1, crits2, crits3, crits4, crits5, crits6, soa, soaparagon, glyph, maya, tali, killlist, talilist, when)
  db:add(zData.db.expdb.zones,{
    area=area, class=class, boost=boost, critpercent=critpercent, 
    time=time, epm=epm, exp=exp, kill=kill, kpm=kpm, gold=gold, gpm=gpm, 
    str=str, dex=dex, int=int, con=con, 
    attacks=attacks, crits=crits, crits1=crits1, crits2=crits2, crits3=crits3, crits4=crits4, crits5=crits5, crits6=crits6, 
    soa=soa, soaparagon=soaparagon, glyph=glyph, maya=maya, 
    tali=tali, 
    killlist=killlist, 
    talilist=talilist,
    when=when})
  zData.echo("&lt;magenta&gt;"..area.."&lt;cyan&gt;\! &lt;NavajoWhite&gt;"..string.cut(exp,5).."&lt;cyan&gt; experience. &lt;NavajoWhite&gt;"..string.cut(kpm,4).."&lt;cyan&gt; KPM!")
end

-------------------------------------------------
--                                             --
--  Simple Add +1 : zData.db.addChar(addThis)  --
--                                             --
-------------------------------------------------
function zData.db.addChar(addThis)
  zData.char[addThis] = zData.char[addThis] + 1
end

------------------------------------------------------------
--                                                        --
-- Sort Database: zData.db.showData(sortWith, sortStyle)  --
--                                                        --
-- sortWith = Class / all / area search                   --
-- sortStyle = exp / epm / kill / kpm                     --
--                                                        --
------------------------------------------------------------
function zData.db.showData(sortWith, sortStyle, sortDirection)           -- This is my spaghetti code function 
  if zData.hunter then
    zData.hunter.window:show()
  else
    zData.buildHunter()
  end
  zData.db.localDB = {}                                   -- This is the table for sorting and display database results
  local maxShow = 40                     ------&lt;--&lt;--&lt;--&lt;--&lt; Max number of results to show unless ALL is used. Increase to see more (Over 200 will not allow deleting)
  local titleColor = "gold" 
  local menuColor = "purple" 
  local areaColor = "ansiMagenta"
  local classColor = "purple"
  local taliColor = "ansiMagenta"
  local timeColor = "ansiMagenta"
  
  local critColor = "ansiMagenta"
  
  local killColor = "ansiMagenta"
  local kpmColor = "ansiMagenta"
  local expColor = "ansiMagenta"
  local epmColor = "ansiMagenta"
  local gpmColor = "ansiMagenta"
  local goldColor = "ansiMagenta"
  local showCount = 0  

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Show Rows Based on Sorting  
  local function showCharts(thisChart, thisRow)
    if sortDirection and sortDirection == "down" then
      for _, row in spairs(zData.db.localDB) do
        if row[thisChart] == "" then
          row[thisChart] = 0
        end
      end
    
      for _, row in spairs(zData.db.localDB, function(t,a,b) return tonumber(t[a][thisChart]) &lt; tonumber(t[b][thisChart]) end) do    
-------------------------- Limit results to MAXSHOW        
        if sortWith and string.lower(sortWith) == "all" then 
          zData.deleteAble = false
        else 
          if maxShow &lt; 240 then zData.deleteAble = true end
          showCount = showCount + 1
          if showCount &gt;= maxShow then break end      
        end
--------------------------- Blackout 0 talisman counts        
        if tonumber(row.tali) &lt; 1 then taliColor = "black:black" else 
          if thisChart == "tali" then
            taliColor = "gold" 
          else
            taliColor = "ansiMagenta" 
          end
        end    
--------------------------- Blackout 0 crit counts     
        if thisChart == "critpercent" then   
          if tonumber(row.critpercent) &lt; 1 then 
            critColor = "black:black"
          else  
            critColor = "gold"
          end         
        end    
--------------------------- Display Each Row From The Database, Clickable For More Information
        cechoLink("hunterDisplay", 
          "\n  &lt;"..areaColor.."&gt;"..string.cut(row.area.."                   ", 20)
          .." &lt;"..classColor.."&gt;"..string.cut(row.class.."            ", 13)
          .. " &lt;"..taliColor.."&gt;"..string.cut(string.cut(row.tali,2).."   ", 4)
          .. " &lt;"..timeColor.."&gt;"..string.cut(string.cut((row.time/60), 4).."      ", 6)

          .. "  &lt;"..critColor.."&gt;"..string.cut(string.cut(row.critpercent, 4).."     ", 5)  

          .. " &lt;"..killColor.."&gt;"..string.cut(string.cut(row.kill,4).."     ", 6)
          ..  " &lt;"..kpmColor.."&gt;"..string.cut(string.cut(row.kpm,4).."     ", 6)
          ..  " &lt;"..expColor.."&gt;"..string.cut(string.cut(row.exp,4).."     ", 6)
          ..  " &lt;"..epmColor.."&gt;"..string.cut(string.cut(row.epm,5).."      ", 7)
          ..  " &lt;"..gpmColor.."&gt;"..string.cut(string.cut(math.floor(row.gpm),6).."       ", 8) 
          .. " &lt;"..goldColor.."&gt;"..string.cut(row.gold .."      ", 7),
        ---------------------------------------------------------------------------------  
          [[zData.db.clickback(]].._..[[)]], [[]], true)                               -- What to do when clicked on
        --------------------------------------------------------------------------------- 
      end --- End of for _,row
    else
      for _, row in spairs(zData.db.localDB) do
        if row[thisChart] == "" then
          row[thisChart] = 0
        end
      end
          
      for _, row in spairs(zData.db.localDB, function(t,a,b) return tonumber(t[a][thisChart]) &gt; tonumber(t[b][thisChart]) end) do    
-------------------------- Limit results to MAXSHOW        
        if sortWith and string.lower(sortWith) == "all" then 
          zData.deleteAble = false
        else 
          if maxShow &lt; 240 then zData.deleteAble = true end
          showCount = showCount + 1
          if showCount &gt;= maxShow then break end      
        end
--------------------------- Blackout 0 talisman counts        
        if tonumber(row.tali) &lt; 1 then taliColor = "black:black" else 
          if thisChart == "tali" then
            taliColor = "gold" 
          else
            taliColor = "ansiMagenta"
          end
        end    
--------------------------- Blackout 0 crit counts     
        if thisChart == "critpercent" then   
          if tonumber(row.critpercent) &lt; 1 then 
            critColor = "black:black"
          else  
            critColor = "gold"
          end         
        end    
--------------------------- Display Each Row From The Database, Clickable For More Information
        cechoLink("hunterDisplay", 
          "\n  &lt;"..areaColor.."&gt;"..string.cut(row.area.."                   ", 20)
          .." &lt;"..classColor.."&gt;"..string.cut(row.class.."            ", 13)
          .. " &lt;"..taliColor.."&gt;"..string.cut(string.cut(row.tali,2).."   ", 4)
          .. " &lt;"..timeColor.."&gt;"..string.cut(string.cut((row.time/60), 4).."      ", 6)

          .. "  &lt;"..critColor.."&gt;"..string.cut(string.cut(row.critpercent, 4).."     ", 5)          
          
          .. " &lt;"..killColor.."&gt;"..string.cut(string.cut(row.kill,4).."     ", 6)
          ..  " &lt;"..kpmColor.."&gt;"..string.cut(string.cut(row.kpm,4).."     ", 6)
          ..  " &lt;"..expColor.."&gt;"..string.cut(string.cut(row.exp,4).."     ", 6)
          ..  " &lt;"..epmColor.."&gt;"..string.cut(string.cut(row.epm,5).."      ", 7)
          ..  " &lt;"..gpmColor.."&gt;"..string.cut(string.cut(math.floor(row.gpm),6).."       ", 8) 
          .. " &lt;"..goldColor.."&gt;"..string.cut(row.gold .."      ", 7),
        ---------------------------------------------------------------------------------  
          [[zData.db.clickback(]].._..[[)]], [[]], true)                               -- What to do when clicked on
        --------------------------------------------------------------------------------- 
      end --- End of for _,row
    end
  end --- End of local function showCharts()
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--------------------------- Show Last 3 Zones
  local function showLast(thisChart, countBack)
    showCount = 0  
    local useRow = tonumber(#zData.db.localDB) - countBack
    for _, row in spairs(zData.db.localDB) do               
      if _ == useRow then
-------------------------- Limit results to 1        
        showCount = showCount + 1
        if showCount &gt;= 2 then break end          
--------------------------- Blackout 0 talisman counts        
        if tonumber(row.tali) &lt; 1 then taliColor = "black:black" else taliColor = "ansiMagenta" end
--------------------------- Display Each Row From The Database, Clickable For More Information
        cechoLink("hunterDisplay", 
          "&lt;"..areaColor.."&gt;"..string.cut(row.area.."                   ", 20)
          .." &lt;"..classColor.."&gt;"..string.cut(row.class.."            ", 13)
          .. " &lt;"..taliColor.."&gt;"..string.cut(string.cut(row.tali,2).."   ", 4)
          .. " &lt;"..timeColor.."&gt;"..string.cut(string.cut((row.time/60), 4).."      ", 6)
          .. "  &lt;"..critColor.."&gt;"..string.cut(string.cut(row.critpercent, 4).."     ", 5)         
          .. " &lt;"..killColor.."&gt;"..string.cut(string.cut(row.kill,4).."     ", 6)
          ..  " &lt;"..kpmColor.."&gt;"..string.cut(string.cut(row.kpm,4).."     ", 6)
          ..  " &lt;"..expColor.."&gt;"..string.cut(string.cut(row.exp,4).."     ", 6)
          ..  " &lt;"..epmColor.."&gt;"..string.cut(string.cut(row.epm,5).."      ", 7)
          ..  " &lt;"..gpmColor.."&gt;"..string.cut(string.cut(math.floor(row.gpm),6).."       ", 8) 
          .. " &lt;"..goldColor.."&gt;"..string.cut(row.gold .."      ", 7),
        ---------------------------------------------------------------------------------  
          [[zData.db.clickback(]].._..[[)]], [[]], true)                               -- What to do when clicked on
        --------------------------------------------------------------------------------- 
      end --- End of for _,row
    end
  end --- End of local function showCharts()
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  
-------------------------- Search For sortWith (First level sort: class name / all / area random
  if sortWith then
    if string.lower(sortWith) == "all" or
       string.lower(sortWith) == "tali" or
       string.lower(sortWith) == "time" or
       
       string.lower(sortWith) == "critpercent" or
       
       string.lower(sortWith) == "kill" or 
       string.lower(sortWith) == "kpm" or
       string.lower(sortWith) == "exp" or
       string.lower(sortWith) == "epm" or
       string.lower(sortWith) == "gold" or
       string.lower(sortWith) == "gpm"
     then
      zData.db.localDB = db:fetch(zData.db.expdb.zones)
    elseif table.contains(zData.classList, string.lower(sortWith)) then
      zData.db.localDB = db:fetch(zData.db.expdb.zones, db:like(zData.db.expdb.zones.class,"%"..sortWith.."%")) 
    else
	    zData.db.localDB = db:fetch(zData.db.expdb.zones, db:like(zData.db.expdb.zones.area,"%"..sortWith.."%")) 
    end   
  else
    zData.db.localDB = db:fetch(zData.db.expdb.zones)
  end
  
-------------------------- Clear Display   
  clearWindow("hunterDisplay") 
-------------------------- Display NO Results
  if #zData.db.localDB == 0 then
    cecho("hunterDisplay", "\n\n&lt;red&gt;     Nothing Found Searching &lt;gold&gt;Zones&lt;red&gt; for the string: &lt;gold&gt;"..sortWith.."\n       &lt;green&gt;Try Typing: &lt;gold&gt;zbash "..string.lower(gmcp.Char.Status.class).."\n")
-------------------------- Display Results
  else
    cecho("hunterDisplay", "\n                                   &lt;"..titleColor.."&gt;Detailed Hunting Scrolls\n")
-------------------------- Display Last 3 Zones
  hecho("hunterDisplay", rainbow("@@#################################################################################################@@"))    
  cecho("hunterDisplay", "\n&lt;"..titleColor.."&gt;1:")
    showLast("when", 0)
  cecho("hunterDisplay", "\n&lt;"..titleColor.."&gt;2:")
    showLast("when", 1)
  cecho("hunterDisplay", "\n&lt;"..titleColor.."&gt;3:")
    showLast("when", 2)
  cecho("hunterDisplay", "\n")
  hecho("hunterDisplay", rainbow("@@#################################################################################################@@\n"))
-------------------------- Display
    cecho("hunterDisplay","&lt;"..menuColor.."&gt;                                ")
    cechoLink("hunterDisplay","   &lt;"..menuColor.."&gt;Tali", [[zData.db.showData("tali")]], [[]], true)
    cechoLink("hunterDisplay","   &lt;"..menuColor.."&gt;Time", [[zData.db.showData("time")]], [[]], true)

    cechoLink("hunterDisplay","   &lt;"..menuColor.."&gt;Crit", [[zData.db.showData("critpercent")]], [[]], true)

    cechoLink("hunterDisplay","   &lt;"..menuColor.."&gt;Kill", [[zData.db.showData("kill")]], [[]], true)
    cechoLink("hunterDisplay","   &lt;"..menuColor.."&gt;KPM", [[zData.db.showData("kpm")]], [[]], true)
    cechoLink("hunterDisplay","    &lt;"..menuColor.."&gt;Exp", [[zData.db.showData("exp")]], [[]], true)
    cechoLink("hunterDisplay","     &lt;"..menuColor.."&gt;EPM", [[zData.db.showData("epm")]], [[]], true)
    cechoLink("hunterDisplay","    &lt;"..menuColor.."&gt;GPM", [[zData.db.showData("gpm")]], [[]], true)
    cechoLink("hunterDisplay","      &lt;"..menuColor.."&gt;Gold", [[zData.db.showData("gold")]], [[]], true) 
-------------------------- Display Results based on search(sortStyle)    
    if (sortStyle and string.lower(sortStyle) == "all") or (sortWith and string.lower(sortWith) == "all") then
      showCharts("exp", "expColor") 
    elseif (sortStyle and string.lower(sortStyle) == "exp") or (sortWith and string.lower(sortWith) == "exp") then
      expColor = "gold"
      showCharts("exp", "expColor")  
    elseif (sortStyle and string.lower(sortStyle) == "epm") or (sortWith and string.lower(sortWith) == "epm") then
      epmColor = "gold"
      showCharts("epm", "epmColor")  
    elseif (sortStyle and string.lower(sortStyle) == "time") or (sortWith and string.lower(sortWith) == "time") then
      timeColor = "gold"
      showCharts("time", "timeColor")  

    elseif (sortStyle and string.lower(sortStyle) == "critpercent") or (sortWith and string.lower(sortWith) == "critpercent") then
      critColor = "gold"
      showCharts("critpercent", "critColor")  

    elseif (sortStyle and string.lower(sortStyle) == "tali") or (sortWith and string.lower(sortWith) == "tali") then
      taliColor = "gold"
      showCharts("tali", "taliColor")    
    elseif (sortStyle and string.lower(sortStyle) == "gpm") or (sortWith and string.lower(sortWith) == "gpm") then
      gpmColor = "gold"
      showCharts("gpm", "gpmColor") 
    elseif (sortStyle and string.lower(sortStyle) == "gold") or (sortWith and string.lower(sortWith) == "gold") then
      goldColor = "gold"
      showCharts("gold", "goldColor")  
    elseif (sortStyle and string.lower(sortStyle) == "kill") or (sortWith and string.lower(sortWith) == "kill") then
      killColor = "gold"
      showCharts("kill", "killColor")  
    elseif (sortStyle and string.lower(sortStyle) == "kpm") or (sortWith and string.lower(sortWith) == "kpm") then
      kpmColor = "gold"
      showCharts("kpm", "kpmColor")  
    else
      kpmColor = "gold"
      showCharts("kpm", "kpmColor")
    end  
    cecho("hunterDisplay","\n&lt;"..menuColor.."&gt;                                ")
    cechoLink("hunterDisplay","   &lt;"..menuColor.."&gt;Tali", [[zData.db.showData("tali", nil, "down")]], [[]], true)
    cechoLink("hunterDisplay","   &lt;"..menuColor.."&gt;Time", [[zData.db.showData("time", nil, "down")]], [[]], true)

    cechoLink("hunterDisplay","   &lt;"..menuColor.."&gt;Crit", [[zData.db.showData("critpercent", nil, "down")]], [[]], true)

    cechoLink("hunterDisplay","   &lt;"..menuColor.."&gt;Kill", [[zData.db.showData("kill", nil, "down")]], [[]], true)
    cechoLink("hunterDisplay","   &lt;"..menuColor.."&gt;KPM", [[zData.db.showData("kpm", nil, "down")]], [[]], true)
    cechoLink("hunterDisplay","    &lt;"..menuColor.."&gt;Exp", [[zData.db.showData("exp", nil, "down")]], [[]], true)
    cechoLink("hunterDisplay","     &lt;"..menuColor.."&gt;EPM", [[zData.db.showData("epm", nil, "down")]], [[]], true)
    cechoLink("hunterDisplay","    &lt;"..menuColor.."&gt;GPM", [[zData.db.showData("gpm", nil, "down")]], [[]], true)
    cechoLink("hunterDisplay","      &lt;"..menuColor.."&gt;Gold", [[zData.db.showData("gold", nil, "down")]], [[]], true)  
  end
-------------------------- Display Footer     
  hecho("hunterDisplay", rainbow("\n@@#################################################################################################@@\n"))  
end 


-------------------------------------------------
--                                             --
--  View a saved record: zData.db.clickback()  --
--                                             --
-------------------------------------------------
function zData.db.clickback(thisRow)
  local deleteRow = 0
-------------------------- Clear Display   
  clearWindow("hunterDisplay") 
-------------------------- DELETE DATABASE ENTRY ---------------------------
  if zData.deleteAble then
    for _, row in spairs(zData.db.localDB) do
      if _ == thisRow then
        deleteRow = _
      end
    end
    cechoLink("hunterDisplay","\n&lt;red&gt;  --@@ DELETE ENTRY @@--  ", [[zData.db.clickbackdelete(]]..thisRow..[[)]], [[Clicking here will PERMENENTLY DELETE this entry]], true)
  end
----------------------------------------------------------------------------
  hecho("hunterDisplay", rainbow("\n@@#################################################################################################@@\n")) 
-------------------------- Display Header ^
  cecho("hunterDisplay","\n  &lt;purple&gt;Extended Report For: &lt;gold&gt;"..string.cut(zData.db.localDB[thisRow].class.."                                        ",40).."&lt;purple&gt;Date: &lt;gold&gt;"..zData.db.localDB[thisRow].when)
  cecho("hunterDisplay","\n  &lt;purple&gt;Hunting in the Zone: &lt;gold&gt;"..zData.db.localDB[thisRow].area)
  cecho("hunterDisplay","\n  &lt;purple&gt;Time Spent: &lt;ansiMagenta&gt;"..string.cut((zData.db.localDB[thisRow].time/60),4).." minutes")
  cecho("hunterDisplay","\n  &lt;purple&gt;Experience: &lt;ansiMagenta&gt;"..zData.db.localDB[thisRow].exp)
  cecho("hunterDisplay","\n  &lt;purple&gt;Experience Modifier: &lt;ansiMagenta&gt;"..zData.db.localDB[thisRow].boost.."\%\n")
  cecho("hunterDisplay","\n  &lt;purple&gt;Stats: &lt;ansiMagenta&gt;Str: &lt;gold&gt;"..zData.db.localDB[thisRow].str.." &lt;ansiMagenta&gt;Dex: &lt;gold&gt;"..zData.db.localDB[thisRow].dex.." &lt;ansiMagenta&gt;Int: &lt;gold&gt;"..zData.db.localDB[thisRow].int.." &lt;ansiMagenta&gt;Con: &lt;gold&gt;"..zData.db.localDB[thisRow].con.."\n")
  cecho("hunterDisplay","\n     &lt;purple&gt;Critical Hit Chance: &lt;ansiMagenta&gt;"..zData.db.localDB[thisRow].critpercent.."\%")
  cecho("hunterDisplay","\n &lt;gold&gt;"..zData.db.localDB[thisRow].crits.."  &lt;purple&gt;Critical Hits")
  cecho("hunterDisplay","\n &lt;gold&gt;"..string.cut(zData.db.localDB[thisRow].crits1.."  ",3).." &lt;ansiMagenta&gt; 2x "..string.cut("Critical                    ",25).."&lt;gold&gt;"..zData.db.localDB[thisRow].glyph.."  &lt;ansiMagenta&gt;Seared Glyph")
  cecho("hunterDisplay","\n &lt;gold&gt;"..string.cut(zData.db.localDB[thisRow].crits2.."  ",3).." &lt;ansiMagenta&gt; 4x "..string.cut("Crushing                    ",25).."&lt;gold&gt;"..zData.db.localDB[thisRow].soa.."  &lt;ansiMagenta&gt;Shield of Absorption")
  cecho("hunterDisplay","\n &lt;gold&gt;"..string.cut(zData.db.localDB[thisRow].crits3.."  ",3).." &lt;ansiMagenta&gt; 8x "..string.cut("Obliterating                    ",25).."&lt;gold&gt;"..zData.db.localDB[thisRow].soaparagon.."  &lt;ansiMagenta&gt;SoA Paragon")
  cecho("hunterDisplay","\n &lt;gold&gt;"..string.cut(zData.db.localDB[thisRow].crits4.."  ",3).." &lt;ansiMagenta&gt;16x "..string.cut("Annihilating                    ",25).."&lt;gold&gt;"..zData.db.localDB[thisRow].maya.."  &lt;ansiMagenta&gt;Maya Figurine")
  cecho("hunterDisplay","\n &lt;gold&gt;"..string.cut(zData.db.localDB[thisRow].crits5.."  ",3).." &lt;ansiMagenta&gt;32x "..string.cut("World Shattering                    ",25))
  cecho("hunterDisplay","\n &lt;gold&gt;"..string.cut(zData.db.localDB[thisRow].crits6.."  ",3).." &lt;ansiMagenta&gt;64x "..string.cut("Plane Razing                    ",25))
  cecho("hunterDisplay","\n")   
  cecho("hunterDisplay","\n &lt;gold&gt;"..zData.db.localDB[thisRow].gold.." &lt;ansiMagenta&gt; : Total Gold Gained")
  cecho("hunterDisplay","\n &lt;gold&gt;"..string.cut((zData.db.localDB[thisRow].gpm),5).."&lt;ansiMagenta&gt; : Gold Gained Per Minute")
  cecho("hunterDisplay","\n") 
-------------------------- Breakdown the killList string into a table for display
  local tempTable = string.split(zData.db.localDB[thisRow].killlist, "| ")
  local tempKillTable = {}
  for k, v in pairs(tempTable) do
    if tempKillTable[v] then 
      tempKillTable[v] = tempKillTable[v] + 1
    else
      tempKillTable[v] = 1
    end
  end   
  cecho("hunterDisplay","\n &lt;gold&gt;"..zData.db.localDB[thisRow].kill.." &lt;purple&gt;Kills at &lt;gold&gt;"..string.cut(zData.db.localDB[thisRow].kpm,5).."&lt;purple&gt; Kills Per Minute")
  for k, v in spairs(tempKillTable) do
    if v&gt;9 then
      cecho("hunterDisplay","\n  &lt;purple&gt;\["..string.cut(" ",1).."&lt;gold&gt;"..string.cut(v.." ",3).."&lt;purple&gt;\]  &lt;ansiMagenta&gt;"..k)
    else
      cecho("hunterDisplay","\n  &lt;purple&gt;\["..string.cut("  ",2).."&lt;gold&gt;"..string.cut(v.." ",3).."&lt;purple&gt;\]  &lt;ansiMagenta&gt;"..k)
    end
  end
  cecho("hunterDisplay","\n") 
-------------------------- Breakdown the long taliList string into a table for display
  cecho("hunterDisplay","\n &lt;purple&gt;Total Talismans: &lt;gold&gt;"..zData.db.localDB[thisRow].tali)
  if tonumber(zData.db.localDB[thisRow].tali) &gt; 0 then
  tempTable = string.split(zData.db.localDB[thisRow].talilist, "| ") 
  local tempTaliTable = {}
  for k, v in pairs(tempTable) do
    if tempTaliTable[v] then 
      tempTaliTable[v] = tempTaliTable[v] + 1
    else
      tempTaliTable[v] = 1
    end
  end   
  for k, v in spairs(tempTaliTable) do 
    if v&gt;9 then
      cecho("hunterDisplay","\n  &lt;purple&gt;\["..string.cut(" ",1).."&lt;gold&gt;"..string.cut(v.." ",3).."&lt;purple&gt;\]  &lt;ansiMagenta&gt;"..string.gsub(k, ":", "&lt;purple&gt;:"))
    else
      cecho("hunterDisplay","\n  &lt;purple&gt;\["..string.cut("  ",2).."&lt;gold&gt;"..string.cut(v.." ",3).."&lt;purple&gt;\]  &lt;ansiMagenta&gt;"..string.gsub(k, ":", "&lt;purple&gt;:"))
    end
  end 
  end
-------------------------- Display Footer  
  cecho("hunterDisplay","\n")
  hecho("hunterDisplay", rainbow("\n@@#############################################################################################@@"))
  cechoLink("hunterDisplay", "\n                                    Click Here For zBash Chart                               ", [[zData.db.showData("kpm")]], [[]], true)
  hecho("hunterDisplay", rainbow("\n@@#############################################################################################@@"))
end 


-------------------------------------------------
--                                             --
--  Delete a saved record:                     --
--               zData.db.clickbackdelete()    --
--                                             --
-------------------------------------------------
function zData.db.clickbackdelete(thisRow)
  db:delete(zData.db.expdb.zones, zData.db.localDB[thisRow]._row_id)
  clearWindow("hunterDisplay") 
  hecho("hunterDisplay", rainbow("\n\n\n\n@@#############################################################################################@@"))  
  cecho("hunterDisplay","\n&lt;red&gt;                                     --@@ DELETED ENTRY @@--  ")
  hecho("hunterDisplay", rainbow("\n@@#############################################################################################@@\n")) 
  cechoLink("hunterDisplay", "                                    Click Here For zBash Chart                               ", [[zData.db.showData("kpm")]], [[]], true)
  hecho("hunterDisplay", rainbow("\n      @@#################################################################################@@\n"))
end


</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>movement</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--                                             --
--               zData.movement()              --
--  This Function Runs Everytime Room Updates  --
--                                             --
-------------------------------------------------
function zData.movement() 
-----------------------------------------------------------------------------------------------
-- Update Area    
  if gmcp.Room.Info.area ~= zData.char.lastArea then  -------------&lt;--&lt;--&lt; Zone Change Detected

-----------------------------------------------------------------------------------------------
-- Collect experience percent from gmcp, check old xp (zData.char.oxp)
    if string.match(gmcp.Char.Status.xp, "%d+.%d+") then
      zData.char.xp = tonumber(string.match(gmcp.Char.Status.xp, "%d+.%d+"))
    elseif string.match(gmcp.Char.Status.xp, "%d+") then
      zData.char.xp = tonumber(string.match(gmcp.Char.Status.xp, "%d+"))
    end
    if zData.char.oxp == 0 then zData.char.oxp = zData.char.xp end

-----------------------------------------------------------------------------------------------
-- If your exp is not = to your old exp AND you have been in a zone FOR MORE &gt; THAN 60 SECONDS
    if (zData.char.oxp ~= zData.char.xp or zData.char.killsCount &gt; 0) and getStopWatchTime("zoneHuntWatch") &gt; 60 then
      stopStopWatch("zoneHuntWatch")  

-----------------------------------------------------------------------------------------------
-- Update zData.Character Variables used for saving to the Database
      zData.char.tempTime = getStopWatchTime("zoneHuntWatch")
      zData.char.minuteTime = zData.char.tempTime/60
      zData.char.xpGains = zData.char.xp-zData.char.oxp
      zData.char.xpGainsMin = zData.char.xpGains/zData.char.minuteTime
      zData.char.killsPerMinute = zData.char.killsCount/zData.char.minuteTime
      zData.char.gpm = zData.char.gold/zData.char.minuteTime

-----------------------------------------------------------------------------------------------
-- Convert tables to strings for the database (will turn back to tables when pulled)
      zData.char.killListString = nil
      if #zData.char.killList &gt; 0 then
        zData.char.killListString = table.concat(zData.char.killList, "| ")
      end
      zData.char.taliListString = nil
      if #zData.char.taliList &gt; 0 then
        zData.char.taliListString = table.concat(zData.char.taliList, "| ")
      end

-----------------------------------------------------------------------------------------------
-- Record when this happened with getTime(use string)
      zData.char.when = getTime(true)
            
-----------------------------------------------------------------------------------------------
-- Send All information to database   
      zData.db.zoneAdd(
        zData.char.lastArea,
        gmcp.Char.Status.class, 
        zData.defs.exp, 
        zData.defs.crit, 
        zData.char.tempTime, 
        zData.char.xpGainsMin, 
        zData.char.xpGains, 
        zData.char.killsCount, 
        zData.char.killsPerMinute, 
        zData.char.gold, 
        zData.char.gpm, 
        zData.char.str, 
        zData.char.dex, 
        zData.char.int, 
        zData.char.con, 
        zData.char.totalAttacks, 
        zData.char.crithits, zData.char.crit1, zData.char.crit2, zData.char.crit3, zData.char.crit4, zData.char.crit5, zData.char.crit6, 
        zData.char.shield, 
        zData.char.paragon, 
        zData.char.searedglyph, 
        zData.char.mayafigure, 
        zData.char.taliCount, 
        zData.char.killListString, 
        zData.char.taliListString,
        zData.char.when
        )
    end

-----------------------------------------------------------------------------------------------
-- Reset all saved data for next area
    zData.char = {
      lastArea = gmcp.Room.Info.area,
      tempTime = 0,
      minuteTime = 0,
      xpGains = 0,
      xpGainsMin = 0,
      killsPerMinute = 0, 
      killsCount = 0,
      taliCount = 0,
      ogold = gmcp.Char.Status.gold,
      gold = 0,
      gpm = 0,
      totalAttacks = 0,
      crithits = 0,
      crit1 = 0,
      crit2 = 0,
      crit3 = 0,
      crit4 = 0,
      crit5 = 0,
      crit6 = 0,
      searedglyph = 0,
      shield = 0,
      paragon = 0,
      mayafigure = 0,     
      killList = {},
      taliList = {},
      when= 0,
    }

-----------------------------------------------------------------------------------------------
-- Save OLD experience for new zone    
    if string.match(gmcp.Char.Status.xp, "%d+.%d+") then
      zData.char.oxp = tonumber(string.match(gmcp.Char.Status.xp, "%d+.%d+"))
    elseif string.match(gmcp.Char.Status.xp, "%d+") then
      zData.char.oxp = tonumber(string.match(gmcp.Char.Status.xp, "%d+"))
    end

-----------------------------------------------------------------------------------------------
-- Reset and Start Stopwatch for this zone (always running / only resets here on zone change)
    resetStopWatch("zoneHuntWatch")
    startStopWatch("zoneHuntWatch") 
	end  
end
-----------------------------------------------------------------------------------------------
registerAnonymousEventHandler("gmcp.Room.Info", "zData.movement") ---&lt;--&lt; Run When Room Updates
-----------------------------------------------------------------------------------------------</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Rainbow Script</name>
						<packageName></packageName>
						<script>-- Take in a string to rainbow-ify, optionally rainbow type and frequency for type 1
-- str   : string to rainbow-ify
-- type  : type of rainbow-ification
--         0 - single cycle of colours, default option
--         1 - multiple cycles determined by frequency, possible less than a full cycle
--         2 - Old, ugly, technically rainbowed thing
-- freq  : color frequency of rainbow in degrees, 0 to 360, default 15
--         higher freqs produce much shorter cycles of color, lower freqs longer cycles
--         freq of 1 is solid color
-- Return: returns a string suitable for plugging into hecho, colored in the rainbow
--         style chosen
function rainbow(str, type, freq)
	-- default settings, set to default if out-of-bounds
	type = type or 0
	if type &gt; 2 or type &lt; 0 then type = 0 end

	freq = freq or 15

	if freq &lt; 0 or freq &gt; 360 then freq = 15 end

	local product = ""
	local phase = 2 * math.pi / 3

	local rand = betterRand()


	if type == 0 then -- Non-repeating rainbow
		freq = 2*math.pi / #str
		for i = 1, #str do
			if string.sub(str, i, i) == " " then
				product = product..string.sub(str, i, i)
			else
				r = math.sin(freq*i + phase + rand*10) * 127 + 128
				g = math.sin(freq*i + 0 + rand*10) * 127 + 128
				b = math.sin(freq*i + 2*phase + rand*10) * 127 + 128
				r = string.format("%x", r)
				g = string.format("%x", g)
				b = string.format("%x", b)

				if #r &lt; 2 then r = "0"..r end
				if #g &lt; 2 then g = "0"..g end
				if #b &lt; 2 then b = "0"..b end
				product = product.."|c"..r..g..b..string.sub(str, i, i)
			end
		end
	elseif type == 1 then -- Repeating rainbow

		freq = freq * math.pi / 180
		for i = 1, #str do
			--if string.sub(str, i, i) == " " then
			--	product = product..string.sub(str, i, i)
			--else
				r = math.sin(freq*i + phase + rand*10) * 127 + 128
				g = math.sin(freq*i + 0 + rand*10) * 127 + 128
				b = math.sin(freq*i + 2*phase + rand*10) * 127 + 128
				r = string.format("%x", r)
				g = string.format("%x", g)
				b = string.format("%x", b)

				if #r &lt; 2 then r = "0"..r end
				if #g &lt; 2 then g = "0"..g end
				if #b &lt; 2 then b = "0"..b end
				product = product.."|c"..r..g..b..string.sub(str, i, i)
			--end
		end
	elseif type == 2 then -- Old, uglier rainbow
		local colours = { "|cFF0000", "|cFF6600", "|cFFEE00", "|c00FF00", "|c0099FF", "|c4400FF", "|c9900FF" }
		local pass = math.random(7)

		for char in str:gmatch"." do
			--if char == " " then
			--	product = product .. char
			--else
				product = product .. colours[pass] .. char
				if pass == #colours then pass = 1 end
					pass = pass + 1
			--end
		end
	end
	return product.."|r"
end
 
function betterRand()
	randomtable = {}
	for i = 1, 97 do
		randomtable[i] = math.random()
	end
	local x = math.random()
	local i = 1 + math.floor(97*x)
	x, randomtable[i] = randomtable[i], x
	return x
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>buildHunter</name>
						<packageName></packageName>
						<script>function zData.buildHunter()
  zData.hunter = {}

  --Create the hunter Adjustable
  zData.hunter.window = Adjustable.Container:new({
    name = "zgui.hunter.window",
    x = 0, y = 0,
    width = "50%",
    height = "50%",  
    adjLabelstyle = "background-color:rgba(0,40,100,100%); border: 5px inset purple;",
    buttonstyle=[[
      QLabel{ border-radius: 5px; background-color: rgba(140,140,140,100%);}
      QLabel::hover{ background-color: rgba(160,160,160,50%);}
    ]],
    buttonFontSize = 10,
    buttonsize = 15,          
  },main)

  --Create the hunter container
  zData.hunter.container = Geyser.Container:new({
    name = "zData.hunter.back",
    x = 0, y = 0,
    width = "100%",
    height = "100%",        
  },zData.hunter.window)  

  --Create the hunter Console
  zData.hunter.console = Geyser.MiniConsole:new({
    name = "hunterDisplay",
    x = 0, y = 0,
    autoWrap = false,
    width = "100%",
    height = "100%",
    color="black",
    --scrollBar = true,
  },zData.hunter.container) 

  setFontSize("hunterDisplay", 9)
  zData.hunter.window:setTitle("Hunting Scrolls","gray")
  zData.hunter.window:show()

end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
			</ScriptGroup>
			<ScriptGroup isActive="no" isFolder="yes">
				<name>AK Opponent Tracking</name>
				<packageName>AK Opponent Tracking</packageName>
				<script></script>
				<eventHandlerList />
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>AK Opponent Tracking</name>
					<packageName></packageName>
					<script>--ak config

ak = ak or {}
ak.cure = ak.cure or {}
ak.errorallowance = ak.errorallowance or 34
ak.manapercent = ak.manapercent or 100
ak.healthpercent = ak.healthpercent or 100
ak.currentmana = ak.currentmana or 5000
ak.maxmana = ak.maxmana or 5000
ak.currenthealth = ak.currenthealth or 5000
ak.maxhealth = ak.maxhealth or 5000
ak.bleeding = ak.bleeding or 0
ak.eatsbetweenaffs = 0

ak.aliases = ak.aliases or {}
ak.aliases.lastsend = ak.aliases.lastsend or {}
ak.queue = ak.queue or {}
ak.queue.eqbal = ak.queue.eqbal or {}
ak.queue.sent = {}

ak.pervasion = ak.pervasion or {}
ak.pervasion.initialbleed = false
ak.duress = ak.duress or {}
ak.ignition = ak.ignition or {}
ak.serpent = ak.serpent or {}
ak.dragon = ak.dragon or {}
ak.firelord = ak.firelord or {}
ak.firelord.spark = ak.firelord.spark or 0
ak.priest = ak.priest or {}
ak.shaman = ak.shaman or {}
ak.knight = ak.knight or {}
ak.monk = ak.monk or {}
ak.jester = ak.jester or {}
ak.occie = ak.occie or {}
ak.alchemist = ak.alchemist or {}
ak.bard = ak.bard or {}
ak.magi = ak.magi or {}
ak.sentinel = ak.sentinel or {}
ak.depthswalker = ak.depthswalker or {}
ak.SnB = ak.SnB or {}
ak.dwc = ak.dwc or {}
ak.dwb = ak.dwb or {}
ak.bm = ak.bm or {}
ak.sylvan = ak.sylvan or {}
ak.shaman.coagulation = true
ak.shaman.bloodlet = true
ak.shaman.relapse = true
ak.jinxcount = ak.jinxcount or 0
ak.timers = ak.timers or {}
ak.occie = ak.occie or {}
ak.occie.aura = ak.occie.aura or {}
ak.occie.aura.physical = ak.occie.aura.physical or 0
ak.occie.aura.mental = ak.occie.aura.mental or 0
ak.occie.aura.unknownparse = ak.occie.aura.unknownparse or {}
ak.apostate = ak.apostate or {}
ak.shikudo = ak.shikudo or {}
ak.psion = ak.psion or {}
ak.psion.unweaving = ak.psion.unweaving or {}
ak.psion.unweaving.mind = ak.psion.unweaving.mind or 0
ak.psion.unweaving.body = ak.psion.unweaving.body or 0
ak.psion.unweaving.spirit = ak.psion.unweaving.spirit or 0
ak.mounted = false
ak.kata = ak.kata or 0
ak.twoh = ak.twoh or {}
ak.twoh.skull = 0
ak.twoh.ribs = 0
ak.twoh.tendons = 0
ak.twoh.wrist = 0
ak.twoh.modifier = 1
ak.twoh.salveconversion = {
   ["arms"] = "wrist",
   ["legs"] = "tendons",
   ["head"] = "skull",
   ["torso"] = "ribs",
}
ak.track = ak.track or {}
ak.slickfucks = ak.slickfucks or {}
ak.burstfucks = ak.burstfucks or {}
ak.alchemist = ak.alchemist or {}
ak.alchemist.humour = ak.alchemist.humour or {}
ak.alchemist.humour.sanguine = 0
ak.alchemist.humour.choleric = 0
ak.alchemist.humour.melancholic = 0
ak.alchemist.humour.phlegmatic = 0
ak.magi = ak.magi or {}
ak.magi.vibes = ak.magi.vibes or {
   ["Alarm"] = 0,
   ["Grounding"] = 0,
   ["Heat"] = 0,
   ["Creeps"] = 0,
   ["Dissipate"] = 0,
   ["Revelation"] = 0,
   ["Gravity"] = 0,
   ["Silence"] = 0,
   ["Harmony"] = 0,
   ["Energise"] = 0,
   ["Palpitation"] = 0,
   ["Adduction"] = 0,
   ["Stridulation"] = 0,
   ["Forest"] = 0,
   ["Tremors"] = 0,
   ["Disorientation"] = 0,
   ["Dissonance"] = 0,
   ["Oscillate"] = 0,
   ["Lullaby"] = 0,  
   ["Plague"] = 0, 
   ["Reverberation"] = 0,
}
ak.balancemodifier = ak.balancemodifier or "nimble"
ak.kata = ak.kata or 0
ak.bals = {}
ak.bals.salve = true
ak.bals.focus = true
ak.defs = ak.defs or {}
ak.defs.mass = false
ak.defs.shield = false
ak.defs.rebounding = false
affstrack = {
        venoms = {
                ["xentio"]     = "clumsiness",
                ["eurypteria"] = "recklessness",
                ["kalmia"]     = "asthma",
                ["delphinium"] = "sleep",
                ["digitalis"]  = "shyness",
                ["darkshade"]  = "darkshade",
                ["curare"]     = "paralysis",
               ["epteth"]     = "crippledarm",
                ["prefarar"]   = "sensitivity",
                ["monkshood"]  = "disloyalty",
                ["euphorbia"]  = "nausea",
                ["colocasia"]  = "deafblind",
                ["vernalius"]  = "weariness",
                ["epseth"]     = "crippledleg",
                ["larkspur"]   = "dizziness",
                ["slike"]      = "anorexia",
                ["notechis"]   = "haemophilia",
                ["vardrax"]    = "addiction",
                ["aconite"]    = "stupidity",
                ["selarnia"]   = "selarnia",
                ["gecko"]      = "slickness",
                ["scytherus"]  = "scytherus",
                ["voyria"]     = "voyria",
                ["pothealthleech"]= "healthleech",
                ["potloneliness"] = "loneliness",
                ["potepilepsy"]   = "epilepsy"
        },
 
        applied = {
                ["body"]  = {"anorexia","frozen","aflame","selarnia"},
                ["skin"]  = {"anorexia", "crippledarm", "crippledleg","frozen","selarnia"},
                ["torso"] = {"anorexia", "torso", "aflame", "hypothermia","selarnia"},
                ["head"]  = {"stuttering","head","crushedthroat"},
                ["arms"]  = {"crippledarm", "rightarm", "leftarm"},
                ["legs"]  = {"crippledleg","rightleg","leftleg"},
                ["ears"]  = {"scalded","head"}
        }, 
        eaten = {
                ["piece of kelp"]    = {"rebbies","asthma", "clumsiness", "hypochondria", "sensitivity", "weariness", "healthleech", "parasite"},
                ["aurum flake"]      = {"rebbies","asthma", "clumsiness", "hypochondria", "sensitivity", "weariness", "healthleech", "parasite"},
                ["lobelia seed"]     = {"tenderskin", "spiritburn", "agoraphobia", "claustrophobia", "loneliness", "masochism", "recklessness", "vertigo", "spiritdisrupt", "airdisrupt", "earthdisrupt", "firedisrupt", "waterdisrupt"},
                ["argentum flake"]   = {"tenderskin", "spiritburn", "agoraphobia", "claustrophobia", "loneliness", "masochism", "recklessness", "vertigo", "spiritdisrupt", "airdisrupt", "earthdisrupt", "firedisrupt", "waterdisrupt"},
                ["prickly ash bark"] = {"confusion", "dementia", "hallucinations", "hypersomnia", "paranoia"},
                ["stannum flake"]    = {"confusion", "dementia", "hallucinations", "hypersomnia", "paranoia"},
                ["bellwort flower"]  = {"retribution","timeloop","generosity", "pacifism","justice","lovers"},
                ["cuprum flake"]     = {"retribution","timeloop","generosity", "pacifism","justice","lovers"},
                ["bayberry bark"]    = {"blind"},
                ["arsenic pellet"]   = {"blind"},
                ["hawthorn berry"]   = {"deaf"},
                ["calamine crystal"] = {"deaf"},
                ["goldenseal root"]  = {"sandfever","mycalium","dizziness", "epilepsy", "impatience", "shyness", "stupidity", "depression", "shadowmadness"},
                ["plumbum flake"]    = {"sandfever","mycalium","dizziness", "epilepsy", "impatience", "shyness", "stupidity", "depression", "shadowmadness"},
                ["bloodroot leaf"]   = {"pyramides","paralysis", "slickness"},
                ["magnesium chip"]   = {"pyramides","paralysis", "slickness"},
                ["ginseng root"]     = {"flushings","addiction", "darkshade", "haemophilia", "lethargy", "nausea", "scytherus"},
                ["ferrum flake"]     = {"flushings","addiction", "darkshade", "haemophilia", "lethargy", "nausea", "scytherus"},
                ["rage"]             = {"timeloop","generosity", "pacifism","justice"},
                ["prickly pear"]     = {"pressure"},
								["calcite mote"]     = {"pressure"},
        },

        focused = {
								"stuttering",
                "lovers",
                "agoraphobia",
                "anorexia",
                "claustrophobia",
                "confusion",
                "dizziness",
                "epilepsy",
                "generosity",
                "loneliness",
                "masochism",
                "pacifism",
                "recklessness",
                "shyness",
                "stupidity",
                "vertigo",
                "airdisrupt",
                "firedisrupt",
                "waterdisrupt",
                "paranoia",
                "dementia",
                "hallucinations",            
        },

        treed = {
								"crushedthroat",
								"stuttering",
                "aeon",
                "healthleech",
                "haemophilia",
                "clumsiness",
                "aflame",
                "paranoia",
                "vertigo",
                "agoraphobia",
                "dizziness",
                "claustrophobia",
                "recklessness",
                "epilepsy",
                "addiction",
                "stupidity",
                "scytherus",
                "slickness",
                "generosity",
                "justice",
                "pacifism",
                "confusion",
                "voyria",
                "weariness",
                "hallucinations",
                "confusion",
                "disloyalty",
                "lethargy",
                "shyness",
                "sensitivity",
                "asthma",
                "crippledarm",
                "crippledleg",
                "darkshade",
                "impatience",
                "anorexia",
                "loneliness",
                "hypochondria", 
                "selarnia",
                "leftleg",
                "leftarm",
                "rightleg",
                "rightarm",
                "frozen",
                "airdisrupt",
                "earthdisrupt",
                "firedisrupt",
                "spiritdisrupt",
                "waterdisrupt",
                "hellsight",
                "nausea",
                "lovers",
                "parasite",
                "retribution",
                "depression",
                "shadowmadness",
								"timeloop",
								"manaleech",
								"tension",
								"unweavingspirit",
								"unweavingmind",
								"unweavingbody",
                "tenderskin", 
                "spiritburn",
                "rebbies",
                "sandfever",
                "flushings",
                "mycalium",
                "pyramides", 
        },
 
        restored = {
                "crippledarm",
                "crippledleg",
                "rightleg",
                "leftleg",
                "rightarm",
                "leftarm",              
        },
 
        smoked = {
                "deadening",
                "disloyalty",
                "slickness",
                "manaleech",
                "aeon",
                "hellsight",
								"tension",
								"unweavingspirit",
        },

        score = {
                ["addiction"]      = 0,
                ["aeon"]           = 0,
                ["agoraphobia"]    = 0,
                ["anorexia"]       = 0,
                ["aflame"]         = 0,
                ["amnesia"]        = 0,
                ["armexpend"]      = 0,
                ["airfist"]        = 0,
                ["asthma"]         = 0,
                ["bitten"]         = 0,
                ["blind"]          = 0,
                ["blackout"]       = 0,
								["bloodfire"]      = 0,
                ["blisters"]       = 0,
                ["bound"]          = 0,
                ["brand"]          = 0,
                ["claustrophobia"] = 0,
                ["clumsiness"]     = 0,
                ["conflagrate"]    = 0,
                ["confusion"]      = 0,
								["corruption"]     = 0,
                ["crippledarm"]    = 0,
                ["crippledleg"]    = 0,
                ["crushedthroat"]  = 0,
                ["darkshade"]      = 0,
                ["deadening"]      = 0,
                ["deaf"]           = 0,
                ["dementia"]       = 0,
                ["depression"]     = 0,
                ["dehydrate"]      = 0,
                ["disloyalty"]     = 0,
                ["disrupt"]        = 0,
                ["dizziness"]      = 0,
                ["enlighten"]      = 0,
                ["epilepsy"]       = 0,
                ["frozen"]         = 0,
                ["generosity"]     = 0,
                ["guilt"]          = 0,
                ["haemophilia"]    = 0,
                ["hallucinations"] = 0,
                ["hamstring"]      = 0,
                ["hierophant"]     = 0,
                ["healthleech"]    = 0,
                ["hellsight"]      = 0,
                ["hypersomnia"]    = 0,
                ["hypochondria"]   = 0,
                ["hypothermia"]    = 0,
                ["impaleslash"]    = 0,
                ["impatience"]     = 0,
                ["inquisition"]    = 0,
                ["insomnia"]       = 0,
                ["justice"]        = 0,
                ["kola"]           = 0,
                ["latched"]        = 0,
                ["lethargy"]       = 0,
                ["lovers"]         = 0,
                ["loneliness"]     = 0,
                ["masochism"]      = 0,
                ["manaleech"]      = 0,
                ["mindclamp"]      = 0,
								["mindravaged"]    = 0,
                ["nausea"]         = 0,
                ["pacifism"]       = 0,
                ["paralysis"]      = 0,
                ["parasite"]       = 0,
                ["paranoia"]       = 0,
                ["petrified"]      = 0,
                ["prone"]          = 0,
								["preempt"]        = 0,
                ["recklessness"]   = 0,
                ["retribution"]    = 0,
                ["rixil"]          = 0,
                ["scalded"]        = 0,
                ["scytherus"]      = 0,
                ["selarnia"]       = 0,
                ["sensitivity"]    = 0,
                ["shadowmadness"]  = 0,
                ["shyness"]        = 0,
                ["slime"]          = 0,
                ["slickness"]      = 0,
                ["tempslickness"]  = 0,
                ["sleep"]          = 0,
                ["spiritburn"]     = 0,
                ["stupidity"]      = 0,
								["stuttering"]     = 0,
                ["surge"]          = 0,
                ["transfixed"]     = 0,
                ["tenderskin"]     = 0,
                ["timeflux"]       = 0,
                ["timeloop"]       = 0,
                ["trussed"]        = 0,
                ["unconscious"]     = 0,
                ["weariness"]      = 0,
                ["wrenchhead"]     = 0,
                ["wrenchtorso"]     = 0,
                ["whisperingmadness"] = 0,
                ["worm"]           = 0,
                ["vertigo"]        = 0,
                ["vitiate"]        = 0,
                ["voidfist"]       = 0,
                ["voyria"]         = 0,
                ["airdisrupt"]     = 0,
                ["earthdisrupt"]   = 0,
                ["rebbies"]         = 0,
                ["sandfever"]       = 0,
                ["flushings"]       = 0,
                ["mycalium"]        = 0,
                ["pyramides"]       = 0,
                ["trussed"]        = 0,
                ["unconscious"]    = 0,    
                ["firedisrupt"]    = 0,
                ["spiritdisrupt"]  = 0,
                ["waterdisrupt"]   = 0,
                ["rightleg"]       = 0,
                ["leftleg"]       = 0,
                ["rightarm"]       = 0,
                ["leftarm"]       = 0,
                ["head"]       = 0,
                ["torso"]       = 0,
								["tension"]     = 0,
								["pressure"]    = 0,
								["unweavingbody"] = 0,
								["unweavingmind"] = 0,
								["unweavingspirit"] = 0,
        },
 
        cureall = {
								"crushedthroat",
								"stuttering",
                "addiction",
                "aflame",
                "agoraphobia",
                "anorexia",
                "asthma",
                "claustrophobia",
                "clumsiness",
                "confusion",
                "crippledarm",
                "crippledleg",   
                "darkshade",     
                "deadening",                
                "dementia",      
                "disloyalty",     
                "disrupt",       
                "dizziness",      
                "epilepsy",     
                "generosity",     
                "haemophilia",    
                "hallucinations", 
                "healthleech",
                "hellsight",
                "hypersomnia",    
                "hypochondria",   
                "impatience",     
                "lethargy",       
                "loneliness", 
                "lovers",
                "manaleech",    
                "masochism",  
                "nausea",    
                "pacifism",       
                "paralysis",      
                "paranoia",       
                "recklessness",   
                "scytherus",    
                "selarnia",    
                "sensitivity",   
                "shyness",      
                "slickness",    
                "stupidity",     
                "weariness",     
                "vertigo",        
                "voyria",
								"tension",
								"pressure",
								"unweavingbody", 
								"unweavingmind", 
								"unweavingspirit",
                },
}
affstrack.hypo = {
   [1] = "nausea",
   [2] = "addiction",
   [3] = "lethargy",
}
affstrack.crushedpots = {
   ["piece of kelp"]   = "pothealthleech",
   ["bellwort flower"] = "vernalius",
   ["valerian leaf"]   = "gecko",
   ["lobelia seed"]    = "potloneliness",
   ["piece of slippery elm"] = "larkspur",
   ["kola nut"]        = "delphinium",
   ["goldenseal root"] = "potepilepsy",
   ["hawthorn berry"]  = "prefarar",
}

affstrack.physicallist = {"asthma","sensitivity","healthleech","haemophilia","clumsiness","darkshade","slickness","paralysis"}
affstrack.mentallist = {"addiction","dementia","stupidity","confusion","hypersomnia","paranoia","hallucinations","impatience","recklessness","masochism","agoraphobia","loneliness","lovers"}
affstrack.whisperlist = {"addiction","dementia","stupidity","confusion","hypersomnia","paranoia","hallucinations","impatience","recklessness","masochism","agoraphobia","loneliness","lovers"}
affstrack.enlightenlist = {"whisperingmadness","vertigo","dementia","stupidity","confusion","hypersomnia","paranoia","hallucinations","impatience","recklessness","masochism","agoraphobia","loneliness","lovers","dizziness","anorexia","hypochondria","claustrophobia"}
affstrack.smokelist = {"manaleech","deadening","disloyalty"}
affstrack.enlightenscore = 0
affstrack.accentatoscore = 0
affstrack.ginsengscore = 0
affstrack.pyradiusscore = 0
affstrack.goldenscore = 0
affstrack.kelpscore = 0
affstrack.mentalscore = 0
affstrack.totalaffs = 0
affstrack.impale = false
ak.randomaffs = 0
cecho("\n&lt;LimeGreen&gt;[&lt;DodgerBlue&gt;AK&lt;LimeGreen&gt;]: &lt;snow&gt;Loaded Module: AK Opponent Tracking!!")</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Hard Reset</name>
						<packageName></packageName>
						<script>--scoreup2
function ak.oresetparse()
target = target or "Austere"
ak.dragonTarget = false
ak.elementalTarget = false
ak.stack = ak.stack or "none"
affstrack.impale = false
targetparry = "unknown"
ak.bleeding = 0
ak.flyer = false
mycharacters = mycharacters or {}--This is for my Personal Gui
if swiftcount == nil then swiftcount = 0 end
disableTimer("Hypochondria Timer")
opponenteat = 0
promptset = {}
applycure = {}
ak.bals.salve = true
ak.bals.focus = true
opponenttree = 0

ak.defs.mass = true
ak.defs.shield = false
ak.defs.rebounding = true
ak.defs.reRebounding = false
ak.defs.sileris = true
ak.defs.curseward = true
ak.defs.holdbreath = false
ak.defs.speed = true

timerherb = 0
if ak.timers.apply then
	killTimer(ak.timers.apply)
	ak.timers.apply = false
end
if ak.timers.salvebackup then 
	killTimer(ak.timers.salvebackup) 
end
opponenthalftree = 0
timertree = 0
currentvenoms = {}
lastvenom = {}
targetlyred = 0
boilable = true
vodun = vodun or {}
lockcheck = false
ak.tza = false
knownrun = nil
parsedclasscures = false
ak.psion.unweaving.mind = 0
ak.psion.unweaving.body = 0
ak.psion.unweaving.spirit = 0
ak.resetbacktrack()
ak.twoh = ak.twoh or {}
ak.twoh.skull = 0
ak.twoh.ribs = 0
ak.twoh.tendons = 0
ak.twoh.wrist = 0
ak.occie.aura.physical =  0
ak.occie.aura.mental = 0
ak.alchemist.humour.sanguine = 0
ak.alchemist.humour.choleric = 0
ak.alchemist.humour.melancholic = 0
ak.alchemist.humour.phlegmatic = 0
ak.pervasion.initialbleed = false
ak.pervasion.hitcount = 0
ak.shaman.Relapseaff = "none"
ak.shaman.coagulation = true
ak.shaman.bloodlet = true
ak.shaman.relapse = true
ak.shaman.GetFashions = false
ak.psion.transcend = 0
ak.jinxcount = 0
if ak.scaldTimer then killTimer(ak.scaldTimer) end
if ak.tendonTimer then killTimer(ak.tendonTimer) end
if ak.skullTimer then killTimer(ak.skullTimer) end
if ak.wristTimer then killTimer(ak.wristTimer) end
if ak.ribTimer then killTimer(ak.ribTimer) end
ak.track.flown = false
ak.diagnosingoffbal = false
ak.CustomCureSend = false
ak.manapercent = 100
ak.healthpercent = 100
ak.currentmana = 5000
ak.maxmana = 5000
ak.currenthealth = 5000
ak.maxhealth = 5000
ak.engaged = false
ak.TorsoWrench = false
ak.HeadWrenchDisable = nil
ak.InitialWrench = nil
ak.propped = false
ak.SerpentRotateBite = false
ak.duress.pressure = 0
ak.duress.scourrelapse = false
ak.duress.stranglerelapse = false
ak.duress.zephyrrelapse = false
ak.duress.asphyxiate = false
ak.tumbling = false
for k,v in pairs(affstrack.score) do
   affstrack.score[k] = 0
end
affstrack.enlightenscore = 0
affstrack.ginsengscore = 0
affstrack.goldenscore = 0
affstrack.pyradiusscore = 0
affstrack.kelpscore = 0
affstrack.tramplescore = 0
affstrack.mentalscore = 0
affstrack.totalaffs = 0
ak.randomaffs = 0
ak.knownmaxhealth = ak.knownmaxhealth or {}
ak.limbs.limb_table_check(target)
if gmcp and ak.stack == "none" then
   ak.classenable()
end
ak.scoreup(target)
if gmcp and gmcp.Char and gmcp.Char.Vitals and gmcp.Char.Vitals.maxhp then
   ak.knownmaxhealth["Me"] = tonumber(gmcp.Char.Vitals.maxhp) or 5150
   ak.classlockadd()
   if not ak.displaydecide then 
      ak.classenable()
      if ak.nodisplay == false and not table.contains(mycharacters,gmcp.Char.Name.name) then 
         init() 
      end 
      ak.displaydecide = true 
   end
end
if ak.radiancestack then
   ak.stack = ak.radiancestack
   ak.radiancestack = nil
end
cecho("&lt;cyan&gt; Reset Success!\n\n")
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Soft Reset</name>
						<packageName></packageName>
						<script>function ak.softreset()
  ak.tza = false
	ak.shaman.Relapseaff = "none"
  ak.shaman.coagulation = true
  ak.shaman.bloodlet = true
	ak.shaman.GetFashions = false
	ak.pervasion.hitcount = 0
	ak.pervasion.initialbleed = false
	ak.bleeding = 0
  ak.shaman.relapse = true
	cecho("&lt;cyan&gt; \nINITATED A SOFT OPPONENT AFFLICTON RESET, DID NOT RESET ANY BALANCES!!")
	cecho("&lt;yellow&gt; \nINITATED A SOFT OPPONENT AFFLICTON RESET, DID NOT RESET ANY BALANCES!!")
	cecho("&lt;cyan&gt; \nINITATED A SOFT OPPONENT AFFLICTON RESET, DID NOT RESET ANY BALANCES!!")
	cecho("&lt;yellow&gt; \nINITATED A SOFT OPPONENT AFFLICTON RESET, DID NOT RESET ANY BALANCES!!\n\n")
	disableTrigger("Swiftstring")
	disableTimer("Hypochondria Timer")
	ak.resetbacktrack()
	targetlyred = 0
	applycure = {}
	ak.bals.salve = true
	ak.bals.focus = true
	if ak.tendonTimer then killTimer(ak.tendonTimer) end
	if ak.skullTimer then killTimer(ak.skullTimer) end
	if ak.wristTimer then killTimer(ak.wristTimer) end
	if ak.ribTimer then killTimer(ak.ribTimer) end
	if ak.timers.salvebackup then killTimer(ak.timers.salvebackup) end
	local wasdehydrated = false
	local wastimefluxed = false
	local hieroup = false
	local rixilup = false
	if affstrack and affstrack.score then
   	if affstrack.score.dehydrate == 100 then
  	    wasdehydrated = true
  	 end
  	 if affstrack.score.timeflux == 100 then
  	    wastimefluxed = true
  	 end
	end	
	if affstrack.score.hierophant == 100 then
		hieroup = true
	end
	if affstrack.score.rixil == 100 then
		rixilup = true
	end
	ak.engaged = false

   for k,v in pairs(affstrack.score) do
      affstrack.score[k] = 0
   end

	if hieroup then 
		affstrack.score.hierophant = 100
	end
	if rixilup then 
		affstrack.score.rixil = 100
	end
	affstrack.enlightenscore = 0
	affstrack.ginsengscore = 0
	affstrack.goldenscore = 0
	affstrack.pyradiusscore = 0
	affstrack.kelpscore = 0
	affstrack.tramplescore = 0
	affstrack.mentalscore = 0
	affstrack.totalaffs = 0
	ak.twoh = ak.twoh or {}
	ak.twoh.skull = 0
	ak.twoh.ribs = 0
	ak.twoh.tendons = 0
	ak.twoh.wrist = 0
	ak.occie.aura.physical =  0
	ak.occie.aura.mental = 0
	ak.alchemist.humour.sanguine = 0
	ak.alchemist.humour.choleric = 0
	ak.alchemist.humour.melancholic = 0
	ak.alchemist.humour.phlegmatic = 0
	ak.randomaffs = 0
	opponenthalftree = 0
	if wasdehydrated then
	   affstrack.score.dehydrate = 100
	end
	if wastimefluxed then
	   affstrack.score.timeflux = 100
	end
	ak.track.flown = false
	ak.currentmana = 5000
	ak.maxmana = 5000
	ak.currenthealth = 5000
	ak.maxhealth = 5000
	ak.manapercent = 100
	ak.healthpercent = 100
	ak.classlockadd()
  if ak.radiancestack then
    ak.stack = ak.radiancestack
    ak.radiancestack = nil
  end
	ak.alchemist.humour.sanguine = 0
	ak.alchemist.humour.choleric = 0
	ak.alchemist.humour.phlegmatic = 0
	ak.alchemist.humour.melancholic = 0
  ak.scoreup(target)
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Osettings! --Move This Outside of AK/ DELETE THE FOURTH LINE DOWN</name>
						<packageName></packageName>
						<script>--osettings
ak = ak or {}

if ak.mycustomoffense then return end           --DELETE THIS SHIT OUT OF YOUR PERSONAL VARS

ak.MovementKeys = ak.MovementKeys or {"Tecton","Maya"}--add yourself here to allow num key movement
ak.disableAllEchos = false --Set to Disable Relays and Prompt
ak.nodisplay = false  --Set to True to Turn off Display!  Always Retarget something to refresh.
ak.expertdiagnose = false --Set to False to Disable ED
ak.obacktrack = true  --Set to False to Disable Backtracking
ak.oprotrack = true --If you do unknown affs, do not enable this
ak.owhy = true --If you do not have 100% accurate affliction information(group fighting/Illusion), do not enable this
ak.highlighttarget = true --Self Explanatory
------------------------------------------------------------------------------------------------------------------

ak.spear = "a Stormspear"                          --This is for Spear Venom Tracking Purposes
ak.odirk = "Thoth's fang"                          --This is for Dstab Venom Tracking Purposes

-------------------------------------------------------------------------------------------------------------------

--Adding your weapons to limb counter:
ak.limbs = ak.limbs or {} 
ak.limbs.myweapons = ak.limbs.myweapons or {

		--Proximity Values.  Finds the closest to our target health and uses that.
		--These are percentage values, so a single stab vs 4000 health target will do 9% damage.
   ["a Soulpiercer"] = {
      [2563] = 7,
      [4000] = 9,
      [5000] = 10,
      [6000] = 11,
   },
   ["a Logosian longsword"] = {
      [2563] = 7,
      [4000] = 9,
      [5000] = 10,
      [6000] = 11,
   },
}

--Adding your custom limb formula:

ak.limbs.myformulas = {} 

--Must retain formatting as a function and us ak's called weapon in function name(example is hfp).  
--Limbs break at 100, ergo these should return a percentage. Dragon rend would return 25

function ak.limbs.myformulas.hfp(who, attacker, weapon, limb, augment, check)
	local whomaxhealth = ak.limbs.FindTargetHealth(who)
  local damage = 0
	damage = roundUp(.0897*whomaxhealth+227*1.35,0)
	damage = (100 * damage/whomaxhealth) --Converting to a percentage
	return damage  
end

---------------------------------------------------------------------------------------------------------------------

--OBVIOUSLY YOU DON"T WANT TO LOOK LIKE YOU ARE USING MY SYSTEM!  PEOPLE MIGHT LOOK DOWN ON YOU!!

function EchoForAddedAff(incoming)
   cecho("&lt;white&gt;\nProcessed Affliction(&lt;yellow&gt;" ..incoming.. "&lt;white&gt;)")  --Change this line for added afflictions
end
function EchoForLostAff(incoming)
   cecho("&lt;white&gt;\nLost Affliction(&lt;yellow&gt;" ..incoming.. "&lt;white&gt;)")  --Change this line for removed afflictions
end  
function EchoForPossibleCures(incoming)
   cecho("&lt;white&gt;\nProcessed Cures(&lt;yellow&gt;" ..incoming.. "&lt;white&gt;)")  --Change this line for removed afflictions
end 
function EchoForMajorAff(incoming,color,color2,color3)
	local color = color or "red"
	local color2 = color2 or "cyan"
	local color3 = color3 or "green"
	cecho("\n&lt;purple&gt; --------------------------------------------------------------")
	cecho("\n&lt;"..color.."&gt; --------------------&lt;"..color2.."&gt;GOT&lt;"..color3.."&gt; "..incoming.."&lt;"..color.."&gt;!!--------------------------")
	cecho("\n&lt;"..color.."&gt; --------------------&lt;"..color2.."&gt;GOT&lt;"..color3.."&gt; "..incoming.."&lt;"..color.."&gt;!!--------------------------")
	cecho("\n&lt;"..color.."&gt; --------------------&lt;"..color2.."&gt;GOT&lt;"..color3.."&gt; "..incoming.."&lt;"..color.."&gt;!!--------------------------")
	cecho("\n&lt;"..color.."&gt; --------------------&lt;"..color2.."&gt;GOT&lt;"..color3.."&gt; "..incoming.."&lt;"..color.."&gt;!!--------------------------")
	cecho("\n&lt;"..color.."&gt; --------------------&lt;"..color2.."&gt;GOT&lt;"..color3.."&gt; "..incoming.."&lt;"..color.."&gt;!!--------------------------")
	cecho("\n&lt;purple&gt; --------------------------------------------------------------")
end


----------------------------------------------------------------------------------------------------------------------

--USE THIS TO SET YOUR SERVERSIDE ALIASES FOR YOU, DEPENDING ON THEIR AFFS
--THEN SIMPLY CALL YOUR SERVERSIDE ALIAS


function ak.mycustomoffense()
   if ak.stack == "example" then --make stack variable default below
      --venom_select()
      --attack_select()
      --additional_attack_decision()
      --set_server_side_aliases_using_info_from_above()
	 elseif ak.stack == "dragon" then
			ak.dragon.default.main() 
   end
end

----------------------------------------------------------------------------------------------------------------------

--*

--Svo Prompt--

--add ^y@ml_oprompt to your custom prompt

--*


--WYS Prompt--

--type wshow display

--add @owysprompt into your prompt



-----------------------------------------------------------------------------------------------------------------------


</script>
						<eventHandlerList />
					</Script>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Multiuse Functions</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>oclass</name>
							<packageName></packageName>
							<script>
NoMiddle = NoMiddle or {}

function ak.MonkType()
  if gmcp.Char.Vitals and gmcp.Char.Vitals.charstats[4] and string.find(gmcp.Char.Vitals.charstats[4], "Form")
  then
    return "Shikudo"
  else
    return "Tekura"
  end
end

function ak.KillTriggers()
	disableKey("Shaman Keys")
	disableKey("Dragon Keys")
	disableTrigger("Air Lord Group")
	disableTrigger("Water Lord Group")
	disableTrigger("Monk Group")
	disableTrigger("Sentinel Group")
	disableTrigger("Depthswalker Group")
	disableTrigger("Runewarden Group")
	disableTrigger("2h Group")
	disableTrigger("Targossas Group")
	disableTrigger("Totem Group")
	disableTrigger("Serpent Group")
	disableTrigger("Jester Group")
	disableTrigger("Tarot Group")
	disableTrigger("Magi Group")
	disableTrigger("Psion Group")
	disableTrigger("Apostate Group")
	disableTrigger("Shaman Group")
	disableTrigger("Dragon Group")
	disableTrigger("Sword &amp; Board Group")
	disableTrigger("Bard Group")
	disableTrigger("Blademaster Group")
  disableTrigger("Fire Lord Group")
	disableTrigger("Occultist Group")
	disableTrigger("Sylvan Group")
	disableTrigger("Alchemist Group")
  disableTrigger("Targossas Group")
  disableTrigger("Priest Group")
end

function ak.classenable()
  if ak.CustomGuiEnable then
    ak.CustomGuiEnable()
  end
  if ak.morphingCheck then
    ak.morphingCheck()
  end
  ak.defaultstack()
  if gmcp.Char.Status.race:match("Dragon") or gmcp.Char.Status.class ~= "Shaman" then
    swiftcount = 0
  end
  if gmcp.Char.Status.race:match("Dragon") then
    ak.KillTriggers()
    enableTrigger("Dragon Group")
		if not table.contains(ak.MovementKeys, gmcp.Char.Name.name) then enableKey("Dragon Keys") end
    cecho("&lt;yellow&gt;\n\nDRAGON ENABLED\n\n")
  elseif gmcp.Char.Status.class == "Monk" then
    ak.KillTriggers()
    enableTrigger("Monk Group")
    cecho("&lt;yellow&gt;\n\nMONK ENABLED\n\n")
  elseif gmcp.Char.Status.class == "Priest" then
    ak.KillTriggers()
    enableTrigger("Targossas Group")
    enableTrigger("Priest Group")
    cecho("&lt;yellow&gt;\n\nPRIEST ENABLED\n\n")
  elseif gmcp.Char.Status.class == "Magi" then
    ak.KillTriggers()
    enableTrigger("Magi Group")
    cecho("&lt;yellow&gt;\n\nMAGI ENABLED\n\n")
  elseif gmcp.Char.Status.class == "Sylvan" then
    ak.KillTriggers()
    enableTrigger("Sylvan Group")
    cecho("&lt;yellow&gt;\n\nSYLVAN ENABLED\n\n")
  elseif gmcp.Char.Status.class == "Shaman" then
		ak.KillTriggers()
    enableKey("Shaman Keys")
    enableTrigger("Shaman Group")
    cecho("&lt;yellow&gt;\n\nSHAMAN ENABLED\n\n")
  elseif gmcp.Char.Status.class == "Serpent" then
    ak.KillTriggers()
    enableTrigger("Serpent Group")
    cecho("&lt;yellow&gt;\n\nSERPENT ENABLED\n\n")
  elseif gmcp.Char.Status.class == "Jester" then
    ak.KillTriggers()
    enableTrigger("Tarot Group")
    enableTrigger("Jester Group")
    cecho("&lt;yellow&gt;\n\nJESTER\n\n")
  elseif gmcp.Char.Status.class == "Alchemist" then
    ak.KillTriggers()
		enableTrigger("Alchemist Group")
    cecho("&lt;yellow&gt;\n\nALCHEMIST\n\n")
  elseif gmcp.Char.Status.class == "Infernal" or gmcp.Char.Status.class == "Paladin" or gmcp.Char.Status.class == "Runewarden" then
    ak.KillTriggers()
		if gmcp.Char.Status.class == "Paladin" then
      enableTrigger("Targossas Group")
    elseif gmcp.Char.Status.class == "Runewarden" then
      enableTrigger("Runewarden Group")
    end
    enableTrigger("Totem Group")
    enableTrigger("2h Group")
    enableTrigger("Sword &amp; Board Group")
    cecho("&lt;yellow&gt;\n\nKNIGHT ENABLED\n\n")
  elseif gmcp.Char.Status.class == "Sentinel" then
    ak.KillTriggers()
    enableTrigger("Sentinel Group")
    cecho("&lt;yellow&gt;\n\nSENTINEL ENABLED\n\n")
  elseif gmcp.Char.Status.class == "Occultist" then
    ak.KillTriggers()
    enableTrigger("Tarot Group")
    enableTrigger("Occultist Group")
    cecho("&lt;yellow&gt;\n\nOCCULTIST ENABLED\n\n")
  elseif gmcp.Char.Status.class == "Bard" then
    ak.KillTriggers()
    enableTrigger("Bard Group")
    cecho("&lt;yellow&gt;\n\nBARD ENABLED\n\n")
  elseif gmcp.Char.Status.class == "Depthswalker" then
    ak.KillTriggers()
    enableTrigger("Depthswalker Group")
    cecho("&lt;yellow&gt;\n\nDEPTHSWALKER ENABLED\n\n")
  elseif gmcp.Char.Status.class == "Apostate" then
    ak.KillTriggers()
    enableTrigger("Apostate Group")
    cecho("&lt;yellow&gt;\n\nABOSTATE ENABLED\n\n")
  elseif gmcp.Char.Status.class == "water Elemental Lord" then
	  ak.KillTriggers()
    enableTrigger("Water Lord Group")
    cecho("&lt;yellow&gt;\n\nWATER ELEMENTAL ENABLED\n\n")
  elseif gmcp.Char.Status.class == "air Elemental Lord" then
    ak.KillTriggers()
    enableTrigger("Air Lord Group")
    cecho("&lt;yellow&gt;\n\nAIR ELEMENTAL ENABLED\n\n")
	elseif gmcp.Char.Status.class == "fire Elemental Lord" then
    ak.KillTriggers()
    enableTrigger("Fire Lord Group")
    cecho("&lt;yellow&gt;\n\nFire ELEMENTAL ENABLED\n\n")
  elseif gmcp.Char.Status.class == "Blademaster" then
    ak.KillTriggers()
    enableTrigger("Blademaster Group")
    cecho("&lt;yellow&gt;\n\nBLADEMASTER ENABLED\n\n")
	elseif gmcp.Char.Status.class == "Psion" then
    ak.KillTriggers()
		enableTrigger("Psion Group")
		enableKey("Psion Keys")
    cecho("&lt;yellow&gt;\n\nPsion ENABLED\n\n")
  end
  ak.scoreup(target)
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>oaff check</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.check(what, number)
   if not number then local number = 100 end
   if table.contains(affstrack.score, what) then
      if affstrack.score[what] &gt;= number then
         return true
      else
         return false
      end
   elseif table.contains(affstrack.venoms, what) then
      if affstrack.score[affstrack.venoms[what]] &gt;= number then
         return true
      else
         return false
      end
   end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>System Status Checking</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.syspause()
   if svo then 
      if svo.affl.retardation then 
         return true
      else
         return false
      end
   elseif wsys then
      if wsys.paused or wsys.softpaused then 
         return true
      else
         return false
      end
   else
       return false
   end
end

function inretardation()
   if svo then 
      if svo.affl.retardation then 
         return true
      else
         return false
      end
   elseif wsys then
      if wsys.isslowed() then 
         return true
      else
         return false
      end
   else
       return false
   end
end

function inaeon()
   if svo then 
      if svo.affl.aeon then 
         return true
      else
         return false
      end
   elseif wsys then
      if wsys.isslowed() then 
         return true
      else
         return false
      end
   else
       return false
   end
end

function inlyre()
   if svo then
      if svo.conf.lyre then
         return true
      else
         return false
      end
   elseif wsys then
		if wsys.uselyre == true and wsys.def.lyre == true then
       	return true
		else
			return false
		end
   else 
       return false
   end
end 

</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>System Specific Functions</name>
							<packageName></packageName>
							<script>function ak.deleteFull()
   if svo then
	 		svo.deleteLineP()
	 else
      deleteFull() --Wsys Has An Overwrite
   end
end

function ak.showPrompt()
	if wsys then
		wsys.showPrompt()
	elseif svo and svo.showprompt then
		echo("\n")
		svo.showPrompt()
	else
		send("")
	end
end

if wsys then
	function wsys.showPrompt()
	  local promptstring = wsys.aff.blackout and wsys.settings.blackoutprompt or wsys.settings.prompt
	  --sub out the # color tags
	  promptstring = string.gsub(promptstring, "#([A-Za-z_:]+)", wsys.promptColorSub )
	  --sub out the @ prompt tags
	  promptstring = string.gsub(promptstring, "@(%w+)", wsys.promptTagSub )
	
	  if wsys.def.lyre then promptstring = promptstring .. "&lt;gold&gt; L" end
		if wsys.uselyre then promptstring = promptstring .. "&lt;green&gt; *[&lt;white&gt;LYRE MODE&lt;green&gt;]*" end 
		
	  if wsys.vmode then promptstring = promptstring ..  "&lt;MediumVioletRed&gt; vivi" end
	  if wsys.heartseedmode then promptstring = promptstring ..  "&lt;firebrick&gt; H&lt;LimeGreen&gt;Seed" end
	  if wsys.bardmode then promptstring = promptstring .. "&lt;firebrick&gt; BARD" end
		cecho("\n"..promptstring)
	end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>oscore</name>
							<packageName></packageName>
							<script>--scoreup
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.scoreup(whom)
if ak.expertdiagnose and not gmcp.Char.Status.race:match("Dragon") and not ak.pause and not ak.syspause() then
   ak.expertRun()
end
--"Haemophilia, clumsiness, sensitivity, healthleech, darkshade, lethargy."
affstrack.accentatoscore = affstrack.score.impatience + affstrack.score.paranoia + affstrack.score.claustrophobia + affstrack.score.vertigo + affstrack.score.confusion + affstrack.score.dizziness + affstrack.score.stupidity + affstrack.score.addiction + affstrack.score.epilepsy + affstrack.score.anorexia + affstrack.score.generosity + affstrack.score.amnesia
affstrack.mentalscore = affstrack.accentatoscore + affstrack.score.agoraphobia + affstrack.score.recklessness
affstrack.mentalscore = affstrack.mentalscore / 100
affstrack.accentatoscore = affstrack.accentatoscore / 100

affstrack.kelpscore = affstrack.score.healthleech + affstrack.score.asthma + affstrack.score.clumsiness + affstrack.score.hypochondria + affstrack.score.sensitivity + affstrack.score.weariness 
affstrack.kelpscore = affstrack.kelpscore / 100
affstrack.ginsengscore = affstrack.score.addiction + affstrack.score.darkshade + affstrack.score.haemophilia + affstrack.score.lethargy + affstrack.score.nausea + affstrack.score.scytherus
affstrack.ginsengscore = affstrack.ginsengscore / 100

affstrack.goldenscore =  affstrack.score.dizziness + affstrack.score.epilepsy + affstrack.score.impatience + affstrack.score.shyness + affstrack.score.stupidity
affstrack.goldenscore = affstrack.goldenscore / 100

affstrack.pyradiusscore = affstrack.score.clumsiness + affstrack.score.lethargy + affstrack.score.haemophilia + affstrack.score.healthleech + affstrack.score.sensitivity + affstrack.score.darkshade 
affstrack.pyradiusscore = affstrack.pyradiusscore / 100
softscore = affstrack.score.anorexia + affstrack.score.slickness + affstrack.score.asthma
softscore = softscore / 100
truescore = affstrack.score.paralysis + affstrack.score.impatience + affstrack.score.anorexia + affstrack.score.slickness + affstrack.score.asthma
truescore = truescore / 100
affstrack.tramplescore = 0
ak.trample()
affstrack.totalaffs = 0
affstrack.enlightenscore = 0
affstrack.whisperscore = 0
for k,v in pairs(affstrack.score) do
   if v &gt; 1 then
      affstrack.totalaffs = affstrack.totalaffs + v
      if table.contains(affstrack.enlightenlist, k) then
         affstrack.enlightenscore = affstrack.enlightenscore + v
      end
      if table.contains(affstrack.whisperlist, k) then
         affstrack.whisperscore = affstrack.whisperscore + v
      end
   end
end
affstrack.totalaffs = affstrack.totalaffs / 100
affstrack.enlightenscore = affstrack.enlightenscore / 100
affstrack.whisperscore = affstrack.whisperscore / 100
if ak.tzantzajinxed then
	ak.tzantzajinxed = false
elseif target and not ak.pause and not ak.syspause() then 
   ak.serveraliases() 
end
ak.prompt.scoreup()
if ak.nodisplay then ak.noDisplay() else ak.refreshAffs() end
end
  --&lt;3
function ak.trample() 
   affstrack.tramplescore = 0
   affstrack.tramplescore = affstrack.score["leftarm"] + affstrack.score["leftleg"] + affstrack.score["rightleg"] + affstrack.score["rightarm"]
   affstrack.tramplescore = affstrack.tramplescore / 100
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>oscore edit functions</name>
							<packageName></packageName>
							<script>--OppGainedAff

function OppGainedAff(aff)
	if not aff then return end
	local affStr = {}
	aff = aff:lower()
  if string.find(aff," ") then                          --Multi Venoms
	 		ak.eatsbetweenaffs = 0
      for word in string.gmatch(aff, "%a+") do
         if (word == "sensitivity" or word == "prefarar") and affstrack.score.deaf == 0 then 
            word = "deaf" 
         end
         if table.contains(affstrack.mentallist, word) then
            ak.occie.aura.mental = ak.occie.aura.mental + 1 
         end
         if table.contains(affstrack.physicallist, word) then
            ak.occie.aura.physical = ak.occie.aura.physical + 1 
         end
				 if word == "amnesia" then
				    affstrack.score.amnesia = 100
				    if amnesiatimer then 
							killTimer(amnesiatimer)
							amnesiatimer = nil 
						end
            amnesiatimer = tempTimer(1, [[OppLostAff("amnesia")]])
         elseif string.find(word,"unweave") then
            affstrack.score[word] = affstrack.score[word] + 100
            table.insert(affStr,word:title())
         elseif word == "wrenchhead" then
            affstrack.score.wrenchhead = 100
            OppGainedAff("dizziness")
            disableTimer("Wrench Head Timer")
            enableTimer("Wrench Head Timer")
            ak.HeadWrenchDisable = tempTimer(24,[[affstrack.score.wrenchhead = 0;ak.scoreup(target)]])
            ak.InitialWrench = tempTimer(3.5,[[OppGainedAff("dizziness")]])
            table.insert(affStr,word:title())
				 elseif word == "armexpend" then
            affstrack.score.armexpend = 100
            ak.armexpendtimer = tempTimer(8,[[affstrack.score.armexpend = 0;ak.scoreup(target)]])
            table.insert(affStr,word:title())	
				 elseif word == "blisters" then
            affstrack.score.blisters = 100
            ak.blisterkiller = tempTimer(20,[[affstrack.score.blisters = 0;ak.scoreup(target)]])
            table.insert(affStr,word:title())	
				 elseif word == "hamstring" then
            affstrack.score.hamstring = 100
            ak.hamstringtimer = tempTimer(9.5,[[affstrack.score.hamstring = 0;ak.scoreup(target)]])
            table.insert(affStr,word:title())         
				 elseif word == "worm" then
            affstrack.score.worm = 100
            ak.wormtimer = tempTimer(20,[[affstrack.score.worm = 0;ak.scoreup(target)]])
            table.insert(affStr,word:title())	                      				 
         elseif word == "wrenchtorso" then
            affstrack.score.wrenchtorso = 100
            ak.TorsoWrenchDisable = tempTimer(24,[[affstrack.score.wrenchtorso = 0;ak.scoreup(target)]])
            table.insert(affStr,word:title())
         elseif word == "epseth" or word == "crippledleg" then
            if affstrack.score["leftleg"] &lt; 100 then       
               affstrack.score["leftleg"] = 100
               ak.AddedAffReset("leftleg") 
						table.insert(affStr,word:title())
            elseif affstrack.score["rightleg"] &lt; 100 then       
               affstrack.score["rightleg"] = 100
               ak.AddedAffReset("rightleg") 
						table.insert(affStr,word:title())
            end
         elseif word == "epteth" or word == "crippledarm" then
            if affstrack.score["leftarm"] &lt; 100 then       
               affstrack.score["leftarm"] = 100
               ak.AddedAffReset("leftarm") 
						table.insert(affStr,word:title())
            elseif affstrack.score["rightarm"] &lt; 100 then       
               affstrack.score["rightarm"] = 100
               ak.AddedAffReset("rightarm") 
						table.insert(affStr,word:title())
            end						
				 elseif word == "frozen" then
            affstrack.score[word] = affstrack.score[word] + 100 
            table.insert(affStr,aff:title()) 
            if affstrack.score.frozen &gt; 300 then
               affstrack.score.frozen = 300
            end							
				 elseif word == "deepfreeze" then
            affstrack.score["frozen"] = affstrack.score["frozen"] + 200 
            table.insert(affStr,"Frozen") 
            if affstrack.score.frozen &gt; 300 then
               affstrack.score.frozen = 300
            end										
         elseif affstrack.score[word] then
            if affstrack.score[word] &lt; 100 then       
               affstrack.score[word] = 100
               ak.AddedAffReset(word)
               if (word == "deaf" or word == "sensitivity") then 
                  word = "prefarar" 
               end   
               table.insert(affStr,word:title())
            end
         elseif affstrack.venoms[word] then 
            if affstrack.score[affstrack.venoms[word]] &lt; 100 then    
               affstrack.score[affstrack.venoms[word]] = 100
               ak.AddedAffReset(affstrack.venoms[word])
               if (word == "deaf" or word == "sensitivity") then 
                  word = "prefarar" 
               end
               table.insert(affStr,affstrack.venoms[word]:title())  
            end
         end
		  end
	else          --Single venom
		 ak.eatsbetweenaffs = 1
     if (aff == "sensitivity" or aff == "prefarar") and affstrack.score.deaf == 0 then 
        aff = "deaf" 
     end  
     if table.contains(affstrack.mentallist, aff) then
        ak.occie.aura.mental = ak.occie.aura.mental + 1 
     end
     if table.contains(affstrack.physicallist, aff) then
        ak.occie.aura.physical = ak.occie.aura.physical + 1 
     end
		 if aff == "amnesia" then
				affstrack.score.amnesia = 100
				if amnesiatimer then 
				   killTimer(amnesiatimer)
				   amnesiatimer = nil 
				end
        amnesiatimer = tempTimer(1, [[OppLostAff("amnesia")]])
     elseif string.find(aff,"unweave") then
        affstrack.score[aff] = affstrack.score[aff] + 100
        table.insert(affStr,aff:title())
     elseif aff == "wrenchhead" then
        affstrack.score.wrenchhead = 100
        affstrack.score.torso = 100
        OppGainedAff("dizziness")
        disableTimer("Wrench Head Timer")
        enableTimer("Wrench Head Timer")
        ak.HeadWrenchDisable = tempTimer(24,[[affstrack.score.wrenchhead = 0;ak.scoreup(target)]])
        ak.InitialWrench = tempTimer(3.5,[[OppGainedAff("dizziness")]])
        table.insert(affStr,aff:title())			
		 elseif aff == "blisters" then
        affstrack.score.blisters = 100
        ak.blisterkiller = tempTimer(20,[[affstrack.score.blisters = 0;ak.scoreup(target)]])
        table.insert(affStr,aff:title())	
     elseif aff == "wrenchtorso" then
        affstrack.score.wrenchtorso = 100
        ak.TorsoWrenchDisable = tempTimer(24,[[affstrack.score.wrenchtorso = 0;ak.scoreup(target)]])
        table.insert(affStr,aff:title())
		 elseif aff == "armexpend" then
        affstrack.score.armexpend = 100
        ak.TorsoWrenchDisable = tempTimer(8,[[affstrack.score.armexpend = 0;ak.scoreup(target)]])
        table.insert(affStr,aff:title())	
		 elseif aff == "hamstring" then
         affstrack.score.hamstring = 100
         ak.TorsoWrenchDisable = tempTimer(9.5,[[affstrack.score.hamstring = 0;ak.scoreup(target)]])
         table.insert(affStr,aff:title())	
		 elseif aff == "worm" then
          affstrack.score.worm = 100
          ak.wormtimer = tempTimer(20,[[affstrack.score.worm = 0;ak.scoreup(target)]])
          table.insert(affStr,aff:title())	                  
     elseif aff == "epseth" or aff == "crippledleg" then
        if affstrack.score["leftleg"] &lt; 100 then       
           affstrack.score["leftleg"] = 100
           ak.AddedAffReset("leftleg") 
        elseif affstrack.score["rightleg"] &lt; 100 then       
           affstrack.score["rightleg"] = 100
           ak.AddedAffReset("rightleg") 
        end
        table.insert(affStr,"Epseth")
     elseif aff == "epteth" or aff == "crippledarm" then
        if affstrack.score["leftarm"] &lt; 100 then       
           affstrack.score["leftarm"] = 100
           ak.AddedAffReset("leftarm") 
        elseif affstrack.score["rightarm"] &lt; 100 then       
           affstrack.score["rightarm"] = 100
           ak.AddedAffReset("rightarm") 
        end
        table.insert(affStr,"Epteth")    
		elseif aff == "frozen" then 
        affstrack.score[aff] = affstrack.score[aff] + 100
        table.insert(affStr,aff:title())
        if affstrack.score.frozen &gt; 300 then
           affstrack.score.frozen = 300
        end 
		elseif aff == "deepfreeze" then
        affstrack.score["frozen"] = affstrack.score["frozen"] + 200 
        table.insert(affStr,"Frozen") 
        if affstrack.score.frozen &gt; 300 then
           affstrack.score.frozen = 300
        end		                                         
     elseif affstrack.score[aff] then
        if affstrack.score[aff] &lt; 100 then       
           affstrack.score[aff] = 100
           ak.AddedAffReset(aff)
           if aff == "deaf" or aff == "sensitivity" then 
              aff = "prefarar" 
           end
			   if aff == "hypochondria" then
				   enableTimer("Hypochondria Timer")
			   end
			   if aff == "hellsight" then
				   affstrack.score.slickness = 100
			   end
           table.insert(affStr,aff:title())   
        end
     elseif affstrack.venoms[aff] then 
        if affstrack.score[affstrack.venoms[aff]] &lt; 100 then    
           affstrack.score[affstrack.venoms[aff]] = 100
           ak.AddedAffReset(affstrack.venoms[aff])
           if aff == "deaf" or aff == "sensitivity" then 
              aff = "prefarar" 
           end
           table.insert(affStr,affstrack.venoms[aff]:title())       
        end 
     end
	end
	if #affStr &gt; 0 then 
			ak.echogain(table.concat(affStr, " ")) 
			if rtpkrnl then ApK(table.concat(affStr, " rtpkrnl ")) end--AKG Display
	end
	ak.scoreup(target)
end

function OppLostAff(aff)
	local affStr = ""
	aff = aff:lower()
	if string.find(aff," ") then
		for word in string.gmatch(aff, "%a+") do
			if affstrack.score[word] &gt; 0 then
				affstrack.score[word] = 0
				affStr = word:title()
			end
		end
	else
		if affstrack.score[aff] &gt; 0 then
			affstrack.score[aff] = 0
			affStr = aff:title()
		end
	end
   if affStr:len() &gt; 0 then ak.echolost(affStr) end
	ak.scoreup(target)

end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Target Check</name>
							<packageName></packageName>
							<script>--Targetted Script
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
targetchecker = ""
function IsTargetted(person)
   if not person then return end
   targetchecker = target.name or ""
   if person == targetchecker then 
     return true
   elseif string.starts(person, targetchecker) then
      return true
   else
      return false
   end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>PreAlias</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
if not PreAliasGeneral then
   function PreAliasGeneral()
      local sendon = "stand"
      return sendon
   end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Depthswalker Functions</name>
							<packageName></packageName>
							<script>ak.ShadowList = ak.ShadowList or {}
ak.age = function()
	if svo then
		return svo.stats.age
	elseif wsys then
    if not wsys.stats.age then return 0 end
		return wsys.stats.age 
	end
end

ak.haveshadow = function()
	if table.contains(ak.ShadowList,target:lower():title()) then
		return true
	else
		return false
	end
end

ak.removeshadow = function(name)
    if table.contains(ak.ShadowList,name:lower():title()) then
        table.remove(ak.ShadowList,table.index_of(ak.ShadowList,name:lower():title()))
    end
end

ak.addshadow = function(name)
	if not table.contains(ak.ShadowList,name:lower():title()) then
		table.insert(ak.ShadowList,name:lower():title())
	end
	cecho("&lt;cyan&gt;\nShadow Claimed!\n")
end

ak.instill = function(instill)
	if instill == "Degeneration" then
		if affstrack.score.clumsiness &lt; 100 then
			OppGainedAff("clumsiness")
		elseif affstrack.score.weariness &lt; 100 then
			OppGainedAff("weariness")
		else
			OppGainedAff("paralysis")
		end
	elseif instill == "Depression" then
		if affstrack.score.depression &lt; 100 then
			OppGainedAff("depression")
		elseif affstrack.score.nausea &lt; 100 then
			OppGainedAff("nausea")
		else
			OppGainedAff("hypochondria")
		end
	elseif instill == "Retribution" then
		if affstrack.score.justice &lt; 100 then
			OppGainedAff("justice")
		else
			OppGainedAff("retribution")
		end
	elseif instill == "Madness" then
		if affstrack.score.shadowmadness &lt; 100 then
			OppGainedAff("shadowmadness")
		elseif affstrack.score.vertigo &lt; 100 then
			OppGainedAff("vertigo")
		else
			OppGainedAff("hallucinations")
		end
	elseif instill == "Leach" then
		if affstrack.score.parasite &lt; 100 then
			OppGainedAff("parasite")
		elseif affstrack.score.healthleech &lt; 100 then
			OppGainedAff("healthleech")
		else
			OppGainedAff("manaleech")
		end
	end
end

ak.fullinstill = function(instill)
	if instill == "Degeneration" then
		OppGainedAff("weariness")
		OppGainedAff("clumsiness")
		OppGainedAff("paralysis")
	elseif instill == "Depression" then
		OppGainedAff("depression")
		OppGainedAff("nausea")
		OppGainedAff("hypochondria")
		OppGainedAff("anorexia")
		OppGainedAff("masochism")
	elseif instill == "Retribution" then
		OppGainedAff("justice")
		OppGainedAff("retribution")
	elseif instill == "Madness" then
		OppGainedAff("shadowmadness")
		OppGainedAff("vertigo")
		OppGainedAff("hallucinations")
	elseif instill == "Leach" then
		OppGainedAff("parasite")
		OppGainedAff("healthleech")
		OppGainedAff("manaleech")
		ak.addshadow()
	end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Fracture Relapsing</name>
							<packageName></packageName>
							<script>function ak.skullHit()
  if isActive("AK_SkullTimer","timer") == 0 and ak.twoh.skull &gt; 0 then
		ak.skullcount = 0
		OppGainedAff("nausea")
		enableTimer("AK_SkullTimer")
	elseif ak.twoh.skull == 0 then
		ak.skullcount = 0
		disableTimer("AK_SkullTimer")
	end
end

function ak.tendonHit()
	if isActive("AK_TendonTimer","timer") == 0 and ak.twoh.tendons &gt; 0 then
		ak.tendonscount = 0
		OppGainedAff("clumsiness")
		enableTimer("AK_TendonTimer")
	elseif ak.twoh.tendons == 0 then
		ak.tendonscount = 0
		disableTimer("AK_TendonTimer")
	end
end

function ak.ribHit()
	if isActive("AK_RibsTimer","timer") == 0 and ak.twoh.ribs &gt; 0 then
		ak.ribscount = 0
		OppGainedAff("prefarar")
		enableTimer("AK_RibsTimer")
	elseif ak.twoh.ribs == 0 then
		ak.ribscount = 0
		disableTimer("AK_RibsTimer")
	end
end

function ak.wristHit()
	if ak.twoh.wrist &lt; 1 then
		if ak.wristTimer then killTimer(ak.wristTimer) end
	elseif ak.twoh.wrist == 1 then
		if ak.wristTimer then killTimer(ak.wristTimer) end
		ak.wristTimer = tempTimer(5, [[ak.wristTick()]])
	elseif ak.twoh.wrist == 2 then
		if ak.wristTimer then killTimer(ak.wristTimer) end
		ak.wristTimer = tempTimer(4, [[ak.wristTick()]])
	elseif ak.twoh.wrist == 3 then
		if ak.wristTimer then killTimer(ak.wristTimer) end
		ak.wristTimer = tempTimer(3, [[ak.wristTick()]])
	elseif ak.twoh.wrist == 4 then
		if ak.wristTimer then killTimer(ak.wristTimer) end
		ak.wristTimer = tempTimer(2, [[ak.wristTick()]])
	elseif ak.twoh.wrist &gt;= 5 then
		if ak.wristTimer then killTimer(ak.wristTimer) end
		ak.wristTimer = tempTimer(1, [[ak.wristTick()]])
	end 
end

function ak.wristTick()
	ak.wristHit()
end

</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Gmcp Room</name>
							<packageName></packageName>
							<script>function ak.roomupdate()
	 ak.MountLook()
	 ak.RoomDefs()
   if gmcp.Room.Info.num ~= ak.lastroom then
	 		if wsys and wsys.retard then
				wsys.retardationOff()
			end
      ak.ae = ak.ae or 0
      ak.blocked = nil
      if ak.disturbed or ak.ae &gt; 0 or ak.feedback then
         ak.disturbed = false
         ak.ae = 0
         ak.feedback = false
         ak.scoreup(target)
      end
      if ak.infernohere then 
         ak.infernohere = false
         ak.scoreup(target)
      end
   end
   ak.lastroom = gmcp.Room.Info.num
end

registerAnonymousEventHandler("gmcp.Room.Info", "ak.roomupdate")
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Staff Affliction Tracking</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.staffaff(staffhit)
  if staffhit == "airstaff" then
	   OppGainedAff("prone")
  elseif staffhit == "firestaff" then
	   ak.flameon("notadditive")
  --elseif staffhit == "earthstaff" then
	   --OppGainedAff("prone")
  elseif staffhit == "waterstaff" then
	   OppGainedAff("frozen")
  end
end

--DO NOT MESS WITH THIS--</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Attack Sets</name>
							<packageName></packageName>
							<script>--setattack
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.serveraliases()
   if ak.debug then cecho("\nScoring Up") end
   ak.stack = ak.stack or "none"
   if ak.stack == "NoOne" then --Deliverance! 
      ak.aliasreset()
   elseif gmcp.Char.Status.race:match("Dragon") and not inlyre() then                                                                                           -- Dragon --
     	if ak.dragon.setattacks then
				ak.dragon.setattacks()
			end
   elseif gmcp.Char.Status.class == "Occultist" and not inlyre() then
      if ak.occie.setattacks then
				ak.occie.setattacks()
			end
   elseif gmcp.Char.Status.class == "Monk" and not inlyre() then
      if ak.monk.setattacks then
				ak.monk.setattacks()
			end
   elseif gmcp.Char.Status.class == "Magi" and not inlyre() then 
      if ak.magi.setattacks then
				ak.magi.setattacks()
			end
   elseif gmcp.Char.Status.class == "Serpent" and not inlyre() then   
      if ak.serpent.setattacks then
				ak.serpent.setattacks()
			end  
   elseif gmcp.Char.Status.class == "Sentinel" and not inlyre() then
      if ak.sentinel.setattacks then
				ak.sentinel.setattacks()
			end
   elseif gmcp.Char.Status.class == "Shaman" and not inlyre() and not ak.tza then  
      if ak.shaman.setattacks then
			   ak.shaman.setattacks()
			end
   elseif gmcp.Char.Status.class == "Priest" and not inlyre() then 
      if ak.priest.setattacks then
				ak.priest.setattacks()
			end
   elseif gmcp.Char.Status.class == "Apostate" and not inlyre() then                                                                                            -- APOSTATE --
      if ak.apostate.setattacks then
				ak.apostate.setattacks()
			end
   elseif (gmcp.Char.Status.class == "Infernal" or gmcp.Char.Status.class == "Paladin" or gmcp.Char.Status.class == "Runewarden")  and not inlyre() then
			if ak.knight.setattacks then
				ak.knight.setattacks()
			end
   elseif gmcp.Char.Status.class == "Blademaster" and not inlyre() then   
      if ak.bm.setattacks then
				ak.bm.setattacks()
			end
   elseif gmcp.Char.Status.class == "Alchemist" and not inlyre() then
	    if ak.alchemist.setattacks then
				ak.alchemist.setattacks()
			end
   elseif gmcp.Char.Status.class == "Jester" and not inlyre() then
      if ak.stack == "JesterNoFash" and ak.jester.NoFashion then
         ak.jester.NoFashion()
      end
   elseif gmcp.Char.Status.class == "Depthswalker" and not inlyre() then
      if ak.depthswalker.setattacks then
				ak.depthswalker.setattacks()
			end
   elseif gmcp.Char.Status.class == "Sylvan" and not inlyre() then
      if ak.stack == "Weathering" and ak.sylvan.Weather then
         ak.sylvan.Weather()
      end
   elseif gmcp.Char.Status.class == "Psion" and not inlyre() then
			if ak.psion.setattacks then
         ak.psion.setattacks()
      end
   elseif gmcp.Char.Status.class == "Bard" and not inlyre() then
      if ak.stack == "Kelp" and ak.bard.KelpLock and ak.bard.KelpLock.Main then
         ak.bard.KelpLock.Main()
			elseif ak.stack == "Mentals" and ak.bard.Mentals and ak.bard.Mentals.Main then
			   ak.bard.Mentals.Main()
      end
	 elseif gmcp.Char.Status.class == "fire Elemental Lord" and not inlyre() then
	 	  if ak.ignition.setattacks then
         ak.ignition.setattacks()
			end
   elseif gmcp.Char.Status.class == "air Elemental Lord" and not inlyre() then
      if ak.stack == "Duress" and ak.duress and ak.duress.compress then
         ak.duress.compression()
      end
	 elseif gmcp.Char.Status.class == "water Elemental Lord" and not inlyre() then
      if ak.pervasion.setattacks then
        ak.pervasion.setattacks()
      end
   end
   if not inlyre() then
      ak.mycustomoffense()
   end
	 if ak.reboundPop and ak.stack ~= "NoOne" and not inlyre() and not ak.tza then
	 	  ak.reboundPop() 
	 end
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Rounding</name>
							<packageName></packageName>
							<script>function roundUp(number, places)
	return math.ceil(number * math.pow(10,places)) / math.pow(10,places)
end

function roundDown(number, places)
	return math.floor(number * math.pow(10,places)) / math.pow(10,places)
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Alias Setter</name>
							<packageName></packageName>
							<script>function ak.setalias(aliasname, changes)
	ak.aliases.lastsend[aliasname] = ak.aliases.lastsend[aliasname] or "unknown"
	ak.aliases[aliasname] = ak.aliases[aliasname] or "random"
	if ak.aliases[aliasname] == changes then return end
	if ak.aliases.lastsend[aliasname] == changes then return end
	--local check = string.split(changes, "parry")
		
	ak.aliases.lastsend[aliasname] = changes
	send("setalias "..aliasname.." "..changes, false)

end

local parrychecks = {
	["right leg"] = true,
}

function ak.parrycut(var)
	if not string.find(var,"parry") then
		return var
	end
	for k,v in pairs(parrychecks) do
		
	end
end

function ak.aliasreset()
	send("setalias oattackrl stand")
	send("setalias oattackll stand")
	send("setalias oattackra stand")
	send("setalias oattackla stand")
	send("setalias oattackh stand")
	send("setalias oattackt stand")
	send("setalias oattack stand")
	send("setalias oattacktwo stand")
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Queue Tracking</name>
							<packageName></packageName>
							<script>function ak.queuereset()
	if wsys then
		if wsys.bals.b and wsys.bals.e then
			ak.queue.eqbal = {}
			ak.queue.sent = {}
		end
	end
end


registerAnonymousEventHandler("got balance", "ak.queuereset")
registerAnonymousEventHandler("got equilibrium", "ak.queuereset")</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Default Stack Set</name>
							<packageName></packageName>
							<script>
if ak.defaultstack then return end --Delete Me From Personal Settings!

function ak.defaultstack()
   if gmcp.Char.Status.race:match("Dragon") then 
      ak.stack = "dragon" 
      affstrack.crushedherb = nil
   elseif gmcp.Char.Status.class == "Monk" then
      if ak.monk.toggleswap then
         ak.monk.toggleswap() 
      else
         ak.stack = "mindfuck"
      end
   elseif gmcp.Char.Status.class == "Magi" then
      ak.stack = "Dgmagi"
      --ak.stack = "Pmagi"
   elseif gmcp.Char.Status.class == "Serpent" then
      ak.stack = "Kelp"
   elseif gmcp.Char.Status.class == "Occultist" then
      ak.stack = "Unravel"
   elseif gmcp.Char.Status.class == "Jester" then
      ak.stack = "JesterNoFash"
   elseif gmcp.Char.Status.class == "Shaman" then 
      ak.stack = "Tzantza" 
   elseif gmcp.Char.Status.class == "Sylvan" then
      ak.stack = "Weathering"
   elseif gmcp.Char.Status.class == "Bard" then
      ak.stack = "Kelp"
   elseif gmcp.Char.Status.class == "Blademaster" then
      ak.stack = "BM Prep"
   elseif gmcp.Char.Status.class == "Priest" then
      ak.stack = "priesto"
   elseif gmcp.Char.Status.class == "Alchemist" then
      ak.stack = "alchbase"
	 elseif gmcp.Char.Status.class == "Apostate" then
	 		ak.stack = "Kelp"
   elseif gmcp.Char.Status.class == "Sentinel" then
      ak.stack = "Petrify"
   elseif gmcp.Char.Status.class == "Depthswalker" then
      ak.stack = "Damage"
   elseif gmcp.Char.Status.class == "Psion" then
      ak.stack = "PsiLock"			
	 elseif gmcp.Char.Status.class == "air Elemental Lord" then
	    ak.stack = "Duress"
	 elseif gmcp.Char.Status.class == "water Elemental Lord" then
	    ak.stack = "Perversion"
	 elseif gmcp.Char.Status.class == "fire ELemental Lord" then
	 	  ak.stack = "Ignition"
   elseif gmcp.Char.Status.class == "Infernal" or gmcp.Char.Status.class == "Paladin" or gmcp.Char.Status.class == "Runewarden" then   
      if gmcp and gmcp.Char and gmcp.Char.Vitals and gmcp.Char.Vitals.charstats[3] == "Spec: Dual Cutting" then
         if ak.dwcoffensetoggle then
            ak.dwcoffensetoggle()
         end
      elseif gmcp and gmcp.Char and gmcp.Char.Vitals and gmcp.Char.Vitals.charstats[3] and gmcp.Char.Vitals.charstats[3] == "Spec: Sword and Shield" then
         ak.stack = "Aboard"     --sword and board
      elseif gmcp and gmcp.Char and gmcp.Char.Vitals and gmcp.Char.Vitals.charstats[3] and gmcp.Char.Vitals.charstats[3] == "Spec: Two Handed" then
         ak.stack = "2hspeed" 
      elseif gmcp and gmcp.Char and gmcp.Char.Vitals and gmcp.Char.Vitals.charstats[3] and gmcp.Char.Vitals.charstats[3] == "Spec: Dual Blunt" then
         ak.stack = "dwb"
      end
   end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Anti Illusion</name>
							<packageName></packageName>
							<script>
if ak.ai then return end

function ak.ai()
	return false
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Flame on!</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.flameon(typer)
   if typer == "additive" and affstrack.score.dehydrate == 100 and affstrack.score.aflame + 100 &lt; 500 then
      affstrack.score.aflame = affstrack.score.aflame + 100      
   elseif typer == "additive" and affstrack.score.dehydrate == 100 then
      affstrack.score.aflame = 500
   elseif affstrack.score.aflame &lt; 100 then
      affstrack.score.aflame = 100
   end
   ak.scoreup(target)
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Bleed Update</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.bleedupdate(pushed)
	if gmcp.Char.Status.class == "Blademaster" then
		ak.bleeding = pushed -- More Bleeding
		ak.scoreup(target)
	else
		if ak.bleeding &lt; pushed and affstrack.score.haemophilia &gt; 0 then
			if ak.ProTrackingConfirmed and affstrack.score.haemophilia &lt; 100 then 
  	    ak.ProTrackingConfirmed("haemophilia") 
  	 	end
			ak.bleeding = pushed -- More Bleeding
		elseif ak.bleeding - pushed &gt; 100 then
			--ak.bleeding = pushed --Less Bleeding
			if ak.thoughtIhad and affstrack.score.haemophilia &gt; 0 and not ak.dontremovehaemo then
				ak.thoughtIhad("haemophilia")	
			end
		elseif ak.bleeding &gt; 100 and affstrack.score.haemophilia &gt; 0 and ak.ProTrackingConfirmed and affstrack.score.haemophilia &lt; 100 then 
			ak.ProTrackingConfirmed("haemophilia") 
		end	
	end
	ak.dontremovehaemo = false
end

if ak.bloodletbleed then return end
function ak.bloodletbleed()
	return 255
end

</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>SnB Smash High</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.SnBSmashHighAff(currentstaby)
	local shAff = "dizziness"
	if affstrack.score.dizziness &lt; 100 and not table.contains(currentstaby,"dizziness") then
		 shAff = "dizziness"
	elseif affstrack.score.recklessness &lt; 100 and not table.contains(currentstaby,"recklessness") then
		 shAff = "recklessness"
	elseif affstrack.score.stupidity &lt; 100 and not table.contains(currentstaby,"stupidity") then
		 shAff = "stupidity"
	elseif affstrack.score.confusion &lt; 100 and not table.contains(currentstaby,"confusion") then
		shAff = "confusion"
	elseif affstrack.score.epilepsy &lt; 100 and not table.contains(currentstaby,"epilepsy") then
		 shAff = "epilepsy"
	end
	return shAff
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>New Person</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.playercheck(who)
	ak[who] = ak[who] or ak.newplayer()
end

function ak.newplayer()
	return { 
		defs = {
		},
		bals = {
			["salve"] = true,
		},
		affs = {
			["addiction"]      = 0,
			["aeon"]           = 0,
			["agoraphobia"]    = 0,
			["anorexia"]       = 0,
			["aflame"]         = 0,
			["amnesia"]        = 0,
			["armexpend"]      = 0,
			["airfist"]        = 0,
			["asthma"]         = 0,
			["bitten"]         = 0,
			["blind"]          = 0,
			["blackout"]       = 0,
			["blisters"]       = 0,
			["bound"]          = 0,
			["brand"]          = 0,
			["claustrophobia"] = 0,
			["clumsiness"]     = 0,
			["conflagrate"]    = 0,
			["confusion"]      = 0,
			["corruption"]     = 0,
			["crippledarm"]    = 0,
			["crippledleg"]    = 0,
			["crushedthroat"]  = 0,
			["darkshade"]      = 0,
			["deadening"]      = 0,
			["deaf"]           = 0,
			["dementia"]       = 0,
			["depression"]     = 0,
			["dehydrate"]      = 0,
			["disloyalty"]     = 0,
			["disrupt"]        = 0,
			["dizziness"]      = 0,
			["enlighten"]      = 0,
			["epilepsy"]       = 0,
			["frozen"]         = 0,
			["generosity"]     = 0,
			["haemophilia"]    = 0,
			["hallucinations"] = 0,
			["hamstring"]      = 0,
			["hierophant"]     = 0,
			["healthleech"]    = 0,
			["hellsight"]      = 0,
			["hypersomnia"]    = 0,
			["hypochondria"]   = 0,
			["hypothermia"]    = 0,
			["impaleslash"]    = 0,
			["impatience"]     = 0,
			["inquisition"]    = 0,
			["insomnia"]       = 0,
			["justice"]        = 0,
			["kola"]           = 0,
			["latched"]        = 0,
			["lethargy"]       = 0,
			["lovers"]         = 0,
			["loneliness"]     = 0,
			["masochism"]      = 0,
			["manaleech"]      = 0,
			["mindclamp"]      = 0,
			["nausea"]         = 0,
			["pacifism"]       = 0,
			["paralysis"]      = 0,
			["parasite"]       = 0,
			["paranoia"]       = 0,
			["prone"]          = 0,
			["recklessness"]   = 0,
			["retribution"]    = 0,
			["rixil"]          = 0,
			["scalded"]        = 0,
			["scytherus"]      = 0,
			["selarnia"]       = 0,
			["sensitivity"]    = 0,
			["shadowmadness"]  = 0,
			["shyness"]        = 0,
			["slime"]          = 0,
			["slickness"]      = 0,
			["tempslickness"]  = 0,
			["sleep"]          = 0,
			["stupidity"]      = 0,
			["surge"]          = 0,
			["transfixed"]     = 0,
			["timeflux"]       = 0,
			["timeloop"]       = 0,
			["weariness"]      = 0,
			["wrenchhead"]     = 0,
			["wrenchtorso"]     = 0,
			["whisperingmadness"] = 0,
			["vertigo"]        = 0,
			["vitiate"]        = 0,
			["voidfist"]       = 0,
			["voyria"]         = 0,
			["airdisrupt"]     = 0,
			["earthdisrupt"]   = 0,
			["firedisrupt"]    = 0,
			["spiritdisrupt"]  = 0,
			["waterdisrupt"]   = 0,
			["rightleg"]       = 0,
			["leftleg"]       = 0,
			["rightarm"]       = 0,
			["leftarm"]       = 0,
			["head"]       = 0,
			["torso"]       = 0,
			["tension"]     = 0,
			["pressure"]    = 0,
			["unweavingbody"] = 0,
			["unweavingmind"] = 0,
			["unweavingspirit"] = 0,
      ["rebbies"]         = 0,
      ["sandfever"]       = 0,
      ["flushings"]       = 0,
      ["mycalium"]        = 0,
      ["pyramides"]       = 0,
		}
	}
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Shikudo Alias Split</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.shikudo.AliasSplit(blah)
	ak.shikudo.AttackAlias = {}
	local checktable = blah
	local attacks = {"ruku","kuro", "hiru", "nervestrike","livestrike", "dart", "hiraku", "thrust", "needle"}
	for i = 1, #blah do
		if table.contains(attacks,blah[i]) then
			if blah[i+1] and blah[i+1] == "light" then
				table.insert(ak.shikudo.AttackAlias,"light")
			else
				table.insert(ak.shikudo.AttackAlias,"regular")
			end
		end
	end
end

function ak.shikudo.LimbBlock()
	ak.shikudo.AttackAlias = ak.shikudo.AttackAlias or {}
	if #ak.shikudo.AttackAlias &gt; 0 then
		if ak.shikudo.AttackAlias[1] == "light" then
			return true	
		end
		table.remove(ak.shikudo.AttackAlias,1)
	end
	return false
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Mount Look</name>
							<packageName></packageName>
							<script>
function ak.MountLook()
	enableTrigger("Look Prompt")
	if WhoHereTable and not table.contains(WhoHereTable,target) then return end
	ak.lookmountedupdate = true
	ak.mountedcheck = target
	if ak.lookmounted then killTrigger(ak.lookmounted) end
	if ak.lookmountedtwo then killTrigger(ak.lookmountedtwo) end
  if ak.lookmountedthree then killTrigger(ak.lookmountedthree) end
  if ak.lookmountedfour then killTrigger(ak.lookmountedfour) end
	ak.lookmounted = tempRegexTrigger(ak.mountedcheck.."(?: |.*)is here.",[[
		ak.MountLookUnMounted()
	]])
	ak.lookmountedtwo = tempRegexTrigger(ak.mountedcheck.."(?: |.*)flows ever onwards.",[[
		ak.MountLookUnMounted()
	]])
	ak.lookmountedthree = tempRegexTrigger(ak.mountedcheck.."(?: |.*)\'s imposing form looms.",[[
		ak.MountLookUnMounted()
	]])
  	ak.lookmountedfour = tempRegexTrigger(ak.mountedcheck.."(?: |.*)towers here, clad in skin of living stone.",[[
		ak.MountLookUnMounted()
	]])
end

function ak.MountLookPrompt()
	disableTrigger("Look Prompt")
	ak.GHLookPrompt()
	ak.submergedLookPrompt()
	ak.FloodLookPrompt()
  ak.distortionLookPrompt()
	if WhoHereTable and not table.contains(WhoHereTable,target) then return end
	if ak.mounted == ak.lookmountedupdate then return end
	ak.mounted = ak.lookmountedupdate
	if ak.lookmounted then killTrigger(ak.lookmounted) end
	if ak.lookmountedtwo then killTrigger(ak.lookmountedtwo) end
	if ak.lookmountedthree then killTrigger(ak.lookmountedthree) end
  if ak.lookmountedfour then killTrigger(ak.lookmountedfour) end
	ak.lookmounted = nil
	ak.lookmountedtwo = nil
	ak.lookmountedthree = nil
	ak.scoreup(target)
end

function ak.MountLookUnMounted()
	if ak.lookmounted then killTrigger(ak.lookmounted) end
	if ak.lookmountedtwo then killTrigger(ak.lookmountedtwo) end
	if ak.lookmountedthree then killTrigger(ak.lookmountedthree) end
  if ak.lookmountedfour then killTrigger(ak.lookmountedfour) end
	ak.lookmountedupdate = false
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Room Defs</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.RoomDefs()
	ak.lookghupdate = false
	ak.lookFloodupdate = false
	ak.looksubmergedupdate = false
  ak.lookdistortionupdate = false
	if ak.looksubmerged then killTrigger(ak.looksubmerged) end
	if ak.lookGH then killTrigger(ak.lookGH) end
	if ak.lookFlood then killTrigger(ak.lookFlood) end
  if ak.lookdistortion then killTrigger(ak.lookdistortion) end
	ak.lookGH = tempTrigger("Hands of rotting flesh and white bone push up from the ground.",[[
		ak.GhLookHanded()
	]])
	ak.lookFlood = tempTrigger("This area is unnaturally flooded with water.",[[
		ak.FloodLookHanded()
	]])	
	ak.looksubmerged = tempTrigger("This location is nearly completely submerged.",[[
		ak.submergedLookHanded()
	]])	
  ak.lookdistortion = tempTrigger("The surroundings are distorted, as if viewed through water.",[[
    ak.distortionLookHanded()
  ]])
end
function ak.GhLookHanded()
	killTrigger(ak.lookGH)
	ak.lookghupdate = true
end
function ak.FloodLookHanded()
	killTrigger(ak.lookFlood)
	ak.lookFloodupdate = true
end
function ak.submergedLookHanded()
	killTrigger(ak.looksubmerged)
	ak.looksubmergedupdate = true
end
function ak.distortionLookHanded()
  killTrigger(ak.lookdistortion)
  ak.lookdistortionupdate = true
end

function ak.GHLookPrompt()
	if ak.gravehands == ak.lookghupdate then return end
	ak.gravehands = ak.lookghupdate
	if ak.lookGH then killTrigger(ak.lookGH) end
	ak.lookGH = nil
	ak.scoreup(target)
end

function ak.FloodLookPrompt()
	if ak.flood == ak.lookFloodupdate then return end
	ak.flood = ak.lookFloodupdate
	if ak.lookFlood then killTrigger(ak.lookFlood) end
	ak.lookFlood = nil
	ak.scoreup(target)
end

function ak.submergedLookPrompt()
	if ak.submerged == ak.looksubmergedupdate then return end
	ak.submerged = ak.looksubmergedupdate
	if ak.looksubmerged then killTrigger(ak.looksubmerged) end
	ak.looksubmerged = nil
	ak.scoreup(target)
end

function ak.distortionLookPrompt()
	if ak.distortion == ak.lookdistortionupdate then return end
	ak.distortion = ak.lookdistortionupdate
	if ak.lookdistortion then killTrigger(ak.lookdistortion) end
	ak.lookdistortion = nil
	ak.scoreup(target)
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Stacks</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Dragon Stack Prep</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>DragonStack(Main)</name>
								<packageName></packageName>
								<script>--dragon default
ak = ak or {}
ak.dragon = ak.dragon or {}
ak.dragon.default = ak.dragon.default or {}
function ak.dragon.default.main()
	ak.dragon.default.venoms()
	ak.dragon.default.dragoncurser()
	ak.dragon.default.setalias() 
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>DragonStack(VenomPull)</name>
								<packageName></packageName>
								<script>function ak.dragon.default.venoms()
  vcombo = {}
  if math.random(100)&lt;50 then
    if affstrack.score.paralysis&lt;100 then
        table.insert(vcombo,"curare")
    elseif affstrack.score.crippledarm&lt;100 then
        table.insert(vcombo,"epteth")
    elseif affstrack.score.crippledleg&lt;100 then
        table.insert(vcombo,"epseth")
    elseif affstrack.score.stupidity&lt;100 then
        table.insert(vcombo,"aconite")
    elseif affstrack.score.sensitivity&lt;100 then
        table.insert(vcombo,"prefarar")
    end
  else
    if affstrack.score.stupidity&lt;100 then
        table.insert(vcombo,"aconite")
    elseif affstrack.score.dizziness&lt;100 then
        table.insert(vcombo,"larkspur")
    elseif affstrack.score.clumsiness&lt;100 then
        table.insert(vcombo,"xentio")
    elseif affstrack.score.sensitivity&lt;100 then
        table.insert(vcombo,"prefarar")
    elseif affstrack.score.paralysis&lt;100 then
        table.insert(vcombo,"curare")
    end
  end
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>DragonStack(CursePull)</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.dragon.default.dragoncurser() 
      if math.random(100)&lt;50 then
         if affstrack.score.paralysis&lt;100 and vcombo[1] ~= "curare" then
            dragoncurse = "paralysis"
         elseif affstrack.score.asthma&lt;100 and vcombo[1] ~= "kalmia" then
            dragoncurse = "asthma"
         elseif affstrack.score.sensitivity&lt;100 then
            dragoncurse = "sensitivity"
         elseif affstrack.score.impatience&lt;100 then
            dragoncurse = "impatience"
         end
      else
         if affstrack.score.asthma&lt;100 and vcombo[1] ~= "kalmia"  then
            dragoncurse = "asthma"
         elseif affstrack.score.impatience&lt;100 then
            dragoncurse = "impatience"
         elseif affstrack.score.sensitivity&lt;100 then
            dragoncurse = "stupidity"
         elseif affstrack.score.paralysis&lt;100 and vcombo[1] ~= "curare"  then
            dragoncurse = "paralysis"
         end
    
      end
   if affstrack.score.sensitivity&lt;100 and vcombo[1] == "prefarar" and affstrack.score.blind ~= 100 then dragoncurse = "sensitivity" end
end
</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>DragonStack(SetAlias)</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.dragon.default.setalias() 
	ak.setalias("oattackrl", PreAliasGeneral().."/wield shield/dragoncurse "..target.." "..dragoncurse.." 1/rend "..target.." right leg "..vcombo[1].."/breathgust "..target)
	ak.setalias("oattackll", PreAliasGeneral().."/wield shield/dragoncurse "..target.." "..dragoncurse.." 1/rend "..target.." left leg "..vcombo[1].."/breathgust "..target)
	ak.setalias("oattackra", PreAliasGeneral().."/wield shield/dragoncurse "..target.." "..dragoncurse.." 1/rend "..target.." right arm "..vcombo[1].."/breathgust "..target)
	ak.setalias("oattackla", PreAliasGeneral().."/wield shield/dragoncurse "..target.." "..dragoncurse.." 1/rend "..target.." left arm "..vcombo[1].."/breathgust "..target)
	ak.setalias("oattackt", PreAliasGeneral().."/wield shield/dragoncurse "..target.." "..dragoncurse.." 1/rend "..target.." torso "..vcombo[1].."/breathgust "..target)
	ak.setalias("oattackh", PreAliasGeneral().."/wield shield dirk/dragoncurse "..target.." "..dragoncurse.." 1/rend "..target.." head "..vcombo[1].."/breathgust "..target)
end</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
						<Script isActive="yes" isFolder="no">
							<name>ClassLock</name>
							<packageName></packageName>
							<script>function ak.dragonfied(affline)
	if not ak.dragonTarget then
		ak.dragonTarget = true
		ak.classlockadd()
		parsedclasscures = false
		ak.scoreup(target)
		cecho("\n&lt;cyan&gt;Target is &lt;yellow&gt;DTF")
	end
end

function ak.elementalfied(what)
	if not ak.elementalTarget then
		ak.elementalTarget = what
		ak.dragonTarget = false
		ak.classlockadd()
		parsedclasscures = false
		ak.scoreup(target)
		cecho("\n&lt;cyan&gt;Target is &lt;yellow&gt;DTF("..what..")")
	end
end

function ak.classlockadd()
   if ndba and wsys then
      ak.classlockwsys()
   elseif svo and ndb then
      ak.classlocksvo()
	 else 
	    classlock = {}
      table.insert( classlock, "voyria" )
      table.insert( classlock, "weariness" )
      table.insert( classlock, "reckless" )
   end
end

function ak.classlockwsys()
 classlock = {}
 if ak.elementalTarget then
 	if ak.elementalTarget == "Earth" then
		table.insert( classlock, "weariness" )	
	elseif ak.elementalTarget == "Air" then
		table.insert( classlock, "voyria" )	
	elseif ak.elementalTarget == "Water" then
		table.insert( classlock, "weariness" )		
	elseif ak.elementalTarget == "Fire" then
		table.insert( classlock, "weariness" )
	end 
 elseif ak.dragonTarget then
   table.insert( classlock, "weariness" )
   table.insert( classlock, "recklessness" )
 elseif ndba.isperson(target) and ndba.getclass(target) ~= "unknown" then
   if ndba.getclass(target) == "Alchemist" then    --
      table.insert( classlock, "stupidity" )
   elseif ndba.getclass(target) == "Apostate" then --
      table.insert( classlock, "voyria")
   elseif ndba.getclass(target) == "Bard" then
      table.insert( classlock, "voyria" )
	 elseif ndba.getclass(target) == "Blademaster" then
      table.insert( classlock, "paralysis" )
      table.insert( classlock, "weariness" )
		  table.insert( classlock, "prone" )
   elseif ndba.getclass(target) == "Druid" then    --
      table.insert( classlock, "weariness" )
		  table.insert( classlock, "prone" )
   elseif ndba.getclass(target) == "Infernal" then
      table.insert( classlock, "weariness" )
   elseif ndba.getclass(target) == "Jester" then   --
      table.insert( classlock, "voyria" )
   elseif ndba.getclass(target) == "Magi" then
      table.insert( classlock, "haemophilia" )
   elseif ndba.getclass(target) == "Monk" then
      table.insert( classlock, "weariness" )
   elseif ndba.getclass(target) == "Occultist" then   --
      table.insert( classlock, "paralysis" )
      table.insert( classlock, "voyria" )
   elseif ndba.getclass(target) == "Paladin" then  
      table.insert( classlock, "weariness" )
      table.insert( classlock, "voyria" )
   elseif ndba.getclass(target) == "Priest" then   --
      table.insert( classlock, "weariness" )
      table.insert( classlock, "voyria" )
   elseif ndba.getclass(target) == "Runewarden" then
      table.insert( classlock, "weariness" )
      table.insert( classlock, "voyria")
   elseif ndba.getclass(target) == "Sentinel" then   
      table.insert( classlock, "weariness" )
		  table.insert( classlock, "prone" )
   elseif ndba.getclass(target) == "Serpent" then   
      table.insert( classlock, "weariness" )
   elseif ndba.getclass(target) == "Shaman" then   --
      table.insert( classlock, "selarnia" )
   elseif ndba.getclass(target) == "Sylvan" then   --
      table.insert( classlock, "voyria" )
   elseif ndba.getclass(target) == "Depthswalker" then   --
      table.insert( classlock, "recklessness" )
   elseif ndba.getclass(target) == "Psion" then   --
      table.insert( classlock, "confusion" )
   end
 else
    table.insert( classlock, "voyria" )
    table.insert( classlock, "weariness" )
    table.insert( classlock, "reckless" )
 end
end

function ak.classlocksvo()
 classlock = {}
 if ak.dragonTarget then
   table.insert( classlock, "weariness" )
   table.insert( classlock, "recklessness" )
 elseif ndb.isperson(target) and ndb.getclass(target) ~= "unknown" then
   if ndb.getclass(target) == "Alchemist" then    --
      table.insert( classlock, "stupidity" )
   elseif ndb.getclass(target) == "Apostate" then --
      table.insert( classlock, "voyria")
   elseif ndb.getclass(target) == "Bard" then
      table.insert( classlock, "voyria" )
	 elseif ndb.getclass(target) == "Blademaster" then
      table.insert( classlock, "weariness" )
		  table.insert( classlock, "prone" )
   elseif ndb.getclass(target) == "Druid" then    --
      table.insert( classlock, "weariness" )
		  table.insert( classlock, "prone" )
   elseif ndb.getclass(target) == "Infernal" then
      table.insert( classlock, "weariness" )
   elseif ndb.getclass(target) == "Jester" then   --
      table.insert( classlock, "voyria" )
   elseif ndb.getclass(target) == "Magi" then
      table.insert( classlock, "haemophilia" )
   elseif ndb.getclass(target) == "Monk" then
      table.insert( classlock, "weariness" )
   elseif ndb.getclass(target) == "Occultist" then   --
      table.insert( classlock, "paralysis" )
      table.insert( classlock, "voyria" )
   elseif ndb.getclass(target) == "Paladin" then  
      table.insert( classlock, "weariness" )
      table.insert( classlock, "voyria" )
   elseif ndb.getclass(target) == "Priest" then   --
      table.insert( classlock, "voyria" )
   elseif ndb.getclass(target) == "Runewarden" then
      table.insert( classlock, "weariness" )
      table.insert( classlock, "voyria")
   elseif ndb.getclass(target) == "Sentinel" then   
      table.insert( classlock, "weariness" )
		  table.insert( classlock, "prone" )
   elseif ndb.getclass(target) == "Serpent" then   
      table.insert( classlock, "weariness" )
   elseif ndb.getclass(target) == "Shaman" then   --
      table.insert( classlock, "selarnia" )
   elseif ndb.getclass(target) == "Sylvan" then   --
      table.insert( classlock, "voyria" )
   elseif ndb.getclass(target) == "Depthswalker" then   --
      table.insert( classlock, "recklessness" )
   end
 else
    table.insert( classlock, "voyria" )
    table.insert( classlock, "weariness" )
    table.insert( classlock, "reckless" )
 end
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Displays</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>odisplay</name>
							<packageName></packageName>
							<script>if ak.refreshAffs then return end           --DELETE THIS SHIT OUT OF YOUR PERSONAL VARS
ak = ak or {}

function ak.refreshAffs()
   if GUI and GUI.ak then
      GUI.ak()                              
   else
      ak.refreshAffsOLD()
   end

end

function ak.refreshAffsOLD()                               --This is my standard display included
        WindowWidth = 0;
        WindowHeight = 0;
        WindowWidth, WindowHeight = getMainWindowSize()
        moveWindow("aff_display", WindowWidth-190,WindowHeight-900)
        resizeWindow("aff_display", 175,890)
        clearWindow("aff_display")
        if ak.defs.rebounding then         
					cecho("aff_display","\nRebounding: &lt;red&gt;YES!\n")
        else 
					cecho("aff_display","\nRebounding: &lt;yellow&gt;NONE!\n")
        end
        if ak.defs.shield then 
        	cecho("aff_display","\nShielding: &lt;red&gt;YES!\n")
        else 
					cecho("aff_display","\nShielding: &lt;yellow&gt;NONE!\n")
        end
        if ak.defs.curseward then 
        	cecho("aff_display","\nWarding: &lt;red&gt;YES!\n")
        else 
					cecho("aff_display","\nWarding: &lt;yellow&gt;NONE!\n")
        end
        if swiftcount then 
             if swiftcount == 1 then 
                  cecho("aff_display","\nSwifting: &lt;red&gt;FALLING!\n\n")
             else 
                  cecho("aff_display","\nSwifting: &lt;yellow&gt;"..swiftcount.."!\n\n")
             end 
        end
        if vodun and vodun[target] and vodun[target]["fashions"] ~= nil then
           cecho("aff_display","0Fashions:&lt;orange_red&gt;"..vodun[target]["fashions"].."\n\n")
        end
        if ak.stack then echo("aff_display","Stacking:"..ak.stack.."\n") else echo("aff_display","\nStacking: NONE!\n\n") end
        targetrelay()
        echo("aff_display","\n0Afflictions:       \n\n")
        for k,v in pairs(affstrack.score) do
        if v &gt; 1 then
           echo("aff_display", k.." "..v.."\n")
           end
        end
        if affstrack.kelpscore &gt; .1 then    echo("aff_display","\nKelp:        "..affstrack.kelpscore.."|4\n") end
        if affstrack.ginsengscore &gt; .1 then echo("aff_display","Ginseng:     "..affstrack.ginsengscore.."|5\n") end
        if affstrack.goldenscore &gt; .1 then  echo("aff_display","Goldenseal:  "..affstrack.goldenscore.."|5\n") end
        if affstrack.mentalscore &gt; .1 then  echo("aff_display","Mentals:  "..affstrack.mentalscore.."|4\n") end
        if softscore then if softscore &gt;= 3 then cecho("aff_display", "Locks:\n SOFT LOCKED!") end end
        if truescore then if truescore &gt;= 5 then cecho("aff_display", "TRUE LOCKED!") end end
        ak.limbshow()
end

function ak.noDisplay()
        WindowWidth = 0;
        WindowHeight = 0;
        WindowWidth, WindowHeight = getMainWindowSize()
        moveWindow("aff_display", 0,0)
        resizeWindow("aff_display", 0,0)
        clearWindow("aff_display")
end


function init()
        winX, winY = getMainWindowSize()
        createMiniConsole("aff_display", winX-145,0,130,400)
        setBackgroundColor("aff_display", 150, 150, 150, 255)
        setMiniConsoleFontSize( "aff_display", 10 )
        setFgColor("aff_display", 10, 0, 0)
        setBgColor("aff_display", 150, 150, 150)
--ak.refreshAffs()
end


</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Oprompt Colour</name>
							<packageName></packageName>
							<script>--ColorPrompt

local convert = {

                ["addiction"]      = "add",
                ["agoraphobia"]    = "agor",
                ["anorexia"]       = "anor",
                ["aeon"]           = "aeon",
								["amnesia"]        = "amn",
                ["aflame"]         = "aflame",
                ["airfist"]        = "afist",
                ["asthma"]         = "ast",
                ["blind"]          = "bld",
								["blisters"]       = "bls",
                ["blackout"]       = "blko",
                ["bound"]          = "bound",
								["brand"]          = "brnd",
                ["claustrophobia"] = "claus",
                ["clumsiness"]     = "clum",
                ["conflagrate"]    = "cnflg",
                ["confusion"]      = "conf",
								["corruption"]     = "corr",
                ["crippledarm"]    = "carm",
                ["crippledleg"]    = "cleg",
						    ["crushedthroat"]  = "cthroat",
                ["darkshade"]      = "dark",
                ["deadening"]      = "dead",
                ["depression"]     = "deep",
                ["deaf"]           = "deaf",
                ["dehydrate"]      = "dehy",
                ["dementia"]       = "dem",
                ["disloyalty"]     = "dloyal",
                ["disrupt"]        = "dis",
                ["dizziness"]      = "diz",
                ["epilepsy"]       = "epi",
                ["enlighten"]      = "LIT",
                ["frozen"]         = "frzn",
                ["generosity"]     = "genor",
                ["guilt"]          = "gul",
                ["haemophilia"]    = "haem",
                ["hallucinations"] = "hall",
                ["hamstring"]      = "hamst",
                ["healthleech"]    = "hleach",
                ["hellsight"]      = "hsight",
                ["hierophant"]     = "hiero",
                ["hypersomnia"]    = "hyper",
                ["hypochondria"]   = "hypo",
                ["hypothermia"]    = "hypot",
                ["impaleslash"]    = "is",
                ["impatience"]     = "imp",
                ["inquisition"]    = "inq",
                ["justice"]        = "just",
                ["kola"]           = "kola",
                ["lethargy"]       = "leth",
                ["loneliness"]     = "lonl",
                ["masochism"]      = "maso",
                ["manaleech"]      = "mleach",
								["mindravaged"]    = "mrvg",
                ["nausea"]         = "naus",
                ["pacifism"]       = "pac",
                ["paralysis"]      = "para",
                ["parasite"]       = "paras",
                ["petrified"]      = "PETD",
                ["paranoia"]       = "prnd",
								["preempt"]        = "pree",
                ["prone"]          = "prn",
                ["recklessness"]   = "reck",
                ["retribution"]    = "ret",
                ["rixil"]          = "rixil",
                ["scalded"]        = "scald",
                ["scytherus"]      = "scy",
                ["selarnia"]       = "sel",
                ["sensitivity"]    = "sen",
                ["slime"]          = "slm",
                ["shadowmadness"]  = "smad",
                ["shyness"]        = "shy",
                ["slickness"]      = "slick",
                ["spiritburn"]     = "sburn",
								["stuttering"]     = "stut",
                ["surge"]          = "surge",
                ["tempslickness"]  = "slick2",
								["tension"]        = "ten",
                ["stupidity"]      = "stu",
                ["tenderskin"]     = "tskin",
                ["transfixed"]     = "trans",
                ["timeflux"]       = "tfx",
                ["timeloop"]       = "tloop",
                ["trussed"]        = "trst",
                ["unconscious"]    = "uncon",
                ["weariness"]      = "weari",
                ["whisperingmadness"] = "wmad",
                ["wrenchhead"]     = "wrth",
                ["wrenchtorso"]     = "wrtt",
                ["worm"]           = "wrm",
                ["vertigo"]        = "vert",
                ["vitiate"]        = "vit",
                ["voyria"]         = "voyria",
                ["voidfist"]       = "vfist",
                ["rightleg"]       = "rl",
                ["leftleg"]       = "ll",
                ["rightarm"]       = "ra",
                ["leftarm"]       = "la",
                ["head"]       = "h",
                ["torso"]       = "tt",
                ["trussed"]        = "trsd",
                ["unconscious"]    = "unc",  
                ["airdisrupt"]  = "adsr",
                ["earthdisrupt"]  = "edsr",
                ["firedisrupt"]  = "fdsr",
                ["spiritdisrupt"]  = "sdsr",
                ["waterdisrupt"]  = "wdsr",
								["unweavingmind"] = "umind",
								["unweavingbody"] = "ubody",
								["unweavingspirit"] = "uspirit",
								["bloodfire"]     = "bfire",
               ["rebbies"]         = "reb",
                ["sandfever"]       = "sandf",
                ["flushings"]       = "flush",
                ["mycalium"]        = "myca",
                ["pyramides"]       = "pyra",
                
}
ak.prompt = ak.prompt or {}
--if ak.prompt.unique then return end
ak.prompt.uniqueset = {"hallucinations","dizziness","recklessness","confusion","paranoia","epilepsy","impatience"}
ak.prompt.uniquesymbol = "&lt;cyan&gt;+"
ak.prompt.donotrelay = {"rixil","slime","hierophant"}
ak.prompt.currentcolor = "&lt;yellow&gt;"
ak.prompt.enablecolor = true
ak.prompt.lockgroup = true
ak.prompt.default = "&lt;yellow&gt;"
ak.prompt.colours = {}
ak.prompt.lockpriority = { 
  [1] = "PTLOCK",
  [2] = "HLOCK",
  [3] = "SLOCK",
  [4] = "VLOCK",
}
ak.prompt.locks = {
  PTLOCK = {"anorexia","asthma","slickness","paralysis","impatience"},
  HLOCK = {"anorexia","asthma","slickness","paralysis"},
  SLOCK = {"anorexia","asthma","slickness","impatience"},
  VLOCK = {"anorexia","asthma","slickness"},
}
ak.prompt.colours.lock = {
  PTLOCK = "&lt;deep_pink&gt;",
  HLOCK = "&lt;deep_pink&gt;",
  SLOCK = "&lt;hot_pink&gt;",
  VLOCK = "&lt;hot_pink&gt;",
}
ak.prompt.colours.specific = {
   Kelp = "&lt;green&gt;",
   Goldenseal = "&lt;white&gt;",
   Ginseng = "&lt;blue&gt;",
   Salve = "&lt;cyan&gt;", 
   Ash = "&lt;purple&gt;",
   Deathly = "&lt;cyan&gt;",
	 Smoke = "&lt;orange&gt;",
   }
ak.prompt.colours.afflictions = {
   Kelp = {"asthma", "clumsiness", "hypochondria", "sensitivity", "weariness", "healthleech"},      
   Goldenseal = {"dizziness", "epilepsy", "impatience", "shyness", "stupidity", "unweavingmind"},
   Ginseng = {"addiction", "darkshade", "haemophilia", "lethargy", "nausea", "scytherus", "unweavingbody"},
   Salve = {"aflame", "rightleg", "leftleg", "rightarm", "leftarm", "head", "torso"}, 
   Ash = {"confusion", "dementia", "hallucinations", "hypersomnia", "paranoia"} ,
   Deathly = {"enlighten","voyria"},
	 Smoke = {"tension","manaleech","deadening","disloyalty", "unweavingspirit"}, 
}
function ak.prompt.unique(aff)
   if table.contains(ak.prompt.uniqueset, aff) then
      return ak.prompt.uniquesymbol..""..ak.prompt.currentcolor
   else
      return ""
   end
end

function ak.prompt.setassign()
   if gmcp.Char.Status.class == "Bard" then
      ak.prompt.uniqueset = {"agoraphobia","claustrophobia","dementia","epilepsy","masochism","recklessness","vertigo","confusion", "dizziness", "impatience", "paranoia", "stupidity", "addiction"}
   elseif gmcp.Char.Status.class == "Sentinel" then
      ak.prompt.uniqueset = {"hallucinations","dizziness","recklessness","confusion","paranoia","epilepsy","impatience"}
   elseif gmcp.Char.Status.class == "Occultist" then
      ak.prompt.uniqueset = {"dementia","stupidity","confusion","hypersomnia","paranoia","hallucinations","impatience","recklessness","masochism","agoraphobia","loneliness","lovers"}   
   else
      ak.prompt.uniqueset = {}
   end
end
function ak.prompt.scoreup()
  ak.prompt.setassign()
  ak.prompt.donotgroup = {}
  ak.prompt.lockconflict = false
  ak.prompt.currentcolor = ak.prompt.default
  promptset = {}
  local donotreprompt = {}
  if ak.prompt.lockgroup then
     for i = 1, #ak.prompt.lockpriority do
        for x = 1, #ak.prompt.locks[ak.prompt.lockpriority[i]] do
           if affstrack.score[ak.prompt.locks[ak.prompt.lockpriority[i]][x]] &gt; 50 and not ak.prompt.lockconflict then
              if x == #ak.prompt.locks[ak.prompt.lockpriority[i]] and not table.contains(ak.prompt.donotgroup, ak.prompt.lockpriority[i]) then
                 if table.contains(ak.prompt.colours.lock, ak.prompt.lockpriority[i] ) then
                    table.insert(promptset, ak.prompt.colours.lock[ak.prompt.lockpriority[i]]..""..ak.prompt.lockpriority[i])
                    ak.prompt.lockconflict = true
                 else
                    table.insert(promptset, ak.prompt.lockpriority[i])
                    ak.prompt.lockconflict = true
                 end
                 for m = 1, #ak.prompt.locks[ak.prompt.lockpriority[i]] do
                    table.insert(donotreprompt, ak.prompt.locks[ak.prompt.lockpriority[i]][m])
                 end   
              end
           elseif not table.contains(ak.prompt.donotgroup, ak.prompt.lockpriority[i]) then
              table.insert(ak.prompt.donotgroup, ak.prompt.lockpriority[i])
           end
        end
     end
  end
  if ak.prompt.enablecolor then
     for k,v in pairs(ak.prompt.colours.afflictions) do
        if #ak.prompt.colours.afflictions[k] &gt; 0 then
           for i = 1,#ak.prompt.colours.afflictions[k] do
              if affstrack.score[ak.prompt.colours.afflictions[k][i]] &gt; 1 and convert[ak.prompt.colours.afflictions[k][i]] and not table.contains(ak.prompt.donotrelay, ak.prompt.colours.afflictions[k][i]) and not table.contains(donotreprompt, ak.prompt.colours.afflictions[k][i]) then         
                 if affstrack.score[ak.prompt.colours.afflictions[k][i]] == 100 and convert[ak.prompt.colours.afflictions[k][i]] then
                    ak.prompt.currentcolor = ak.prompt.colours.specific[k]
                    table.insert(promptset, ak.prompt.colours.specific[k]..""..ak.prompt.unique(ak.prompt.colours.afflictions[k][i])..""..convert[ak.prompt.colours.afflictions[k][i]])
                    table.insert(donotreprompt, ak.prompt.colours.afflictions[k][i])
                 elseif convert[ak.prompt.colours.afflictions[k][i]] then
                    ak.prompt.currentcolor = ak.prompt.colours.specific[k]
                    table.insert(promptset, ak.prompt.colours.specific[k]..""..ak.prompt.unique(ak.prompt.colours.afflictions[k][i])..""..convert[ak.prompt.colours.afflictions[k][i]].."["..math.floor(affstrack.score[ak.prompt.colours.afflictions[k][i]] + 0.5).."]")
                    table.insert(donotreprompt, ak.prompt.colours.afflictions[k][i])
                 end
              end
           end
        end
     end
  end
  for k,v in pairs(affstrack.score) do
     if v &gt; 1 and convert[k] and not table.contains(donotreprompt, k)and not table.contains(ak.prompt.donotrelay, k) then         
        if v == 100 and convert[k] then
           ak.prompt.currentcolor = ak.prompt.default
           table.insert(promptset, ak.prompt.default..""..ak.prompt.unique(k)..""..convert[k])
        elseif convert[k] and not table.contains(ak.prompt.donotrelay, k)  then
           ak.prompt.currentcolor = ak.prompt.default
           table.insert(promptset, ak.prompt.default..""..ak.prompt.unique(k)..""..convert[k].."["..math.floor(v + 0.5).."]" )
        end
     end
  end
  if affstrack.impale then
     ak.prompt.currentcolor = ak.prompt.default
     table.insert(promptset, "&lt;cyan&gt;IMPALED")
  end
  if ak.track.flown then
     ak.prompt.currentcolor = ak.prompt.default
     table.insert(promptset, "&lt;white&gt;FLOWN")
  end
  if gmcp.Char.Status.class == "Infernal" or gmcp.Char.Status.class == "Paladin" or gmcp.Char.Status.class == "Runewarden" or gmcp.Char.Status.class == "Magi" or gmcp.Char.Status.class == "Serpent" or gmcp.Char.Status.class == "Bard" then
		if ak.defs.rebounding then
			table.insert(promptset,"&lt;blue&gt;Reb")
		end
		if affstrack.ferocity and affstrack.ferocity &gt; 0 then
		   table.insert(promptset,"&lt;cyan&gt;[&lt;red&gt;"..affstrack.ferocity.."&lt;cyan&gt;]")	
		end
  end
	if gmcp.Char.Status.class == "Occultist" then
		if ak.occie.aura.mental &gt; 0 or ak.occie.aura.physical &gt; 0 then
			table.insert(promptset,"&lt;cyan&gt;[&lt;white&gt;"..ak.occie.aura.physical.."/&lt;green&gt;"..ak.occie.aura.mental.."&lt;cyan&gt;]")
		end
  end
	if gmcp.Char.Status.class == "Depthswalker" then
    local age = ak.age or 0
    if age ~= 0 then
	   table.insert(promptset,"&lt;white&gt;[&lt;red&gt;"..ak.age().."&lt;white&gt;]")	
    end
	end	
	if ak.bleeding and ak.bleeding &gt; 0 then
	   table.insert(promptset,"&lt;cyan&gt;[&lt;red&gt;"..ak.bleeding.."&lt;cyan&gt;]")
	end
	if gmcp.Char.Status.class == "Shaman" and ak.shaman.GetFashions then
	   table.insert(promptset,"&lt;cyan&gt;[&lt;red&gt;F&lt;cyan&gt;]")	
	end
end




</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>oprompt Svo Script</name>
							<packageName></packageName>
							<script>--svo prompt
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
--Mine Below!
--Without The Display!
--vconfig customprompt ^1H: @health ^W(^1@%health%^W), ^2M: @mana ^W(^2@%mana%^W) ^4@willpowerw, ^5@endurancee ^W@%xp% @eqbal|@defs@affs^W @ml_prompttagmine[@gametargethp]-
--With The Display!
--vconfig customprompt ^1H: @health ^W(^1@%health%^W), ^2M: @mana ^W(^2@%mana%^W) ^4@willpowerw, ^5@endurancee ^W@%xp% @eqbal|@defs@affs^W @ml_prompttagmine[@gametargethp]^y@ml_oprompt-

--Add @ml_oprompt to your custom svo prompt
--Use ^y@ml_oprompt instead for it to be coloured yellow


function ak.ml_oprompt()
  promptset = promptset or {}
  if not target then 
     return "" 
  elseif #promptset &gt; 0 then
     return ("["..table.concat(promptset, ", ").."]")
  else
     return ""
  end
end

function ak.svoEventHandlers()
   svo.adddefinition("@ml_oprompt", "ak.ml_oprompt()")
end
 
registerAnonymousEventHandler("svo system loaded", "ak.svoEventHandlers")


</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>oprompt Wys Script</name>
							<packageName></packageName>
							<script>--wsys.prompt
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
--type wshow display
--add @owysprompt into your prompt

function wsys.prompttags.owysprompt()
  promptset = promptset or {}
  if not target then 
     return "" 
  elseif #promptset &gt; 0 and not ak.disableAllEchos then
     return (ak.prompt.default.."["..table.concat(promptset, ", ").."&lt;yellow&gt;]")
  else
     return ""
  end
end
                    



</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>oecho</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function ak.echogain(string)
   if gmcp.Char.Name.name == "Klendathu" and not ak.disableAllEchos then  
      cecho("  &lt;cyan&gt;GAINED AFF:&lt;white&gt; "..string.."&lt;reset&gt;") 
   elseif not ak.disableAllEchos then 
      EchoForAddedAff(string)
   end
end

function ak.echolost(string)
   if gmcp.Char.Name.name == "Klendathu" and not ak.disableAllEchos then 
      cecho("  &lt;cyan&gt;GAINED AFF:&lt;white&gt; "..string.."&lt;reset&gt;")
   elseif not ak.disableAllEchos then
      EchoForLostAff(string) 
   end
end

function ak.echoForPossibleCures(string)
   if gmcp.Char.Name.name == "Klendathu" and not ak.disableAllEchos then 
      cecho("  &lt;cyan&gt;AFF PROCESSED:&lt;white&gt; "..string.."&lt;reset&gt;")
   elseif not ak.disableAllEchos then
      EchoForPossibleCures(string) 
   end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>oTarget</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function targetrelay ()
				if not target then return end
        cecho("aff_display","\n&lt;blue&gt;****************\n")
        cecho("aff_display","\n0Targets: "..target.."\n\n")
        if target1 ~= nil then cecho("aff_display","\nTarget1:&lt;yellow&gt; "..target1.."\n\n") end
        if target2 ~= nil then cecho("aff_display","Target2:&lt;yellow&gt; "..target2.."\n\n") end
        if target3 ~= nil then cecho("aff_display","Target3:&lt;yellow&gt; "..target3.."\n\n") end
        cecho("aff_display","\n&lt;blue&gt;****************\n")
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Limbs</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>Limb Hit +</name>
							<packageName></packageName>
							<script>--limbs2
ak.limbs = ak.limbs or {}
ak.limbs.test = ak.limbs.test or {}
ak.limbs.weaponry = ak.limbs.weaponry or {}
ak.limbs.parriedlimbs = ak.limbs.parriedlimbs or {}
ak.limbs.weaponry.magi = {"earthstaff","airstaff","firestaff","waterstaff"}
ak.limbs.currentbreak = ak.limbs.currentbreak or {}
ak.limbs.currentbreak.weapon = {}
ak.limbs.currentbreak.limb = {}
ak.limbs.currentbreak.attacker = {}
ak.limbs.currentbreak.augment = {}
ak.limbs.currentbreak.who = {}
ak.limbs.blademaster = ak.limbs.blademaster or {}
ak.limbs.blademaster.stance = ak.limbs.blademaster.stance or {}
ak.limbs.tekura = ak.limbs.tekura or {}
ak.limbs.shikudo = ak.limbs.shikudo or {}
ak.limbs.twoh = ak.limbs.twoh or {}
ak.limbs.twoh.stance = ak.limbs.twoh.stance or {}


ak.limbs.LimbHit = ak.limbs.LimbHit or function(who, attacker, weapon, limb, augment, check)
   if who == "Me" then return end
   local whomaxhealth = ak.limbs.FindTargetHealth(who)
   local damage = 0
   ak.limbs.limb_table_check(who)
   ak.limbs.deleteset = false
   ak.limbs.tekura.dontbreaksethead = false
   local attackerclass = "unknown"
   if attacker == "Me" and gmcp.Char.Status.race:match("Dragon") then
      attackerclass = "Dragon" 
   elseif attacker == "Me" and gmcp.Char.Status.class then
      attackerclass = gmcp.Char.Status.class
   elseif ndba and ndba.isperson(attacker) then
      attackerclass = ndba.names[attacker]["class"]
   end 
   if weapon == "tremolo" then 
      damage = 50
   elseif who == "Me" and wsys and wsys.stats.h == wsys.stats.oh then 
      if wsys.absorbed == false then
         return 
      end
   elseif weapon == "dragonrend" then 
      damage = 25
	 elseif weapon == "psion" then
	 	  damage = 25
	 elseif weapon == "wreathed" then
      damage = 12.5
   elseif weapon == "viridianrend" then
      damage = 25			
   elseif weapon == "airstaff" then --15,9 for magi
      if whomaxhealth &gt; 5300 then
         damage = 10
      else
         damage = 11
      end  
      ak.staffaff(weapon)    
   elseif table.contains(ak.limbs.weaponry.magi, weapon) then
      if whomaxhealth &gt; 5400 then
         damage = 16
      else
         damage = 17
      end   
      ak.staffaff(weapon)      
   elseif ak.limbs.myweapons and ak.limbs.myweapons[weapon] then --ak.limbs.myweapons
      damage = ak.limbs.findMyStab(weapon,whomaxhealth)
	 elseif ak.limbs.myformulas and ak.limbs.myformulas[weapon] then
	 		damage = ak.limbs.myformulas[weapon](who, attacker, weapon, limb, augment, check)
   else
      return
   end
   ak.limbs.limbcount[who]["lastpercent"..limb] = ak.limbs.limbcount[who][limb] + 0
   ak.limbs.limbcount[who][limb] = ak.limbs.limbcount[who][limb] + damage
   if weapon == "axk" then
      ak.limbs.tekura.dontbreaksethead = true
   end
   if target == who then
      ak.limbs.damageEcho_Target(target,limb)
   else
      ak.limbs.damageEcho_Non_Target(who,limb)
   end
   ak.limbs.test.currentmax = currentmax
   ak.limbs.test.damage = damage
   ak.limbs.test.who = who
   ak.limbs.test.whomaxhealth = whomaxhealth
   ak.limbs.test.attacker = attacker
   ak.limbs.test.attackerclass = attackerclass
   ak.limbs.test.weapon = weapon
   ak.limbs.test.limb = limb
   ak.limbs.test.augment = augment
   ak.limbs.test.check = check
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>My Weapons +</name>
							<packageName></packageName>
							<script>--limbs db

function ak.limbs.findMyStab(weapon,whomaxhealth)
   if not ak.limbs.myweapons[weapon] then 
      cecho("error.1")
      return 
   end
   local currentmax = 0
   local damage = 0
   for k,v in pairs(ak.limbs.myweapons[weapon]) do
      if currentmax == 0 then 
         currentmax = k
      else
         if ak.limbs.isCloser(whomaxhealth, k, currentmax, weapon) then
            currentmax = k
         end
      end
   end
   ak.limbs.test.currentmax = currentmax
   damage = ak.limbs.myweapons[weapon][currentmax]
   return damage
end

function ak.limbs.isCloser(whomaxhealth, k, currentmax, weapon)
   ak.limbs.test.proximityK = whomaxhealth - k
   ak.limbs.test.proximityCurrent = whomaxhealth - currentmax
   if ak.limbs.test.proximityCurrent &lt; 0 then
      ak.limbs.test.proximityCurrent = ak.limbs.test.proximityCurrent * -1
   end
   if ak.limbs.test.proximityK &lt; 0 then
      ak.limbs.test.proximityK = ak.limbs.test.proximityK * -1
   end
   ak.limbs.test.k = k
   ak.limbs.test.currentmax = currentmax
   if ak.limbs.test.proximityK &lt; ak.limbs.test.proximityCurrent then
      return true
   else
      return false
   end
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Misc Limb Functions</name>
							<packageName></packageName>
							<script>--limbs misc
function ak.limbs.FindTargetHealth(who)
   if who == "Me" then
      return gmcp.Char.Vitals.maxhp
   end
   ak.knownmaxhealth = ak.knownmaxhealth or {}
   if table.contains(ak.knownmaxhealth, who) then
      return tonumber(ak.knownmaxhealth[who]) 
   else
      return 6000   
   end
end

function ak.limbs.ariaUp(name)
	if not ak.knownmaxhealth[name] then return end
	ak.knownmaxhealth[name] = ak.knownmaxhealth[name] * 1.1
end

function ak.limbs.ariaDown(name)
	display(name)
	if not ak.knownmaxhealth[name] then return end
	ak.knownmaxhealth[name] = ak.knownmaxhealth[name] / 1.1	
end

function ak.limbs.standardizeLimb(limb)
   local limbsc = {
   ["right leg"] = "rightleg",
   ["right arm"] = "rightarm",
   ["left arm"] = "leftarm",
   ["left leg"] = "leftleg",
   }
   if limbsc[limb] then
      return limbsc[limb]
   else
      return limb
   end
end

function ak.limbs.ExpoundLimb(limb)
   local limbs = {
   ["rightleg"] = "right leg",
   ["rightarm"] = "right arm",
   ["leftarm"] = "left arm",
   ["leftleg"] = "left leg",
   }
   if limbs[limb] then
      return limbs[limb]
   else
      return limb
   end
end

function ak.limbs.limb_table_check(who)
   ak.limbs.limbcount = ak.limbs.limbcount or {}
   who = who or "Me"
   if not ak.limbs.limbcount[who] then
      ak.limbs.limb_table_form(who)
   end
end

function ak.limbs.limb_table_form(who)
 ak.limbs.limbcount[who] = ak.limbs.limbcount[who] or {}
 ak.limbs.limbcount[who].lasthitdamage = ak.limbs.limbcount[who].lasthitdamage or {} 
 ak.limbs.limbcount[who].lasthitlimb = ak.limbs.limbcount[who].lasthitlimb or "rightleg"   
 ak.limbs.limbcount[who].breakpoint = ak.limbs.limbcount[who].breakpoint or 0
 ak.limbs.limbcount[who].rightarm = ak.limbs.limbcount[who].rightarm or 0 
 ak.limbs.limbcount[who].rightleg = ak.limbs.limbcount[who].rightleg or 0 
 ak.limbs.limbcount[who].leftarm = ak.limbs.limbcount[who].leftarm or 0 
 ak.limbs.limbcount[who].leftleg = ak.limbs.limbcount[who].leftleg or 0 
 ak.limbs.limbcount[who].torso = ak.limbs.limbcount[who].torso or 0 
 ak.limbs.limbcount[who].head = ak.limbs.limbcount[who].head or 0
 ak.limbs.limbcount[who].lastpercentrightarm = ak.limbs.limbcount[who].lastpercentrightarm or 0 
 ak.limbs.limbcount[who].lastpercentrightleg = ak.limbs.limbcount[who].lastpercentrightleg or 0 
 ak.limbs.limbcount[who].lastpercentleftarm = ak.limbs.limbcount[who].lastpercentleftarm or 0 
 ak.limbs.limbcount[who].lastpercentleftleg = ak.limbs.limbcount[who].lastpercentleftleg or 0 
 ak.limbs.limbcount[who].lastpercenttorso = ak.limbs.limbcount[who].lastpercenttorso or 0 
 ak.limbs.limbcount[who].lastpercenthead = ak.limbs.limbcount[who].lastpercenthead or 0
 ak.limbs.limbcount[who].maxbreaks = {}

 ak.limbs.limbcount[who].maxbreaks.rightarm = 0 
 ak.limbs.limbcount[who].maxbreaks.rightleg = 0 
 ak.limbs.limbcount[who].maxbreaks.leftarm = 0 
 ak.limbs.limbcount[who].maxbreaks.leftleg = 0 
 ak.limbs.limbcount[who].maxbreaks.torso = 0 
 ak.limbs.limbcount[who].maxbreaks.head = 0
end


function ak.limbs.limbreset(who)
 ak.limbs.limbcount[who] = ak.limbs.limbcount[who] or {}
 ak.limbs.limbcount[who].lasthitdamage = {} 
 ak.limbs.limbcount[who].lasthitlimb =  "rightleg"   
 ak.limbs.limbcount[who].breakpoint = 0
 ak.limbs.limbcount[who].rightarm = 0 
 ak.limbs.limbcount[who].rightleg = 0 
 ak.limbs.limbcount[who].leftarm = 0 
 ak.limbs.limbcount[who].leftleg = 0 
 ak.limbs.limbcount[who].torso = 0 
 ak.limbs.limbcount[who].head = 0
 ak.limbs.limbcount[who].lastpercentrightarm = 0 
 ak.limbs.limbcount[who].lastpercentrightleg = 0 
 ak.limbs.limbcount[who].lastpercentleftarm = 0 
 ak.limbs.limbcount[who].lastpercentleftleg = 0 
 ak.limbs.limbcount[who].lastpercenttorso = 0
 ak.limbs.limbcount[who].lastpercenthead = 0
 ak.limbs.limbcount[who].maxbreaks = {}
 ak.limbs.limbcount[who].maxbreaks.rightarm = 0 
 ak.limbs.limbcount[who].maxbreaks.rightleg = 0 
 ak.limbs.limbcount[who].maxbreaks.leftarm = 0 
 ak.limbs.limbcount[who].maxbreaks.leftleg = 0 
 ak.limbs.limbcount[who].maxbreaks.torso = 0 
 ak.limbs.limbcount[who].maxbreaks.head = 0
end

ak.limbs.BreakerOrder = {"rightleg","leftleg","head","torso","rightarm","leftarm"}
function ak.limbs.breakOrder(limb)
	table.remove(ak.limbs.BreakerOrder,table.index_of(ak.limbs.BreakerOrder,limb))
	table.insert(ak.limbs.BreakerOrder,limb)
end

function ak.limbs.FindLastBrokenLeg()
	local tick = false
	for i = 1, #ak.limbs.BreakerOrder do
		if ak.limbs.BreakerOrder[i] == "rightleg" or ak.limbs.BreakerOrder[i] == "leftleg" then
			if not tick then
				tick = true
			else
				return ak.limbs.BreakerOrder[i]
			end
		end
	end
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Limb Relays</name>
							<packageName></packageName>
							<script>--limb relays
function ak.limbs.damageEcho_Target(who,limb)       -----Reset Timer --ak.limbs.tekura.dontbreaksethead
  local hitsneeded = roundUp((100-ak.limbs.limbcount[who][limb])/(ak.limbs.limbcount[who][limb] - ak.limbs.limbcount[who]["lastpercent"..limb]),0)
--Limbs
  if (ak.limbs.limbcount[who][limb] &gt;= 100) and limb ~= "torso" and limb ~= "head" then
		 ak.limbs.limbcount[who].maxbreaks[limb] = ak.limbs.limbcount[who][limb]
     ak.limbs.limbcount[who][limb] = 0
     affstrack.score[limb] = 200
		 ak.limbs.lastbroke = limb
     cecho("&lt;green&gt;\n\nBroke "..who.."'s "..limb.."(A)!!")
		 ak.limbs.breakOrder(limb)
--Head
  elseif (ak.limbs.limbcount[who][limb] &gt;= 100) and not ak.limbs.tekura.dontbreaksethead then
		 ak.limbs.limbcount[who].maxbreaks[limb] = ak.limbs.limbcount[who][limb]
     ak.limbs.limbcount[who][limb] = 0
     affstrack.score[limb] = affstrack.score[limb] + 100
     if limb == "head" then affstrack.score.stupidity = 100 end
		 ak.limbs.lastbroke = limb
     cecho("&lt;green&gt;\n\nBroke "..who.."'s "..limb.."(B)!!")
		 ak.limbs.breakOrder(limb)
  elseif ak.limbs.tekura.dontbreaksethead then
     if ak.limbs.limbcount[who]["head"] &gt; 100 then
        affstrack.score["head"] = 200
        affstrack.score.stupidity = 100
     else
        ak.limbs.limbcount[who]["head"] = ak.limbs.limbcount[who]["lastpercenthead"]
        affstrack.score["head"] = affstrack.score["head"] + 100
        affstrack.score.stupidity = 100
     end
		 ak.limbs.lastbroke = limb
     cecho("&lt;green&gt;\n\nBroke "..who.."'s "..limb.."(AXK)!!")
		 ak.limbs.breakOrder(limb)
  end
  if affstrack.score.head &gt; 200 then affstrack.score.head = 200 end
  cecho("&lt;yellow&gt;\n"..who.."'s "..limb.." is at&lt;cyan&gt; "..roundUp(ak.limbs.limbcount[who][limb],0).."("..hitsneeded..")!!")
  if ak.limbs.ScoreRun then 
		ak.scoreup(target)
		--cecho("&lt;green&gt;Score!")
  end
  limbtimer = limbtimer or {}
  limbtimer[who] = limbtimer[who] or {}
  if limbtimer[who][limb] then killTimer(limbtimer[who][limb]) end
  if who == "Me" and limb == "torso" then
     limbtimer[who][limb] = tempTimer(180, [[ 
         ak.limbs.ignoretorso = false
         cecho("&lt;yellow&gt;\n\nReset ]]..who..[['s ]]..limb..[[!\n")
         ak.limbs.limbcount.]]..who..[[.]]..limb..[[ = 0
         ak.scoreup(target)
     ]])
  else
     limbtimer[who][limb] = tempTimer(180, [[ 
         cecho("&lt;yellow&gt;\n\nReset ]]..who..[['s ]]..limb..[[!\n")
         ak.limbs.limbcount.]]..who..[[.]]..limb..[[ = 0
         ak.scoreup(target)
     ]])
  end
end

function ak.limbs.damageEcho_Non_Target(who,limb) 
  donotrebreak = donotrebreak or {}
  donotrebreak[who] = donotrebreak[who] or {}
  limbtimer = limbtimer or {}
  limbtimer[who] = limbtimer[who] or {}
  local hitsneeded = roundUp((100-ak.limbs.limbcount[who][limb]) / (ak.limbs.limbcount[who][limb] - ak.limbs.limbcount[who]["lastpercent"..limb]),0)
  --local hitsneeded = roundUp(100 / (ak.limbs.limbcount[who][limb] - ak.limbs.limbcount[who]["lastpercent"..limb]),0)
--Limbs
  if ak.limbs.limbcount[who][limb] &gt;= 100 and limb ~= "torso" and limb ~= "head" then
     ak.limbs.limbcount[who][limb] = 0
     if who == "Me" or who == "You" then 
        cecho("&lt;green&gt;\n\nBroke my "..limb.."!!")			
		else
        cecho("&lt;green&gt;\n\nBroke "..who.."'s "..limb.."!!")
     end
     ak.limbs.damagedisable(who,limb)
--Head
  elseif ak.limbs.limbcount[who][limb] &gt;= 100 then
     ak.limbs.limbcount[who][limb] = 0
     if who == "Me" or who == "You" then 
        cecho("&lt;green&gt;\n\nBroke my "..limb.."!!")			
		else
        cecho("&lt;green&gt;\n\nBroke "..who.."'s "..limb.."!!")
     end
     if (who == "Me" or who == "You") and limb == "torso" and not ak.limbs.ignoretorso then
        wsys.affadd("mildtrauma")
				send("curing predict mildtrauma")
     end
     ak.limbs.damagedisable(who,limb)
  end
  if who == "Me" then
     if GUI and GUI.UpdateLimbs then GUI.UpdateLimbs() end
     cecho("&lt;yellow&gt;\nMy &lt;cyan&gt;"..limb.." is at&lt;cyan&gt; "..roundUp(ak.limbs.limbcount[who][limb],0).."("..hitsneeded..")!!")
     if ak.limbs.ScoreRun then ak.scoreup(target) end
     if limbtimer[who][limb] then 
			killTimer(limbtimer[who][limb]) 
		end
     limbtimer[who][limb] = tempTimer(180, [[ 
         cecho("&lt;yellow&gt;\n\nReset My ]]..limb..[[!\n")
         ak.limbs.limbcount.]]..who..[[.]]..limb..[[ = 0
         if GUI and GUI.UpdateLimbs then GUI.UpdateLimbs() end
         ak.scoreup(target)
     ]])
  else
     if limbtimer[who][limb] then 
			killTimer(limbtimer[who][limb]) 
		end
     limbtimer[who][limb] = tempTimer(180, [[ 
         cecho("&lt;yellow&gt;\n\nReset ]]..who..[['s ]]..limb..[[!\n")
         ak.limbs.limbcount.]]..who..[[.]]..limb..[[ = 0
         if ]]..who..[[ == target then ak.scoreup(target)end
     ]])
  end
end

function ak.limbs.damagedisable(who,limb)
   if limb == "aflame" or who == "Me" then
      return
   elseif _G[who..""..limb.."disablelimbdamage"] == nil then 
      _G[who..""..limb.."disablelimbdamage"] = tempTimer(4,[[
         _G["]]..who..[[]]..limb..[[disablelimbdamage"] = nil
         cecho("&lt;cyan&gt;\n\n\nCounting again for, &lt;yellow&gt;]]..who..[['s ]]..limb..[[!\n\n\n")
         ak.limbs.countAgain("]]..who..[[","]]..limb..[[")
         cecho("&lt;cyan&gt;\n\n\nCounting again for, &lt;yellow&gt;]]..who..[['s ]]..limb..[[!\n\n\n")
      ]])
   end
end

function ak.limbs.countAgain(who,limb) --Return From Timeout on Secondary Targets
   local remove = limb:gsub("%s+", "")
   remove = remove:lower()
end

function ak.limbs.CountAgain(limb) --Return from Apply Script
   ak.limbs.limb_table_check(target)
   if ak.limbs.limbcount[target] and ak.limbs.limbcount[target][limb] then 
      ak.limbs.limbcount[target][limb] = 0 
   end
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Limb Display</name>
							<packageName></packageName>
							<script>--limbshow
function ak.limbshow()
   cecho("aff_display","\n&lt;blue&gt;****************\n")
   cecho("aff_display","\nLimbs:                \n")
   ak.limbs = ak.limbs or {}
   ak.limbs.limbcount = ak.limbs.limbcount or {}
   if ak.limbs.limbcount[target] ~= nil then
      cecho("aff_display","\n\nH+T  :&lt;yellow&gt;"..ak.limbs.limbcount[target].head.." "..ak.limbs.limbcount[target].torso.."      \n")
      cecho("aff_display","\n\nArms: &lt;yellow&gt;"..ak.limbs.limbcount[target].leftarm.." "..ak.limbs.limbcount[target].rightarm.."      \n")
      cecho("aff_display","\n\nLegs: &lt;yellow&gt;"..ak.limbs.limbcount[target].leftleg.." "..ak.limbs.limbcount[target].rightleg.."      ")
   end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Parse Hits</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.limbs.ParseonLine()
	if isActive("Confirmed Hit Limbs", "trigger") == 0 then return end
	ak.limbs.parseBreaks()
end



function ak.limbs.parseBreaks()
   cecho("&lt;cyan&gt;.")
   ak.limbs.ScoreRun = false
   disableTrigger("Missed Single Removal Limbs")                --DO NOT CHANGE!
   disableTrigger("Parry locate")
   disableTrigger("Monk Parry")
   local augment = "none"
   if #ak.limbs.currentbreak.weapon &gt; 0 then
      for i = 1, #ak.limbs.currentbreak.weapon do
         if ak.limbs.currentbreak.augment[i] then
            augment = ak.limbs.currentbreak.augment[i] 
         else
            augment = "none"
         end
         ak.limbs.LimbHit(ak.limbs.currentbreak.who[i], ak.limbs.currentbreak.attacker[i], ak.limbs.currentbreak.weapon[i], ak.limbs.currentbreak.limb[i], augment)
      end
   end
   ak.limbs.currentbreak.weapon = {}
   ak.limbs.currentbreak.limb = {}
   ak.limbs.currentbreak.attacker = {}
   ak.limbs.currentbreak.who = {}
   ak.limbs.currentbreak.augment = {}
   cecho("&lt;cyan&gt;.")
   ak.limbs.absorbed = false
end

function ak.limbs.parseBreaksPrompt()
   cecho("&lt;cyan&gt;.")
   ak.limbs.ScoreRun = true
   disableTrigger("Missed Single Removal Limbs")                --DO NOT CHANGE!
   disableTrigger("Confirmed Hit Limbs") 
   disableTrigger("Parry locate")
   disableTrigger("Monk Parry")
   local augment = "none"
   if #ak.limbs.currentbreak.weapon &gt; 0 then
      for i = 1, #ak.limbs.currentbreak.weapon do
         if ak.limbs.currentbreak.augment[i] then
            augment = ak.limbs.currentbreak.augment[i] 
         else
            augment = "none"
         end
         ak.limbs.LimbHit(ak.limbs.currentbreak.who[i], ak.limbs.currentbreak.attacker[i], ak.limbs.currentbreak.weapon[i], ak.limbs.currentbreak.limb[i], augment)
      end
   else
      ak.scoreup(target)
   end
   ak.limbs.currentbreak.weapon = {}
   ak.limbs.currentbreak.limb = {}
   ak.limbs.currentbreak.attacker = {}
   ak.limbs.currentbreak.who = {}
   ak.limbs.currentbreak.augment = {}
   cecho("&lt;pink&gt;*")
   ak.limbs.absorbed = false
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Clamp</name>
							<packageName></packageName>
							<script>ak.clampd = ak.clampd or {}
function ak.limbs.clampOn(who)
	if ak.knownmaxhealth[who] and not table.contains(ak.clampd,who) then
		cecho("\n\n&lt;cyan&gt;MIND CLAMP ON &lt;white&gt;"..who.."\n\n")
		ak.knownmaxhealth[who] = ak.knownmaxhealth[who] * .8
		table.insert(ak.clampd,who)
	end
	ak.scoreup(who)
end

function ak.limbs.clampOFF(who)
	if ak.knownmaxhealth[who] and table.contains(ak.clampd,who) then
		cecho("\n\n&lt;cyan&gt;LOST CLAMP ON &lt;white&gt;"..who.."\n\n")
		table.remove(ak.clampd,table.index_of(ak.clampd, who))
		ak.knownmaxhealth[who] = ak.knownmaxhealth[who] * 5/4
	end
	ak.scoreup(who)
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Cure Methods</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>oeaten</name>
							<packageName></packageName>
							<script>function ak.cure.ate(what,prorun)
	ak.occie.aura.parsereduct(what)
   local affs = {}
   ak.nexteatcheck(what)
   ak.mickey = false
   ak.randomaffs = ak.randomaffs or 0
   ocured = ocured or {}
   ocured.conversion[what] = ocured.conversion[what] or "notadded"
   ocured[ocured.conversion[what]] = {}
	 ak.eatsbetweenaffs = ak.eatsbetweenaffs + 1
   local affconfirmedcount = 0
   if affstrack.score.anorexia&gt;0 and not prorun then 
      if ak.thoughtIhad then ak.thoughtIhad("anorexia") else affstrack.score.anorexia = 0 end
      ocured = ocured or {}
      ocured[ocured.conversion[what]] = {}
   end
   if what == "hawthorn berry" or what == "calamine crystal" then
      affstrack.score.deaf = 100
      tempTimer(3,[[affstrack.score.deaf = 0;ak.scoreup(target)]])
   else
      for i = 1, #affstrack.eaten[what] do
         if affstrack.score[affstrack.eaten[what][i]] &gt; 0 then
            table.insert(affs, affstrack.eaten[what][i])
            affconfirmedcount = affconfirmedcount + affstrack.score[affstrack.eaten[what][i]]
         end
      end
      if #affs == 1 and affstrack.score[affs[1]] &lt; 100 and ak.randomaffs == 0 then
         if ak.ProTrackingConfirmed then ak.ProTrackingConfirmed(affs[1]) end
         affstrack.score[affs[1]] = 0
				 ak.AfflictionCured(affs[1])
				 ak.ResetConfirmAff(affs[1])
      elseif #affs &gt; 1 and affconfirmedcount &lt;= 100 then
			   if #affs and table.contains(affs,"slickness") and affstrack.score.asthma == 100 then
				    ak.echoForPossibleCures(table.concat(affs, " ")) 
						--if ak.ProTrackingConfirmed then ak.ProTrackingConfirmed(affs[1]) end
				 else
         	  if ak.ProTrackingConfirmed then ak.ProTrackingConfirmed(affs[1]) end
				 end
         for i = 1, #affs do
            affstrack.score[affs[i]] = 0
						ak.AfflictionCured(affs[i])
         end
      elseif #affs &gt; 1 and table.contains(affs,"impatience") and ak.goldensealCount() &gt; 100 then
         ak.echoForPossibleCures(table.concat(affs, " "))
         for i = 1, #affs do            
            ocured = ocured or {}
            ocured[ocured.conversion[what]] = ocured[ocured.conversion[what]] or {}
            ocured[ocured.conversion[what]][affs[i]] = affstrack.score[affs[i]]
            if affs[i] ~= "impatience" then
               affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / (#affs-1)
            end
            if affstrack.score[affs[i]] &lt; ak.errorallowance then
                affstrack.score[affs[i]] = 0
								ak.AfflictionCured(affs[i])
            end
         end
      elseif #affs &gt; 1 and table.contains(affs,"asthma") and SmokeCount() &gt;= 100 then
         ak.echoForPossibleCures(table.concat(affs, " "))
         for i = 1, #affs do            
            ocured = ocured or {}
            ocured[ocured.conversion[what]] = ocured[ocured.conversion[what]] or {}
            ocured[ocured.conversion[what]][affs[i]] = affstrack.score[affs[i]]
            if affs[i] ~= "asthma" then
               affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / (#affs-1)
            end
            if affstrack.score[affs[i]] &lt; ak.errorallowance then
                affstrack.score[affs[i]] = 0
								ak.AfflictionCured(affs[i])
            end
         end
			
			elseif #affs &gt; 1 and table.contains(affs,"slickness") and affstrack.score.prone == 100 and ak.canstand() then
         ak.echoForPossibleCures(table.concat(affs, " "))
         for i = 1, #affs do            
            ocured = ocured or {}
            ocured[ocured.conversion[what]] = ocured[ocured.conversion[what]] or {}
            ocured[ocured.conversion[what]][affs[i]] = affstrack.score[affs[i]]
            if affs[i] ~= "paralysis" then
               affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / (#affs-1)
            end
            if affstrack.score[affs[i]] &lt; ak.errorallowance then
                affstrack.score[affs[i]] = 0
								ak.AfflictionCured(affs[i])
            end
         end
				 
		  elseif #affs == 1 and table.contains(affs,"slickness") and affstrack.score.asthma &gt; 0 and affstrack.score.asthma &lt; 100 then
         ak.echoForPossibleCures(table.concat(affs, " "))
         for i = 1, #affs do            
            ocured = ocured or {}
            ocured[ocured.conversion[what]] = ocured[ocured.conversion[what]] or {}
            ocured[ocured.conversion[what]][affs[i]] = affstrack.score[affs[i]]
            if affstrack.score[affs[i]] &lt; ak.errorallowance then
                affstrack.score[affs[i]] = 0
								ak.AfflictionCured(affs[i])
            end
						ak.ProTrackingConfirmed("asthma")
						ak.ResetConfirmAff(affs[i])
         end
		 elseif #affs == 1 then
         ak.echoForPossibleCures(table.concat(affs, " "))
         ocured = ocured or {}
         ocured[ocured.conversion[what]] = ocured[ocured.conversion[what]] or {}
         ocured[ocured.conversion[what]][affs[1]] = affstrack.score[affs[1]]
         affstrack.score[affs[1]] = affstrack.score[affs[1]] - affstrack.score[affs[1]] / #affs
         if affstrack.score[affs[1]] &lt; ak.errorallowance then
             affstrack.score[affs[1]] = 0
					ak.AfflictionCured(affs[1])
         end
			   ak.ResetConfirmAff(affs[1])
      elseif #affs &gt; 0 then
         ak.echoForPossibleCures(table.concat(affs, " "))
         for i = 1, #affs do
            ocured = ocured or {}
            ocured[ocured.conversion[what]] = ocured[ocured.conversion[what]] or {}
            ocured[ocured.conversion[what]][affs[i]] = affstrack.score[affs[i]]
            affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / #affs
            if affstrack.score[affs[i]] &lt; ak.errorallowance then
                affstrack.score[affs[i]] = 0
								ak.AfflictionCured(affs[i])
            end
         end
      elseif ak.randomaffs &gt; 0 then
         ak.randomaffs = ak.randomaffs - 1
      else
         if ak.WhyYouDoThat then ak.WhyYouDoThat(what) end
      end
   end
   ak.scoreup(target)
end

function ak.goldensealCount()
	local count = 0
	for i = 1, #affstrack.eaten["goldenseal root"] do
     if affstrack.score[affstrack.eaten["goldenseal root"][i]] &gt; 0 then
        count = count + affstrack.score[affstrack.eaten["goldenseal root"][i]]
     end
  end
	return count
end

function FocusCount()
  local count = 0
  for i = 1, #affstrack.focused do
      if affstrack.score[affstrack.focused[i]] &gt; 0 then
         count = count + affstrack.score[affstrack.focused[i]]
      end
   end
   return count
end

function SmokeCount()
   local count = 0
   if affstrack.score.aeon &gt; 0 then return 0 end
   for i = 1, #affstrack.smoked do
      if affstrack.score[affstrack.smoked[i]] &gt; 0 then
         count = count + affstrack.score[affstrack.smoked[i]]
      end
   end
   return count
end

if not ak.nexteatcheck then
   function ak.nexteatcheck(what)
		ak.lasteat = what
   end
end

function ak.canstand()
	if affstrack.score.rightleg == 0 and affstrack.score.leftleg == 0 then
		return true
	else
		return false
	end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>ofocus</name>
							<packageName></packageName>
							<script>function ak.cure.focus(whom)
	ak.occie.aura.parsereduct("focus")
   local affs = {}
   ocured = ocured or {}
   ocured.focused = {}
   ak.randomaffs = ak.randomaffs or 0
   affstrack.score.rixil = 0
   if affstrack.score.impatience&gt;0 then 
      if ak.thoughtIhad then ak.thoughtIhad("impatience") else affstrack.score.impatience = 0 end
      ocured = ocured or {}
      ocured.focused = {}  
   end
   for i = 1, #affstrack.focused  do
      if affstrack.score[affstrack.focused[i]] &gt; 0 then
         table.insert(affs, affstrack.focused[i])
      end
   end
   if #affs == 1 and affstrack.score[affs[1]] &lt; 100 and ak.randomaffs == 0 then
      if ak.ProTrackingConfirmed then ak.ProTrackingConfirmed(affs[1]) end
      affstrack.score[affs[1]] = 0
			ak.AfflictionCured(affs[1])
			ak.ResetConfirmAff(affs[1])
	 elseif #affs == 1 then
      ak.echoForPossibleCures(table.concat(affs, " "))
      ocured.focused[affs[1]] = affstrack.score[affs[1]]
      affstrack.score[affs[1]] = 0
			ak.AfflictionCured(affs[1])
			ak.ResetConfirmAff(affs[1])
   elseif #affs &gt; 0 then
      ak.echoForPossibleCures(table.concat(affs, " "))
      for i = 1, #affs do
         ocured.focused[affs[i]] = affstrack.score[affs[i]]
         affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / #affs
         if affstrack.score[affs[i]] &lt; ak.errorallowance then
            affstrack.score[affs[i]] = 0
						ak.AfflictionCured(affs[i])
         end
      end
   elseif ak.randomaffs &gt; 0 then
      ak.randomaffs = ak.randomaffs - 1
   else
      if ak.WhyYouDoThat then ak.WhyYouDoThat("focused") end
   end
   ak.scoreup(target)
end



</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>otree</name>
							<packageName></packageName>
							<script>function ak.cure.tree()
	 ak.occie.aura.parsereduct("treed")
   affs = {}
   ocured = ocured or {}
   ocured.treed = {}
   ak.randomaffs = ak.randomaffs or 0
   affoverone = {}
   affovertwo = {}
   affoverthree = {}
   affoverfour = {}
   affoverfive = {}
   affoversix = {}
   applycure = applycure or {}
   if ak.treeableSalve() and applycure.lastapplied and applycure.lastapplied ~= "head" and applycure.lastapplied ~= "torso" and applycure.aknextsalve ~= "mending" then
      --AKcalculateSalve()
   end
   affs = {}
   ocured = ocured or {}
   ocured.treed = {}
   ak.randomaffs = ak.randomaffs or 0
   affoverone = {}
   affovertwo = {}
   affoverthree = {}
   affoverfour = {}
   affoverfive = {}
   affoversix = {}
   if affstrack.score.paralysis &gt; 0 then
      if ak.thoughtIhad then ak.thoughtIhad("paralysis") else affstrack.score.paralysis = 0 end
      ocured.bloodroot = {}
      ocured = ocured or {}
      ocured.treed = {}
   elseif affstrack.score.slickness &gt; 0 then
     ocured.bloodroot = {}
   end
   for i = 1, #affstrack.treed do
      if affstrack.score[affstrack.treed[i]] &gt; 0 and affstrack.score[affstrack.treed[i]] &lt; 200 and affstrack.treed[i] ~= "aflame" and affstrack.treed[i] ~= "frozen" then
         table.insert(affs, affstrack.treed[i]) 
         ocured.treed[affstrack.treed[i]] = affstrack.score[affstrack.treed[i]]     
         if affstrack.score[affstrack.treed[i]] &gt; 100 then-- and affstrack.score[affstrack.treed[i]] ~= 200 then
            table.insert(affoverone, affstrack.treed[i]) 
            affstrack.score[affstrack.treed[i]] = affstrack.score[affstrack.treed[i]] - 100
         end
      elseif affstrack.score.hypothermia == 100 and affstrack.treed[i] == "frozen" then

      elseif affstrack.score[affstrack.treed[i]] &gt; 0 and (affstrack.treed[i] == "aflame" or affstrack.treed[i] == "frozen") then
         table.insert(affs, affstrack.treed[i]) 
         ocured.treed[affstrack.treed[i]] = affstrack.score[affstrack.treed[i]]
         if affstrack.score[affstrack.treed[i]] &gt; 100 then
            table.insert(affoverone, affstrack.treed[i]) 
            affstrack.score[affstrack.treed[i]] = affstrack.score[affstrack.treed[i]] - 100
            if affstrack.score[affstrack.treed[i]] &gt; 100 then
               table.insert(affovertwo, affstrack.treed[i]) 
               affstrack.score[affstrack.treed[i]] = affstrack.score[affstrack.treed[i]] - 100
               if affstrack.score[affstrack.treed[i]] &gt; 100 then
                  table.insert(affoverthree, affstrack.treed[i]) 
                  affstrack.score[affstrack.treed[i]] = affstrack.score[affstrack.treed[i]] - 100
                  if affstrack.score[affstrack.treed[i]] &gt; 100 then
                     table.insert(affoverfour, affstrack.treed[i]) 
                     affstrack.score[affstrack.treed[i]] = affstrack.score[affstrack.treed[i]] - 100
                     if affstrack.score[affstrack.treed[i]] &gt; 100 then
                        table.insert(affoverfive, affstrack.treed[i]) 
                        affstrack.score[affstrack.treed[i]] = affstrack.score[affstrack.treed[i]] - 100
                        if affstrack.score[affstrack.treed[i]] &gt; 100 then
                           table.insert(affoversix, affstrack.treed[i]) 
                           affstrack.score[affstrack.treed[i]] = affstrack.score[affstrack.treed[i]] - 100
                        end
                     end
                  end
               end
            end
         end
      end   
   end
   if #affs == 1 and affstrack.score[affs[1]] &lt; 100 and ak.randomaffs == 0 then
      if ak.ProTrackingConfirmed then ak.ProTrackingConfirmed(affs[1]) end
      affstrack.score[affs[1]] = 0
			ak.AfflictionCured(affs[1])
			ak.ResetConfirmAff(affs[1])
   elseif #affs &gt; 1 and table.contains(affs,"impatience") and FocusCount() &gt;= 100 then
      ak.echoForPossibleCures(table.concat(affs, " "))
      for i = 1, #affs do
         if affs[i] ~= "impatience" then
            affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / (#affs -1)
            if affstrack.score[affs[i]] &lt; ak.errorallowance then
               affstrack.score[affs[i]] = 0
							 ak.AfflictionCured(affs[i])
            end     
            if table.contains(affoverone, affs[i]) then
               affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
               if table.contains(affovertwo, affs[i]) then
                  affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                  if table.contains(affoverthree, affs[i]) then
                     affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                     if table.contains(affoverfour, affs[i]) then
                        affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                        if table.contains(affoverfive, affs[i]) then
                           affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                           if table.contains(affoversix, affs[i]) then
                              affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                           end
                        end
                     end
                  end
               end 
            end           
         end
      end  
      if affstrack.score.aflame == 0 and affstrack.score.conflagrate == 100 then affstrack.score.conflagrate = 0;akadsty = 1 end
   elseif #affs &gt; 1 and table.contains(affs,"asthma") and SmokeCount() &gt;= 100 then
      ak.echoForPossibleCures(table.concat(affs, " "))
      for i = 1, #affs do
         if affs[i] ~= "asthma" then
            affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / (#affs -1)
            if affstrack.score[affs[i]] &lt; ak.errorallowance then
               affstrack.score[affs[i]] = 0
							 ak.AfflictionCured(affs[i])
            end     
            if table.contains(affoverone, affs[i]) then
               affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
               if table.contains(affovertwo, affs[i]) then
                  affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                  if table.contains(affoverthree, affs[i]) then
                     affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                     if table.contains(affoverfour, affs[i]) then
                        affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                        if table.contains(affoverfive, affs[i]) then
                           affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                           if table.contains(affoversix, affs[i]) then
                              affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                           end
                        end
                     end
                  end
               end 
            end           
         end
      end  
      if affstrack.score.aflame == 0 and affstrack.score.conflagrate == 100 then affstrack.score.conflagrate = 0;akadsty = 1 end
   elseif #affs &gt; 0 then
      ak.echoForPossibleCures(table.concat(affs, " "))
      for i = 1, #affs do
         --ocured.treed[affs[i]] = affstrack.score[affs[i]]                                       --move me
         affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / #affs 
         if affstrack.score[affs[i]] &lt; ak.errorallowance then
            affstrack.score[affs[i]] = 0
						ak.AfflictionCured(affs[i])
         end     
         if table.contains(affoverone, affs[i]) then
            affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
            if table.contains(affovertwo, affs[i]) then
               affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
               if table.contains(affoverthree, affs[i]) then
                  affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                  if table.contains(affoverfour, affs[i]) then
                     affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                     if table.contains(affoverfive, affs[i]) then
                        affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                        if table.contains(affoversix, affs[i]) then
                           affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                        end
                     end
                  end
               end
            end 
         end           
      end  
      if affstrack.score.aflame == 0 and affstrack.score.conflagrate == 100 then affstrack.score.conflagrate = 0;akadsty = 1 end
   elseif ak.randomaffs &gt; 0 then
      AKcalculateSalve()
      ak.randomaffs = ak.randomaffs - 1
   else
      if ak.WhyYouDoThat then ak.WhyYouDoThat("treed") end
   end
   ak.scoreup(target)
end

local LimbsToCheck = {"rightleg","leftleg","rightarm","leftarm"}

function ak.treeableSalve()
	if affstrack.score.aflame &gt; 0 then
		return true
	end
	for i = 1, #LimbsToCheck do
		if affstrack.score[LimbsToCheck[i]] &gt; 0 and affstrack.score[LimbsToCheck[i]] &lt;= 100 then
			return true
		elseif affstrack.score[LimbsToCheck[i]] &gt; 100 and affstrack.score[LimbsToCheck[i]] &lt;= 200 and applycure.lastapplied ~= "torso" and applycure.lastapplied ~= "head" and applycure.aknextsalve ~= "mending" then
			return true
		end
	end

	return false

end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>osmoke</name>
							<packageName></packageName>
							<script>ak.smoke = ak.smoke or {}

function affssmoke()
	ak.smoke.mass = {}
	ak.occie.aura.parsereduct("smoke")
   local affs = {}
   ocured = ocured or {}
   ak.randomaffs = ak.randomaffs or 0
   ocured.smoked = {}
   if affstrack.score.asthma&gt;0 then 
      if ak.thoughtIhad then ak.thoughtIhad("asthma") else affstrack.score.asthma = 0 end
      ocured = ocured or {}
      ocured.smoked = {}
   end
   for i = 1, #affstrack.smoked do
      if affstrack.score[affstrack.smoked[i]] &gt; 0 then
         table.insert(affs, affstrack.smoked[i])
      end
   end
   if #affs == 1 then
	 		if affstrack.score[affs[1]] &lt; 100 and ak.randomaffs == 0 then
      	if ak.ProTrackingConfirmed then ak.ProTrackingConfirmed(affs[1]) end
      end
			ak.smoke.RetainMass(affs[1], affstrack.score[affs[1]])
			affstrack.score[affs[1]] = 0	
			ak.smoke.RestoreMass(affs[1])
			if affstrack.score[affs[1]] == 0 then
				 ak.AfflictionCured(affs[1])
				 ak.ResetConfirmAff(affs[1])
			end
   elseif #affs &gt; 0 then
      ak.echoForPossibleCures(table.concat(affs, " "))
      for i = 1, #affs do
         ocured.smoked[affs[i]] = affstrack.score[affs[i]]
				 ak.smoke.RetainMass(affs[1], affstrack.score[affs[1]])
         affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / #affs
         if affstrack.score[affs[i]] &lt; ak.errorallowance then
            affstrack.score[affs[i]] = 0
         end
				 ak.smoke.RestoreMass(affs[i])
				 if affstrack.score[affs[i]] == 0 then
				 	  ak.AfflictionCured(affs[i])
				 end
      end
   elseif ak.randomaffs &gt; 0 then
      ak.randomaffs = ak.randomaffs - 1
   else
       reboundingaccountak = true
       if reboundingaktime then killTimer(reboundingaktime) end
       reboundingaktime = tempTimer(11,[[reboundingaccountak = false]])
   end
   ak.scoreup(target)
end

function ak.smoke.RetainMass(aff, count)
	ak.smoke.mass[aff] = roundDown(count-1,-2)
end

function ak.smoke.RestoreMass(aff)
	local returner = ak.smoke.mass[aff] or 0
	affstrack.score[aff] = affstrack.score[aff] + returner
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>opassive</name>
							<packageName></packageName>
							<script>function ak.cure.passive()
	ak.occie.aura.parsereduct("passive")
   if affstrack.score.voyria == 100 then
      affstrack.score.voyria = 0 
      return
   end
   affs = {}
   ak.randomaffs = ak.randomaffs or 0
   affoverone = {}
   affovertwo = {}
   affoverthree = {}
   affoverfour = {}
   affoverfive = {}
   affoversix = {}
   ocured = ocured or {}
   ocured.cureall = {}
   for i = 1, #affstrack.cureall do
      if affstrack.score[affstrack.cureall[i]] &gt; 0  then
         table.insert(affs, affstrack.cureall[i])
         ocured.cureall[affstrack.cureall[i]] = affstrack.score[affstrack.cureall[i]]
         if affstrack.score[affstrack.cureall[i]] &gt; 100 and affstrack.cureall[i] == "aflame" then
            table.insert(affoverone, affstrack.cureall[i]) 
            affstrack.score[affstrack.cureall[i]] = affstrack.score[affstrack.cureall[i]] - 100
            if affstrack.score[affstrack.cureall[i]] &gt; 100 then
               table.insert(affovertwo, affstrack.cureall[i]) 
               affstrack.score[affstrack.cureall[i]] = affstrack.score[affstrack.cureall[i]] - 100
               if affstrack.score[affstrack.cureall[i]] &gt; 100 then
                  table.insert(affoverthree, affstrack.cureall[i]) 
                  affstrack.score[affstrack.cureall[i]] = affstrack.score[affstrack.cureall[i]] - 100
                  if affstrack.score[affstrack.cureall[i]] &gt; 100 then
                     table.insert(affoverfour, affstrack.cureall[i]) 
                     affstrack.score[affstrack.cureall[i]] = affstrack.score[affstrack.cureall[i]] - 100
                     if affstrack.score[affstrack.cureall[i]] &gt; 100 then
                        table.insert(affoverfive, affstrack.cureall[i]) 
                        affstrack.score[affstrack.cureall[i]] = affstrack.score[affstrack.cureall[i]] - 100
                        if affstrack.score[affstrack.cureall[i]] &gt; 100 then
                           table.insert(affoversix, affstrack.cureall[i]) 
                           affstrack.score[affstrack.cureall[i]] = affstrack.score[affstrack.cureall[i]] - 100
                        end
                     end
                  end
               end
            end
         end
      end
   end
   if #affs == 1 and affstrack.score[affs[1]] &lt; 100 and ak.randomaffs == 0 then
      if ak.ProTrackingConfirmed then ak.ProTrackingConfirmed(affs[1]) end
      affstrack.score[affs[1]] = 0
			ak.AfflictionCured(affs[1])
			ak.ResetConfirmAff(affs[1])
   elseif #affs &gt; 1 and table.contains(affs,"impatience") and FocusCount() &gt;= 100 then
      ak.echoForPossibleCures(table.concat(affs, " "))
      for i = 1, #affs do
         ocured.cureall[affs[i]] = affstrack.score[affs[i]]
         if affs[i] ~= "impatience" then
            affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / (#affs-1)
            if affstrack.score[affs[i]] &lt; ak.errorallowance then
               affstrack.score[affs[i]] = 0
							 ak.AfflictionCured(affs[i])
            end
            if table.contains(affoverone, affs[i]) then
               affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
               if table.contains(affovertwo, affs[i]) then
                  affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                  if table.contains(affoverthree, affs[i]) then
                     affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                     if table.contains(affoverfour, affs[i]) then
                        affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                        if table.contains(affoverfive, affs[i]) then
                           affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                           if table.contains(affoversix, affs[i]) then
                              affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                           end
                        end
                     end
                  end
               end
            end 
         end        
      end
   elseif #affs &gt; 1 and table.contains(affs,"asthma") and SmokeCount() &gt;= 100 then
      ak.echoForPossibleCures(table.concat(affs, " "))
      for i = 1, #affs do
         ocured.cureall[affs[i]] = affstrack.score[affs[i]]
         if affs[i] ~= "asthma" then
            affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / (#affs-1)
            if affstrack.score[affs[i]] &lt; ak.errorallowance then
               affstrack.score[affs[i]] = 0
							 ak.AfflictionCured(affs[i])
            end
            if table.contains(affoverone, affs[i]) then
               affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
               if table.contains(affovertwo, affs[i]) then
                  affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                  if table.contains(affoverthree, affs[i]) then
                     affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                     if table.contains(affoverfour, affs[i]) then
                        affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                        if table.contains(affoverfive, affs[i]) then
                           affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                           if table.contains(affoversix, affs[i]) then
                              affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                           end
                        end
                     end
                  end
               end
            end 
         end        
      end
   elseif #affs &gt; 0 then
      ak.echoForPossibleCures(table.concat(affs, " "))
      for i = 1, #affs do
         ocured.cureall[affs[i]] = affstrack.score[affs[i]]
         affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / #affs
         if affstrack.score[affs[i]] &lt; ak.errorallowance then
            affstrack.score[affs[i]] = 0
						ak.AfflictionCured(affs[i])
         end
         if table.contains(affoverone, affs[i]) then
            affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
            if table.contains(affovertwo, affs[i]) then
               affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
               if table.contains(affoverthree, affs[i]) then
                  affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                  if table.contains(affoverfour, affs[i]) then
                     affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                     if table.contains(affoverfive, affs[i]) then
                        affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                        if table.contains(affoversix, affs[i]) then
                           affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                        end
                     end
                  end
               end
            end 
         end        
      end
      if affstrack.score.aflame == 0 and affstrack.score.conflagrate == 100 then affstrack.score.conflagrate = 0;akadsty = 1 end
   elseif ak.randomaffs &gt; 0 then
      ak.randomaffs = ak.randomaffs - 1
   else
      if ak.WhyYouDoThat then ak.WhyYouDoThat("cureall") end
   end
   ak.scoreup(target)
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>oactive</name>
							<packageName></packageName>
							<script>function ak.cure.active()
	ak.occie.aura.parsereduct("passive")
   if affstrack.score.voyria == 100 then
      affstrack.score.voyria = 0 
      return
   end
   affs = {}
   ak.randomaffs = ak.randomaffs or 0
   affoverone = {}
   affovertwo = {}
   affoverthree = {}
   affoverfour = {}
   affoverfive = {}
   affoversix = {}
   ocured = ocured or {}
   ocured.cureall = {}
   for i = 1, #affstrack.cureall do
      if affstrack.score[affstrack.cureall[i]] &gt; 0  then
         table.insert(affs, affstrack.cureall[i])
         ocured.cureall[affstrack.cureall[i]] = affstrack.score[affstrack.cureall[i]]
         if affstrack.score[affstrack.cureall[i]] &gt; 100 and affstrack.cureall[i] == "aflame" then
            table.insert(affoverone, affstrack.cureall[i]) 
            affstrack.score[affstrack.cureall[i]] = affstrack.score[affstrack.cureall[i]] - 100
            if affstrack.score[affstrack.cureall[i]] &gt; 100 then
               table.insert(affovertwo, affstrack.cureall[i]) 
               affstrack.score[affstrack.cureall[i]] = affstrack.score[affstrack.cureall[i]] - 100
               if affstrack.score[affstrack.cureall[i]] &gt; 100 then
                  table.insert(affoverthree, affstrack.cureall[i]) 
                  affstrack.score[affstrack.cureall[i]] = affstrack.score[affstrack.cureall[i]] - 100
                  if affstrack.score[affstrack.cureall[i]] &gt; 100 then
                     table.insert(affoverfour, affstrack.cureall[i]) 
                     affstrack.score[affstrack.cureall[i]] = affstrack.score[affstrack.cureall[i]] - 100
                     if affstrack.score[affstrack.cureall[i]] &gt; 100 then
                        table.insert(affoverfive, affstrack.cureall[i]) 
                        affstrack.score[affstrack.cureall[i]] = affstrack.score[affstrack.cureall[i]] - 100
                        if affstrack.score[affstrack.cureall[i]] &gt; 100 then
                           table.insert(affoversix, affstrack.cureall[i]) 
                           affstrack.score[affstrack.cureall[i]] = affstrack.score[affstrack.cureall[i]] - 100
                        end
                     end
                  end
               end
            end
         end
      end
   end
   if #affs == 1 and affstrack.score[affs[1]] &lt; 100 and ak.randomaffs == 0 then
      if ak.ProTrackingConfirmed then ak.ProTrackingConfirmed(affs[1]) end
      affstrack.score[affs[1]] = 0
			ak.AfflictionCured(affs[1])
			ak.ResetConfirmAff(affs[1])
   elseif #affs &gt; 1 and table.contains(affs,"impatience") and FocusCount() &gt;= 100 then
      ak.echoForPossibleCures(table.concat(affs, " "))
      for i = 1, #affs do
         ocured.cureall[affs[i]] = affstrack.score[affs[i]]
         if affs[i] ~= "impatience" then
            affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / (#affs-1)
            if affstrack.score[affs[i]] &lt; ak.errorallowance then
               affstrack.score[affs[i]] = 0
							 ak.AfflictionCured(affs[i])
            end
            if table.contains(affoverone, affs[i]) then
               affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
               if table.contains(affovertwo, affs[i]) then
                  affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                  if table.contains(affoverthree, affs[i]) then
                     affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                     if table.contains(affoverfour, affs[i]) then
                        affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                        if table.contains(affoverfive, affs[i]) then
                           affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                           if table.contains(affoversix, affs[i]) then
                              affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                           end
                        end
                     end
                  end
               end
            end 
         end        
      end
   elseif #affs &gt; 1 and table.contains(affs,"asthma") and SmokeCount() &gt;= 100 then
      ak.echoForPossibleCures(table.concat(affs, " "))
      for i = 1, #affs do
         ocured.cureall[affs[i]] = affstrack.score[affs[i]]
         if affs[i] ~= "asthma" then
            affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / (#affs-1)
            if affstrack.score[affs[i]] &lt; ak.errorallowance then
               affstrack.score[affs[i]] = 0
							 ak.AfflictionCured(affs[i])
            end
            if table.contains(affoverone, affs[i]) then
               affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
               if table.contains(affovertwo, affs[i]) then
                  affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                  if table.contains(affoverthree, affs[i]) then
                     affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                     if table.contains(affoverfour, affs[i]) then
                        affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                        if table.contains(affoverfive, affs[i]) then
                           affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                           if table.contains(affoversix, affs[i]) then
                              affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                           end
                        end
                     end
                  end
               end
            end 
         end        
      end
   elseif #affs &gt; 0 then
      ak.echoForPossibleCures(table.concat(affs, " "))
      for i = 1, #affs do
         ocured.cureall[affs[i]] = affstrack.score[affs[i]]
         affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / #affs
         if affstrack.score[affs[i]] &lt; ak.errorallowance then
            affstrack.score[affs[i]] = 0
						ak.AfflictionCured(affs[i])
         end
         if table.contains(affoverone, affs[i]) then
            affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
            if table.contains(affovertwo, affs[i]) then
               affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
               if table.contains(affoverthree, affs[i]) then
                  affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                  if table.contains(affoverfour, affs[i]) then
                     affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                     if table.contains(affoverfive, affs[i]) then
                        affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                        if table.contains(affoversix, affs[i]) then
                           affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                        end
                     end
                  end
               end
            end 
         end        
      end
      if affstrack.score.aflame == 0 and affstrack.score.conflagrate == 100 then affstrack.score.conflagrate = 0;akadsty = 1 end
   elseif ak.randomaffs &gt; 0 then
      ak.randomaffs = ak.randomaffs - 1
   else
      if ak.WhyYouDoThat then ak.WhyYouDoThat("cureall") end
   end
   ak.scoreup(target)
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>oapply</name>
							<packageName></packageName>
							<script>function ak.cure.apply(what) 
	 if ak.timers.salvebackup then killTimer(ak.timers.salvebackup) end
   if aksalvechange then killTimer(aksalvechange) end
   if akrestoration then killTimer(akrestoration) end
   applycure = applycure or {} 
   if applycure.lastapplied then
      AKcalculateSalve()
   end
	 if what ~= "none" then
	 		ak.enemyprio.applied(what)
      ak.cure.lastapplied = what
      ak.randomaffs = ak.randomaffs or 0
      applycure = {}
      applycure.aknextsalve = false
      applycure.lastapplied = what
      applycure.affoverone = {}
      applycure.affovertwo = {}
      applycure.affoverthree = {}
      applycure.affoverfour = {}
      applycure.affoverfive = {}
      applycure.affoversix = {}
      applycure.donotrecount = {}
      applycure.possiblemendings = {}
      applycure.mendingscore = 0
      applycure.possiblerestorations = {}
      applycure.restorationscore = 0
      applycure.totalscore = 0
      applycure.both = {}
      applycure.otableadd = "applied"..what
      for i = 1, #affstrack.applied[what] do
         --display( affstrack.applied[what][i])--probable cures  
         --display(affstrack.score[affstrack.applied[what][i]])     
         if affstrack.score[affstrack.applied[what][i]] &gt; 0 and affstrack.applied[what][i] ~= "frozen" and affstrack.applied[what][i] ~= "aflame" and (affstrack.score[affstrack.applied[what][i]] &gt; 100 or affstrack.applied[what][i] == "head" or affstrack.applied[what][i] == "torso" or affstrack.applied[what][i] == "hypothermia") then
            table.insert(applycure.possiblerestorations, affstrack.applied[what][i])
            table.insert(applycure.both, affstrack.applied[what][i])
            table.insert(applycure.donotrecount, affstrack.applied[what][i]) 
						if affstrack.score[affstrack.applied[what][i]] &lt; 200 then
							table.insert(applycure.possiblemendings, affstrack.applied[what][i]) 
							applycure.mendingscore = affstrack.score[affstrack.applied[what][i]] + applycure.mendingscore 
						end
            applycure.restorationscore = affstrack.score[affstrack.applied[what][i]] + applycure.restorationscore
            applycure.totalscore  =  affstrack.score[affstrack.applied[what][i]] + applycure.totalscore
            AKBackupSalveNumber(affstrack.applied[what][i])
         elseif affstrack.score[affstrack.applied[what][i]] &gt; 100 and (affstrack.applied[what][i] == "frozen" or affstrack.applied[what][i] == "aflame") then
            table.insert(applycure.possiblemendings, affstrack.applied[what][i]) 
            table.insert(applycure.both, affstrack.applied[what][i])
            table.insert(applycure.donotrecount, affstrack.applied[what][i]) 
            applycure.mendingscore = affstrack.score[affstrack.applied[what][i]] + applycure.mendingscore  
            applycure.totalscore  =  affstrack.score[affstrack.applied[what][i]] + applycure.totalscore 
            AKBackupSalveNumber(affstrack.applied[what][i])
         elseif affstrack.score[affstrack.applied[what][i]] &gt; 0 then
            table.insert(applycure.possiblemendings, affstrack.applied[what][i]) 
            table.insert(applycure.both, affstrack.applied[what][i])
            table.insert(applycure.donotrecount, affstrack.applied[what][i]) 
            applycure.mendingscore = affstrack.score[affstrack.applied[what][i]] + applycure.mendingscore  
            applycure.totalscore  =  affstrack.score[affstrack.applied[what][i]] + applycure.totalscore     
         end
      end
      for k,v in pairs(affstrack.applied) do
         for i=1, #affstrack.applied[k] do
            if not table.contains(applycure.donotrecount, affstrack.applied[k][i]) and affstrack.score[affstrack.applied[k][i]] &gt; 0 then
							 applycure.totalscore  =  affstrack.score[affstrack.applied[k][i]] + applycure.totalscore 
            end
         end
      end
      applycure.totalscore = applycure.totalscore / 100
      applycure.mendingscore = applycure.mendingscore / 100
      applycure.restorationscore = applycure.restorationscore / 100
      if applycure.totalscore &lt;= 1 and applycure.totalscore &gt; 0 then --only one confirmed apply coming
         if #applycure.possiblemendings == 0 then
            applycure.aknextsalve = "restoration"
            if akrestoration then killTimer(akrestoration) end
            akrestoration = tempTimer(3.5,[[ak.cure.apply("none");affstrack.score.tempslickness = 0;ak.scoreup(target)]])
            affstrack.score.tempslickness = 100      
         elseif #applycure.possiblerestorations == 0 then
            applycure.aknextsalve = "mending"
            ak.cure.apply("none")
         else
            applycure.aknextsalve = "both"
            ak.cure.apply("none")
         end
      elseif applycure.totalscore &gt; 0 then                          --MORE CURES COMING!
				 if ak.timers.salvebackup then killTimer(ak.timers.salvebackup) end
         ak.timers.salvebackup = tempTimer(5,[[ak.cure.salveBackup()]])
         if applycure.restorationscore &gt; 0 and applycure.mendingscore &gt; 0 then
            applycure.aknextsalve = "mending"
						if affstrack.score.crushedthroat == 100 and what == "head" then
							ak.cure.apply("none")
							return
						end
            if aksalvechange then killTimer(aksalvechange) end
            aksalvechange = tempTimer(2.5,[[
               if affstrack.score.slickness == 0 then
                  applycure.aknextsalve = "restoration"
               end
            ]])
         elseif applycure.restorationscore &gt; 0 and applycure.mendingscore == 0 then	 
            applycure.aknextsalve = "restoration"
            affstrack.score.tempslickness = 100  
            if aksalvechange then killTimer(aksalvechange) end
         elseif applycure.restorationscore == 0 and applycure.mendingscore &gt; 0 then
            applycure.aknextsalve = "mending"
            ak.cure.apply("none")
         end
		  elseif applycure.lastapplied == "body" and applycure.totalscore == 0 and affstrack.score.impatience == 100 then
				 if ak.thoughtIhad then ak.thoughtIhad("impatience") else affstrack.score.impatience = 0 end
				 affstrack.score.anorexia = 0 
      elseif applycure.lastapplied ~= "skin" then
         if ak.NoPreApply then

         elseif (gmcp.Char.Status.class ~= "Magi" or gmcp.Char.Status.race:match("Dragon")) then         
            applycure.aknextsalve = "restoration"
            if akrestoration then killTimer(akrestoration) end
            akrestoration = tempTimer(3.5,[[ak.cure.apply("none");affstrack.score.tempslickness = 0;ak.scoreup(target)]])
            affstrack.score.tempslickness = 100  
         end
			elseif applycure.lastapplied == "skin" then
				applycure.lastapplied = nil	 
      end
   else
      applycure = {}
      applycure.aknextsalve = nil
      applycure.lastapplied = nil
      applycure.affoverone = {}
      applycure.affovertwo = {}
      applycure.affoverthree = {}
      applycure.affoverfour = {}
      applycure.affoverfive = {}
      applycure.affoversix = {}
      applycure.donotrecount = {}
      applycure.possiblemendings = {}
      applycure.mendingscore = 0
      applycure.possiblerestorations = {}
      applycure.restorationscore = 0
      applycure.totalscore = 0
      applycure.both = {}
   end
   ak.scoreup(target)
end

function ak.cure.salveBackup()
	if affstrack.score.slickness == 0 then
		ak.cure.apply("none")
		cecho("\n&lt;cyan&gt;They are not applying salves. Forcing previous restoration cure through.\n")
	else
		if ak.timers.salvebackup then killTimer(ak.timers.salvebackup) end
    ak.timers.salvebackup = tempTimer(1,[[ak.cure.salveBackup()]])
	end
end


function AKcalculateSalve()
	 if ak.debug then 
	 	display("applycure")
		display(applycure)
	 end
   local affs = {}
   ak.cure.lastapplied = what
   ak.randomaffs = ak.randomaffs or 0
   applycure = applycure or {}
   applycure.aknextsalve = applycure.aknextsalve or "restoration"
   applycure.lastapplied = applycure.lastapplied or "torso"
   applycure.affoverone = {}
   applycure.affovertwo = {}
   applycure.affoverthree = {}
   applycure.affoverfour = {}
   applycure.affoverfive = {}
   applycure.affoversix = {}
   applycure.donotrecount = {}
   applycure.possiblemendings = {}
   applycure.mendingscore = 0
   applycure.possiblerestorations = {}
   applycure.restorationscore = 0
   applycure.totalscore = 0
   applycure.both = {}
   applycure.otableadd = "applied"..applycure.lastapplied
   ocured = ocured or {}
   ocured[applycure.otableadd] = {} 
   local ToBeCleared = {}
      for i = 1, #affstrack.applied[applycure.lastapplied] do
         --display( affstrack.applied[applycure.lastapplied][i])--probable cures         
         if affstrack.score[affstrack.applied[applycure.lastapplied][i]] &gt; 0 and affstrack.applied[applycure.lastapplied][i] ~= "frozen" and affstrack.applied[applycure.lastapplied][i] ~= "aflame" and (affstrack.score[affstrack.applied[applycure.lastapplied][i]] &gt; 100 or affstrack.applied[applycure.lastapplied][i] == "head" or affstrack.applied[applycure.lastapplied][i] == "torso" or affstrack.applied[applycure.lastapplied][i] == "hypothermia") then
            table.insert(ToBeCleared, affstrack.applied[applycure.lastapplied][i])
            table.insert(applycure.possiblerestorations, affstrack.applied[applycure.lastapplied][i])
            table.insert(applycure.both, affstrack.applied[applycure.lastapplied][i])
            table.insert(applycure.donotrecount, affstrack.applied[applycure.lastapplied][i]) 
            applycure.restorationscore = affstrack.score[affstrack.applied[applycure.lastapplied][i]] + applycure.restorationscore
            applycure.totalscore  =  affstrack.score[affstrack.applied[applycure.lastapplied][i]] + applycure.totalscore
            AKBackupSalveNumber(affstrack.applied[applycure.lastapplied][i])
         elseif affstrack.score[affstrack.applied[applycure.lastapplied][i]] &gt; 100 and (affstrack.applied[applycure.lastapplied][i] == "frozen" or affstrack.applied[applycure.lastapplied][i] == "aflame") then                   
            table.insert(applycure.possiblemendings, affstrack.applied[applycure.lastapplied][i]) 
            table.insert(applycure.both, affstrack.applied[applycure.lastapplied][i])
            table.insert(applycure.donotrecount, affstrack.applied[applycure.lastapplied][i]) 
            applycure.mendingscore = affstrack.score[affstrack.applied[applycure.lastapplied][i]] + applycure.mendingscore  
            applycure.totalscore  =  affstrack.score[affstrack.applied[applycure.lastapplied][i]] + applycure.totalscore 
            AKBackupSalveNumber(affstrack.applied[applycure.lastapplied][i])
         elseif affstrack.score[affstrack.applied[applycure.lastapplied][i]] &gt; 0 then
            table.insert(applycure.possiblemendings, affstrack.applied[applycure.lastapplied][i]) 
            table.insert(applycure.both, affstrack.applied[applycure.lastapplied][i])
            table.insert(applycure.donotrecount, affstrack.applied[applycure.lastapplied][i]) 
            applycure.mendingscore = affstrack.score[affstrack.applied[applycure.lastapplied][i]] + applycure.mendingscore  
            applycure.totalscore  =  affstrack.score[affstrack.applied[applycure.lastapplied][i]] + applycure.totalscore     
         end
      end
      applycure.totalscore = applycure.totalscore / 100
      applycure.mendingscore = applycure.mendingscore / 100
      applycure.restorationscore = applycure.restorationscore / 100
   if applycure.aknextsalve ~= "both" then
      if applycure.aknextsalve == "mending" and applycure.mendingscore &gt; 0 then
         for i = 1, #applycure.possiblemendings do
            ocured[applycure.otableadd][applycure.possiblemendings[i]] = affstrack.score[applycure.possiblemendings[i]] 
            table.insert(affs, applycure.possiblemendings[i])
         end
      elseif applycure.aknextsalve == "restoration" and applycure.restorationscore &gt; 0 then
         for i = 1, #applycure.possiblerestorations do
            ocured[applycure.otableadd][applycure.possiblerestorations[i]] = affstrack.score[applycure.possiblerestorations[i]] 
            table.insert(affs, applycure.possiblerestorations[i])
         end
      else
         applycure.aknextsalve = "both"
         for i = 1, #applycure.possiblerestorations do
            ocured[applycure.otableadd][applycure.possiblerestorations[i]] = affstrack.score[applycure.possiblerestorations[i]] 
            table.insert(affs, applycure.possiblerestorations[i])
          end
         for i = 1, #applycure.possiblemendings do
            ocured[applycure.otableadd][applycure.possiblemendings[i]] = affstrack.score[applycure.possiblemendings[i]] 
            table.insert(affs, applycure.possiblemendings[i])
         end
      end
   elseif applycure.aknextsalve == "both" then
      for i = 1, #applycure.possiblerestorations do
         ocured[applycure.otableadd][applycure.possiblerestorations[i]] = affstrack.score[applycure.possiblerestorations[i]] 
         table.insert(affs, applycure.possiblerestorations[i])
      end
      for i = 1, #applycure.possiblemendings do
         ocured[applycure.otableadd][applycure.possiblemendings[i]] = affstrack.score[applycure.possiblemendings[i]] 
         table.insert(affs, applycure.possiblemendings[i])
      end
   end
   --display(affs)
   --display(affstrack.score[affs[1]])
   if #affs == 1 and affstrack.score[affs[1]] &lt; 100 then
      if #ToBeCleared &gt; 0 then
         for i = 1, #ToBeCleared do
            ak.limbs.CountAgain(ToBeCleared[i])
         end
      end
      ocured[applycure.otableadd] = {}
      if ak.ProTrackingConfirmed then ak.ProTrackingConfirmed(affs[1]) end
      ocured[applycure.otableadd] = {}
      ocured[applycure.otableadd][affs[1]] = 100
   end
   if #affs &gt; 0 then
      AKleftcuresfirst(affs)
      if #ToBeCleared &gt; 0 then
         for i = 1, #ToBeCleared do
            ak.limbs.CountAgain(ToBeCleared[i])
         end
      end
      ak.echoForPossibleCures(table.concat(affs, " "))
      for i = 1, #affs do
         reduceSalveAff(affs[i])
         affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / #affs
         if affstrack.score[affs[i]] &lt; ak.errorallowance then
            affstrack.score[affs[i]] = 0
						ak.AfflictionCured(affs[i])
         end
         if table.contains(applycure.affoverone, affs[i]) then
            affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
            if table.contains(applycure.affovertwo, affs[i]) then
               affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
               if table.contains(applycure.affoverthree, affs[i]) then
                  affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                  if table.contains(applycure.affoverfour, affs[i]) then
                     affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                     if table.contains(applycure.affoverfive, affs[i]) then
                        affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                        if table.contains(applycure.affoversix, affs[i]) then
                           affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                        end
                     end
                  end
               end
            end 
         end
      end
      if affstrack.score.aflame == 0 and affstrack.score.conflagrate == 100 then affstrack.score.conflagrate = 0;akadsty = 1 end
      if affstrack.score.hypothermia == 100 and affstrack.score.frozen == 0 then affstrack.score.hypothermia = 0 end
   elseif ak.randomaffs &gt; 0 then
      ak.randomaffs = ak.randomaffs - 1
   else

   end
   applycure.lastapplied = nil
   affstrack.score.tempslickness = 0 
   ak.scoreup(target)
end



function AKBackupSalveNumber(aff)
   local resetcure = tonumber(affstrack.score[aff])
   if affstrack.score[aff] &gt; 100 then
      table.insert(applycure.affoverone, aff) 
      affstrack.score[aff] = affstrack.score[aff] - 100
      if affstrack.score[aff] &gt; 100 then
        table.insert(applycure.affovertwo, aff) 
        affstrack.score[aff] = affstrack.score[aff] - 100
        if affstrack.score[aff] &gt; 100 then
           table.insert(applycure.affoverthree, aff) 
           affstrack.score[aff] = affstrack.score[aff] - 100
           if affstrack.score[aff] &gt; 100 then
              table.insert(applycure.affoverfour, aff) 
              affstrack.score[aff] = affstrack.score[aff] - 100
              if affstrack.score[aff] &gt; 100 then
                 table.insert(applycure.affoverfive, aff) 
                 affstrack.score[aff] = affstrack.score[aff] - 100
                 if affstrack.score[aff] &gt; 100 then
                    table.insert(applycure.affoversix, aff) 
                    affstrack.score[aff] = affstrack.score[aff] - 100
                 end
              end
           end
        end
      end
   end
   affstrack.score[aff] = tonumber(resetcure)
end
function reduceSalveAff(aff)
   if affstrack.score[aff] &gt; 100 then
      affstrack.score[aff] = affstrack.score[aff] - 100
      if affstrack.score[aff] &gt; 100 then
        affstrack.score[aff] = affstrack.score[aff] - 100
        if affstrack.score[aff] &gt; 100 then
           affstrack.score[aff] = affstrack.score[aff] - 100
           if affstrack.score[aff] &gt; 100 then
              affstrack.score[aff] = affstrack.score[aff] - 100
              if affstrack.score[aff] &gt; 100 then
                 affstrack.score[aff] = affstrack.score[aff] - 100
                 if affstrack.score[aff] &gt; 100 then
                    affstrack.score[aff] = affstrack.score[aff] - 100
                 end
              end
           end
        end
      end
   end 
end

function AKleftcuresfirst(affs)
   if table.contains(affs,"rightleg") and table.contains(affs,"leftleg") then 
      for i=1, #affs do
         if affs[i] == "rightleg" then
            table.remove(affs,i)
         end
      end   
   elseif table.contains(affs,"rightarm") and table.contains(affs,"leftarm") then
      for i=1, #affs do
         if affs[i] == "rightarm" then
            table.remove(affs,i)
         end
      end 
   end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Unknown Apply</name>
							<packageName></packageName>
							<script>--unknown application 

ak = ak or {}
ak.NoPreApply = false

ak.whyapply = function(location)



end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Occie Random Generator</name>
							<packageName></packageName>
							<script>--akocciegen
--ak.occie.aura.physical
--ak.occie.aura.mental

function ak.occie.aura.parse_unnamable(count)
	ak.occie.aura.mental = ak.occie.aura.mental + count
	local addaffs = {"stupidity","dementia","confusion"}
	if count == 3 then
		for i = 1, #addaffs do
			if affstrack.score[addaffs[i]] &gt; 0 then
				ak.ProTrackingConfirmed(addaffs[i])
        affstrack.score.stupidity = 100
        affstrack.score.dementia = 100
				affstrack.score.confusion = 100
				ak.scoreup(target)
				return
			end
		end
    affstrack.score.stupidity = 100
    affstrack.score.dementia = 100
		affstrack.score.confusion = 100
		ak.scoreup(target)
		return
	elseif count == 2 then
		if affstrack.score.stupidity == 100 then
			affstrack.score.confusion = 100
			affstrack.score.dementia = 100
		elseif affstrack.score.dementia == 100 then
			affstrack.score.stupidity = 100
			affstrack.score.confusion = 100
		elseif affstrack.score.confusion == 100 then
			affstrack.score.stupidity = 100
			affstrack.score.dementia = 100
		else

		end
		ak.scoreup(target)
		return
	elseif count == 1 then
		if affstrack.score.stupidity == 100 and affstrack.score.confusion == 100 then
			affstrack.score.dementia = 100
		elseif affstrack.score.stupidity == 100 and affstrack.score.dementia == 100 then
			affstrack.score.confusion = 100
		elseif affstrack.score.dementia == 100 and affstrack.score.confusion == 100 then
			affstrack.score.stupidity = 100
		else

		end
		ak.scoreup(target)
		return
 	end
end

function ak.occie.aura.parsereduct(what)
	if ak.backtracking then 
		ak.backtracking = false
		return 
	end
	if gmcp.Char.Status.race:match("Dragon") or gmcp.Char.Status.class ~= "Occultist" then return end
	ak.occie.aura.mentalcures = {
    "focus",
    "argentum flake",
    "lobelia seed",
    "stannum flake",
    "prickly ash bark",
    "plumbum flake",
    "goldenseal root",
		"bellwort flower",
    "rage",
  }
	ak.occie.aura.physicalcures = {
    "piece of kelp",
		"bloodroot leaf",
    "magnesium chip",
    "aurum flake",
  }
  if affstrack.score.addiction &gt; 0 then
    table.insert(ak.occie.aura.physicalcures,"ginseng root")
    table.insert(ak.occie.aura.physicalcures,"ferrum flake")
  else
    table.insert(ak.occie.aura.physicalcures,"ginseng root")
    table.insert(ak.occie.aura.physicalcures,"ferrum flake")
  end
	ak.occie.aura.ignore = {"smole","hawthorn berry","bayberry bark","calamine crystal",}
	if table.contains(ak.occie.aura.ignore, what) then return end
	if table.contains(ak.occie.aura.mentalcures,what) then
		ak.occie.aura.mental = ak.occie.aura.mental - 1
		if ak.occie.aura.mental &lt; 0 then ak.occie.aura.mental = 0 end
	elseif table.contains(ak.occie.aura.physicalcures,what) then
		ak.occie.aura.physical = ak.occie.aura.physical - 1
		if ak.occie.aura.physical &lt; 0 then ak.occie.aura.physical = 0 end
	elseif what == "treed" then
		ak.occie.aura.treed()
	elseif what == "passive" then
		ak.occie.aura.treed()	
	elseif not table.contains(ak.occie.aura.unknownparse,what) then
		table.insert(ak.occie.aura.unknownparse, what)
	end
end

function ak.occie.aura.treed()
		ak.occie.aura.physical = ak.occie.aura.physical - 1
		if ak.occie.aura.physical &lt; 0 then ak.occie.aura.physical = 0 end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Affliction Cured</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.AfflictionCured(affliction, who)
	ak.trackPrios(affliction)
	if affliction == "haemophilia" then
		if ak.bleeding &gt; 200 then
			ak.shaman.GetFashions = true
		end
		affstrack.score.bloodfire = 0
		ak.bleeding = 0
		ak.scoreup(who)
	end
	if ak.AustCuredTrack then
		ak.AustCuredTrack(affliction)
	end
end

	</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Over One Saves</name>
							<packageName></packageName>
							<script>ak.excess = ak.excess or {}
function ak.DumpExcess(affliction)
	local stored = math.floor(affstrack.score[affliction]/100)
	stored = stored * 100
	if stored &gt; 0 then
		ak.excess[affliction] = stored
	end
	affstrack.score[affliction] = affstrack.score[affliction] - stored
end

function ak.RestoreExcess(affliction)
	if ak.excess[affliction] then
		affstrack.score[affliction] = affstrack.score[affliction] + ak.excess[affliction]
	end
end

</script>
							<eventHandlerList />
						</Script>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Prorities</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>Priority by Healed</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
ak.enemyprio = ak.enemyprio or {}
ak.enemyprio.healed = ak.enemyprio.healed or {}
target = target or "Austere"

ak.tieredaffs = {"rightleg 100","rightleg 200","rightleg 300","leftleg 100","leftleg 200","leftleg 300","rightarm 100","rightarm 200","rightarm 300","leftarm 100","leftarm 200","leftarm 300",
                 "head 100","head 200","head 300","torso 100","torso 200","torso 300"}
local ignored = {"rightleg","leftleg","rightarm","leftarm","torso","head","tempslickness"}


function ak.trackPrios(affliction)
	if not affliction or not table.contains(affstrack.score, affliction) then 
		echo("&lt;cyan&gt;SOMETHING IS PUSHING AN UNKNOWN AFF CURED")
		return 
	end
	ak.enemyprio.healed[target] = ak.enemyprio.healed[target] or {}
	local maxinteger = 0
	local fuck = ak.enemyprio.healed[target]
	local aff = affliction
	if table.contains(ignored, aff) then return end
	if table.contains(fuck, aff) then
		table.remove(fuck,table.index_of(fuck, aff))
	end
	if #fuck &gt; 0 then
		for i = 1, #fuck do
			if affstrack.score[fuck[i]] and affstrack.score[fuck[i]] &gt; 0 then
				if affstrack.score[aff] and not table.contains(fuck, aff) then
					table.insert(fuck, i, aff)
					break
				end
			end
		end
	end
	if affstrack.score[aff] and not table.contains(fuck, aff) then
		table.insert(fuck, aff)
	end
	for k,v in pairs(affstrack.score) do
		if v &gt; 0 and not table.contains(fuck, k) and not table.contains(ignored, k) then
			table.insert(fuck, k)
		end
	end
	if ak.debug then
		cecho("enemyhealedprio")
		display(ak.enemyprio.healed[target])
	end
end



function ak.prioSalve(aff)
	local returner = 0
	if not applycure.affoverone then return returner end
	if table.contains(applycure.affoverone, aff) then
	   returner = returner + 100
	   if table.contains(applycure.affovertwo, aff) then
	      returner = returner + 100
	      if table.contains(applycure.affoverthree, aff) then
	         returner = returner + 100
	         if table.contains(applycure.affoverfour, aff) then
	            returner = returner + 100
	            if table.contains(applycure.affoverfive, aff) then
	               returner = returner + 100
	               if table.contains(applycure.affoversix, aff) then
	                  returner = returner + 100
	               end
	            end
	         end
	      end
	   end 
	end
	return returner
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>Salve Priorities</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
ak.enemyprio.salve = ak.enemyprio.salve or {}
ak.enemyprio.salve[target] = ak.enemyprio.salve[target] or {}

ak.tieredaffs = {"rightleg 100","rightleg 200","rightleg 300","leftleg 100","leftleg 200","leftleg 300","rightarm 100","rightarm 200","rightarm 300","leftarm 100","leftarm 200","leftarm 300",
                 "head 100","head 200","head 300","torso 100","torso 200","torso 300"}
local ignored = {"rightleg","leftleg","rightarm","leftarm","torso","head"}
local salvelocations = {"head","legs","arms","torso"}

function ak.enemyprio.applied(salve)
	if not table.contains(salvelocations,salve) then 
		return 
	end
	ak.enemyprio.salve[target] = ak.enemyprio.salve[target] or {}
	local maxinteger = 0
	local compsplit = ""
	local fuck = ak.enemyprio.salve[target]
	local aff = {}
	local insertpoint = false
	if #fuck &gt; 0 then
		for i = 1, #affstrack.applied[salve] do
			if affstrack.score[affstrack.applied[salve][i]] &gt; 0 then
				aff[affstrack.applied[salve][i]] = affstrack.score[affstrack.applied[salve][i]]
			end
		end
	end
	for k,v in pairs(aff) do
		if table.contains(fuck, k.." "..v) then
			table.remove(fuck,table.index_of(fuck, k.." "..v))
		end
	end
	if #fuck &gt; 0 then
		for i = 1, #fuck do
			compsplit = string.split(fuck[i], " ")
			if affstrack.score[compsplit[1]] == (compsplit[2] + 0) then
				if insertpoint then
					for k,v in pairs(aff) do
						if not table.contains(fuck, k.." "..v) then
							table.insert(fuck, insertpoint, k.." "..v)
						end
					end				
				else
					for k,v in pairs(aff) do
						if not table.contains(fuck, k.." "..v) then
							table.insert(fuck, i, k.." "..v)
						end
					end
				end
				insertpoint = false
			else--if ak.enemyprio.notHigherAff(compsplit[1], k) --donothaft hisaffliction
				insertpoint = i
			end
		end
	end
	for k,v in pairs(aff) do
		if not table.contains(fuck, k.." "..v) then
			table.insert(fuck, k.." "..v)
		end
	end	
	for k,v in pairs(affstrack.applied) do --add to table
		if table.contains(salvelocations, k) then
			for i = 1, #v do
				if affstrack.score[v[i]] &gt; 0 and not table.contains(fuck, v[i].." "..affstrack.score[v[i]]) then
					table.insert(fuck, v[i].." "..affstrack.score[v[i]])
				else--already in the table but in the wrong spot / has a score currently
	
				end	
			end
		end
	end
	if ak.debug then
		cecho("enemysalveprio")
		display(fuck)
	end
end

function ak.enemyprio.notHigherAff(aff, aff2)
	local compslit = ""
	local compslit2 = ""
	compsplit = string.split(aff, " ")
	compsplit2 = string.split(aff2, " ")
	if compsplit[1] == compslit[2] then
		return false
	else
		return true
	end


end

</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>BackTracking</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>Opponent Priority Table</name>
							<packageName></packageName>
							<script>--backtrack define
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.AddedAffReset(affliction)
   if ocured then
      for k,v in pairs(ocured) do
         --display(ocured[k]) 
         if table.contains(ocured[k], affliction) then
            ocured[k] = nil
         end   
      end
   end
end

function ak.ResetConfirmAff(affliction)
   if ocured then
      for k,v in pairs(ocured) do
				 if type(v) == "table" and v[affliction] then
            v[affliction] = nil  
				 end 
      end
   end
end

ocured = ocured or {
   parseout = {},
   conversion = {
       ["aurum flake"]      = "kelp",
       ["piece of kelp"]    = "kelp",
       ["lobelia seed"]     = "lobelia",
       ["argentum flake"]   = "lobelia",
       ["prickly ash bark"] = "ash",
       ["stannum flake"]    = "ash",
       ["bellwort flower"]  = "bellwort",
       ["cuprum flake"]     = "bellwort",
       ["goldenseal root"]  = "goldenseal",
       ["plumbum flake"]    = "goldenseal",
       ["bloodroot leaf"]   = "bloodroot",
       ["magnesium chip"]   = "bloodroot",
       ["ginseng root"]     = "ginseng",
       ["ferrum flake"]     = "ginseng",
       ["rage"]             = "rage",
       ["hawthorn berry"]   = "hawthorn",
       ["calamine crystal"] = "hawthorn",
       ["bayberry bark"]    = "bayberry",
       ["arsenic pellet"]   = "bayberry"
   },
   curemethods = {
   "treed",
   "focused",
   "restored",
   "smoked",
   "cureall",
   "applied",
   } 
}

function ak.resetbacktrack()
ocured = {
   conversion = {
       ["aurum flake"]      = "kelp",
       ["piece of kelp"]    = "kelp",
       ["lobelia seed"]     = "lobelia",
       ["argentum flake"]   = "lobelia",
       ["prickly ash bark"] = "ash",
       ["stannum flake"]    = "ash",
       ["bellwort flower"]  = "bellwort",
       ["cuprum flake"]     = "bellwort",
       ["goldenseal root"]  = "goldenseal",
       ["plumbum flake"]    = "goldenseal",
       ["bloodroot leaf"]   = "bloodroot",
       ["magnesium chip"]   = "bloodroot",
       ["ginseng root"]     = "ginseng",
       ["ferrum flake"]     = "ginseng",
       ["rage"]             = "rage",
       ["hawthorn berry"]    = "hawthorn",
       ["calamine crystal"] = "hawthorn",
       ["bayberry bark"]    = "bayberry",
       ["arsenic pellet"]   = "bayberry"
   },
   curemethods = {
   "treed",
   "focused",
   "restored",
   "smoked",
   "cureall",
   "applied",
   } 
}
end

</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Pro Tracking Base</name>
							<packageName></packageName>
							<script>ak.ProTrackingConfirmed = ak.ProTrackingConfirmed or function(affliction) 
  affstrack.score[affliction] = 100
  ak.scoreup(target)
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<Script isActive="yes" isFolder="no">
						<name>Expert Diagnosing</name>
						<packageName></packageName>
						<script>
function ak.expertRun()
   possiblechecksAK = {}
   vcombo = vcombo or {}
   currentlydiagnosingak = nil
   for k,v in pairs(affstrack.score) do
      if (v &gt; 1 and AkcheckPrioList[k] and AkcheckPrioList[k] ~= 0) and (not table.contains(affstrack.venoms, k) or not table.contains(vcombo, affstrack.venoms[k])) then
         local mathed = v
         if mathed &lt; 50 then
            mathed =  50-((mathed - 50) * -1)
         else
            mathed = 50-(mathed - 50)
         end
         if (mathed + AkcheckPrioList[k]) &gt; 100 then
            possiblechecksAK[k] = (mathed + AkcheckPrioList[k])
         end
         mathed = nil
      end
   end
   ak.ExpertPickanAff()
end

function ak.ExpertPickanAff()
   for k,v in pairs(possiblechecksAK) do
      if currentlydiagnosingak == nil then
         currentlydiagnosingak = k
      end 
      if v &gt; possiblechecksAK[currentlydiagnosingak] then
         currentlydiagnosingak = k
      end
   end
   if currentlydiagnosingak then
      currentlydiagnosingak = "check "..target.." for "..currentlydiagnosingak 
   else
      currentlydiagnosingak = ""
   end
   if not ak.diagnosingoffbal and currentlydiagnosingak ~= "" then
      send(currentlydiagnosingak)
   end
end
AkcheckPrioList = {
                ["addiction"]      = 0,
                ["aeon"]           = 100,
                ["agoraphobia"]    = 0,
                ["anorexia"]       = 0,
                ["aflame"]         = 0,
                ["airfist"]        = 0,
                ["asthma"]         = 0,
                ["blind"]          = 0,
                ["blackout"]       = 0,
                ["bound"]          = 0,
                ["claustrophobia"] = 0,
                ["clumsiness"]     = 50,
                ["confusion"]      = 0,
                ["crippledarm"]    = 0,
                ["crippledleg"]    = 0,
                ["darkshade"]      = 50,
                ["deadening"]      = 0,
                ["deaf"]           = 0,
                ["dementia"]       = 0,
                ["disloyalty"]     = 0,
                ["disrupt"]        = 0,
                ["dizziness"]      = 0,
                ["epilepsy"]       = 0,
                ["frozen"]         = 0,
                ["generosity"]     = 0,
                ["haemophilia"]    = 100,
                ["hallucinations"] = 0,
                ["hamstring"]      = 0,
                ["healthleech"]    = 0,
                ["hellsight"]      = 0,
                ["hypersomnia"]    = 0,
                ["hypochondria"]   = 100,
                ["impaleslash"]    = 0,
                ["impatience"]     = 100,
                ["insomnia"]       = 0,
                ["kola"]           = 0,
                ["lethargy"]       = 0,
                ["loneliness"]     = 0,
                ["masochism"]      = 0,
                ["manaleech"]      = 0,
                ["nausea"]         = 0,
                ["pacifism"]       = 0,
                ["paralysis"]      = 100,
                ["paranoia"]       = 0,
                ["prone"]          = 0,
                ["recklessness"]   = 0,
                ["scytherus"]      = 100,
                ["selarnia"]       = 0,
                ["sensitivity"]    = 75,
                ["shyness"]        = 0,
                ["slickness"]      = 100,
                ["sleep"]          = 0,
                ["stupidity"]      = 0,
                ["transfixed"]     = 0,
                ["timeflux"]       = 0,
                ["weariness"]      = 75,
                ["whisperingmadness"] = 0,
                ["vertigo"]        = 0,
                ["vitiate"]        = 0,
                ["voidfist"]       = 0,
                ["voyria"]         = 0,
                ["rightleg"]       = 0,
                ["leftleg"]        = 0,
                ["rightarm"]       = 0,
                ["leftarm"]        = 0,
                ["head"]           = 0,
                ["torso"]          = 0,
}</script>
						<eventHandlerList />
					</Script>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Misc</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>Version ID</name>
							<packageName></packageName>
							<script>ak.version = 7.8</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
				</ScriptGroup>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Mudlet Mapper</name>
				<packageName></packageName>
				<script>mudlet = mudlet or {}; mudlet.mapper_script = true</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Create Option Table</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
local spairs = spairs or function(tbl, order)
  local keys = table.keys(tbl)
  if order then
    table.sort(keys, function(a,b) return order(tbl, a, b) end)
  else
    table.sort(keys)
  end

  local i = 0
  return function()
    i = i + 1
    if keys[i] then
      return keys[i], tbl[keys[i]]
    end
  end
end


function createOption(startingValue, onChangeFunc, allowedVarTypes, use, checkOption, games)
	if allowedVarTypes then -- make sure our starting Value follows type rules
		if not table.contains(allowedVarTypes, type(startingValue)) then
			echo("Starting type is not of allowed type!\n")
			display(allowedVarTypes)
			echo("type: " .. type(startingValue) .. "\n")
			return
		end
	end

	local option = {
		value = startingValue,
		onChange = onChangeFunc,
		allowedVarTypes = allowedVarTypes,
		use = use or "",
		games = games,
		checkOption = checkOption or function() return true end
	}

	return option
end

function createOptionsTable(defaultTable)
	local index = {} -- index to store the default table at in our proxy table


	local proxyTable = {} -- This is the table that is returned to the user

	proxyTable.disp = echo

	proxyTable.dispDefaultWriteError = function()
		echo("Can't overwrite default options. Please use the SetOption function to change the value\n")
	end

	proxyTable.dispOption = function(opt, val)
		if not opt or not val then return end
		echo("Name: " .. string.title(opt) .. string.rep(" ", 10 - string.len(opt)))
		echo("Val: " .. tostring(val.value))
		echo(string.rep(" ", 10 - string.len(tostring(val.value))) ..  "- " .. val.use .. "\n")
	end

	function proxyTable:showAllOptions(game)
		proxyTable.disp("Available options: \n")
		for k, v in spairs(self[index]) do
			if not game or not v.games or v.games[game] then
				self.dispOption(k, v)
			end
		end
		echo("\n")
		for k, v in spairs(self["_customOptions"]) do
			self.dispOption(k, v)
		end

	end

	function proxyTable:getAllOptions()
		local t = {}
		for k, v in pairs(self[index]) do
			t[k] = v.value
		end

		return t
	end

   function proxyTable:setOption(option, value, silent)
		if self[option] == nil then
			proxyTable.disp("No such option!\n")
			return
		end

		-- otherwise, set the option
		if self["_customOptions"][option] then
			if not (table.contains(self["_customOptions"][option].allowedVarTypes, type(value)) and self["_customOptions"][option].checkOption(value)) then
				proxyTable.disp("You can't set '" .. option .. "' to that!\n")
				return
			end
			self["_customOptions"][option].value = value
			if self["_customOptions"][option].onChange then
				self["_customOptions"][option].onChange(option, value)
			end
		else
			if not (table.contains(self[index][option].allowedVarTypes, type(value)) and self[index][option].checkOption(value)) then
				proxyTable.disp("You can't set '" .. option .. "' to that!\n")
				return
			end
			rawset(self[index][option], "value", value)
			local opt = rawget(self[index], option)
			if opt.onChange  and not silent then opt.onChange(option, value) end
		end
		if mmp and mmp.clearpathcache then mmp.clearpathcache() end
	end


	proxyTable._customOptions = {}

	local mt = {
		__index = function(t, k)
			local custOp = rawget(t, "_customOptions")
			if custOp[k] then
			 	local opt = custOp[k]
				if opt then return opt.value else return nil end
			else
				local opt = t[index][k]
				if opt then return opt.value else return nil end
			end
		end,

		__newindex = function (t, k, v)
			if t[index][k] then
				proxyTable.dispDefaultWriteError()
			else
				t["_customOptions"][k] = v
			end
		end
	}


	proxyTable[index] = defaultTable

	setmetatable(proxyTable, mt)

	return proxyTable

end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Load settings</name>
					<packageName></packageName>
					<script>-- mmp = mudlet mapper namespace
mmp =
  mmp or
  {
    paused = false,
    autowalking = false,
    currentroom = 0,
    currentroomname = "(unknown)",
    firstRun = true,
    specials = {},
    ferry_rooms = {},
  }
speedWalkWatch = createStopWatch()
-- populated by Mudlet from getPath() and gotoRoom()
speedWalkPath = speedWalkPath or {}
speedWalkDir = speedWalkDir or {}
speedWalkCounter = 0
-- actually used by the mapper for walking
mmp.speedWalk = mmp.speedWalk or {}
mmp.speedWalkPath = mmp.speedWalkPath or {}
mmp.speedWalkDir = mmp.speedWalkDir or {}
mmp.lagtable =
  {
    [1] = {description = "Normal, default level.", time = 0.5},
    [2] = {description = "Decent, but slightly laggy.", time = 1},
    [3] = {description = "Noticeably laggy with occasional spikes.", time = 2},
    [4] = {description = "Bad. Terrible. Terribad.", time = 5},
    [5] = {description = "Carrier Pigeon", time = 10},
  }
local newversion = "22.4.1"
if mmp.version and mmp.version ~= newversion then
  if not mmp.game then
    mmp.echo("Mapper script updated - Thanks! I don't know what game are you connected to, though - so please reconnect, if you could.")
  else
    mmp.echo("Mapper script updated - thanks! You don't need to restart.")
  end
end
mmp.version = newversion

function mmp.startup()
  if not mmp.firstRun then
    return
  end
  local private_settings = {}

  --General settings

  private_settings["echocolour"] = createOption("cyan", mmp.changeEchoColour, {"string"}, "Set the color for room number echos?", function(newSetting) return color_table[newSetting] ~= nil end)
  private_settings["crowdmap"] = createOption(false, mmp.changeMapSource, {"boolean"}, "Use a crowd-sourced map instead of IREs default?", nil, {achaea = true, starmourn = true, lusternia = true, stickmud = true, asteria = true, imperian = true, aetolia = true})
  private_settings["showcmds"] = createOption(true, mmp.changeBoolFunc, {"boolean"}, "Show walking commands?")
  private_settings["laglevel"] = createOption(1, mmp.changeLaglevel, {"number"}, "How laggy is your connection, (fast 1&lt;-&gt;5 slow)?", mmp.verifyLaglevel)
  private_settings["slowwalk"] = createOption(false, mmp.setSlowWalk, {"boolean"}, "Walk slowly instead of as quick as possible?")
  private_settings["updatemap"] = createOption(true, mmp.changeUpdateMap, {"boolean"}, "Check for new maps from your MUD?")
  private_settings["waterwalk"] = createOption(true, mmp.setWaterWalk, {"boolean"}, "Have waterwalk (don't avoid water)?", nil, {achaea = true})

  --Settings that lock things

  private_settings["lockpathways"] = createOption(true, mmp.lockPathways, {"boolean"}, "Lock pathway exits?", nil, {lusternia = true})
  private_settings["locksewers"] = createOption(false, mmp.lockSewers, {"boolean"}, "Lock all sewers?", nil, {achaea = true})
  private_settings["lockspecials"] = createOption(false, mmp.lockSpecials, {"boolean"}, "Lock all special exits?")
  private_settings["lockwormholes"] = createOption(true, mmp.lockWormholes, {"boolean"}, "Lock all wormholes?", nil, {achaea = true, imperian = true, aetolia = true})

  --Sprint movement

  private_settings["dash"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Use Dash?", nil, {achaea = true, imperian = true, aetolia = true})
  private_settings["sprint"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Use Sprint?")
  private_settings["gallop"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Use Gallop?")
  private_settings["runaway"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Use Jester Runaway?", nil, {achaea = true})

  --Achaea wings and things

  private_settings["winglanguage"] = createOption("", mmp.setWingsLanguage, {"string"}, "Speak non-default language for wings:", nil, {achaea = true})
  private_settings["pebble"] = createOption(false, mmp.lockPebble, {"boolean"}, "Make use of your enchanted pebble?", nil, {achaea = true})
  private_settings["removewings"] = createOption(true, mmp.setWingsRemoval, {"boolean"}, "Remove Wings after using them?", nil, {achaea = true, imperian = true})
  private_settings["harness"] = createOption(false, mmp.setHarness, {"boolean"}, "Use Stratospheric Harness?", nil, {achaea = true})
  private_settings["duantahar"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Use Chenubian Wings?", nil, {achaea = true})
  private_settings["duanatharan"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Use Atavian Wings?", nil, {achaea = true})
  private_settings["duanathar"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Use Eagle Wings?", nil, {achaea = true})
  private_settings["duanatharic"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Use Island Wings?", nil, {achaea = true})
  private_settings["soar"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Use Aero Soar?", nil, {achaea = true})
  private_settings["shackle"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Take off shackle?", nil, {achaea = true})
  private_settings["universe"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Use Universe Tarot?", nil, {achaea = true})
  private_settings["gare"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Use Gare?", nil, {achaea = true})

  --Wings pathfinding improvements

  private_settings["betterwings"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Use Better Wings pathfinding?", nil, {achaea = true})

  --Achaea Orb of Confinement

  private_settings["orbashtan"] = createOption(false, function() mmp.setOrb("ashtan") end, {"boolean"}, "Orb of Confinement active in Ashtan?", nil, {achaea = true})
  private_settings["orbcyrene"] = createOption(false, function() mmp.setOrb("cyrene") end, {"boolean"}, "Orb of Confinement active in Cyrene?", nil, {achaea = true})
  private_settings["orbeleusis"] = createOption(false, function() mmp.setOrb("eleusis") end, {"boolean"}, "Orb of Confinement active in Eleusis?", nil, {achaea = true})
  private_settings["orbhashan"] = createOption(false, function() mmp.setOrb("hashan") end, {"boolean"}, "Orb of Confinement active in Hashan?", nil, {achaea = true})
  private_settings["orbmhaldor"] = createOption(false, function() mmp.setOrb("mhaldor") end, {"boolean"}, "Orb of Confinement active in Mhaldor?", nil, {achaea = true})
  private_settings["orbtargossas"] = createOption(false, function() mmp.setOrb("targossas") end, {"boolean"}, "Orb of Confinement active in Targossas?", nil, {achaea = true})

  --Imperian wings

  private_settings["shekinah"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Use Seraphim Wings?", nil, {imperian = true})
  private_settings["suriel"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Use Orphanim Wings?", nil, {imperian = true})

  --Lusternia bixes

  private_settings["torus"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Torus?", nil, {lusternia = true})
  private_settings["prism"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your transplanar prism?", nil, {lusternia = true})
  private_settings["cubix"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Cubix?", nil, {lusternia = true})
  private_settings["medallion"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Medallion?", nil, {lusternia = true})

  --Lusternia Bubblixes
  private_settings["twist"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Mt. Dio Bix?", nil, {lusternia = true})
  private_settings["figurine"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Icewynd Bix?", nil, {lusternia = true})
  private_settings["periscope"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Aquagoria Bix?", nil, {lusternia = true})
  private_settings["pebble"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Lyraa Bix?", nil, {lusternia = true})
  private_settings["shard"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Xion Bix?", nil, {lusternia = true})
  private_settings["tibia"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Cankermore Bix?", nil, {lusternia = true})
  private_settings["mud"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Mucklemarsh Bix?", nil, {lusternia = true})
  private_settings["cookie"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Crumkindivia Bix?", nil, {lusternia = true})
  private_settings["icicle"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Frosticia Bix?", nil, {lusternia = true})
  private_settings["screwdriver"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Facility Bix?", nil, {lusternia = true})
  private_settings["snowglobe"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Tree of Trees Bix?", nil, {lusternia = true})
  private_settings["head"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Bottledowns Bix?", nil, {lusternia = true})
  private_settings["wheel"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Dramube Bix?", nil, {lusternia = true})

  --lusternia athergoop setButtons

  private_settings["buttons"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of Aethergoop Buttons?", nil, {lusternia = true})

  --Lusternia Curio collections

  private_settings["bonecurio"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Bone curios?", nil, {lusternia = true})
  private_settings["facecurio"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Face curios?", nil, {lusternia = true})
  private_settings["feathercurio"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Feather curios?", nil, {lusternia = true})
  private_settings["figurecurio"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Figure curios?", nil, {lusternia = true})
  private_settings["flowercurio"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Flower curios?", nil, {lusternia = true})
  private_settings["fluttercurio"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Flutter curios?", nil, {lusternia = true})
  private_settings["toolcurio"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Tool curios?", nil, {lusternia = true})
  private_settings["vernalcurio"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Vernal curios?", nil, {lusternia = true})
  private_settings["utensilcurio"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Utensil curios?", nil, {lusternia = true})
  private_settings["toycurio"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Toy curios?", nil, {lusternia = true})
  private_settings["soullesscurio"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Soulless curios?", nil, {lusternia = true})

  --Lusternia epic quest bixes

  private_settings["fingerblade"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Fingerblade?", nil, {lusternia = true})
  private_settings["blossom"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Flame of dae'Seren?", nil, {lusternia = true})
  private_settings["belt"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Belt?", nil, {lusternia = true})
  private_settings["mandala"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Mandala?", nil, {lusternia = true})
  private_settings["mantle"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Mantle?", nil, {lusternia = true})
  private_settings["key"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Make use of your Key?", nil, {lusternia = true})

  --Lusternia other travel things
  private_settings["compass"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Use the Compass of the Basin?", nil, {lusternia = true})
  private_settings["astrojump"] = createOption(false, mmp.astroboots, {"boolean"}, "Use Astral Jumping boots?", nil, {lusternia = true})


  --I have no idea what this does tbh

  private_settings["caravan"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Walk caravans?", nil, {imperian = true})



  mmp.settings = createOptionsTable(private_settings)
  mmp.settings.disp = mmp.echo
  mmp.game = false
  mmp.settings.dispOption =
    function(opt, val)
      cecho(
        "&lt;green&gt;" ..
        val.use ..
        "&lt;white&gt; (" ..
        opt ..
        ") " ..
        string.rep(" ", 50 - val.use:len() - opt:len()) ..
        tostring(val.value) ..
        "\n"
      )
    end
  mmp.settings.dispDefaultWriteError =
    function()
      mmp.echo("Please use the mconfig alias to set options!")
    end
  raiseEvent("mmp areas changed")
  mmp.firstRun = false
  mmp.echon("Mudlet Mapper script for IREs (" .. tostring(mmp.version) .. ") loaded! (")
  echoLink(
    "homepage",
    "(openUrl or openURL)'http://wiki.mudlet.org/w/IRE_mapping_script'",
    "Clicky clicky to read up on what's this about"
  )
  echo(")\n")
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>speedwalking</name>
					<packageName></packageName>
					<script>function mmp.gotoRoom(where, dashtype, gotoType)
  mmp.speedWalk.type = gotoType or "room"
  if not where or not tonumber(where) then
    mmp.echo("Where do you want to go to?")
    return
  end
  if tonumber(where) == mmp.currentroom then
    mmp.echo("We're already at " .. where .. "!")
    raiseEvent("mmapper arrived")
    return
  end
  -- allow mapper 'addons' to link their own exits in
  raiseEvent("mmp link externals")
  -- if getPath worked, then the dirs and room #'s tables were populated for us
  if not mmp.getPath(mmp.currentroom, tonumber(where)) then
    mmp.echo("Don't know how to get there (" .. tostring(where) .. ") from here :(")
    mmp.speedWalkPath = {}
    mmp.speedWalkDir = {}
    speedWalkCounter = 0
    raiseEvent("mmapper failed path")
    if mmp.settings.shackle then
      expandAlias("wear shackle")
    end
    -- allow mapper 'addons' to unlink their special exits
    raiseEvent("mmp clear externals")
    return
  end
  doSpeedWalk(dashtype)
  -- allow mapper 'addons' to unlink their special exits
  raiseEvent("mmp clear externals")
end

function mmp.gotoArea(where, number, dashtype, exact)
  mmp.speedWalk.type = "area"
  if not where or type(where) ~= "string" then
    mmp.echo("Where do you want to go to?")
    return
  end
  local where = where:lower()
  number = tonumber(number)
  local tmp = getRoomUserData(1, "gotoMapping")
  if not tmp or tmp == '' then
    tmp = "[]"
  end
  local temp, maptable = yajl.to_value(tmp), {}
  for k, v in pairs(temp) do
    maptable[k:lower()] = v
  end
  local destinationRoom = maptable[where]
  if destinationRoom then
    mmp.gotoRoom(destinationRoom, dashtype)
    return
  end
  local areaid, msg, multiples = mmp.findAreaID(where, exact)
  if areaid then
    mmp.gotoAreaID(areaid)
  elseif not areaid and #multiples &gt; 0 then
    if number and number &lt;= #multiples then
      mmp.gotoArea(multiples[number], nil, dashtype, true)
      return
    end
    mmp.echo("Which area would you like to go to?")
    fg("DimGrey")
    for key, areaname in ipairs(multiples) do
      echo("  ")
      echoLink(
        key .. ") ",
        'mmp.gotoArea("' ..
        areaname ..
        '", nil, ' ..
        (dashtype and '"' .. dashtype .. '"' or "nil") ..
        ', true)',
        "Click to go to " .. areaname,
        true
      )
      setUnderline(true)
      echoLink(
        areaname,
        'mmp.gotoArea("' ..
        areaname ..
        '", nil, ' ..
        (dashtype and '"' .. dashtype .. '"' or "nil") ..
        ', true)',
        "Click to go to " .. areaname,
        true
      )
      setUnderline(false)
      echo("\n")
    end
    resetFormat()
    return
  else
    mmp.echo(string.format("Don't know of any area named '%s'.", where))
    return
  end
end

--- DOES NOT ACCOUNT FOR CHANGING THE MAP YET (within a profile load), because we don't know when it happens
local getpathcache = {}
--setmetatable(getpathcache, {__mode = "kv"}) -- weak keys/values = it'll periodically get cleaned up by gc

function mmp.getPath(from, to)
  assert(tonumber(from) and tonumber(to), "mmp.getPath: both from and to have to be room IDs")
  local key = string.format("%s_%s", from, to)
  local resulttbl = getpathcache[key]
  -- not in cache?
  if not resulttbl then
    mmp.computeGetPath = mmp.computeGetPath or createStopWatch()
    startStopWatch(mmp.computeGetPath)
    local boolean = getPath(from, to)
    if mmp.debug then
      mmp.echo(
        "a new getPath() from " ..
        from ..
        " to " ..
        to ..
        " took " ..
        stopStopWatch(mmp.computeGetPath) ..
        "s."
      )
    end
    -- save it into the cache &amp; send away
    getpathcache[key] = {boolean, speedWalkDir, speedWalkPath}
    return boolean
  end
  -- or if it is, retrieve &amp; send away
  speedWalkDir = resulttbl[2]
  speedWalkPath = resulttbl[3]
  return resulttbl[1]
end

function mmp.clearpathcache()
  if mmp.debug then
    mmp.echo("path cache cleared")
  end
  getpathcache = {}
end

registerAnonymousEventHandler("mmapper updated map","mmp.clearpathcache")

function mmp.showpathcache()
  return getpathcache
end

function mmp.setmovetimer(time)
  if mmp.movetimer then
    killTimer(mmp.movetimer)
  end
  if mmp.settings.slowwalk and not mmp.hasty then
    return
  end
  local laglevel = mmp.settings.laglevel or 1
  time = time or mmp.lagtable[laglevel].time
  mmp.movetimer =
    tempTimer(
      getNetworkLatency() + time,
      function()
        mmp.movetimer = false
        mmp.move()
      end
    )
end

-- moves to the next room we need to.

function mmp.move()
  if mmp.paused or not mmp.autowalking or mmp.movetimer or not mmp.canmove() then
    return
  end
  -- sometimes it's 0 - default to 1
  if speedWalkCounter == 0 then
    speedWalkCounter = 1
  end
  local cmd
  if mmp.settings["caravan"] then
    cmd = "lead caravan " .. mmp.speedWalkDir[speedWalkCounter]
  else
    cmd = mmp.speedWalkDir[speedWalkCounter]
  end
  cmd = cmd or ''
  -- timeout before loadstring, so it can set its own if it would like to.
  mmp.setmovetimer()
  if string.starts(cmd, "script:") then
    cmd = string.gsub(cmd, "script:", "")
    loadstring(cmd)()
    if mmp.settings.showcmds and not mmp.hasty then
      cecho(
        string.format(
          "&lt;red&gt;(&lt;maroon&gt;%d - &lt;dark_slate_grey&gt;%s&lt;red&gt;)",
          #mmp.speedWalkDir - speedWalkCounter + 1,
          "&lt;script&gt;"
        )
      )
    end
    mmp.hasty = false
  else
    send(cmd, false)
    if mmp.settings.showcmds and not mmp.hasty then
      cecho(
        string.format(
          "&lt;red&gt;(&lt;maroon&gt;%d - &lt;dark_slate_grey&gt;%s&lt;red&gt;)",
          #mmp.speedWalkDir - speedWalkCounter + 1,
          cmd
        )
      )
    end
    mmp.hasty = false
  end
end

function mmp.swim()
  -- not going anywhere? don't do anything
  if not mmp.speedWalkDir[speedWalkCounter] then
    return
  end
  send(
    "swim " ..
    mmp.speedWalkDir[speedWalkCounter]:gsub("sprint ", ""):gsub("dash ", ""):gsub("gallop ", ""):gsub(
      "runaway ", ""
    ),
    false
  )
  if mmp.settings.showcmds then
    cecho(
      string.format(
        "&lt;red&gt;(&lt;maroon&gt;%d - &lt;dark_slate_grey&gt;swim %s&lt;red&gt;)",
        #mmp.speedWalkDir - speedWalkCounter + 1,
        mmp.speedWalkDir[speedWalkCounter]:gsub("sprint ", ""):gsub("dash ", ""):gsub("gallop ", ""):gsub(
          "runaway ", ""
        )
      )
    )
  end
  mmp.hasty = true
  mmp.setmovetimer(2.5)
end

function mmp.enterGrate()
  -- not going anywhere? don't do anything
  if not mmp.speedWalkDir[speedWalkCounter] then
    return
  end
  send("enter grate " .. mmp.speedWalkDir[speedWalkCounter], false)
  if mmp.settings.showcmds then
    cecho(
      string.format(
        "&lt;red&gt;(&lt;maroon&gt;%d - &lt;dark_slate_grey&gt;enter grate %s&lt;red&gt;)",
        #mmp.speedWalkDir - speedWalkCounter + 1,
        mmp.speedWalkDir[speedWalkCounter]
      )
    )
  end
  mmp.hasty = true
  mmp.setmovetimer(2.5)
end

function mmp.openDoor()
  -- not going anywhere? don't do anything
  if not mmp.speedWalkDir[speedWalkCounter] then
    return
  end
  if mmp.game == "asteria" then
   send(
    "open " ..
    mmp.speedWalkDir[speedWalkCounter]:gsub("sprint ", ""):gsub("dash ", ""):gsub("gallop ", ""):gsub(
      "runaway ", ""
    ),
    false
  )
  if mmp.settings.showcmds then
    cecho(
      string.format(
        "&lt;red&gt;(&lt;maroon&gt;%d - &lt;dark_slate_grey&gt;open %s&lt;red&gt;)",
        #mmp.speedWalkDir - speedWalkCounter + 1,
        mmp.speedWalkDir[speedWalkCounter]:gsub("sprint ", ""):gsub("dash ", ""):gsub("gallop ", ""):gsub(
          "runaway ", ""
        )
      )
    )
  end
else
  send(
    "open door " ..
    mmp.speedWalkDir[speedWalkCounter]:gsub("sprint ", ""):gsub("dash ", ""):gsub("gallop ", ""):gsub(
      "runaway ", ""
    ),
    false
  )
  if mmp.settings.showcmds then
    cecho(
      string.format(
        "&lt;red&gt;(&lt;maroon&gt;%d - &lt;dark_slate_grey&gt;open door %s&lt;red&gt;)",
        #mmp.speedWalkDir - speedWalkCounter + 1,
        mmp.speedWalkDir[speedWalkCounter]:gsub("sprint ", ""):gsub("dash ", ""):gsub("gallop ", ""):gsub(
          "runaway ", ""
        )
      )
    )
  end
end
  mmp.hasty = true
  mmp.setmovetimer(getNetworkLatency())
end

function mmp.unlockDoor()
  -- not going anywhere? don't do anything
  if not mmp.speedWalkDir[speedWalkCounter] then
    return
  end
  send(
    "unlock door " ..
    mmp.speedWalkDir[speedWalkCounter]:gsub("sprint ", ""):gsub("dash ", ""):gsub("gallop ", ""):gsub(
      "runaway ", ""
    ),
    false
  )
  if mmp.settings.showcmds then
    cecho(
      string.format(
        "&lt;red&gt;(&lt;maroon&gt;%d - &lt;dark_slate_grey&gt;unlock door %s&lt;red&gt;)",
        #mmp.speedWalkDir - speedWalkCounter,
        mmp.speedWalkDir[speedWalkCounter]:gsub("sprint ", ""):gsub("dash ", ""):gsub("gallop ", ""):gsub(
          "runaway ", ""
        )
      )
    )
  end
  mmp.hasty = true
  mmp.setmovetimer(getNetworkLatency())
end

function mmp.customwalkdelay(delay)
  mmp.setmovetimer(getNetworkLatency() + delay)
end

function mmp.stop()
  mmp.speedWalkPath = {}
  mmp.speedWalkDir = {}
  speedWalkCounter = 0
  stopStopWatch(speedWalkWatch)
  --if mmp.movetimer then killTimer( mmp.movetimer ) end
  mmp.autowalking = false
  -- clear all the temps we've got
  for trigger, ID in pairs(mmp.specials) do
    killTrigger(ID)
  end
  mmp.specials = {}
  mmp.echo("Stopped walking.")
  raiseEvent("mmapper stopped")
  if mmp.settings.shackle then
    expandAlias("wear shackle")
  end
end

-- Aetolia and Lusternia support showing balances in GMCP. This is easy to support, so we do!
-- if we can't move, setup a polling timer to prompt walking when we can again.
-- popular systems that expose balance &amp; equilibrium values can be added here as well, perhaps though a similarly-named function.

function mmp.canmove(fromtimer)
  if mapper_can_move and mapper_can_move() then
    if fromtimer then
      mmp.move()
    else
      return true
    end
  elseif mapper_can_move then
    tempTimer(0.2, [[mmp.canmove(true)]])
    return false
  end
  if not gmcp.Char then
    return true
  end
  -- Achaea
  -- Lusternia
 if
    (
      gmcp.Char and
      (not gmcp.Char.Vitals.bal or gmcp.Char.Vitals.bal == "1") and
      (not gmcp.Char.Vitals.eq or gmcp.Char.Vitals.eq == "1") and
      (not gmcp.Char.Vitals.balance or gmcp.Char.Vitals.balance == "1") and
      (not gmcp.Char.Vitals.equilibrium or gmcp.Char.Vitals.equilibrium == "1") and
      (not gmcp.Char.Vitals.right_arm or gmcp.Char.Vitals.right_arm == "1") and
      (not gmcp.Char.Vitals.left_arm or gmcp.Char.Vitals.left_arm == "1") and
      (not gmcp.Char.Vitals.right_leg or gmcp.Char.Vitals.right_leg == "1") and
      (not gmcp.Char.Vitals.left_leg or gmcp.Char.Vitals.left_leg == "1") and
      (not gmcp.Char.Vitals.psisuper or gmcp.Char.Vitals.psisuper ~= "0") and
      (not gmcp.Char.Vitals.psisub or gmcp.Char.Vitals.psisub ~= "0") and
      (not gmcp.Char.Vitals.psiid or gmcp.Char.Vitals.psiid ~= "0") and
      (not gmcp.Char.Balance or gmcp.Char.Balance.List.balance == "1") and
      (not gmcp.Char.Balance or gmcp.Char.Balance.List.equilibrium == "1") and
      (not gmcp.Char.Balance or gmcp.Char.Balance.List.rarm == "1") and
      (not gmcp.Char.Balance or gmcp.Char.Balance.List.larm == "1") and
      (not gmcp.Char.Balance or gmcp.Char.Balance.List.legs == "1") and
      (not gmcp.Char.Vitals.prone or (gmcp.Char.Vitals.prone == "0" or gmcp.Char.Vitals.prone == 0)
    ))
  then
    if fromtimer then
      mmp.move()
    else
      return true
    end
  else
    tempTimer(0.2, [[mmp.canmove(true)]])
    return false
  end
end

local oldnum

function speedwalking(event, num)
  local num = tonumber(num) or tonumber(gmcp.Room.Info.num)
  if num ~= mmp.currentroom then
    mmp.previousroom = mmp.currentroom
  end
  mmp.currentroom = num
  mmp.currentroomname = getRoomName(num)
  -- Try to track if we're flying or not, for Imperian wings
  -- This is to avoid being "off path" if we FLY due to wings.
  local madeflight = false
  if gmcp.Room then
    local flying = false
    if string.find(gmcp.Room.Info.name, "^flying above") then
      flying = true
    end
    if mmp.flying and not flying then
      -- We were flying, and now we are not. Gravity!
      mmp.flying = false
    elseif not mmp.flying and flying then
      -- We were not flying and now we are.
      madeflight = true
      mmp.flying = true
    elseif not flying then
      mmp.flying = false
    end
  else
    mmp.flying = false
  end
  -- track if we're inside or outside, if possible
  if gmcp.Room then
    local areaID = getRoomArea(mmp.currentroom)
    if
      mmp.inside and
      not (
        table.contains(gmcp.Room.Info.details, "indoors") or
        table.contains(gmcp.Room.Info.details, "considered indoors")
      ) and
      not mmp.orbed()
    then
      mmp.inside = false
      raiseEvent("mmapper went outside")
    elseif
      not mmp.inside and
      (
        table.contains(gmcp.Room.Info.details, "indoors") or
        table.contains(gmcp.Room.Info.details, "considered indoors") or
        mmp.orbed()
      )
    then
      mmp.inside = true
      raiseEvent("mmapper went inside")
    end
    if
      #table.n_union(
        mmp.getareacontinents(getRoomArea(mmp.previousroom)),
        mmp.getareacontinents(getRoomArea(num))
      ) ~= #mmp.getareacontinents(getRoomArea(num))
    then
      raiseEvent("mmapper changed continent")
    end
    -- the event could cancel speedwalking - in this case quit
    if mmp.ignore_speedwalking then
      mmp.ignore_speedwalking = nil
      return
    end
  end
  if oldnum == num then
    return
  else
    oldnum = num
  end
  if not mmp.autowalking then
    return
  end
  if mmp.movetimer then
    killTimer(mmp.movetimer)
    mmp.movetimer = false
  end
  if num == mmp.speedWalkPath[#mmp.speedWalkPath] then
    local walktime = stopStopWatch(speedWalkWatch)
    mmp.echo(string.format("We've arrived! Took us %.1fs.\n", walktime))
    raiseEvent("mmapper arrived")
    if mmp.settings.shackle then
      expandAlias("wear shackle")
    end
    mmp.speedWalkPath = {}
    mmp.speedWalkDir = {}
    speedWalkCounter = 0
    mmp.autowalking = false
  elseif mmp.speedWalkPath[speedWalkCounter] == num then
    speedWalkCounter = speedWalkCounter + 1
    tempPromptTrigger(mmp.move, 1)
  elseif mmp.game == "imperian" and madeflight then
    mmp.echo("We began flying!")
    tempPromptTrigger(mmp.move, 1)
  elseif
    #mmp.speedWalkPath &gt; 0 and
    not mmp.ferry_rooms[num] and
    not (gmcp.Room.Info.details and table.contains(gmcp.Room.Info.details, "ferry"))
  then
    -- ended up somewhere we didn't want to be, and this isn't a ferry room?
    speedWalkMoved = false
    -- re-calculate path then
    mmp.echo("Ended up off the path, recalculating a new path...")
    local destination = mmp.speedWalkPath[#mmp.speedWalkPath]
    if not mmp.getPath(num, destination) then
      mmp.echo(
        string.format(
          "Don't know how to get to %d (%s) anymore :( Move into a room we know of to continue",
          destination,
          getRoomName(destination)
        )
      )
    else
      mmp.gotoRoom(destination)
    end
  end
end

function doSpeedWalk(dashtype)
  mmp.speedWalkDir = mmp.deepcopy(speedWalkDir)
  mmp.speedWalkPath = mmp.deepcopy(speedWalkPath)
  speedWalkDir, speedWalkPath = {}, {}
  resetStopWatch(speedWalkWatch)
  startStopWatch(speedWalkWatch)
  if
    mmp.settings["gallop"] or
    mmp.settings["dash"] or
    mmp.settings.sprint or
    mmp.settings.runaway or
    dashtype
  then
    mmp.fixPath(
      mmp.currentroom,
      mmp.speedWalkPath[#mmp.speedWalkPath],
      (mmp.settings["gallop"] and "gallop") or
      (mmp.settings["dash"] and "dash") or
      (mmp.settings.sprint and "sprint") or
      (mmp.settings.runaway and "runaway") or
      dashtype
    )
  end
  mmp.fixSpecialExits(mmp.speedWalkDir)
  if #mmp.speedWalkPath == 0 then
    mmp.autowalking = false
    mmp.echo("Couldn't find a path to the destination :(")
    raiseEvent("mmapper failed path")
    if mmp.settings.shackle then
      expandAlias("wear shackle")
    end
    return
  end
  -- this is a fix: convert nums to actual numbers
  for i = 1, #mmp.speedWalkPath do
    mmp.speedWalkPath[i] = tonumber(mmp.speedWalkPath[i])
  end
  mmp.autowalking = true
  raiseEvent("s")
  if mmp.settings.shackle then
    expandAlias("remove shackle")
  end
  if not mmp.paused then
    mmp.echon("Starting speedwalk from " .. (atcp.RoomNum or gmcp.Room.Info.num) .. " to ")
    cechoLink(
      "&lt;" .. mmp.settings.echocolour .. "&gt;" .. mmp.speedWalkPath[#mmp.speedWalkPath],
      'mmp.gotoRoom "' .. mmp.speedWalkPath[#mmp.speedWalkPath] .. '"',
      'Go to ' .. mmp.speedWalkPath[#mmp.speedWalkPath],
      true
    )
    echo(": ")
    speedWalkCounter = 1
    if mmp.canmove() then
      mmp.hasty = true
      mmp.setmovetimer(0.1)
    else
      echo("(when we get balance back / aren't hindered)")
    end
  else
    mmp.echo(
      "Will go to " ..
      mmp.speedWalkPath[#mmp.speedWalkPath] ..
      " as soon as the mapper is unpaused."
    )
  end
end

function mmp.failpath()
  if mmp.movetimer then
    local walktime = stopStopWatch(speedWalkWatch)
    mmp.echo(string.format("Can't continue further! Took us %.1fs to get here.\n", walktime))
  end
  mmp.autowalking = false
  if mmp.settings.shackle then
    expandAlias("wear shackle")
  end
  mmp.speedWalkPath = {}
  mmp.speedWalkDir = {}
  speedWalkCounter = 0
  if mmp.movetimer then
    killTimer(mmp.movetimer)
    mmp.movetimer = nil
  end
  raiseEvent("mmapper failed path")
end

function mmp.changeBoolFunc(name, option)
  local en
  en = option and "will now use" or "will no longer use"
  mmp.echo("&lt;green&gt;Okay, the mapper " .. en .. " &lt;white&gt;" .. name .. "&lt;green&gt;!")
end

function mmp.fixPath(rFrom, rTo, dashtype)
  local currentPath, currentIds = {}, {}
  local dRef = {["n"] = "north", ["e"] = "east", ["s"] = "south", ["w"] = "west"}
  if not getPath(rFrom, rTo) then
    return false
  end
  -- Logic: Look for a direction repeated at least two times.
  -- count the number of times it repeats, then look that many rooms ahead.
  -- if that room also contains the direction we're headed, just travel that many directions.
  -- otherwise, dash.
  local repCount = 1
  local index = 1
  local dashExaust = false
  while mmp.speedWalkDir[index] do
    if not table.contains(getSpecialExits(mmp.speedWalkPath[index]), mmp.speedWalkDir[index]) then
      dashExaust = false
      repCount = 1
      while mmp.speedWalkDir[index + repCount] == mmp.speedWalkDir[index] do
        repCount = repCount + 1
        if repCount == 11 then
          dashExaust = true
          break
        end
      end
      if repCount &gt; 1 then
        -- Found direction repetition. Calculate dash path.
        local exits = getRoomExits(mmp.speedWalkPath[index + (repCount - 1)])
        local pname = ""
        for word in mmp.speedWalkDir[index]:gmatch("%w") do
          pname = pname .. (dRef[word] or word)
        end
        if not exits[pname] or dashExaust then
          -- Final room in this direction does not continue, dash!
          table.insert(currentPath, string.format("%s %s", dashtype, mmp.speedWalkDir[index]))
          currentIds[#currentIds + 1] = mmp.speedWalkPath[index + repCount - 1]
        else
          -- Final room in this direction continues onwards, don't dash unless on achaea
          if mmp.game == "achaea" then
            table.insert(
              currentPath, string.format("%s %s %s", dashtype, mmp.speedWalkDir[index], repCount)
            )
            currentIds[#currentIds + 1] = mmp.speedWalkPath[index + repCount - 1]
          else
            for i = 1, repCount do
              table.insert(currentPath, mmp.speedWalkDir[index])
              currentIds[#currentIds + 1] = mmp.speedWalkPath[index + i - 1]
            end
          end
        end
        index = index + repCount
      else
        -- No repetition, just add the direction.
        table.insert(currentPath, mmp.speedWalkDir[index])
        currentIds[#currentIds + 1] = mmp.speedWalkPath[index]
        index = index + 1
      end
    else
      -- Special exit, skip over this step
      table.insert(currentPath, mmp.speedWalkDir[index])
      currentIds[#currentIds + 1] = mmp.speedWalkPath[index]
      index = index + 1
    end
  end
  mmp.speedWalkDir = currentPath
  mmp.speedWalkPath = currentIds
  return true
end

-- a certain version of the mapper gave us special exits prepended with 0 or 1 in the command
-- depending on if it was locked. Need to remove these before we can use them

function mmp.fixSpecialExits(directions)
  for i = 1, #directions do
    if directions[i]:match("^%d") then
      directions[i] = directions[i]:sub(2)
    end
  end
end

-- cleanup function to remove the temp special exit we made

function mmp.clearspecials(deleterooms)
  local t = getSpecialExits(mmp.currentroom)
  for connectingroom, exits in pairs(t) do
    if table.contains(deleterooms, connectingroom) then
      -- delete the special exits linking to this room
      for command, locked in pairs(exits) do
        removeSpecialExit(mmp.currentroom, command)
      end
    end
  end
end

function mmp.getShortestOfMultipleRooms(possibleRooms)
  local shortestWeight, closestRoom = 10000000, 0
  local checkedsofar, outoftime = 0, false
  local getStopWatchTime, tonumber = getStopWatchTime, tonumber

  -- allocate only 500ms to finding the shortest path, or more if we failed to find anything
  mmp.computeShortestWatch = mmp.computeShortestWatch or createStopWatch()
  startStopWatch(mmp.computeShortestWatch)
  raiseEvent("mmp link externals")

  -- mmp.echo(string.format("Have %s rooms nodes, %ss taken so far...", table.size(possibleRooms), getStopWatchTime(mmp.computeShortestWatch)))
  for _, id in pairs(possibleRooms) do
    local possible, thisWeight = getPath(mmp.currentroom, tonumber(id))
    if possible and thisWeight &lt; shortestWeight then
      shortestWeight = thisWeight
      closestRoom = tonumber(id)
    end
    checkedsofar = checkedsofar + 1
    if (getStopWatchTime(mmp.computeShortestWatch) &gt;= .5) then
      outoftime = true
      break
    end

    -- mmp.echo(string.format("pathed from %s to %s, running time so far: %s", mmp.currentroom, id, getStopWatchTime(mmp.computeShortestWatch)))
  end
  --mmp.echo(string.format("total time took: %s", getStopWatchTime(mmp.computeShortestWatch)))
  stopStopWatch(mmp.computeShortestWatch)
  return closestRoom, outoftime, checkedsofar
end

function mmp.gotoAreaID(areaid, number, dashtype)
  if not areaid or not tonumber(areaid) then
    mmp.echo("To where do you want to go?")
    return
  end
  areaid = tonumber(areaid)
  if not mmp.areatabler[areaid] then
    mmp.echo("Invalid area ID selected")
    return
  end
  local possibleRooms, shortestBorder = {}, 0
  for id,_ in pairs(mmp.getAreaBorders(areaid)) do
    possibleRooms[#possibleRooms+1] = id
  end
  shortestBorder, outoftime, checkedsofar = mmp.getShortestOfMultipleRooms(possibleRooms)
  if shortestBorder == 0 then
    if outoftime then
      mmp.echo(
        string.format(
          "I checked %d of the %d possible exits \"%s\" has, but none of the ways there worked and it was taking too long :( try doing this again?",
          checkedsofar,
          table.size(possibleRooms),
          getRoomAreaName(areaid)
        )
      )
    else
      mmp.echo(
        "Checked " ..
        table.size(possibleRooms) ..
        " exits in that area, and none of them worked :( I Don't know how to get you there."
      )
    end
    mmp.speedWalkPath = {}
    mmp.speedWalkDir = {}
    speedWalkCounter = 0
    raiseEvent("mmapper failed path")
    raiseEvent("mmp clear externals")
    return
  end
  raiseEvent("mmp clear externals")
  mmp.gotoRoom(shortestBorder, dashtype, "area")
end

function mmp.gotoFeature(partialFeatureName, dashtype)
  local mapFeatures = mmp.getMapFeatures()
  local feature
  if mapFeatures[partialFeatureName:lower()] then
    feature = partialFeatureName:lower()
  else
    for key in pairs(mapFeatures) do
      if key:find(partialFeatureName:lower()) then
        feature = key
        break
      end
    end
  end
  if not feature then
    mmp.echo("No feature like " .. partialFeatureName .. " found.")
    return
  end
  local possibleRooms = searchRoomUserData("feature-" .. feature, "true")
  closestFeature, outoftime, checkedsofar = mmp.getShortestOfMultipleRooms(possibleRooms)
  if closestFeature == 0 then
    if outoftime then
      mmp.echo(
        string.format(
          "I checked %d of the %d possible features \"%s\" has, but none of the ways there worked and it was taking too long :( try doing this again?",
          checkedsofar,
          table.size(possibleRooms),
          partialFeatureName
        )
      )
    else
      mmp.echo(
        "Checked " ..
        table.size(possibleRooms) ..
        " rooms with that feature, and none of them worked :( I Don't know how to get you there."
      )
    end
    mmp.speedWalkPath = {}
    mmp.speedWalkDir = {}
    speedWalkCounter = 0
    raiseEvent("mmapper failed path")
    raiseEvent("mmp clear externals")
    return
  end
  raiseEvent("mmp clear externals")
  mmp.gotoRoom(closestFeature, dashtype, "area")
end</script>
					<eventHandlerList>
						<string>RoomNum</string>
						<string>gmcp.Room.Info</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>mmapper_went_outside</name>
					<packageName></packageName>
					<script>--genericized version of the went_outside event handlers.
--when you go outside, it sees if a shorter path can be found using external links. If so, routes you on the new path instead.
function mmapper_went_outside()
  if
    not mmp.autowalking or
    (mmp.currentroom == mmp.speedWalkPath[#mmp.speedWalkPath]) or
    table.contains(gmcp.Room.Info.details, "indoors") or
    table.contains(gmcp.Room.Info.details, "considered indoors") or
    mmp.orbed(mmp.currentroom)
  then
    return
  end
  -- repath, maybe that'll allow us to use wings now.
  local previousDirection = mmp.speedWalkDir[speedWalkCounter + 1]
  if mmp.speedWalk.type == "room" then
    raiseEvent("mmp link externals")
    mmp.getPath(mmp.currentroom, mmp.speedWalkPath[#mmp.speedWalkPath])
    raiseEvent("mmp clear externals")
    -- don't need to check return value since that fact shouldnt've changed
  else
    mmp.gotoAreaID(getRoomArea(mmp.speedWalkPath[#mmp.speedWalkPath]))
  end
  -- if our path didn't change, re-instate it as it was (since the new path starts from this room that we checked at)
  if speedWalkDir[1] ~= previousDirection then
    speedWalkCounter = 0
    mmp.echo("We got outside - going to shortcut with travel device.")
    if mmp.speedWalk.type == "room" then
      mmp.gotoRoom(mmp.speedWalkPath[#mmp.speedWalkPath])
    else
      mmp.gotoAreaID(getRoomArea(mmp.speedWalkPath[#mmp.speedWalkPath]))
    end
    mmp.ignore_speedwalking = true
  end
end</script>
					<eventHandlerList>
						<string>mmapper went outside</string>
						<string>mmapper changed continent</string>
					</eventHandlerList>
				</Script>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Wings and other fast travel</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Wings functions</name>
						<packageName></packageName>
						<script>local exitsCreated = exitsCreated or {}

function mmp.tempSpecialExit(start, destination, command, weight)
  if type(destination) == "string" then
    -- no start room given, so shift all arguments one to the right
    start, destination, command, weight = mmp.currentroom, start, destination, command
  end
  table.insert(exitsCreated, {room = start, command = command})
  addSpecialExit(start, destination, command)
  if weight then
    setExitWeight(start, command, weight)
  end
end

function mmp.removeWings()
  --remove all special exits that were created by addWings, then resets the table.
  for _, exit in ipairs(exitsCreated) do
    removeSpecialExit(exit.room, exit.command)
  end
  exitsCreated = {}
end

registerAnonymousEventHandler("mmp clear externals", "mmp.removeWings")</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Achaea</name>
						<packageName></packageName>
						<script>registerAnonymousEventHandler("mmp link externals", "mmp.addWingsAchaea")



function mmp.addWingsAchaea()
  --Trimmed down version of the original function, meant to only be used for wings. (Where the command varies based on several MCONFIGS)

  local function getcmd(word)
    return
      mmp.settings.removewings and
      string.format(
        [[script:sendAll("wear wings", "say *%s %s", "remove wings", false)]],
        (mmp.settings.winglanguage and mmp.settings.winglanguage or ""),
        word
      ) or
      string.format(
        [[script:send("say *%s %s", false)]],
        (mmp.settings.winglanguage and mmp.settings.winglanguage or ""),
        word
      )
  end

  --Achaea stuff!
  if mmp.game ~= "achaea" then
    return
  end
  local area = getRoomArea(mmp.currentroom)
  --WINGS!
  if
    (mmp.settings.duanathar or mmp.settings.duanatharan or mmp.settings.duantahar) and
    not mmp.inside
  then
    --Sarapis wings.
    if mmp.oncontinent(area, "Main") then
      if mmp.settings.duanatharan then
        mmp.tempSpecialExit(4882, getcmd("duanatharan"))
        mmp.tempSpecialExit(3885, getcmd("duanathar"))
      elseif mmp.settings.duantahar then
        mmp.tempSpecialExit(42319, getcmd("duanathar"))
        mmp.tempSpecialExit(4882, getcmd("duanatharan"))
      else
        mmp.tempSpecialExit(3885, getcmd("duanathar"))
      end
      --Meropis Wings
    elseif mmp.oncontinent(area, "Meropis") then
      if mmp.settings.duanatharan then
        mmp.tempSpecialExit(51603, getcmd("duanatharan"))
        mmp.tempSpecialExit(51188, getcmd("duanathar"))
      elseif mmp.settings.duantahar then
        mmp.tempSpecialExit(42319, getcmd("duanathar"))
        mmp.tempSpecialExit(51603, getcmd("duanatharan"))
      else
        mmp.tempSpecialExit(51188, getcmd("duanathar"))
      end
    end
  end
  --Island wings.
  if mmp.settings.duanatharic and not mmp.inside then
    if
      mmp.oncontinent(area, "Main") or
      mmp.oncontinent(area, "Arcadia") or
      mmp.oncontinent(area, "Outer") or
      mmp.oncontinent(area, "Meropis") or
      mmp.oncontinent(area, "Island") or
      mmp.oncontinent(area, "North")
    then
      mmp.tempSpecialExit(47571, getcmd("duanatharic"))
    end
  end
  -- Stratospheric Harness support -- PapaGuacamole
  if mmp.settings.harness and not mmp.inside then
    -- eastern isles
    if mmp.oncontinent(area, "Eastern_Isles") then
      mmp.tempSpecialExit(54231, "Shake Harness")
      -- northern isles
    elseif mmp.oncontinent(area, "Northen_Isles") then
      mmp.tempSpecialExit(48719, "Shake Harness")
      -- western isles
    elseif mmp.oncontinent(area, "Western_Isles") then
      mmp.tempSpecialExit(54632, "Shake Harness")
    end
  end
  -- Air Elemental Aero Soar
  if mmp.settings.soar and not mmp.inside then
    --Sarapis soar.
    if mmp.oncontinent(area, "Main") then
      if
        gmcp.Char.Status.class == "air Elemental Lord" or
        gmcp.Char.Status.class == "air Elemental Lady"
      then
        mmp.tempSpecialExit(4882, "aero soar high", 10)
        -- duanatharan
        mmp.tempSpecialExit(3885, "aero soar low", 10)
        -- duanathar
        mmp.tempSpecialExit(54173, "aero soar stratosphere", 10)
        -- Stratosphere!
      end
      --Meropis soar
    elseif mmp.oncontinent(area, "Meropis") then
      if
        gmcp.Char.Status.class == "air Elemental Lord" or
        gmcp.Char.Status.class == "air Elemental Lady"
      then
        mmp.tempSpecialExit(51603, "aero soar high", 10)
        -- duanatharan
        mmp.tempSpecialExit(51188, "aero soar low", 10)
        -- duanathar
        mmp.tempSpecialExit(54173, "aero soar stratosphere", 10)
        -- Stratosphere!
      end
    end
  end
  --universe tarot
  if mmp.settings.universe and mmp.oncontinent(area, "Main") then
    local tarotLocations =
      {
        azdun = 1772,
        blackrock = 10573,
        bitterfork = 25093,
        genji = 10091,
        manusha = 8730,
        newthera = 20386,
        caerwitrin = 17678,
        shastaan = 2855,
        mannaseh = 1745,
        manara = 9124,
        brasslantern = 30383,
        mhojave = 39103,
        thraasi = 35703,
        newhope = 25581,
      }
    for village, roomnum in pairs(tarotLocations) do
      mmp.tempSpecialExit(
        roomnum,
        [=[script:
        mmp.customwalkdelay(4.5)
        send("fling universe at ground",false)
        tempTimer(4,[[send("touch ]=] ..
        village ..
        [=[",false)]])
        ]=],
        10
      )
    end
  end
  --gare
  if mmp.settings.gare and gmcp.Char and string.match(gmcp.Char.Status.race, "Dragon") then
    if
      mmp.oncontinent(area, "Main") or
      mmp.oncontinent(area, "Meropis") or
      mmp.oncontinent(area, "Island") or
      mmp.oncontinent(area, "North") or
      mmp.oncontinent(area, "Arcadia")
    then
      mmp.tempSpecialExit(
        12695,
        [=[script:
        mmp.customwalkdelay(4.5)
        send("pierce the veil",false)
        ]=],
        20
      )
    end
  end
  mmp.clearpathcache()
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Achaea betterWings</name>
						<packageName></packageName>
						<script>--builds a table based on current orb settings, then returns a function which can be used to quickly check that table.

local function orbedBlackList()
  local bannedAreas = {}
  local areaTable = mmp.getAchaeaOrbTable()
  for org, areas in pairs(areaTable) do
    for _, area in pairs(areas) do
      bannedAreas[area] = mmp.settings["orb" .. org]
    end
  end
  return
    function(roomId)
      return not bannedAreas[getRoomArea(roomId)]
    end
end

--searches for closest room that meets requirements.
--does stuff to handle weighted rooms, locked rooms, special exits.

local function closestOutdoors(startRoom)
--visited is rooms which have already been found by the search.
  local visited = {[startRoom] = true}
  --checking is the rooms that it is currently checking to see if they meet the desired conditions.
  local checking = {[startRoom] = true}
  --nextCheck is a list of rooms which will be checked once the algorithm is finished with the rooms in checking.
  local nextCheck = {}
  --weightedRooms contains rooms with greater than 1 weight, so that they can be handled differently.
  local weightedRooms = {}
  local orbed = orbedBlackList()

  --functions for handling weighted rooms.
  local function addWeighted(room, weight)
    if not weightedRooms[room] or weight &lt; weightedRooms[room] then
      weightedRooms[room] = weight
    end
  end

  --this function subtracts 1 from every room weight in the weighted room list.
  --if they hit zero then it will add them to the checking table and removes them from weightedRooms

  local function reduceWeights()
    --display(weightedRooms)
    local toDelete = {}
    for room, weight in pairs(weightedRooms) do
      weightedRooms[room] = weightedRooms[room] - 1
      if weightedRooms[room] &lt;= 0 then
        if not visited[room] then
          checking[room] = true
          visited[room] = true
        end
        toDelete[room] = true
      end
    end
    --cleans up the weighted stuff.
    for room, _ in pairs(toDelete) do
      weightedRooms[room] = nil
    end
  end

  local stopwatch = createStopWatch()
  startStopWatch(stopwatch)
  --only willing to search for 500ms. Will abort in longer cases,
  while getStopWatchTime(stopwatch) &lt; .5 do
    for room, val in pairs(checking) do
      --if these conditions are met, returns a roomid and exits out.
      --probably doesn't work great on weird planes, as when off plane, the room returned may not work for wings.
      if getRoomUserData(room, "outdoors") == "y" and orbed(room) then
        return room
      end
      local weights = getExitWeights(room)
      --loops through all exits in the room, doing stuff.
      for direction, destRoom in pairs(getRoomExits(room)) do
        if not hasExitLock(room, direction) and not visited[destRoom] then
          --if the exit+roomweight is higher than 1 (the default, for 1 room weight + 0 exit weight), then do a room weight subroutine
          if
            (((weights[direction] or 0) + getRoomWeight(destRoom)) &gt; 1) and not roomLocked(destRoom)
          then
            addWeighted(destRoom, (weights[direction] or 0) + getRoomWeight(destRoom))
          else
            --add it to visited, so it doesn't double back on it in the future.
            visited[destRoom] = true
            --if it's not locked, add it to nextCheck, which are the rooms that it searches through next cycle.
            --if it is locked, just ignore it.
            if not roomLocked(destRoom) then
              nextCheck[destRoom] = true
            end
          end
        end
      end
      --same as above loop, but for specialExits
      for destRoom, specialExits in pairs(getSpecialExits(room)) do
        for specialExit, locked in pairs(specialExits) do
          if locked == "0" and not visited[destRoom] then
            if
              (((weights[direction] or 0) + getRoomWeight(destRoom)) &gt; 1) and
              not roomLocked(destRoom)
            then
              addWeighted(destRoom, (weights[direction] or 0) + getRoomWeight(destRoom))
            else
              visited[destRoom] = true
            end
            if not roomLocked(destRoom) then
              nextCheck[destRoom] = true
            end
          end
        end
      end
    end
    --replaces checking with the next set of rooms to check, and clears nextCheck.
    checking, nextCheck = nextCheck, {}
    reduceWeights()
    --if no rooms on checking and weightedRooms, exits out.
    --If no rooms in checking but there are rooms in weightedRooms, it will iterate down the weights until something is in checking.
    if not next(checking) then
      if next(weightedRooms) then
        while next(weightedRooms) and not next(checking) do
          reduceWeights()
        end
      else
        return
      end
    end
  end
end

--does the actual linking and stuff. Mostly copied over from the main wings script.
--however, half of the checks have been removed because they were already done in the process
--of searching for a valid outdoors room.

local function linkWingsRemote(room)
  local function getcmd(word)
    return
      mmp.settings.removewings and
      string.format(
        [[script:sendAll("wear wings", "say *%s %s", "remove wings", false)]],
        (mmp.settings.winglanguage and mmp.settings.winglanguage or ""),
        word
      ) or
      string.format(
        [[script:send("say *%s %s", false)]],
        (mmp.settings.winglanguage and mmp.settings.winglanguage or ""),
        word
      )
  end

  --decided to pull this out and set it as a local variable instead of calling it 20x throughout the script.
  local area = getRoomArea(room)
  --sarapis wings
  if (mmp.settings.duanathar or mmp.settings.duanatharan or mmp.settings.duantahar) then
    if mmp.oncontinent(area, "Main") then
      if mmp.settings.duanatharan then
        mmp.tempSpecialExit(room, 4882, getcmd("duanatharan"))
        mmp.tempSpecialExit(room, 3885, getcmd("duanathar"))
      elseif mmp.settings.duantahar then
        mmp.tempSpecialExit(room, 42319, getcmd("duanathar"))
        mmp.tempSpecialExit(room, 4882, getcmd("duanatharan"))
      else
        mmp.tempSpecialExit(room, 3885, getcmd("duanathar"))
      end
      --Meropis Wings
    elseif mmp.oncontinent(area, "Meropis") then
      if mmp.settings.duanatharan then
        mmp.tempSpecialExit(room, 51603, getcmd("duanatharan"))
        mmp.tempSpecialExit(room, 51188, getcmd("duanathar"))
      elseif mmp.settings.duantahar then
        mmp.tempSpecialExit(room, 42319, getcmd("duanathar"))
        mmp.tempSpecialExit(room, 51603, getcmd("duanatharan"))
      else
        mmp.tempSpecialExit(room, 51188, getcmd("duanathar"))
      end
    end
  end
  --island wings
  if
    mmp.settings.duanatharic and
    (
      mmp.oncontinent(area, "Main") or
      mmp.oncontinent(area, "Arcadia") or
      mmp.oncontinent(area, "Outer") or
      mmp.oncontinent(area, "Meropis") or
      mmp.oncontinent(area, "Island") or
      mmp.oncontinent(area, "North")
    )
  then
    mmp.tempSpecialExit(room, 47571, getcmd("duanatharic"))
  end
  if mmp.settings.harness then
    -- eastern isles
    if mmp.oncontinent(area, "Eastern_Isles") then
      mmp.tempSpecialExit(room, 54231, "Shake Harness")
      -- northern isles
    elseif mmp.oncontinent(area, "Northen_Isles") then
      mmp.tempSpecialExit(room, 48719, "Shake Harness")
      -- western isles
    elseif mmp.oncontinent(area, "Western_Isles") then
      mmp.tempSpecialExit(room, 54632, "Shake Harness")
    end
  end
  if mmp.settings.soar then
    --Sarapis soar.
    if mmp.oncontinent(area, "Main") then
      if
        gmcp.Char.Status.class == "air Elemental Lord" or
        gmcp.Char.Status.class == "air Elemental Lady"
      then
        mmp.tempSpecialExit(room, 4882, "aero soar high", 10)
        -- duanatharan
        mmp.tempSpecialExit(room, 3885, "aero soar low", 10)
        -- duanathar
        mmp.tempSpecialExit(room, 54173, "aero soar stratosphere", 10)
        -- Stratosphere!
      end
      --Meropis soar
    elseif mmp.oncontinent(area, "Meropis") then
      if
        gmcp.Char.Status.class == "air Elemental Lord" or
        gmcp.Char.Status.class == "air Elemental Lady"
      then
        mmp.tempSpecialExit(room, 51603, "aero soar high", 10)
        -- duanatharan
        mmp.tempSpecialExit(room, 51188, "aero soar low", 10)
        -- duanathar
        mmp.tempSpecialExit(room, 54173, "aero soar stratosphere", 10)
        -- Stratosphere!
      end
    end
  end
  mmp.clearpathcache()
end

--is called when you do pathfinding.

function mmp.achaeaBetterWings()
  --if you're not on achaea, or the crowdmap is not enabled, or the room you're in is flagged as outdoors, exit out.
  if
    (mmp.game ~= "achaea") or
    (not mmp.settings.betterwings) or
    (not mmp.settings.crowdmap) or
    (getRoomUserData(mmp.currentroom, "outdoors") == "y" and orbedBlackList()(mmp.currentroom))
  then
    return
  end
  --if none of the shortcut items are enabled, return.
  if
    not (
      mmp.settings.duanathar or
      mmp.settings.duantahar or
      mmp.settings.duanatharan or
      mmp.settings.soar or
      mmp.settings.harness or
      mmp.settings.duanatharic
    )
  then
    return
  end
  --find closest room, if that function returned something useful, call above function to create temporary remote special exits depending on settings.
  local closestRoom = closestOutdoors(mmp.currentroom)
  if closestRoom then
    if mmp.debug then
      mmp.echo("Closest outdoors room found at "..closestRoom)
    end
    linkWingsRemote(closestRoom)
  end
end

registerAnonymousEventHandler("mmp link externals", "mmp.achaeaBetterWings")</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Lusternia</name>
						<packageName></packageName>
						<script>registerAnonymousEventHandler("mmp link externals", "mmp.addWingsLusternia")

function mmp.addWingsLusternia()
  if mmp.game ~= "lusternia" then
    return
  end
  --items that use standard bix rules
  if mmp.usebix() then
    --cubix and things
    if mmp.settings.medallion then
      mmp.tempSpecialExit(13367, "touch medallion")
    end
    if mmp.settings.cubix then
      mmp.tempSpecialExit(6184, "touch cubix")
    end
    if mmp.settings.torus and mmp.usebix() then
      mmp.tempSpecialExit(28548, "touch torus")
    end
    --epic quest items
    if mmp.settings.fingerblade then
      mmp.tempSpecialExit(18777, "touch fingerblade")
    end
    if mmp.settings.blossom then
      mmp.tempSpecialExit(18730, "touch blossom")
    end
    if mmp.settings.mandala then
      mmp.tempSpecialExit(19563, "touch mandala")
    end
    if mmp.settings.belt then
      mmp.tempSpecialExit(19627, "touch enlightened")
    end
    if mmp.settings.mantle then
      mmp.tempSpecialExit(18762, "touch starlight")
    end
    if mmp.settings.key then
      mmp.tempSpecialExit(18732, "touch key")
    end
  end
  --things which use prism rules
  if mmp.useprism() then
    if mmp.settings.prism then
      mmp.tempSpecialExit(6182, "touch prism")
    end
    --curio collections
    if mmp.settings.bonecurio then
      mmp.tempSpecialExit(28613, "curio collection activate bone")
    end
    if mmp.settings.flowercurio then
      mmp.tempSpecialExit(28624, "curio collection activate flower")
    end
    if mmp.settings.utensilcurio then
      mmp.tempSpecialExit(28617, "curio collection activate utensil")
    end
    if mmp.settings.fluttercurio then
      mmp.tempSpecialExit(28622, "curio collection activate flutter")
    end
    if mmp.settings.toolcurio then
      mmp.tempSpecialExit(28586, "curio collection activate tool")
    end
    if mmp.settings.facecurio then
      mmp.tempSpecialExit(28433, "curio collection activate face")
    end
    if mmp.settings.toycurio then
      mmp.tempSpecialExit(21548, "curio collection activate toy")
    end
    if mmp.settings.feathercurio then
      mmp.tempSpecialExit(28591, "curio collection activate feather")
    end
    if mmp.settings.figurecurio then
      mmp.tempSpecialExit(28312, "curio collection activate figure")
    end
    if mmp.settings.vernalcurio then
      mmp.tempSpecialExit(29908, "curio collection activate vernal")
    end
    if mmp.settings.soullesscurio then
      mmp.tempSpecialExit(29909, "curio collection activate soulless")
    end
  end
  --all the bubblixes!
  local bubblixes =
    {
      {
        setting = "figurine",
        item = "icebix",
        room = 23187,
        areas = {"Northern Icewynd Mountains", "Southern Icewynd Mountains"},
      },
      {setting = "twist", item = "diobix", room = 18203, areas = {"Mount Dio"}},
      {setting = "snowglobe", item = "treebix", room = 10992, areas = {"the Great Spirit Tree"}},
      {setting = "periscope", item = "aquabix", room = 36073, areas = {"Aquagoria"}},
      {setting = "pebble", item = "lyraabix", room = 33825, areas = {"Lyraa Ey Rielys"}},
      {setting = "shard", item = "xionbix", room = 12652, areas = {"the Workshop of Xion"}},
      {setting = "cookie", item = "crumbix", room = 9888, areas = {"Crumkindivia"}},
      {setting = "wheel", item = "drambix", room = 10509, areas = {"the Dramube Triangle"}},
      {setting = "head", item = "bottlebix", room = 11811, areas = {"the Bubble of Bottledowns"}},
      {setting = "icicle", item = "frostbix", room = 10457, areas = {"Frosticia"}},
      {setting = "screwdriver", item = "facbix", room = 10185, areas = {"the Facility"}},
      {setting = "mud", item = "mucklebix", room = 9985, areas = {"Mucklemarsh"}},
      {
        setting = "tibia",
        item = "cankerbix",
        room = 11600,
        areas = {"the Cankermore Battlegrounds"},
      },
    }
  local shortcutCreated = false
  for _, bubblix in pairs(bubblixes) do
    if mmp.settings[bubblix.setting] then
      local command = "touch " .. bubblix.item
      if not shortcutCreated then
        --for the first bubblix in the list, let it be used as a shortcut to aetherplex.
        mmp.tempSpecialExit(bubblix.room, 6831, command)
        shortcutCreated = true
      end
      --for every bix, create an exit from outside aetherplex to the bubble.
      mmp.tempSpecialExit(148, bubblix.room, command)
      if mmp.usebubblix() then
        if table.contains(bubblix.areas, gmcp.Room.Info.area) then
          mmp.tempSpecialExit(mmp.currentroom, 6831, command)
        elseif not table.contains(gmcp.Room.Info.details, "an Aetherbubble") then
          mmp.tempSpecialExit(mmp.currentroom, bubblix.room, command)
        end
      end
    end
  end
  --one use button travel!
  if mmp.settings.buttons then
    local colors =
      {
        blue = 36073,
        brown = 11811,
        black = 11600,
        yellow = 9888,
        red = 10509,
        steel = 10185,
        white = 10457,
        purple = 47812,
        green = 9985,
        crystal = 12652,
        wooden = 10992,
      }
    local exitScript = [[script:sendAll("outr %sbutton", "touch %sbutton", false)]]
    if
      table.contains(gmcp.Room.Info.details, "the Prime Material Plane") and
      table.contains(gmcp.Room.Info.details, "outdoors")
    then
      for color, room in pairs(colors) do
        mmp.tempSpecialExit(mmp.currentroom, room, exitScript:format(color, color), 20)
      end
    else
      for color, room in pairs(colors) do
        mmp.tempSpecialExit(148, room, exitScript:format(color, color), 20)
      end
    end
  end
  --basin of life specific travel devices
  if mmp.settings.compass then
    local startingRoom = mmp.lusterniaInBasin() and mmp.currentroom or 148
    local compassPoints =
      {
        north = 21695,
        northeast = 10742,
        northwest = 6546,
        east = 9789,
        southeast = 14998,
        south = 10670,
        southwest = 19613,
        west = 20037,
      }
    for direction, destinationRoom in pairs(compassPoints) do
      mmp.tempSpecialExit(startingRoom, destinationRoom, "Touch compass " .. direction, 40)
    end
  end
  mmp.clearpathcache()
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Imperian</name>
						<packageName></packageName>
						<script>registerAnonymousEventHandler("mmp link externals", "mmp.addWingsImperian")
mmp.imperian = mmp.imperian or {}

function mmp.addWingsImperian()
  local function getcmd(word)
    return
      mmp.settings.removewings and
      [[script:if mmp.flying then sendAll("queue eqbal wear wings","queue eqbal say ]] ..
      word ..
      [[","queue eqbal remove wings",false) else sendAll("wear wings","fly",false) end]] or
      [[script:if mmp.flying then sendAll("queue eqbal say ]] ..
      word ..
      [[",false) else sendAll("fly",false) end]]
  end

  if
    (mmp.settings.shekinah or mmp.settings.suriel) and
    gmcp.Room and
    not table.contains(gmcp.Room.Info.details, "indoors") and
    not table.contains(gmcp.Room.Info.details, "considered indoors") and
    table.contains(mmp.imperian.wingAbleAreas, getRoomArea(mmp.currentroom))
  then
    if mmp.settings.shekinah then
      -- Seraphim wings - "Say shekinah"
      local weight = 15
      if mmp.flying then
        weight = 1
      end
      mmp.tempSpecialExit(4882, getcmd("shekinah"), weight)
    elseif mmp.settings.suriel then
      -- Using Orphanim wings, SURIEL works, takes you to 3885
      local weight = 15
      if mmp.flying == "1" then
        weight = 1
      end
      mmp.tempSpecialExit(3885, getcmd("suriel"), weight)
      -- clear cache so mmp.getPath accounts for the new way
    end
  end
  mmp.clearpathcache()
end

mmp.imperian.wingAbleAreas =
  {
    45,
    35,
    15,
    56,
    101,
    123,
    36,
    110,
    18,
    75,
    172,
    9,
    66,
    148,
    113,
    175,
    188,
    244,
    88,
    171,
    118,
    295,
    167,
    25,
    139,
    70,
    132,
    28,
    135,
    174,
    8,
    275,
    107,
    53,
    112,
    185,
    158,
    164,
    299,
    74,
    351,
    16,
    63,
    269,
    77,
    85,
    142,
    328,
    318,
    46,
    95,
    17,
    329,
    33,
    96,
    82,
    47,
    144,
    121,
    3,
    68,
    51,
    134,
    1,
    319,
    11,
    19,
    129,
    146,
    65,
    324,
    325,
    125,
    191,
    163,
    30,
    54,
    292,
    290,
    7,
    136,
    267,
    335,
    102,
    43,
    89,
    20,
    169,
    49,
    147,
    196,
    301,
    252,
    99,
    145,
    195,
    130,
    42,
    270,
    166,
    128,
    168,
    34,
    223,
    170,
    22,
    27,
    138,
    115,
    337,
    44,
    6,
    161,
    32,
    92,
    83,
    294,
    104,
    69,
    23,
    155,
    350,
    48,
    57,
    150,
    97,
    341,
    105,
    340,
    5,
    194,
    338,
    327,
    271,
    323,
    322,
    79,
    122,
    62,
    131,
    176,
    133,
    310,
    307,
    120,
    137,
    13,
    76,
    160,
    60,
    304,
    94,
    306,
    303,
    81,
    291,
    276,
    302,
    149,
    297,
    179,
    272,
    41,
    293,
    289,
    91,
    159,
    71,
    157,
    298,
    266,
    208,
    109,
    80,
    14,
    2,
    186,
    12,
    178,
    52,
    124,
    274,
    141,
    343,
    177,
    67,
    103,
    111,
    72,
    268,
    87,
    117,
    21,
    353,
    253,
    93,
    308,
    40,
    248,
    243,
    4,
    153,
    212,
    116,
    84,
    197,
    61,
    78,
    184,
    173,
    31,
    98,
    114,
    162,
    50,
    37,
    140,
    73,
    127,
    156,
    90,
    100,
    143,
    309,
    126,
  }</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<Script isActive="yes" isFolder="no">
					<name>Utilities</name>
					<packageName></packageName>
					<script>-- functions internal to the mapper

function mmp.highlight_unfinished_rooms()
	if not mmp.areatable then return end
	for a,b in pairs (mmp.areatable) do
		local roomList = getAreaRooms(b) or {}
		for c,d in pairs (roomList) do
			if (getRoomName(d) == "") then
				local fgr,fgg,fgb = unpack(color_table.red)
				local bgr,bgg,bgb = unpack(color_table.blue)
				highlightRoom(d, fgr,fgg,fgb,bgr,bgg,bgb, 1, 100, 100)
			end
		end
	end
end

function mmp.usebix()
	if mmp.game ~= "lusternia" then return end

	if (table.contains(gmcp.Room.Info.details, "the Prime Material Plane") or
		table.contains(gmcp.Room.Info.details, "the Ethereal Plane") or
		table.contains(gmcp.Room.Info.details, "the Water Elemental Plane") or
		table.contains(gmcp.Room.Info.details, "the Air Elemental Plane") or
		table.contains(gmcp.Room.Info.details, "the Fire Elemental Plane") or
		table.contains(gmcp.Room.Info.details, "the Earth Elemental Plane") or
		table.contains(gmcp.Room.Info.details, "Celestia, Plane of Light") or
		table.contains(gmcp.Room.Info.details, "the Tainted Plane of Nil") or
		table.contains(gmcp.Room.Info.details, "the Cosmic Plane of Continuum") or
		table.contains(gmcp.Room.Info.details, "the Cosmic Plane of Vortex") or
		table.contains(gmcp.Room.Info.details, "the Astral Plane")) and
        gmcp.Room.Info.area ~= "the City of Climanti" and
		table.contains(gmcp.Room.Info.details, "outdoors") then
		return true
	end
	return false
end

function mmp.useprism()
	if mmp.game ~= "lusternia" then return end
	if (table.contains(gmcp.Room.Info.details, "the Prime Material Plane") or
	table.contains(gmcp.Room.Info.details, "the Ethereal Plane") or
	table.contains(gmcp.Room.Info.details, "the Water Elemental Plane") or
	table.contains(gmcp.Room.Info.details, "the Air Elemental Plane") or
	table.contains(gmcp.Room.Info.details, "the Fire Elemental Plane") or
	table.contains(gmcp.Room.Info.details, "the Earth Elemental Plane")) and
    gmcp.Room.Info.area ~= "the City of Climanti" and
	table.contains(gmcp.Room.Info.details, "outdoors") then
		return true
	end
	return false
end
function mmp.usebubblix()
	if mmp.game ~= "lusternia" then return end

	if ((table.contains(gmcp.Room.Info.details, "the Prime Material Plane") or
		table.contains(gmcp.Room.Info.details, "the Ethereal Plane") or
		table.contains(gmcp.Room.Info.details, "the Water Elemental Plane") or
		table.contains(gmcp.Room.Info.details, "the Air Elemental Plane") or
		table.contains(gmcp.Room.Info.details, "the Fire Elemental Plane") or
		table.contains(gmcp.Room.Info.details, "the Earth Elemental Plane")) and
        gmcp.Room.Info.area ~= "the City of Climanti" and
		table.contains(gmcp.Room.Info.details, "outdoors")) or
		table.contains(gmcp.Room.Info.details, "an Aetherbubble") then
		return true
	end
	return false
end</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Locating &amp; echoing functions</name>
						<packageName></packageName>
						<script>function mmp.filterRooms(rooms, area)
  local unassignedRooms = {}
  local areaRooms = {}
  for roomnum, roomname in pairs(rooms) do
    local roomarea = getRoomUserData(roomnum, "Game Area")
    if roomarea == "" then
      unassignedRooms[roomnum] = roomname
    elseif roomarea == area then
      areaRooms[roomnum] = roomname
    end
  end
  return next(areaRooms) and areaRooms or unassignedRooms
end

-- for a given room name, we'll echo all the vnums

function mmp.echonums(roomname, area)
  local t = mmp.searchRoomExact(roomname)
  if area then
    t = mmp.filterRooms(t, area)
  end
  if not next(t) then
    echo("?")
    return nil
  end
  -- transform the kv table into a table of tables for cleaner code.
  -- + perhaps Mudlet in future will give this us anyway, sorted by relevancy
  local dt = {}
  for roomid, room in pairs(t) do
    dt[#dt + 1] = {name = room, id = roomid}
  end
  -- we can have nothing if we asked for exact match
  if not dt[1] then
    echo("?---")
    return
  end
  -- display first three ids. Can't really nicely table.concat them.
  cechoLink(
    "&lt;" .. mmp.settings.echocolour .. "&gt;" .. dt[1].id,
    'mmp.gotoRoom(' .. dt[1].id .. ')',
    string.format("Go to %s (%s)", dt[1].id, dt[1].name),
    true
  )
  if not dt[2] then
    return
  end
  echo(", ")
  cechoLink(
    "&lt;" .. mmp.settings.echocolour .. "&gt;" .. dt[2].id,
    'mmp.gotoRoom(' .. dt[2].id .. ')',
    string.format("Go to %s (%s)", dt[2].id, dt[2].name),
    true
  )
  if not dt[3] then
    return
  end
  echo(", ")
  cechoLink(
    "&lt;" .. mmp.settings.echocolour .. "&gt;" .. dt[3].id,
    'mmp.gotoRoom(' .. dt[3].id .. ')',
    string.format("Go to %s (%s)", dt[3].id, dt[3].name),
    true
  )
  if not dt[4] then
    return
  end
  echo(", ...")
end

function mmp.roomEcho(query)
  local result = mmp.searchRoom(query)
  if not tonumber(select(2, next(result))) then
    for roomid, roomname in pairs(result) do
      roomid = tonumber(roomid)
      cecho("&lt;DarkSlateGrey&gt; (")
      cechoLink(
        "&lt;" .. mmp.settings.echocolour .. "&gt;" .. roomid,
        'mmp.gotoRoom(' .. roomid .. ')',
        string.format("Go to %s (%s)", roomid, tostring(roomname)),
        true
      )
      cecho("&lt;DarkSlateGrey&gt;)")
    end
  else
    for roomname, roomid in pairs(result) do
      roomid = tonumber(roomid)
      cecho("&lt;DarkSlateGrey&gt; (")
      cechoLink(
        "&lt;" .. mmp.settings.echocolour .. "&gt;" .. roomid,
        'mmp.gotoRoom(' .. roomid .. ')',
        string.format("Go to %s (%s)", roomid, tostring(roomname)),
        true
      )
      cecho("&lt;DarkSlateGrey&gt;)")
    end
  end
end

function mmp.locateAndEcho(room, person, area)
  local t = mmp.searchRoomExact(room)
  if area then
    t = mmp.filterRooms(t, area)
  end
  echo("  (")
  mmp.echonums(room, area)
  echo(")")
  -- lowercase results
  for k, v in pairs(t) do
    if tonumber(k) then
      t[k] = v:lower()
    else
      t[k:lower()] = v
    end
  end
  if not (t[room:lower()] or table.contains(t, room:lower())) then
    return
  end
  echo("\n")
  if table.size(t) == 1 then
    local k, v = next(t)
    cecho(
      "&lt;red&gt;From your knowledge, that room is in &lt;orange_red&gt;" ..
      mmp.cleanAreaName(mmp.areatabler[getRoomArea(type(k) == "number" and k or v)] or "?") ..
      "&lt;red&gt;."
    )
  else
    local k, v = next(t)
    local areas = {}
    if type(k) == "number" then
      for k, _ in pairs(t) do
        areas[mmp.areatabler[getRoomArea(k)] or "?"] = true
      end
    else
      for _, k in pairs(t) do
        areas[mmp.areatabler[getRoomArea(k)] or "?"] = true
      end
    end
    local flattened_areas = {}
    for k, _ in pairs(areas) do
      if k ~= "" then
        flattened_areas[#flattened_areas + 1] = mmp.cleanAreaName(k)
      end
    end
    cecho(
      "&lt;red&gt;From your knowledge, that room might be in &lt;orange_red&gt;" ..
      table.concat(flattened_areas, ", or ") ..
      "&lt;red&gt;."
    )
  end
  if person then
    mmp.pdb[person] = room
    mmp.pdb_lastupdate[person] = true
    raiseEvent("mmapper updated pdb")
  end
end

function mmp.locateAndEchoSide(room, person)
  local t = mmp.searchRoomExact(room)
  echo("  (")
  mmp.echonums(room)
  echo(")")
  -- lowercase results
  for k, v in pairs(t) do
    if tonumber(k) then
      t[k] = v:lower()
    else
      t[k:lower()] = v
    end
  end
  if not (t[room:lower()] or table.contains(t, room:lower())) then
    return
  end
  --echo"\n"
  if table.size(t) == 1 then
    local k, v = next(t)
    cecho(
      "&lt;red&gt;  (" ..
      mmp.cleanAreaName(mmp.areatabler[getRoomArea(type(k) == "number" and k or v)] or "?") ..
      ")"
    )
  else
    local k, v = next(t)
    local areas = {}
    if type(k) == "number" then
      for k, _ in pairs(t) do
        areas[mmp.areatabler[getRoomArea(k)] or "?"] = true
      end
    else
      for _, k in pairs(t) do
        areas[mmp.areatabler[getRoomArea(k)] or "?"] = true
      end
    end
    local flattened_areas = {}
    for k, _ in pairs(areas) do
      if k ~= "" then
        flattened_areas[#flattened_areas + 1] = mmp.cleanAreaName(k)
      end
    end
    cecho("&lt;red&gt; (" .. table.concat(flattened_areas, ", ") .. ")")
  end
  if person then
    mmp.pdb[person] = room
    mmp.pdb_lastupdate[person] = true
    raiseEvent("mmapper updated pdb")
  end
end

function mmp.locateAndEchoInternal(room, person)
  local t = mmp.searchRoomExact(room)
  -- lowercase results
  for k, v in pairs(t) do
    if tonumber(k) then
      t[k] = v:lower()
    else
      t[k:lower()] = v
    end
  end
  if not (t[room:lower()] or table.contains(t, room:lower())) then
    return
  end
  --echo"\n"
  if table.size(t) == 1 then
    local k, v = next(t)
    cecho(
      "&lt;red&gt; in " ..
      mmp.cleanAreaName(mmp.areatabler[getRoomArea(type(k) == "number" and k or v)] or "?") ..
      "."
    )
  else
    local k, v = next(t)
    local areas = {}
    if type(k) == "number" then
      for k, _ in pairs(t) do
        areas[mmp.areatabler[getRoomArea(k)] or "?"] = true
      end
    else
      for _, k in pairs(t) do
        areas[mmp.areatabler[getRoomArea(k)] or "?"] = true
      end
    end
    local flattened_areas = {}
    for k, _ in pairs(areas) do
      if k ~= "" then
        flattened_areas[#flattened_areas + 1] = mmp.cleanAreaName(k)
      end
    end
    cecho("&lt;red&gt; in " .. table.concat(flattened_areas, ", ") .. ".")
  end
  echo("  (")
  mmp.echonums(room, true)
  echo(")")
  if person then
    mmp.pdb[person] = room
    mmp.pdb_lastupdate[person] = true
    raiseEvent("mmapper updated pdb")
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Aliases</name>
						<packageName></packageName>
						<script>function mmp.roomWhoFind(query)
  if query:ends('.') then
    query = query:sub(1, -2)
  end
  local result = mmp.searchRoomExact(query)
  if type(result) == "string" or not next(result) then
    cecho("&lt;CadetBlue&gt;  You have no recollection of any room with that name.")
    return
  end
  if not tonumber(select(2, next(result))) then
    -- old style
    for roomid, roomname in pairs(result) do
      roomid = tonumber(roomid)
      cecho(string.format("  &lt;LightSlateGray&gt;%s&lt;DarkSlateGrey&gt; (", tostring(roomname)))
      cechoLink(
        "&lt;" .. mmp.settings.echocolour .. "&gt;" .. roomid,
        'mmp.gotoRoom(' .. roomid .. ')',
        string.format("Go to %s (%s)", roomid, tostring(roomname)),
        true
      )
      cecho(
        string.format(
          "&lt;DarkSlateGrey&gt;) &lt;white&gt;%s&lt;DarkSlateGrey&gt;.\n",
          tostring(mmp.areatabler[getRoomArea(roomid)])
        )
      )
    end
  else
    -- new style
    for roomname, roomid in pairs(result) do
      roomid = tonumber(roomid)
      cecho(string.format("  &lt;LightSlateGray&gt;%s&lt;DarkSlateGrey&gt; (", tostring(roomname)))
      cechoLink(
        "&lt;" .. mmp.settings.echocolour .. "&gt;" .. roomid,
        'mmp.gotoRoom(' .. roomid .. ')',
        string.format("Go to %s (%s)", roomid, tostring(roomname)),
        true
      )
      cecho(
        string.format(
          "&lt;DarkSlateGrey&gt;) &lt;white&gt;%s&lt;DarkSlateGrey&gt;.\n",
          tostring(mmp.areatabler[getRoomArea(roomid)])
        )
      )
    end
  end
end

function mmp.roomFind(query, lines)
  if query:ends('.') then
    query = query:sub(1, -2)
  end
  local defaultLine = 30 -- this could this to a setting instead of a static number
  local result = mmp.searchRoom(query)
  if lines == 'all' then
    lines = table.size(result)
  end
  lines = (lines ~= '') and tonumber(lines) or defaultLine

  --create a new table (roomsTable) with keys and add areas to the table
  local roomsTable = {}
  for k, v in pairs(result) do
    --not all rooms have an area associated with it in mmp.areatabler so need to either remove those or add one
    local a = mmp.areatabler[getRoomArea(k)] or "unknown"
    roomsTable[#roomsTable + 1] = {num = k, area = a, name = v}
  end
  --sort roomsTable by area name
  table.sort(
    roomsTable,
    function(a, b)
      return a.area &lt; b.area
    end
  )
  --start displaying info
  if type(result) == "string" or not next(result) then
    cecho("&lt;grey&gt;You have no recollection of any room with that name.")
    return
  end
  cecho("&lt;DarkSlateGrey&gt;You know the following relevant rooms:\n")

  local function showmeropis(roomid)
    if mmp.game ~= "achaea" then
      return ''
    end
    return mmp.oncontinent(getRoomArea(roomid), "Main") and '' or ' (Meropis)'
  end

  local i = 1
  if not tonumber(select(2, next(result))) then
    cecho(string.format("&lt;white&gt; %-10s%-40s%s\n", "ROOM ID", "ROOM NAME", "ROOM AREA"))
    for _, v in ipairs(roomsTable) do
      if i &gt; lines then
        break
      end
      roomid = tonumber(v.num)
      roomname = v.name
      roomarea = v.area
      cechoLink(
        string.format("&lt;" .. mmp.settings.echocolour .. "&gt; %-10s", roomid),
        'mmp.gotoRoom(' .. roomid .. ')',
        string.format("Go to %s (%s)", roomid, tostring(roomname)),
        true
      )
      cecho(string.format("&lt;LightSlateGray&gt;%-40s", string.sub(tostring(roomname), 1, 39)))
      cechoLink(
        string.format(
          "&lt;DarkSlateGrey&gt;%s%s&lt;DarkSlateGrey&gt;\n",
          mmp.cleanAreaName(tostring(mmp.areatabler[getRoomArea(roomid)])),
          showmeropis(roomid)
        ),
        [[mmp.echoPath(mmp.currentroom, ]] .. roomid .. [[)]],
        "Display directions from here to " .. roomname,
        true
      )
      resetFormat()
      i = i + 1
    end
  else
    -- new style
    --- not sure what this new area code is but it doesn't seem to fire
    for roomname, roomid in pairs(result) do
      roomid = tonumber(roomid)
      cecho(string.format("  &lt;LightSlateGray&gt;%s&lt;DarkSlateGrey&gt; (", tostring(roomname)))
      cechoLink(
        "&lt;" .. mmp.settings.echocolour .. "&gt;" .. roomid,
        'mmp.gotoRoom(' .. roomid .. ')',
        string.format("Go to %s (%s)", roomid, tostring(roomname)),
        true
      )
      cecho(
        string.format(
          "&lt;DarkSlateGrey&gt;) in &lt;LightSlateGray&gt;%s%s&lt;DarkSlateGrey&gt;.",
          mmp.cleanAreaName(tostring(mmp.areatabler[getRoomArea(roomid)])),
          showmeropis(roomid)
        )
      )
      fg("DarkSlateGrey")
      echoLink(
        " &gt; Show path\n",
        [[mmp.echoPath(mmp.currentroom, ]] .. roomid .. [[)]],
        "Display directions from here to " .. roomname,
        true
      )
      resetFormat()
    end
  end
  if table.size(result) &lt;= lines then
    cecho(string.format("&lt;DarkSlateGrey&gt;%d rooms found.\n", table.size(result)))
  else
    lastRoomQuery = query
    cechoLink(
      string.format(
        "&lt;DarkSlateGrey&gt;%d of %d rooms shown. Click to see all rooms.\n", lines, table.size(result)
      ),
      'mmp.roomFind(lastRoomQuery, "all")',
      string.format("Show all %d rooms.", table.size(result)),
      true
    )
  end
end

function mmp.echoRoomList(areaname, exact)
  local areaid, msg, multiples = mmp.findAreaID(areaname, exact)
  if areaid then
    local roomlist, endresult = getAreaRooms(areaid) or {}, {}
    -- obtain a room list for each of the room IDs we got
    local getRoomName = getRoomName
    for _, id in pairs(roomlist) do
      endresult[id] = getRoomName(id)
    end
    -- sort room IDs so we can display them in order
    table.sort(roomlist)
    -- now display something half-decent looking
    cecho(
      string.format(
        "&lt;DarkSlateGrey&gt;List of all rooms in &lt;grey&gt;%s&lt;DarkSlateGrey&gt; (areaid &lt;grey&gt;%s&lt;DarkSlateGrey&gt; - &lt;grey&gt;%d&lt;DarkSlateGrey&gt; rooms):\n",
        msg,
        areaid,
        table.size(endresult)
      )
    )
    local echoLink, sformat, fg, echo = echoLink, string.format, fg, cecho
    -- use pairs, as we can have gaps between room IDs
    for _, roomid in pairs(roomlist) do
      local roomname = endresult[roomid]
      fg("blue")
      cechoLink(
        "&lt;" .. mmp.settings.echocolour .. "&gt;" .. sformat("%6s", roomid),
        'mmp.gotoRoom(' .. roomid .. ')',
        string.format("Go to %s (%s)", roomid, tostring(roomname)),
        true
      )
      cecho(string.format("&lt;DarkSlateGrey&gt;: &lt;LightSlateGray&gt;%s&lt;DarkSlateGrey&gt;.\n", roomname))
    end
  elseif not id and #multiples &gt; 0 then
    mmp.echo("For which area would you want to list rooms for?")
    fg("DimGrey")
    for _, areaname in ipairs(multiples) do
      echo("  ");
      setUnderline(true)
      echoLink(
        areaname,
        'mmp.echoRoomList("' .. areaname .. '", true)',
        "Click to view the room list for " .. areaname,
        true
      )
      setUnderline(false)
      echo("\n")
    end
    resetFormat()
  else
    mmp.echo(string.format("Don't know of any area named '%s'.", areaname))
  end
end

function mmp.echoAreaList()
  local list = getAreaTable()
  local ids, rlist = {}, {}
  local totalroomcount = 0
  for area, id in pairs(list) do
    if id ~= 0 then
      ids[#ids + 1] = id;
      rlist[id] = area
    end
  end
  table.sort(ids)
  -- count the amount of rooms in an area, taking care to count the room in the 0th
  -- index as well if there is one
  -- saves the total room count on the side as well

  local function countrooms(areaid)
    local allrooms = getAreaRooms(areaid) or {}
    local areac = (#allrooms or 0) + (allrooms[0] and 1 or 0)
    totalroomcount = totalroomcount + areac
    return areac
  end

  cecho(string.format("&lt;DarkSlateGrey&gt;List of all areas we know of (click to view room list):\n"))
  local getAreaRooms, cecho, fg, echoLink, format, rep =
    getAreaRooms, cecho, fg, echoLink, string.format, string.rep
  for _, id in pairs(ids) do
    cecho(format("&lt;" .. mmp.settings.echocolour .. "&gt;%s%d ", rep(" ", (7 - #tostring(id))), id))
    -- +1 because getAreaRooms starts counting at 0
    fg("DarkSlateGrey")
    echoLink(
      rlist[id] .. (" "):rep(40 - #rlist[id]) .. "(" .. mmp.comma_value(countrooms(id)) .. " rooms)",
      'mmp.echoRoomList("' .. rlist[id] .. '", true)',
      "View the room list for " .. rlist[id],
      true
    )
    echo("\n")
  end
  cecho(
    string.format(
      "&lt;DarkSlateGrey&gt;Total amount of rooms in this map: %s\n", mmp.comma_value(totalroomcount)
    )
  )
end

function mmp.clearLabels(areaid)
  local function clearlabels(areaid)
    local t = getMapLabels(areaid)
    if type(t) ~= "table" then
      return
    end
    for labelid, _ in pairs(t) do
      deleteMapLabel(areaid, labelid)
    end
  end

  if areaid == "map" then
    for areaid in pairs(mmp.areatabler) do
      clearlabels(areaid)
    end
    mmp.echo("Cleared labels in all of the map.")
    return
  end
  clearlabels(areaid)
  mmp.echo(string.format("Cleared all labels in '%s'.", mmp.areatabler[areaid]))
end

function mmp.deleteArea(name, exact)
  local id, fname, ma = mmp.findAreaID(name, exact)
  if id then
    mmp.doareadelete(id)
  elseif next(ma) then
    mmp.echo("Which one of these specifically would you like to delete?")
    fg("DimGrey")
    for _, name in ipairs(ma) do
      echo("  ")
      setUnderline(true)
      echoLink(name, [[mmp.deleteArea("]] .. name .. [[", true)]], "Delete " .. name, true)
      setUnderline(false)
      echo("\n")
    end
    resetFormat()
  else
    mmp.echo("Don't know of that area.")
  end
  raiseEvent("mmp areas changed")
end

-- the function actually doing area deletion

function mmp.doareadelete(areaid)
  mmp.deletingarea = {}
  local t = mmp.deletingarea
  local rooms = getAreaRooms(areaid)
  t.roomcount = table.size(rooms)
  t.roombatches = {}
  t.currentbatch = 1
  t.areaid = areaid
  t.areaname = getAreaTableSwap()[areaid]
  -- delete the area right away if there's nothing in it
  if t.roomcount == 0 then
    deleteArea(t.areaid)
    mmp.echo("All done! The area was already gone/empty.")
  end
  local rooms_per_batch = 100
  -- split up rooms into tables of tables, to be deleted in batches so
  -- that our print statements in between get a chance to be processed
  for batch = 1, t.roomcount, 100 do
    t.roombatches[#t.roombatches + 1] = {}
    local onebatch = t.roombatches[#t.roombatches]
    for inbatch = 1, 100 do
      onebatch[#onebatch + 1] = rooms[batch + inbatch]
    end
  end

  function mmp.deletenextbatch()
    local t = mmp.deletingarea
    if not t then
      return
    end
    local currentbatch = t.roombatches[t.currentbatchi]
    if currentbatch == nil then
      deleteArea(t.areaid)
      mmp.echo("All done! Deleted the '" .. t.areaname .. "' area.")
      mmp.deletingarea = nil
      centerview(mmp.currentroom)
      return
    end
    local deleteRoom = deleteRoom
    for i = 1, #currentbatch do
      deleteRoom(currentbatch[i])
    end
    mmp.echo(
      string.format(
        "Deleted %d batch%s so far, %d left to go - %.2f%% done out of %d needed",
        t.currentbatchi,
        (t.currentbatchi == 1 and '' or 'es'),
        #t.roombatches - t.currentbatchi,
        (100 / #t.roombatches) * t.currentbatchi,
        #t.roombatches
      )
    )
    t.currentbatchi = t.currentbatchi + 1
    tempTimer(0.010, mmp.deletenextbatch)
  end

  t.currentbatchi = 1
  mmp.echo("Prepped room batches, starting deletion...")
  tempTimer(0.010, mmp.deletenextbatch)
end

function mmp.renameArea(name, exact)
  if not (mmp.currentroom or getRoomArea(mmp.currentroom)) then
    mmp.echo("Don't know what area are we in at the moment, to rename it.")
  else
    setAreaName(getRoomArea(mmp.currentroom), name)
    mmp.echo(
      string.format(
        "Renamed %s to %s (%d).",
        mmp.areatabler[getRoomArea(mmp.currentroom)],
        name,
        getRoomArea(mmp.currentroom)
      )
    )
    centerview(mmp.currentroom)
  end
  raiseEvent("mmp areas changed")
end

function mmp.roomArea(otherroom, name, exact)
  local id, fname, ma
  if tonumber(name) then
    id = tonumber(name);
    fname = mmp.areatabler[id]
  else
    id, fname, ma = mmp.findAreaID(name, exact)
  end
  if otherroom ~= "" and not mmp.roomexists(otherroom) then
    mmp.echo("Room id " .. otherroom .. " doesn't seem to exist.")
    return
  elseif otherroom == "" and not mmp.roomexists(mmp.currentroom) then
    mmp.echo("Don't know where we are at the moment.")
    return
  end
  otherroom = otherroom ~= "" and otherroom or mmp.currentroom
  if id then
    setRoomArea(otherroom, id)
    mmp.echo(
      string.format(
        "Moved %s to %s (%d).",
        (getRoomName(otherroom) ~= "" and getRoomName(otherroom) or "''"),
        fname,
        id
      )
    )
    centerview(otherroom)
  elseif next(ma) then
    mmp.echo("Into which area exactly would you like to move the room?")
    fg("DimGrey")
    for _, name in ipairs(ma) do
      echo("  ")
      setUnderline(true)
      echoLink(
        name, [[mmp.roomArea('', "]] .. name .. [[", true)]], "Move the room to " .. name, true
      )
      setUnderline(false)
      echo("\n")
    end
    resetFormat()
  else
    mmp.echo("Don't know of that area.")
  end
end

function mmp.getAreaBorders(areaid)
  if mmp.debug then
    mmp.getAreaBordersTimer = mmp.getAreaBordersTimer or createStopWatch()
    startStopWatch(mmp.getAreaBordersTimer)
  end
  -- make sure we have all exits into the area.
  raiseEvent("mmp link externals")
  local roomlist, endresult = getAreaRooms(areaid), {}
  -- sometimes getAreaRooms can give us no result :(
  if not roomlist then
    mmp.echo(
      "Sorry, seems we can't go there - getAreaRooms(" ..
      areaid ..
      ") didn't give us any results (Mudlet problem - redownloading the map might help fix it)"
    )
    return
  end
  if table.is_empty(roomlist) then
    mmp.echo(
      "Sorry, seems we can't go there - " .. getRoomAreaName(areaid) .. " has no rooms in it."
    )
    return
  end
  -- make a key-value list of room IDs
  local reverselist = {}
  for i = 0, #roomlist do
    reverselist[roomlist[i]] = true
  end
  local getRoomName, contains, pairs = getRoomName, table.contains, pairs
  if getAllRoomEntrances then
    for i = 0, #roomlist do
      local id = roomlist[i]
      local entrancesFrom = getAllRoomEntrances(id)
      for remoteRoomIndex = 1, #entrancesFrom do
        if not reverselist[entrancesFrom[remoteRoomIndex]] then
          endresult[id] = getRoomName(id)
        end
      end
    end
  else
    local getRoomExits, getSpecialExitsSwap = getRoomExits, getSpecialExitsSwap
    -- obtain a room list for each of the room IDs we got
    --for _, id in pairs(roomlist) do
    for i = 0, #roomlist do
      local id = roomlist[i]
      local exits = getRoomExits(id)
      for _, to in pairs(exits) do
        if not reverselist[to] then
          endresult[id] = getRoomName(id)
        end
      end
      local specialexits = getSpecialExitsSwap(id)
      for _, to in pairs(specialexits) do
        if not reverselist[to] then
          endresult[id] = getRoomName(id)
        end
      end
    end
  end
  if mmp.debug then
    mmp.echo(
      "mmp.getAreaBordersTimer() on areaid " ..
      areaid ..
      " took " ..
      stopStopWatch(mmp.getAreaBordersTimer) ..
      "s to run. Returned " ..
      table.size(endresult) ..
      " results."
    )
  end
  -- clean up external exits
  raiseEvent("mmp clear externals")
  return endresult
end

function mmp.viewArea(where, exact)
  if not where or not type(where) == "string" then
    mmp.echo("Which area would you like to view?")
    return
  end
  local areaid, msg, multiples = mmp.findAreaID(where, exact)
  if areaid then
    -- center on the first room ID, which typically is the start of an area
    local rooms = getAreaRooms(areaid) or {}
    if not rooms[1] then
      mmp.echo("The area has no rooms in it.")
    else
      centerview(rooms[1])
    end
  elseif not areaid and #multiples &gt; 0 then
    mmp.echo("Which area would you like to view exactly?")
    fg("DimGrey")
    for _, areaname in ipairs(multiples) do
      echo("  ");
      setUnderline(true)
      echoLink(
        areaname, 'mmp.viewArea("' .. areaname .. '", true)', "Click to view " .. areaname, true
      )
      setUnderline(false)
      echo("\n")
    end
    resetFormat()
    return
  else
    mmp.echo(string.format("Don't know of any area named '%s'.", where))
    return
  end
end

-- room label the room I'm in
-- room label 342 this is a label in room 342
-- room label green this is a green label where I'm at
-- room label green black this is a green to black label where I'm at
-- room label 34 green black this is a green to black label at room 34
-- how it works: split input string into tokens by space, then determine
-- what to do by checking first few tokens, and finally call the local
-- function with the proper arguments

function mmp.roomLabel(input)
  if not createMapLabel then
    mmp.echo(
      "Your Mudlet doesn't support createMapLabel() yet - please update to 2.0-test3 or better."
    )
    return
  end
  local tk = input:split(" ")
  local room, fg, bg, message = mmp.currentroom, "yellow", "red", "Some room label"
  -- input always have to be something, so tk[1] at least always exists
  if tonumber(tk[1]) then
    room = tonumber(table.remove(tk, 1))
    -- remove the number, so we're left with the colors or msg
  end
  -- next: is this a foreground color?
  if tk[1] and color_table[tk[1]] then
    fg = table.remove(tk, 1)
  end
  -- next: is this a background color?
  if tk[1] and color_table[tk[1]] then
    bg = table.remove(tk, 1)
  end
  -- the rest would be our message
  if tk[1] then
    message = table.concat(tk, " ")
  end
  -- if we haven't provided a room ID and we don't know where we are yet, we can't make a label
  if not room then
    mmp.echo("We don't know where we are to make a label here.")
    return
  end
  local x, y = getRoomCoordinates(room)
  local f1, f2, f3 = unpack(color_table[fg])
  local b1, b2, b3 = unpack(color_table[bg])
  -- finally: do it :)
  local lid = createMapLabel(getRoomArea(room), message, x, y, f1, f2, f3, b1, b2, b3)
  mmp.echo(
    string.format(
      "Created new label #%d '%s' in %s.", lid, message, getRoomAreaName(getRoomArea(room))
    )
  )
end

function mmp.areaLabels(where, exact)
  if not getMapLabels then
    mmp.echo(
      "Your Mudlet doesn't support getMapLabels() yet - please update to 2.0-test3 or better."
    )
    return
  end
  if (not where or not type(where) == "string") and not mmp.currentroom then
    mmp.echo("For which area would you like to view labels?")
    return
  end
  if not where then
    exact = true
    where = getRoomAreaName(getRoomArea(mmp.currentroom))
  end
  local areaid, msg, multiples = mmp.findAreaID(where, exact)
  if areaid then
    local t = getMapLabels(areaid)
    if type(t) ~= "table" or not next(t) then
      mmp.echo(string.format("'%s' doesn't seem to have any labels.", getRoomAreaName(areaid)))
      return
    end
    mmp.echo(string.format("Area labels for '%s'", getRoomAreaName(areaid)))
    for labelid, labeltext in pairs(t) do
      fg("DimGrey")
      echo(string.format("  %d) %s (", labelid, labeltext))
      fg("orange_red")
      setUnderline(true)
      echoLink(
        'delete',
        string.format(
          'deleteMapLabel(%d, %d); mmp.echo("Deleted label #' .. labelid .. '")', areaid, labelid
        ),
        "Delete label #" .. labelid .. " from " .. getRoomAreaName(areaid)
      )
      setUnderline(false)
      echo(")\n")
    end
    resetFormat()
  elseif not areaid and #multiples &gt; 0 then
    mmp.echo("Which area would you like to view exactly?")
    fg("DimGrey")
    for _, areaname in ipairs(multiples) do
      echo("  ");
      setUnderline(true)
      echoLink(
        areaname,
        'mmp.areaLabels("' .. areaname .. '", true)',
        "Click to view labels in " .. areaname,
        true
      )
      setUnderline(false)
      echo("\n")
    end
    resetFormat()
    return
  else
    mmp.echo(string.format("Don't know of any area named '%s'.", where))
    return
  end
end

function mmp.echoPath(from, to)
  assert(tonumber(from) and tonumber(to), "mmp.getPath: both from and to have to be room IDs")
  if mmp.getPath(from, to) then
    mmp.echo(
      "&lt;white&gt;Directions from &lt;yellow&gt;" ..
      string.upper(searchRoom(from)) ..
      " &lt;white&gt;to &lt;yellow&gt;" ..
      string.upper(searchRoom(to)) ..
      "&lt;white&gt;:"
    )
    mmp.echo(table.concat(speedWalkDir, ", "))
    return mmp.speedWalkDir
  else
    mmp.echo(
      "&lt;white&gt;I can't find a way from &lt;yellow&gt;" ..
      string.upper(searchRoom(from)) ..
      " &lt;white&gt;to &lt;yellow&gt;" ..
      string.upper(searchRoom(to)) ..
      "&lt;white&gt;"
    )
  end
end

function mmp.listSpecialExits(filter)
  local c = 0
  mmp.echo("Listing special exits...")
  for area, areaname in pairs(mmp.areatabler) do
    local rooms = getAreaRooms(area) or {}
    for i = 0, #rooms do
      local exits = getSpecialExits(rooms[i] or 0)
      if exits and next(exits) then
        for exit, cmd in pairs(exits) do
          if type(cmd) == "table" then
            cmd = next(cmd)
          end
          if cmd:match("^%d") then
            cmd = cmd:sub(2)
          end
          if not filter or cmd:lower():find(filter, 1, true) then
            if getRoomArea(exit) ~= area then
              cecho(
                string.format(
                  "&lt;dark_slate_grey&gt;%s &lt;LightSlateGray&gt;(%d, in %s)&lt;dark_slate_grey&gt; &lt;MediumSlateBlue&gt;-&gt; &lt;coral&gt;%s -&lt;MediumSlateBlue&gt;&gt;&lt;dark_slate_grey&gt; %s &lt;LightSlateGray&gt;(%d, in %s)\n",
                  getRoomName(rooms[i]),
                  rooms[i],
                  areaname,
                  cmd,
                  getRoomName(exit),
                  exit,
                  mmp.areatabler[getRoomArea(exit)] or '?'
                )
              )
            else
              cecho(
                string.format(
                  "&lt;dark_slate_grey&gt;%s &lt;LightSlateGray&gt;(%d)&lt;dark_slate_grey&gt; &lt;MediumSlateBlue&gt;-&gt; &lt;coral&gt;%s &lt;MediumSlateBlue&gt;-&gt;&lt;dark_slate_grey&gt; %s &lt;LightSlateGray&gt;(%d)&lt;dark_slate_grey&gt; in %s\n",
                  getRoomName(rooms[i]),
                  rooms[i],
                  cmd,
                  getRoomName(exit),
                  exit,
                  areaname
                )
              )
            end
            c = c + 1
          end
        end
      end
    end
  end
  mmp.echo(
    string.format(
      "%d exits listed%s.", c, (not filter and '' or ", with for the filter '" .. filter .. "'")
    )
  )
end

function mmp.delSpecialExits(filter)
  local c = 0
  for area, areaname in pairs(mmp.areatabler) do
    local rooms = getAreaRooms(area) or {}
    for i = 0, #rooms do
      local exits = getSpecialExits(rooms[i] or 0)
      if exits and next(exits) then
        for exit, cmd in pairs(exits) do
          if type(cmd) == "table" then
            cmd = next(cmd)
          end
          if cmd:match("^%d") then
            cmd = cmd:sub(2)
          end
          if not filter or cmd:lower():find(filter, 1, true) then
            local rid, action
            local originalExits = {}
            local e = getSpecialExits(rooms[i])
            for t, n in pairs(e) do
              rid = tonumber(t)
              for a, l in pairs(n) do
                action = tostring(a)
              end
              if not action:find(filter, 1, true) then
                originalExits[rid] = action
              end
            end
            clearSpecialExits(rooms[i])
            for rid, act in pairs(originalExits) do
              addSpecialExit(rooms[i], tonumber(rid), tostring(act))
            end
            c = c + 1
          end
        end
      end
    end
  end
  mmp.echo(
    string.format(
      "%d exits deleted%s.", c, (not filter and '' or ", with for the filter '" .. filter .. "'")
    )
  )
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Directions-translating functions</name>
						<packageName></packageName>
						<script>-- translates n to north and so forth
local temp = {
    n = "north",
    e = "east",
    s = "south",
    w = "west",
    ne = "northeast",
    se = "southeast",
    sw = "southwest",
    nw = "northwest",
    u = "up",
    d = "down",
    i = "in",
    o = "out",
    ["in"] = "in"
}
local anytolongmap = {}
for s, l in pairs(temp) do anytolongmap[l] = l; anytolongmap[s] = l end
function mmp.anytolong(exit)

  return anytolongmap[exit]
end

function mmp.anytoshort(exit)
  local t = {
    n = "north",
    e = "east",
    s = "south",
    w = "west",
    ne = "northeast",
    se = "southeast",
    sw = "southwest",
    nw = "northwest",
    u = "up",
    d = "down",
    ["in"] = "in",
    out = "out"
  }
  local rt = {}
  for s,l in pairs(t) do
    rt[l] = s; rt[s] = s
  end

  return rt[exit]
end


function mmp.ranytolong(exit)
  local t = {
    n = "south",
    north = "south",
    e = "west",
    east = "west",
    s = "north",
    south = "north",
    w = "east",
    west = "east",
    ne = "southwest",
    northeast = "southwest",
    se = "northwest",
    southeast = "northwest",
    sw = "northeast",
    southwest = "northeast",
    nw = "southeast",
    northwest = "southeast",
    u = "down",
    up = "down",
    d = "up",
    down = "up",
    i = "out",
    ["in"] = "out",
    o = "in",
    out = "in"
  }

  return t[exit]
end

-- returns nil or the room number relative to this one
function mmp.relativeroom(from, dir)
  if not mmp.roomexists(from) then return end

  local exits = getRoomExits(tonumber(from))
  return exits[mmp.anytolong(dir)]
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>mconfig settings functions</name>
						<packageName></packageName>
						<script>function mmp.doLock(what, lock, filter)
  if what then mmp.echo(string.format("%s all %s...", (lock and "Locking" or "Unlocking"), what)) end
  local c = 0

  local getAreaRooms, getSpecialExits, lockSpecialExit, next = getAreaRooms, getSpecialExits, lockSpecialExit, next
  for _, area in pairs(getAreaTable()) do
    local rooms = getAreaRooms(area) or {}
    for i = 0, #rooms do
      local exits = getSpecialExits(rooms[i] or 0)

       if exits and next(exits) then
         for exit, cmd in pairs(exits) do
           if type(cmd) == "table" then cmd = next(cmd) end

           if (not filter and not (cmd:lower():find("pathfind", 1, true) or cmd:lower():find("worm warp", 1, true) or cmd:lower():find("enter grate", 1, true))) or (filter and cmd:lower():find(filter, 1, true)) then
             lockSpecialExit(rooms[i], exit, cmd, lock)
             c = c + 1
           end
         end
       end
    end
  end

  if what then mmp.echo(string.format("%s %s known %s.", (lock and "Locked" or "Unlocked"), c, what)) end
  return c
end

function mmp.changeEchoColour()
    mmp.echo("Now displaying echos in &lt;"..mmp.settings.echocolour.."&gt;"..mmp.settings.echocolour )
end

function mmp.changeLaglevel()
    local laglevel = mmp.settings.laglevel
    local laginfo = mmp.lagtable[laglevel]
    mmp.echo(string.format("Lag level set to [%d]: %s (%ss timer)", laglevel, laginfo.description, tostring(laginfo.time)))
end

function mmp.verifyLaglevel(value)
  if mmp.lagtable[value] then return true end
  return false
end

function mmp.lockPathways()
  local lock = mmp.settings.lockpathways and true or false
  mmp.doLock("pathways", lock, "pathfind")
end

function mmp.lockSewers()
  local lock = mmp.settings.locksewers and true or false
  return mmp.doLock("sewer grates", lock, "enter grate")
end

function mmp.lockWormholes()
  local lock = mmp.settings.lockwormholes and true or false
  return mmp.doLock("wormholes", lock, "worm warp")
end
tempTimer(0, function() if mmp.firstRun then mmp.lockWormholes() end end)

function mmp.lockPebble()
  local disabled = (not mmp.settings.pebble) and true or false
  mmp.doLock(nil, disabled, "touch 116998")
  mmp.doLock(nil, disabled, "touch 277930")

  mmp.echo(string.format("Use of pebble %s.", disabled and "disabled" or "enabled"))
end

function mmp.lockSpecials()
  local lock = mmp.settings.lockspecials and true or false
  mmp.doLock("special exits", lock)
end


function mmp.changeMapSource()
  local use = mmp.settings.crowdmap and true or false
  if use and not (mmp.game == "achaea" or mmp.game == "starmourn" or mmp.game == "lusternia" or mmp.game == "stickmud" or mmp.game == "asteria" or mmp.game == "imperian" or mmp.game == "aetolia") then
    mmp.echo("Sorry - the crowdsourced map is only available for use in Achaea, Starmourn, Lusternia, StickMUD and Asteria. If you'd like to help start one for your game, please post at http://forums.mudlet.org/viewtopic.php?f=13&amp;t=1696. If you are playing one of the games, then it is likely that you just downloaded the script - and it doesn't know what you are playing. Reconnect and it'll know.")
    mmp.settings.crowdmap = false
  elseif use and not loadMap then
   mmp.echo("Sorry - your Mudlet is too old and can't load maps. Please update: http://forums.mudlet.org/viewtopic.php?f=5&amp;t=1874")
   mmp.settings.crowdmap = false
  elseif use then
    mmp.echo("Will use the crowdsourced map for updates instead!")
    mmp.checkforupdate()
  else
    mmp.echo("Will use the default game map for updates.")
  end
end

function mmp.setWingsLanguage()
  mmp.echo("Alright, will say Duanathar and Duanathar in "..mmp.settings.winglanguage:title()..".")
end

function mmp.setWingsRemoval()
  mmp.echo("Okay - "..(mmp.settings.removewings and "will" or "won't").." remove wings after using them.")
end

function mmp.setSlowWalk()
  if mmp.settings.slowwalk then
    mmp.echo("Will walk 'slowly' - that is, only try to move in a direction once per room, and move again once we've arrived. This will make us better walkers when it's very laggy, as we won't spam directions unnecessarily and miss certain turns - but it does mean that if we fail to move for some reason, we won't retry again either at all.")
  else
    mmp.echo("Will walk as quick as we can!")
  end
end

function mmp.disableWaterWalk()
  local c = 0
  local getRoomEnv, setRoomWeight = getRoomEnv, setRoomWeight
  for roomid, roomname in pairs(getRooms()) do
    if mmp.waterenvs[getRoomEnv(roomid)] then
      setRoomWeight(roomid, 3)
      c = c + 1
    end
  end

  return c
end

function mmp.enableWaterWalk()
  local c = 0
  local getRoomEnv, setRoomWeight = getRoomEnv, setRoomWeight
  for roomid, roomname in pairs(getRooms()) do
    if mmp.waterenvs[getRoomEnv(roomid)] then
      setRoomWeight(roomid, 1)
      c = c + 1
    end
  end

  return c
end

function mmp.setWaterWalk()
  if mmp.settings.waterwalk then
    mmp.echo("Enabled waterwalk for "..mmp.enableWaterWalk().." rooms - so we'll be treating land and water rooms the same now in terms of traverse speed over them.")
  else
    mmp.echo("Disabled waterwalk for "..mmp.disableWaterWalk().." rooms - so we'll be preferring land rooms over water ones wherever it's quicker.")
  end
end

function mmp.setOrb(city)
  if mmp.settings["orb"..city:lower()] then
    mmp.echo("&lt;green&gt;Okay, we won't use wings in &lt;white&gt;" .. city:title().."&lt;green&gt;!")
  else
    mmp.echo("&lt;green&gt;Okay, we will use wings in &lt;white&gt;" .. city:title().."&lt;green&gt;!")
  end
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>API</name>
						<packageName></packageName>
						<script>-------------------------------------------------
-- This script lists some of the API functions available from the IRE mudlet-mapper
-- not all functions that are available are included here, however.

function mmp.echo(what)
  what = what or ""
  moveCursorEnd("main") if getCurrentLine() ~= "" then echo"\n" end
  decho("&lt;112,229,0&gt;(&lt;73,149,0&gt;mapper&lt;112,229,0&gt;): &lt;255,255,255&gt;")
  cecho(tostring(what))
  echo("\n")
end

function mmp.echon(what)
  moveCursorEnd("main") if getCurrentLine() ~= "" then echo"\n" end
  decho("&lt;112,229,0&gt;(&lt;73,149,0&gt;mapper&lt;112,229,0&gt;): &lt;255,255,255&gt;")
  cecho(tostring(what))
end

function mmp.deleteLineP()
  deleteLine()
  tempLineTrigger(1,1,[[
    if isPrompt() then deleteLine() end
  ]])
end

function mmp.pause(what)
  assert(what == nil or what == "on" or what == "off", "mmp.pause wants 'on', 'off' or nothing as an argument")

  if what == "on" or (what == nil and not mmp.paused) then
    mmp.paused = true
  elseif  what == "off" or (what == nil and mmp.paused) then
    mmp.paused = false
  end

  mmp.echo("Speedwalking " .. (mmp.paused and "paused" or "unpaused") .. ".")
  if not mmp.paused then mmp.move() end
end

function mmp.mapLook(roomid, delay)
  centerview(roomid)
  if mmp.maplooktimer then killTimer(mmp.maplooktimer) end
  mmp.maplooktimer = tempTimer(tonumber(delay) or 4, [[centerview(mmp.currentroom); mmp.maplooktimer = nil]])
end

function mmp.getnums(roomname, exact)
  if tonumber(roomname) then return {roomname} end

  local t = (not exact and mmp.searchRoom or mmp.searchRoomExact)(roomname)

  if not t or not next(t) then
    return nil end

  local result = {}

  if not tonumber(select(2, next(t))) then
    for roomid,_ in pairs(t) do
      if roomid ~= 0 then result[#result+1] = tonumber(roomid) end
    end
  else
    for _,roomid in pairs(t) do
      if roomid ~= 0 then result[#result+1] = tonumber(roomid) end
    end
  end

  return result
end

-- searchRoom with a cache!
local cache = {}
setmetatable(cache, {__mode = "kv"}) -- weak keys/values = it'll periodically get cleaned up by gc

function mmp.searchRoom(what)
  local result = cache[what]
  if not result then
    result = searchRoom(what)
    local realResult = {}
    for key, value in pairs(type(result) == "table" and result or {}) do
        -- both ways, because searchRoom can return either id-room name or the reverse
        if type(key) == "string" then
          realResult[key:ends(" (road)") and key:sub(1, -8) or key] = value
        else
          realResult[key] = value:ends(" (road)") and value:sub(1, -8) or value
        end
    end
    cache[what] = realResult
    result = realResult
  end
  return result
end

local function endswith(s, suffix)
    return s:sub(#s - #suffix + 1) == suffix
end

function mmp.searchRoomExact(what)
  if type(what) ~= 'string' then return end

  local roomTable = mmp.searchRoom(what)
  local realResult = {}
  what = what:lower()
  for key, value in pairs (roomTable) do
    if type(key) == "string" and (key:lower() == what or (endswith(key, '.') and key:sub(1, -2) == what)) then
        realResult[key:ends(" (road)") and key:sub(1, -8) or key] = value
    elseif type(value) == "string" and (value:lower() == what or (endswith(value, '.') and value:sub(1, -2) == what)) then
        realResult[key] = value:ends(" (road)") and value:sub(1, -8) or value
    end
  end
  if (table.is_empty(realResult)) then
    return roomTable
  else
    return realResult
  end
end

function mmp.findAreaID(areaname, exact)
  local areaname = areaname:lower()
  local list = getAreaTable()

  -- iterate over the list of areas, matching them with substring match.
  -- if we get match a single area, then return it's ID, otherwise return
  -- 'false' and a message that there are than one are matches
  local returnid, fullareaname, multipleareas = nil, nil, {}
  for area, id in pairs(list) do
    if (not exact and area:lower():find(areaname, 1, true)) or (exact and areaname == area:lower()) then
      returnid = id; fullareaname = area; multipleareas[#multipleareas+1] = area
    end
  end

  if #multipleareas == 1 then
    return returnid, fullareaname
  else
    return nil, nil, multipleareas
  end
end

function mmp.roomexists(num)
  if not num then return false end
  if roomExists then return roomExists(num) end

  local s,m = pcall(getRoomArea, tonumber(num))
  return (s and true or false)
end

function mmp.getcontinents()
  local tmp = getRoomUserData(1, "areaContinents")
  if tmp == "" then return {} end

  return yajl.to_value(tmp)
end

-- patches welcome to finish this function.
function mmp.removecontinent(area, continent)
  local continents = mmp.getcontinents()

  if not next(continents) then return nil, "no continents are known" end
  if not continents[continent] then return nil, "no such continent is recorded" end

  local index = mmp.indexof_valueonly(continents[continent], area)
  if not index then return nil, "this area is not on that continent" end
  table.remove(continents[continent], index)
  local tmp = yajl.to_string(continents)
  setRoomUserData(1, "areaContinents", tmp)
  return true
end

function mmp.addcontinent(areaid, continent)
  local continents = mmp.getcontinents()

  if not next(continents) then return nil, "no continents are known" end
  if not continents[continent] then continents[continent] = {} end

  local index = mmp.indexof_valueonly(continents[continent], areaid)
  if index then return nil, "this area is already on that continent" end
  continents[continent][#continents[continent] + 1] = areaid
  local tmp = yajl.to_string(continents)
  setRoomUserData(1, "areaContinents", tmp)
  return true
end

function mmp.indexof_valueonly(data, value)
  for i = 1, #data do
    if data[i] == value then return i end
  end

  return false
end

-- checks if given area ID is on the given continent. Returns true only if certainly knows
function mmp.oncontinent(areaid, continent)
  local continents = mmp.getcontinents()
  if not continents[continent] then return nil, "no such continent is recorded" end

  return mmp.indexof_valueonly(continents[continent], areaid)
end

function mmp.getareacontinents(areaid)
  local areaContinents = {}
  for continentName, areas in pairs(mmp.getcontinents()) do
    if mmp.indexof_valueonly(areas, areaid) then
      areaContinents[#areaContinents + 1] = continentName
    end
  end
  return areaContinents
end

-- accepts areaname or ID
function mmp.cleanAreaName(area)
  local areaname = type(area) == "number" and mmp.areatabler[area] or area
  if not areaname then return area end

  -- strip , the
  areaname = areaname:gsub(", the$", '')

  -- strip , the Type of
  areaname = areaname:gsub(", the %w+ of$", '')

  -- strip , the Type of (important)
  areaname = areaname:gsub(", the %w+ of %((.+)%)$", " (%1)")

  -- strip , the (important)
  areaname = areaname:gsub(", the %((.+)%)$", " (%1)")

  return areaname
end

-- if this room is in a unique area, report it. Otherwise gives nil
function mmp.getexactarea(roomname)
  local rooms = mmp.searchRoomExact(roomname)

  if not rooms or not next(rooms) then return nil end

  local areaid
  for roomid, roomname in pairs(rooms) do

    local caid = getRoomArea(roomid)
    if areaid and areaid ~= caid then return nil end
    areaid = caid
  end

  if areaid then return mmp.areatabler[areaid] end
end

-- returns the area name of a room or ?
function mmp.getAreaName(roomid)
   return mmp.areatabler[getRoomArea(roomid)] or '?'
end

-- removes extra prefixes and suffixes that are not part of the actual room name
function mmp.cleanroomname(roomname)
  local starts, ends = string.starts, string.ends

  if starts(roomname, "Flying above ") then
    roomname = string.sub(roomname, -(#roomname-13))
  end
  if starts(roomname, "In the trees above ") then
    roomname = string.sub(roomname, -(#roomname-19))
  end
  if starts(roomname, "The ruins of ") then
    roomname = string.sub(roomname, -(#roomname-13))
  end
  if ends(roomname, ".") then
    roomname = string.sub(roomname, 1, (#roomname-1))
  end
  if ends(roomname, " (road)") then
    roomname = string.sub(roomname, 1, (#roomname-7))
  end
  if ends(roomname, " (indoors)") then
    roomname = string.sub(roomname, 1, (#roomname-10))
  end
  if ends(roomname, " (indoor road)") then
    roomname = string.sub(roomname, 1, (#roomname-14))
  end

  return roomname
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>mmp.roomLook</name>
						<packageName></packageName>
						<script>function mmp.roomLook(input)
  -- we can do a report with a number

  local function handle_number(num)
    -- compile all available data
    if not mmp.roomexists(num) then
      mmp.echo(num .. " doesn't seem to exist.")
      return
    end
    local s, areanum = pcall(getRoomArea, num)
    if not s then
      mmp.echo(areanum);
      return ;
    end
    local exits = getRoomExits(num)
    local name = getRoomName(num)
    local islocked = roomLocked(num)
    local weight = (getRoomWeight(num) and getRoomWeight(num) or "?")
    -- getRoomWeight is buggy in one of the versions, is actually linked to setRoomWeight and thus returns nil
    local exitweights = (getExitWeights and getExitWeights(num) or {})
    local coords = {getRoomCoordinates(num)}
    local specexits = getSpecialExits(num)
    local env = getRoomEnv(num)
    local envname = (mmp.envidsr and mmp.envidsr[env]) or "?"
    -- generate a report
    mmp.echo(
      string.format(
        "Room: %s #: %d area: %s (%d)", name, num, tostring(mmp.areatabler[areanum]), areanum
      )
    )
    mmp.echo(
      string.format(
        "Coordinates: x:%d, y:%d, z:%d, locked: %s, weight: %s",
        coords[1],
        coords[2],
        coords[3],
        (islocked and "yep" or "nope"),
        tostring(weight)
      )
    )
    mmp.echo(
      string.format(
        "Environment: %s (%d)%s",
        tostring(envname),
        env,
        (getRoomUserData(num, "indoors") ~= '' and ", indoors" or '')
      )
    )
    mmp.echo(string.format("Exits (%d):", table.size(exits)))
    for exit, leadsto in pairs(exits) do
      echo(
        string.format(
          "  %s -&gt; %s (%d)%s%s\n",
          exit,
          getRoomName(leadsto),
          leadsto,
          (
            (getRoomArea(leadsto) or "?") == areanum and
            "" or
            " (in " ..
            (mmp.areatabler[getRoomArea(leadsto)] or "?") ..
            ")"
          ),
          (
            (not exitweights[mmp.anytoshort(exit)] or exitweights[mmp.anytoshort(exit)] == 0) and
            "" or
            " (weight: " ..
            exitweights[mmp.anytoshort(exit)] ..
            ")"
          )
        )
      )
    end
    -- display special exits if we got any
    if next(specexits) then
      mmp.echo(string.format("Special exits (%d):", table.size(specexits)))
      for leadsto, command in pairs(specexits) do
        if type(command) == "string" then
          echo(string.format("  %s -&gt; %s (%d)\n", command, getRoomName(leadsto), leadsto))
        else
          -- new format - exit name, command
          for cmd, locked in pairs(command) do
            if locked == '1' then
              cecho(
                string.format(
                  "&lt;DarkSlateGrey&gt;  %s -&gt; %s (%d) (locked)\n", cmd, getRoomName(leadsto), leadsto
                )
              )
            else
              echo(string.format("  %s -&gt; %s (%d)\n", cmd, getRoomName(leadsto), leadsto))
            end
          end
        end
      end
    end
    local message = "This room has the feature '%s'."
    for _, mapFeature in pairs(mmp.getRoomMapFeatures(num)) do
      mmp.echo(string.format(message, mapFeature))
    end
    -- actions we can do. This will be a short menu of sorts for actions
    mmp.echo("Stuff you can do:")
    echo("  ")
    echo("Clear all labels ")
    setUnderline(true)
    echoLink("(in area)", 'mmp.clearLabels(' .. areanum .. ')', '', true)
    setUnderline(false)
    echo(" ")
    setUnderline(true)
    echoLink(
      "(whole map)",
      [[
    if not mmp.clearinglabels then
      mmp.echo("Are you sure you want to clear all of your labels on this map? If yes, click the link again.")
      mmp.clearinglabels = true
    else
      mmp.clearLabels("map")
      mmp.clearinglabels = nil
    end
    ]],
      '',
      true
    )
    setUnderline(false)
    echo("\n")
    echo("  ")
    setUnderline(true)
    echoLink(
      "Check for mapper &amp; map updates", 'mmp.echo("Checking...") mmp.checkforupdate()', '', true
    )
    setUnderline(false)
    echo(" ")
    setUnderline(true)
    echoLink(
      "(force map)",
      [[
      if io.exists(getMudletHomeDir().."/map downloads/current") then
        local s,m = os.remove(getMudletHomeDir().."/map downloads/current")
        if not s then mmp.echo("Couldn't delete '"..getMudletHomeDir().."/map downloads/current' file: "..tostring(m)..".") end
      end
      mmp.echo("Re-downloading the latest crowdmap...")
      mmp.checkforupdate()
    ]],
      "Re-download the map regardless if you have latest",
      true
    )
    setUnderline(false)
    echo("\n")
  end

  -- see if we can do anything with the name

  local function handle_name(name)
    local result = mmp.searchRoom(name)
    if type(result) == "string" then
      cecho("&lt;grey&gt;You have no recollection of any room with that name.")
      return
    end
    -- if we got one result, then act on it
    if table.size(result) == 1 then
      if type(next(result)) == "number" then
        handle_number(next(result))
      else
        handle_number(select(2, next(result)))
      end
      return
    end
    -- if not, then ask the user to clarify which one would they want
    mmp.echo("Which room specifically would you like to look up?")
    if not select(2, next(result)) or not tonumber(select(2, next(result))) then
      for roomid, roomname in pairs(result) do
        roomid = tonumber(roomid)
        cecho(string.format("  &lt;LightSlateGray&gt;%s&lt;DarkSlateGrey&gt; (", tostring(roomname)))
        cechoLink(
          "&lt;" .. mmp.settings.echocolour .. "&gt;" .. roomid,
          'mmp.roomLook(' .. roomid .. ')',
          string.format("View room details for %s (%s)", roomid, tostring(roomname)),
          true
        )
        cecho(
          string.format(
            "&lt;DarkSlateGrey&gt;) in the &lt;LightSlateGray&gt;%s&lt;DarkSlateGrey&gt;.\n",
            tostring(mmp.areatabler[getRoomArea(roomid)])
          )
        )
      end
    else
      for roomname, roomid in pairs(result) do
        roomid = tonumber(roomid)
        cecho(string.format("  &lt;LightSlateGray&gt;%s&lt;DarkSlateGrey&gt; (", tostring(roomname)))
        cechoLink(
          "&lt;" .. mmp.settings.echocolour .. "&gt;" .. roomid,
          'mmp.roomLook(' .. roomid .. ')',
          string.format("View room details for %s (%s)", roomid, tostring(roomname)),
          true
        )
        cecho(
          string.format(
            "&lt;DarkSlateGrey&gt;) in the &lt;LightSlateGray&gt;%s&lt;DarkSlateGrey&gt;.\n",
            tostring(mmp.areatabler[getRoomArea(roomid)])
          )
        )
      end
    end
  end

  if not input then
    if not mmp.roomexists(mmp.currentroom) then
      mmp.echo(mmp.currentroom .. " doesn't seem to be mapped yet.")
      mmp.echo("Stuff you can do:")
      echo("  ")
      echoLink("Check for all updates", 'mmp.echo("Checking...") mmp.checkforupdate()', '')
      echo(" ")
      echoLink(
        "(force map)",
        [[
      local s,m = os.remove(getMudletHomeDir().."/map downloads/current")
        if io.exists(getMudletHomeDir().."/map downloads/current") then
          local s,m = os.remove(getMudletHomeDir().."/map downloads/current")
          if not s then mmp.echo("Couldn't delete '"..getMudletHomeDir().."/map downloads/current' file: "..tostring(m)..".") end
        end
        mmp.echo("Re-downloading the latest map...")
        mmp.checkforupdate()
      ]],
        "Re-download the map regardless if you have latest"
      )
      echo("\n")
      mmp.echo(string.format("version %s.", tostring(mmp.version)))
      return
    else
      input = mmp.currentroom
    end
  end
  if tonumber(input) then
    handle_number(tonumber(input))
  else
    handle_name(input)
  end
  mmp.echo(string.format("version %s.", tostring(mmp.version)))
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>mmp.ferriesfix</name>
						<packageName></packageName>
						<script>function mmp.ferriesfix()
  if table.is_empty(mmp.ferry_rooms) then
    local tmp = getRoomUserData(1, "ferry rooms")
    if tmp ~= "" then
      for _, i in ipairs(yajl.to_value(tmp)) do
        mmp.ferry_rooms[i] = true
      end
    end
  end
end</script>
						<eventHandlerList>
							<string>mmapper updated map</string>
							<string>sysConnectionEvent</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>mmp.wormholesfix</name>
						<packageName></packageName>
						<script>function mmp.wormholesfix()
  local c = 0
  local weight = 10
  for _, area in pairs(getAreaTable()) do
    local rooms = getAreaRooms(area) or {}
    for i = 0, #rooms do
      local exits = getSpecialExits(rooms[i] or 0)

       if exits and next(exits) then
         for exit, cmd in pairs(exits) do
           if type(cmd) == "table" then cmd = next(cmd) end

           if (cmd:lower():find("worm warp", 1, true)) then
				setExitWeight(rooms[i], cmd, weight)
             c = c + 1
           end
         end
       end
    end
  end

  if c &gt; 0 then mmp.echo(string.format("%s wormholes weighted to %s (so we don't take them over too short distances).", c, weight)) end
end</script>
						<eventHandlerList>
							<string>mmapper updated map</string>
							<string>sysMapDownloadEvent</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>mmp.clearlastupdate</name>
						<packageName></packageName>
						<script>function mmp.clearlastupdate()
  -- reset mmp.pdb_lastupdate on the prompt
  enableTrigger"Mudlet Mapper prompt trigger"
end</script>
						<eventHandlerList>
							<string>mmapper updated pdb</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Third-party functions</name>
						<packageName></packageName>
						<script>-- from: http://lua-users.org/wiki/CopyTable
local function deepcopy(orig)
    local orig_type = type(orig)
    local copy
    if orig_type == 'table' then
        copy = {}
        for orig_key, orig_value in next, orig, nil do
            copy[deepcopy(orig_key)] = deepcopy(orig_value)
        end
        setmetatable(copy, deepcopy(getmetatable(orig)))
    else -- number, string, boolean, etc
        copy = orig
    end
    return copy
end

mmp.deepcopy = deepcopy</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>mmp_regenerate_areas</name>
						<packageName></packageName>
						<script>function mmp_regenerate_areas()
  -- cached data
  mmp.areatable = getAreaTable() -- this translates an area name to an ID
  mmp.areatabler = {} -- this translates an ID to an area name

  local t = getAreaTable()
  for k,v in pairs(t) do
    mmp.areatabler[tonumber(v)] = k
  end

  mmp.clearpathcache()
end</script>
						<eventHandlerList>
							<string>mmp areas changed</string>
							<string>mmapper map reloaded</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>mmp_relock_areas</name>
						<packageName></packageName>
						<script>function mmp_relock_areas()
	local getAreaRooms, lockRoom, lockedareas = getAreaRooms, lockRoom, mmp.locked

	for areaid, areaname in pairs(getAreaTableSwap()) do
		if lockedareas[areaid] then
			local rooms = getAreaRooms(areaid) or {}
			for _, roomid in pairs(rooms) do
				lockRoom(roomid, true)
			end
		else
			local rooms = getAreaRooms(areaid) or {}
			for _, roomid in pairs(rooms) do
				lockRoom(roomid, false)
			end
		end
	end

	-- make sure area with ID 0 is locked - this was causing crashing issues
	local rooms = getAreaRooms(0) or {}
	for _, roomid in pairs(rooms) do
		lockRoom(roomid, true)
	end
end</script>
						<eventHandlerList>
							<string>mmapper map reloaded</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Fix setExit</name>
						<packageName></packageName>
						<script>do
local oldsetExit = setExit

local exitmap = {
  n = 1,
  north = 1,
  ne = 2,
  northeast = 2,
  nw = 3,
  northwest = 3,
  e = 4,
  east = 4,
  w = 5,
  west = 5,
  s = 6,
  south = 6,
  se = 7,
  southeast = 7,
  sw = 8,
  southwest = 8,
  u = 9,
  up = 9,
  d = 10,
  down = 10,
  ["in"] = 11,
  out = 12
}

function setExit(from, to, direction)
  if type(direction) == "string" and not exitmap[direction] then return false end

  return oldsetExit(from, to, type(direction) == "string" and exitmap[direction] or direction)
end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Fix exit locking funcs</name>
						<packageName></packageName>
						<script>do
local oldlockExit = lockExit
local oldhasExitLock = hasExitLock

local exitmap = {
  n = 1,
  north = 1,
  ne = 2,
  northeast = 2,
  nw = 3,
  northwest = 3,
  e = 4,
  east = 4,
  w = 5,
  west = 5,
  s = 6,
  south = 6,
  se = 7,
  southeast = 7,
  sw = 8,
  southwest = 8,
  u = 9,
  up = 9,
  d = 10,
  down = 10,
  ["in"] = 11,
  out = 12
}

function lockExit(from, direction, status)
  if type(direction) == "string" and not exitmap[direction] then return false end

  return oldlockExit(from, type(direction) == "string" and exitmap[direction] or direction, status)
end

function hasExitLock(from, direction)
  if type(direction) == "string" and not exitmap[direction] then return false end

  return oldhasExitLock(from, type(direction) == "string" and exitmap[direction] or direction)
end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Assorted small utilities</name>
						<packageName></packageName>
						<script>function mmp.comma_value(n) -- credit http://richard.warburton.it
	local left,num,right = string.match(n,'^([^%d]*%d)(%d*)(.-)$')
	return left..(num:reverse():gsub('(%d%d%d)','%1,'):reverse())..right
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Defense tracking</name>
						<packageName></packageName>
						<script>mmp.defs = {current = {}}
mmp.defs.add =
  function()
    local def = gmcp.Char.Defences.Add.name
    if not mmp.defs.current[def] then
      mmp.defs.current[def] = true
      raiseEvent("mmp got def", def)
    end
  end
mmp.defs.remove =
  function()
    for _, def in ipairs(gmcp.Char.Defences.Remove) do
      mmp.defs.current[def] = nil
      raiseEvent("mmp lost def", def)
    end
  end
mmp.defs.list =
  function()
    local newDefs = {}
    local addedDefs, lostDefs = {}, {}
    for _, v in ipairs(gmcp.Char.Defences.List) do
      newDefs[v.name] = true
      if not mmp.defs.current[v.name] then
        addedDefs[#addedDefs + 1] = v.name
      end
    end
    for def in pairs(mmp.defs.current) do
      if not newDefs[def] then
        lostDefs[#lostDefs + 1] = def
      end
    end
    mmp.defs.current = newDefs
    for _, def in pairs(lostDefs) do
      raiseEvent("mmp lost def", def)
    end
    for _, def in ipairs(addedDefs) do
      raiseEvent("mmp got def", def)
    end
  end
-- EVENT HANDLERS
registerAnonymousEventHandler("gmcp.Char.Defences.Add", "mmp.defs.add")
registerAnonymousEventHandler("gmcp.Char.Defences.Remove", "mmp.defs.remove")
registerAnonymousEventHandler("gmcp.Char.Defences.List", "mmp.defs.list")</script>
						<eventHandlerList />
					</Script>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Person tracking</name>
					<packageName></packageName>
					<script>--[[
mmp will have 2 person tracking databases:
- mmp.pdb  =  used to store the last known location of a person
- mmp.pdb_lastupdate  =  used to store the output of the last locating command

Both databases work with the person's name as key and the location name as value.

]]
mmp.pdb = mmp.pdb or {}
mmp.pdb_lastupdate = mmp.pdb_lastupdate or {}

function mmp.is_here(who)
  return (mmp.pdb[who] and mmp.pdb[who] == mmp.currentroomname) and true or false
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Lock Area</name>
					<packageName></packageName>
					<script>-- Lock Area

mmp.locked = mmp.locked or {}
mmp.lastLockSearch = mmp.lastLockSearch or nil

function mmp.doLockArea(search)
	local areaList
	if search ~= nil then
		local r = rex.new(string.lower(search))
		mmp.lastLockSearch = search
		for name, id in pairs(getAreaTable()) do
			if r:match(string.lower(name)) then
				areaList = areaList or {}
				areaList[name] = id
			end
		end
		if areaList == nil then
			mmp.echo("'" .. search .. "' did not match any known areas!")
			return
		end
	else
		mmp.lastLockSearch = nil
		areaList = getAreaTable()
	end

	for name, id in pairs(areaList) do
		mmp.echon(name .. string.rep(" ", 40 - string.len(name)))
		if not mmp.locked[id] then
			setFgColor(0, 200, 0)
			setUnderline(true)
			echoLink("Lock!", [[mmp.lockArea( ']] .. name:gsub("'", [[\']]) .. [[', true )]], "Click to lock area '" .. name .. "'", true)
		else
			setFgColor(200, 0, 0)
			setUnderline(true)
			echoLink("Unlock!", [[mmp.lockArea( ']] .. name:gsub("'", [[\']]) .. [[', false )]], "Click to unlock area '" .. name .. "'", true)
		end
	end

	if not search then
		echo"\n\n" mmp.echo("Use &lt;green&gt;arealock &lt;area&gt;&lt;white&gt; to filter areas.")
	end
end

function mmp.lockArea(name, lock, dontreshow)
	local areas = getAreaTable()
	local rooms = getAreaRooms(areas[name]) or {}
    local lockRoom = lockRoom
    local count = 0
	for _, room in pairs(rooms) do
		lockRoom(room, lock)
        count = count + 1
	end

	mmp.locked[areas[name]] = lock and true or nil
	mmp.echo(string.format("Area '%s' %slocked! All %s room%s within it.", name, (lock and '' or 'un'), count, (count == 1 and '' or 's')))

	if not dontreshow then mmp.doLockArea(mmp.lastLockSearch) end
end


</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Center view via GMCP</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>mmp_center_roominfo</name>
						<packageName></packageName>
						<script>function mmp_center_roominfo()
  -- lusternia has gmcp.Room.Players before gmcp.Room.Info is created
  if gmcp.Room.Info then centerview(gmcp.Room.Info.num) end
end</script>
						<eventHandlerList>
							<string>gmcp.Room</string>
						</eventHandlerList>
					</Script>
				</Script>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>mm Mapping</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>mmp_mapping_newroom</name>
						<packageName></packageName>
						<script>--mmp_mapping_newroom

local function makeroom(oldid, newid, x, y, z)
  assert(x and y and z, "makeroom: need all 3 coordinates")
  addRoom(newid)
  setRoomCoordinates(newid, x, y, z)
  setRoomArea(newid, getRoomArea(oldid))
  local fgr, fgg, fgb = unpack(color_table.red)
  local bgr, bgg, bgb = unpack(color_table.blue)
  highlightRoom(newid, fgr, fgg, fgb, bgr, bgg, bgb, 1, 100, 100)
  if mmp.envids[gmcp.Room.Info.environment] then
    setRoomEnv(newid, mmp.envids[gmcp.Room.Info.environment])
  else
    setRoomEnv(newid, getRoomEnv(oldid))
  end
  return string.format("Created new room %d at %dx,%dy,%dz.", newid, x, y, z)
end

-- gives the reverse shifted coordinates, ie asking for the sw exit + coords will give the coords at ne

local function getshiftedcoords(original, ox, oy, oz)
  local x, y, z
  local has = table.contains
  -- reverse the exit
  w = mmp.ranytolong(original)
  if has({"west", "left", "w", "l"}, w) then
    x = (x or ox) - 1
    y = (y or oy)
    z = (z or oz)
  elseif has({"east", "right", "e", "r"}, w) then
    x = (x or ox) + 1
    y = (y or oy)
    z = (z or oz)
  elseif has({"north", "top", "n", "t"}, w) then
    x = (x or ox)
    y = (y or oy) + 1
    z = (z or oz)
  elseif has({"south", "bottom", "s", "b"}, w) then
    x = (x or ox)
    y = (y or oy) - 1
    z = (z or oz)
  elseif has({"northwest", "topleft", "nw", "tl"}, w) then
    x = (x or ox) - 1
    y = (y or oy) + 1
    z = (z or oz)
  elseif has({"northeast", "topright", "ne", "tr"}, w) then
    x = (x or ox) + 1
    y = (y or oy) + 1
    z = (z or oz)
  elseif has({"southeast", "bottomright", "se", "br"}, w) then
    x = (x or ox) + 1
    y = (y or oy) - 1
    z = (z or oz)
  elseif has({"southwest", "bottomleft", "sw", "bl"}, w) then
    x = (x or ox) - 1
    y = (y or oy) - 1
    z = (z or oz)
  elseif has({"up", "u"}, w) then
    x = (x or ox)
    y = (y or oy)
    z = (z or oz) + 1
  elseif has({"down", "d"}, w) then
    x = (x or ox)
    y = (y or oy)
    z = (z or oz) - 1
  elseif has({"in", "i"}, w) then
    x = (x or ox)
    y = (y or oy)
    z = (z or oz) - 1
  elseif has({"out", "o"}, w) then
    x = (x or ox)
    y = (y or oy)
    z = (z or oz) + 1
  else
    mmp.echo(
      "Don't know where to shift the coordinates for a " ..
      tostring(w) ..
      " (" ..
      tostring(original) ..
      ") exit."
    )
  end
  return x, y, z
end

function mmp_mapping_newroom(_, num)
  local s, m =
    xpcall(
      function()
        if not mmp.editing then
          return
        end
        if not gmcp.Room then
          mmp.echo(
            "You need to have GMCP turned on (see preferences on a recent Mudlet) for mapping stuff."
          )
          return
        end
        -- wilderness mapping right now is UNFINISHED! It does not handle the grid breakup. So, please don't try it, and please won't whine about it.

        local function inwilderness()
          return (gmcp.Room.Info.coords == "" and gmcp.Room.Info.area == "")
        end

        local getRoomName, getRoomCoordinates, getRoomsByPosition =
          getRoomName, getRoomCoordinates, getRoomsByPosition
        local num = tonumber(num) or tonumber(gmcp.Room.Info.num)
        local currentexits = gmcp.Room.Info.exits
        local s = ""
        if not mmp.roomexists(num) then
          -- see if we can create and link this room with an existing one
          -- wilderness and non-wilderness rooms require different methods of calculating relative coordinates
          if not inwilderness() then
            for exit, id in pairs(currentexits) do
              if mmp.roomexists(id) then
                s = makeroom(id, num, getshiftedcoords(exit, getRoomCoordinates(id)))
              end
            end
          else
            local x, y = tostring(num):match(".-(%d%d%d)(%d%d%d)$")
            -- Achaea's coordinates seem to be in the 4th quadrant, while Mudlets 0,0 is in the middle of the map. Invert y so going north-south looks alright
            s = makeroom(mmp.previousroom, num, x, y * -1, 0)
          end
        end
        -- if we created it, and some data could be filled in
        if mmp.roomexists(num) then
          -- cleanup the room name
          local rootroomname = mmp.cleanroomname(gmcp.Room.Info.name)
          -- match exact case, so mappers alertness' works properly
          if getRoomName(num) ~= rootroomname then
            setRoomName(num, rootroomname)
            unHighlightRoom(num)
            s = s .. (#s &gt; 0 and " " or "") .. "Updated room name to '" .. rootroomname .. "'."
          end
          -- autolink exits
          if not inwilderness() then
            local x = getRoomExits(num) or {}
            -- check for missing exits
            for exit, id in pairs(currentexits) do
              if id == 0 then
                s =
                  s ..
                  (#s &gt; 0 and " " or "") ..
                  "Can't link to the " ..
                  exit ..
                  ", it leads to a room with ID 0 (and that's not supported yet)."
              else
                if not x[mmp.anytolong(exit)] then
                  if not mmp.roomexists(id) then
                    s =
                      makeroom(
                        num, id, getshiftedcoords(mmp.ranytolong(exit), getRoomCoordinates(num))
                      )
                  end
                  if setExit(num, id, exit) then
                    s =
                      s ..
                      (#s &gt; 0 and " " or "") ..
                      "Added missing exit " ..
                      exit ..
                      " to " ..
                      (getRoomName(id) ~= "" and getRoomName(id) or "''") ..
                      " (" ..
                      id ..
                      ")."
                  else
                    s =
                      s ..
                      (#s &gt; 0 and " " or "") ..
                      string.format(
                        "Failed to link %d with %d via %s exit for some reason :/", num, id, exit
                      )
                  end
                end
              end
            end
          else
            local function getshiftedcoords(direction, ox, oy, oz)
              if direction == 'n' then
                return ox, oy + 1, oz
              elseif direction == 'e' then
                return ox + 1, oy, oz
              elseif direction == 's' then
                return ox, oy - 1, oz
              elseif direction == 'w' then
                return ox - 1, oy, oz
              elseif direction == 'ne' then
                return ox + 1, oy + 1, oz
              elseif direction == 'se' then
                return ox + 1, oy - 1, oz
              elseif direction == 'sw' then
                return ox - 1, oy - 1, oz
              elseif direction == 'nw' then
                return ox - 1, oy + 1, oz
              else
                error("getshiftedcoords: direction " .. direction .. " isn't supported yet.")
              end
            end

            local x, y, z = getRoomCoordinates(num)
            local currentexits = getRoomExits(num) or {}
            for _, exit in ipairs({'n', 'e', 's', 'w', 'ne', 'se', 'sw', 'nw'}) do
              local roomatdir =
                getRoomsByPosition(getRoomArea(num), getshiftedcoords(exit, x, y, z))
              if roomatdir[0] then
                local id = roomatdir[0]
                if not currentexits[mmp.anytolong(exit)] then
                  if setExit(num, id, exit) then
                    s =
                      s ..
                      (#s &gt; 0 and " " or "") ..
                      "Added missing exit " ..
                      exit ..
                      " to " ..
                      (getRoomName(id) ~= "" and getRoomName(id) or "''") ..
                      " (" ..
                      id ..
                      ")."
                  else
                    s =
                      s ..
                      (#s &gt; 0 and " " or "") ..
                      string.format(
                        "Failed to link %d with %d via %s exit for some reason :/", num, id, exit
                      )
                  end
                  local exit = mmp.anytoshort(mmp.ranytolong(exit))
                  if setExit(id, num, exit) then
                    s =
                      s ..
                      (#s &gt; 0 and " " or "") ..
                      "Added missing exit " ..
                      exit ..
                      " to " ..
                      (getRoomName(id) ~= "" and getRoomName(id) or "''") ..
                      " (" ..
                      id ..
                      ")."
                  else
                    s =
                      s ..
                      (#s &gt; 0 and " " or "") ..
                      string.format(
                        "Failed to link %d with %d via %s exit for some reason :/", num, id, exit
                      )
                  end
                end
              end
            end
          end
          -- check for unexisting exits
          if mmp.settings["autoclear"] then
            for exit, id in pairs(getRoomExits(num)) do
              if not currentexits[mmp.anytoshort(exit)] then
                setExit(num, -1, exit)
                s =
                  s ..
                  (#s &gt; 0 and " " or "") ..
                  exit ..
                  " exit to " ..
                  id ..
                  " doesn't actually exist, removed it."
              end
            end
          end
          -- check for environment update, if we have environments mapped out
          if
            mmp.envids[gmcp.Room.Info.environment] and
            mmp.envids[gmcp.Room.Info.environment] ~= getRoomEnv(num)
          then
            setRoomEnv(num, mmp.envids[gmcp.Room.Info.environment])
            s =
              s ..
              (#s &gt; 0 and " " or "") ..
              "Updated environment name to " ..
              gmcp.Room.Info.environment ..
              "."
          end
          -- check indoors status
          if mmp.game ~= "asteria" then
            local indoors = table.contains(gmcp.Room.Info.details, "indoors")
            if indoors and (getRoomUserData(num, "indoors") == '' or getRoomUserData(num,"outdoors") ~= '') then
            setRoomUserData(num, "indoors", "y")
            clearRoomUserDataItem(num, "outdoors")
            s = s .. (#s &gt; 0 and " " or "") .. "Updated room to be indoors."
          elseif not indoors and (getRoomUserData(num, "indoors") ~= '' or getRoomUserData(num, "outdoors") == '') then
            clearRoomUserDataItem(num, "indoors")
            setRoomUserData(num, "outdoors", "y")
            s = s .. (#s &gt; 0 and " " or "") .. "Updated room to be outdoors."
          end
        end

          -- check server area name (Achaea only for now)
          if mmp.game == "achaea" then
            local serverArea = gmcp.Room.Info.area
            if serverArea ~= getRoomUserData(num, "Game Area") then
              setRoomUserData(num, "Game Area", serverArea)
              s = s .. (#s &gt; 0 and " " or "") .. "Updated game area to " .. serverArea .. "."
            end
          end
          -- check for wilderness exits
          if getRoomChar(num) ~= "W" and table.contains(gmcp.Room.Info.details, "wilderness") then
            setRoomChar(num, "W")
            s = s .. (#s &gt; 0 and " " or "") .. "Added the wilderness mark."
          end
        end
        if #s &gt; 0 then
          mmp.echo(s)
          centerview(mmp.currentroom)
        end
      end,
      function(error)
        mmp.echo("Oops! Has a small problem (" .. error .. ").")
        echo("  ")
        echoLink(
          "view steps",
          'echo[[' .. debug.traceback() .. ']]',
          "View steps of code that led up to it"
        )
      end
    )
  if not s then
    mmp.echo(m)
  end
end</script>
						<eventHandlerList>
							<string>gmcp.Room.Info</string>
							<string>RoomNum</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>mmp_save_options</name>
						<packageName></packageName>
						<script>function mmp_save_options()
	local saveTable = {
		locked_areas = mmp.locked,
		options = mmp.settings:getAllOptions()
	}

	if string.char(getMudletHomeDir():byte()) == "/" then _sep = "/" else  _sep = "\\" end
	local saveFile = getMudletHomeDir() ..  _sep .. "mapper.options.lua"

	table.save(saveFile, saveTable)
end</script>
						<eventHandlerList>
							<string>sysExitEvent</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>mmp_load_options</name>
						<packageName></packageName>
						<script>function mmp_load_options()
	local loadTable = mmp_load_locks()

	if loadTable.options then
		for k, v in pairs(loadTable.options) do
			mmp.settings:setOption(k, v, true)
		end
	end
end

function mmp_load_locks()
	local loadTable = {}

	if string.char(getMudletHomeDir():byte()) == "/" then _sep = "/" else  _sep = "\\" end
	local loadFile = getMudletHomeDir() ..  _sep .. "mapper.options.lua"

    if io.exists(loadFile) then table.load(loadFile, loadTable) end

	if loadTable.locked_areas then
		mmp.locked = loadTable.locked_areas
	end

    local lockRoom, getAreaRooms = lockRoom, getAreaRooms
	for area in pairs(mmp.locked) do
		local rooms = getAreaRooms(area)
		for _, roomid in pairs(rooms or {}) do
			lockRoom(roomid, true)
		end
	end

	return loadTable
end</script>
						<eventHandlerList>
							<string>sysLoadEvent</string>
						</eventHandlerList>
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Game-specific</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Achaea</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>register_achaeas_envdata</name>
							<packageName></packageName>
							<script>function register_achaeas_envdata(_, game)
  if game ~= "Achaea" then
    return
  end
  mmp.envids =
    {
      ["Constructed underground"] = 2,
      ["Crimson Sea"] = 45,
      ["Deep Ocean"] = 24,
      ["Deep Ocean floor"] = 30,
      ["Dwarven city"] = 18,
      ["Lava Fields"] = 39,
      ["Magma Caves"] = 31,
      ["Natural underground"] = 3,
      ["Ocean floor"] = 34,
      ["Planar Highway"] = 42,
      ["Sanguine River"] = 44,
      ["Tsol'aa city"] = 19,
      ["Vast Ocean"] = 40,
      Abstract = 37,
      Agrarian = 48,
      Ausafoss = 47,
      Beach = 5,
      Blighted = 29,
      Catacombs = 14,
      Chaos = 38,
      Desert = 6,
      Earthen = 43,
      Flames = 49,
      Forest = 4,
      Freshwater = 22,
      Garden = 21,
      Grasslands = 7,
      Hills = 9,
      Jungle = 17,
      Mountains = 14,
      Nothing = 0,
      Ocean = 20,
      Path = 11,
      Polar = 27,
      Reef = 25,
      River = 10,
      Road = 12,
      Ruins = 32,
      Sewer = 23,
      Skies = 10,
      Storm = 50,
      Swamp = 15,
      Trees = 28,
      Tundra = 16,
      Urban = 8,
      Valley = 13,
      Vessel = 36,
      Viscera = 46,
      Wastelands = 41,
      Water = 30,
    }
  mmp.waterenvs = {}
  local waterids =
    {"Freshwater", "Ocean", "River", "Deep Ocean", "Water", "Reef", "Ocean floor", "Vast Ocean"}
  for i = 1, #waterids do
    mmp.waterenvs[mmp.envids[waterids[i]]] = true
  end
  mmp.envidsr = {}
  for name, id in pairs(mmp.envids) do
    mmp.envidsr[id] = name
  end
end</script>
							<eventHandlerList>
								<string>mmp logged in</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>achaea_gaia_whirlpool_reset</name>
							<packageName></packageName>
							<script>function achaea_gaia_whirlpool_reset(event, game)
	if game == "Achaea" then
		mmp.whirlString = 'script: send("enter whirlpool") if tempWhirlTrigger then killTrigger(tempWhirlTrigger) tempWhirlTrigger = nil end if tempWhirlTimer then killTimer(killWhirlTimer) tempWhirlTimer = nil end tempWhirlTrigger = tempTrigger("What do you wish to enter?", [[if tempWhirlTimer then killTimer(tempWhirlTimer) tempWhirlTimer = nil end mmp.echo("Whirlpool not found here. Trying another room.") local x = {45817, 45780, 45903, 45868, 46254, 45866} if tempWhirlTrigger then killTrigger(tempWhirlTrigger) tempWhirlTrigger = nil end clearSpecialExits(]]..mmp.currentroom..[[) local y = table.index_of(x, ]]..mmp.currentroom..[[) + 1 if y &gt; #x then y = 1 end addSpecialExit(x[y], 793, mmp.whirlString) mmp.clearpathcache() mmp.gotoRoom(mmp.speedWalkPath[#mmp.speedWalkPath]) mmp.echo("Moved whirlpool to "..x[y]..".")]]) tempWhirlTimer = tempTimer(1, [[if tempWhirlTrigger then killTrigger(tempWhirlTrigger) tempWhirlTrigger = nil end if tempWhirlTimer then killTimer(tempWhirlTimer) tempWhirlTimer = nil end]])'
		local x = {45817, 45780, 45903, 45868, 46254, 45866}
		for i, v in ipairs(x) do clearSpecialExits(v) end
		addSpecialExit(45868, 793, mmp.whirlString)
	end
end</script>
							<eventHandlerList>
								<string>mmp logged in</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Shackle handling</name>
							<packageName></packageName>
							<script>local density = false
--Wear shackle function

function mmp.WearShackle()
  if mmp.settings.shackle and density then
    send("wear shackle")
  end
end

function mmp.UnwearShackle()
  if mmp.settings.shackle and mmp.defs.current.density then
    density = true
    send("remove shackle")
  elseif not mmp.defs.current.density then
    density = false
  end
end

--Event Handlers
registerAnonymousEventHandler("mmapper failed path", "mmp.WearShackle")
registerAnonymousEventHandler("mmapper stopped", "mmp.WearShackle")
registerAnonymousEventHandler("mmapper arrived", "mmp.WearShackle")
registerAnonymousEventHandler("started speedwalk", "mmp.UnwearShackle")</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>mmapper_achaea_orb_of_confinement</name>
							<packageName></packageName>
							<script>--returns a table depending on current crowdmap settings. Functionized so that these tables will only have to be stored in one location.
function mmp.getAchaeaOrbTable()
  return
  --first table is areas in each org for the crowdmap, second is for the game provided map.
    mmp.settings.crowdmap and
    {
      ashtan = {49, 53},
      cyrene = {57, 59, 62, 63, 68, 70},
      eleusis = {51},
      hashan = {55, 56, 267},
      mhaldor = {44, 40, 48},
      targossas = {368},
    } or
    {
      ashtan = {49, 53, 54, 60},
      cyrene = {57, 62, 67, 174, 189, 292, 293, 294},
      eleusis = {51},
      hashan = {55, 56},
      mhaldor = {44, 48, 295, 296, 297},
      targossas = {271, 277, 298, 299, 300},
    }
end

--roomID is optional, if not it will default to current room. Returns true if you're in an area covered by the orb of confinement.
function mmp.orbed(roomID)
  if mmp.game ~= "achaea" then
    return false
  end
  local orbTable = mmp.getAchaeaOrbTable()
  --first table is the areas in the city for the crowdmap, second is for the game provided map.
  local areaID = getRoomArea(roomID or mmp.currentroom)
  for city, areaTable in pairs(orbTable) do
    if table.contains(areaTable, areaID) then
      return mmp.settings["orb" .. city]
    end
  end
  return false
end</script>
							<eventHandlerList />
						</Script>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Aetolia</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>register_aetolias_envdata</name>
							<packageName></packageName>
							<script>function register_aetolias_envdata(_, game)
  if game ~= "Aetolia" then return end

  mmp.envids =
  {
    ["a bridge"]                = 55,
    ["Airship wreckage"]        = 62,
    ["camp site"]               = 57,
    ["Constructed underground"] = 2,
    ["Deep ocean"]              = 24,
    ["lifeless sands"]          = 54,
    ["logged forest"]           = 56,
    ["Natural underground"]     = 3,
    ["Tsol'aa city"]            = 19,
    ["Underwater city"]         = 28,
    ["within a tree"]           = 36,
    Beach                       = 5,
    Canyon                      = 34,
    Castle                      = 61,
    Cavern                      = 69,
    Chaos                       = 1,
    Crater                      = 37,
    Desert                      = 6,
    Ethereal                    = 67,
    Forest                      = 4,
    Freshwater                  = 22,
    Garden                      = 21,
    Grasslands                  = 7,
    Graveyard                   = 31,
    grotto                      = 70,
    Hills                       = 9,
    Ice                         = 30,
    Jungle                      = 17,
    lava                        = 39,
    Mines                       = 32,
    Mountains                   = 14,
    Ocean                       = 20,
    Onboard                     = 33,
    Path                        = 11,
    Reef                        = 25,
    River                       = 10,
    Road                        = 12,
    Ruins                       = 26,
    Sewer                       = 23,
    Shadows                     = 58,
    Swamp                       = 15,
    Temple                      = 29,
    Tundra                      = 16,
    Urban                       = 8,
    Valley                      = 13,
    Village                     = 27,
  }

  mmp.waterenvs = {}
  local waterids = { "River", "Freshwater", "Deep ocean", "Reef", "Underwater city" }
  for i = 1, #waterids do mmp.waterenvs[mmp.envids[waterids[i]]] = true end

  mmp.envidsr = {};
  for name, id in pairs(mmp.envids) do mmp.envidsr[id] = name end
end</script>
							<eventHandlerList>
								<string>mmp logged in</string>
							</eventHandlerList>
						</Script>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Asteria</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>asteria_stop_speedwalk_for_wrong_dir</name>
							<packageName></packageName>
							<script>function asteria_stop_speedwalk_for_wrong_dir()
  if mmp.game and mmp.game ~= "asteria" then
    return
  end
  if #mmp.speedWalkPath &gt; 0 then
    echo("Can't go \"" .. gmcp.Room.WrongDir .. "\". Stopping speedwalk.")
    mmp.stop()
  end
end</script>
							<eventHandlerList>
								<string>gmcp.Room.WrongDir</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>register_asterias_envdata</name>
							<packageName></packageName>
							<script>function register_asterias_envdata(_, game)
  if game ~= "Asteria" then
    return
  end
  mmp.envids =
    {
      Air = 20,
      Airship = 21,
      Badland = 22,
      Beach = 23,
      Carriage = 24,
      Cave = 25,
      City = 26,
      Coast = 27,
      Default = 28,
      Desert = 29,
      Field = 30,
      Forest = 31,
      Ghetto = 32,
      Hills = 33,
      Home = 34,
      Inn = 35,
      Inside = 36,
      Marsh = 37,
      Mountain = 38,
      Road = 39,
      Ship = 40,
      Shop = 41,
      Temple = 42,
      Tundra = 43,
      Underwater = 44,
      Vehicle = 45,
      Water = 46,
    }
  mmp.waterenvs = {}
  mmp.envidsr = {}
  for name, id in pairs(mmp.envids) do
    mmp.envidsr[id] = name
  end


mmp.colorcodes = {}
mmp.colorcodes[20] = {176, 224, 230, 255}
mmp.colorcodes[21] = {160, 82, 45, 255}
mmp.colorcodes[22] = {205, 133, 63, 255}
mmp.colorcodes[23] = {218, 165, 32, 255}
mmp.colorcodes[24] = {132, 112, 255, 255}
mmp.colorcodes[25] = {47, 79, 79, 255}
mmp.colorcodes[26] = {190, 190, 190, 255}
mmp.colorcodes[27] = {210, 180, 140, 255}
mmp.colorcodes[28] = {255, 69, 0, 255}
mmp.colorcodes[29] = {255, 215, 0, 255}
mmp.colorcodes[30] = {127, 255, 0, 255}
mmp.colorcodes[31] = {0, 100, 0, 255}
mmp.colorcodes[32] = {184, 134, 11, 255}
mmp.colorcodes[33] = {50, 205, 50, 255}
mmp.colorcodes[34] = {102, 205, 170, 255}
mmp.colorcodes[35] = {0, 128, 128, 255}
mmp.colorcodes[36] = {255, 250, 205, 255}
mmp.colorcodes[37] = {107, 142, 35, 255}
mmp.colorcodes[38] = {139, 69, 19, 255}
mmp.colorcodes[39] = {112, 128, 144, 255}
mmp.colorcodes[40] = {265, 42, 42, 255}
mmp.colorcodes[41] = {0, 190, 255, 255}
mmp.colorcodes[42] = {138, 43, 226, 255}
mmp.colorcodes[43] = {255, 250, 250, 255}
mmp.colorcodes[44] = {65, 105, 225, 255}
mmp.colorcodes[45] = {90, 158, 160, 255}
mmp.colorcodes[46] = {30, 144, 255, 255}

function set_asteria_colorcodes()
  for id, rgba in pairs(mmp.colorcodes) do
    setCustomEnvColor(id, rgba[1], rgba[2], rgba[3], rgba[4])
  end
 end
end</script>
							<eventHandlerList>
								<string>mmp logged in</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>asteria_can_move</name>
							<packageName></packageName>
							<script>-- Asteria's GMCP butts heads with existing GMCP 'able' checks in the speedwalking script. This works around it.

function asteria_can_move(_, game)
  if game ~= "Asteria" then
    return
  end

  function mapper_can_move()
    return gmcp.Char and gmcp.Char.Balance and gmcp.Char.Balance.balance == 0
  end
end</script>
							<eventHandlerList>
								<string>mmp logged in</string>
							</eventHandlerList>
						</Script>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Dragonswords</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>dragonswords_stop_speedwalk_for_wrong_dir</name>
							<packageName></packageName>
							<script>function dragonswords_stop_speedwalk_for_wrong_dir()
  if mmp.game and mmp.game ~= "dragonswords" then
    return
  end
  if #mmp.speedWalkPath &gt; 0 then
    echo("The way \"" .. gmcp.Room.WrongDir .. "\" is blocked. Stopping speedwalk.")
    mmp.stop()
  end
end</script>
							<eventHandlerList>
								<string>gmcp.Room.WrongDir</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>register_dragonswords_envdata</name>
							<packageName></packageName>
							<script>function register_dragonswords_envdata(_, game)
  if game ~= "dragonswords" then
    return
  end
  mmp.envids =
    {
      ["inside"] = 1,
        ["city"] = 2,
        ["field"] = 3,
        ["forest"] = 4,
        ["hills"] = 5,
        ["mountain"] = 6,
        ["swim"] = 7,
        ["noswim"] = 8,
        ["underwater"] = 9,
        ["air"] = 10,
        ["desert"] = 11,
        ["river"] = 12,
        ["oceanfloor"] = 13,
        ["underground"] = 14,
        ["jungle"] = 15,
        ["swamp"] = 16,
        ["tundra"] = 17,
        ["ice"] = 18,
        ["ocean"] = 19,
        ["lava"] = 20,
        ["shore"] = 21,
        ["tree"] = 22,
        ["stone"] = 23,
        ["quicksand"] = 24,
        ["wall"] = 25,
        ["glacier"] = 26,
        ["exit"] = 27,
        ["trail"] = 28,
        ["badlands"] = 29,
        ["grassland"] = 30,
        ["scrub"] = 31,
        ["barren"] = 32,
        ["bridge"] = 33,
        ["road"] = 34,
    }
  mmp.waterenvs = {}
  mmp.envidsr = {}
  for name, id in pairs(mmp.envids) do
    mmp.envidsr[id] = name
  end
end</script>
							<eventHandlerList>
								<string>mmp logged in</string>
							</eventHandlerList>
						</Script>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Lusternia</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>register_lusternias_envdata</name>
							<packageName></packageName>
							<script>function register_lusternias_envdata(_, game)
  if game ~= "Lusternia" then return end

  mmp.envids =
  {
    ["constructed underground"] = 2,
    ["deep ocean"]              = 24,
    ["natural underground"]     = 3,
    ["constructed underwater"]  = 41,
    aether                      = 36,
    astral                      = 35,
    beach                       = 5,
    chaos                       = 39,
    clouds                      = 37,
    concordance                 = 38,
    darkness                    = 1,
    desert                      = 6,
    divine                      = 33,
    farmlands                   = 30,
    flesh                       = 18,
    forest                      = 4,
    freshwater                  = 22,
    garden                      = 21,
    grasslands                  = 7,
    hills                       = 9,
    jungle                      = 17,
    mountains                   = 14,
    netherworld                 = 34,
    ocean                       = 20,
    path                        = 11,
    polar                       = 27,
    reef                        = 25,
    river                       = 10,
    road                        = 12,
    ruins                       = 19,
    sewer                       = 23,
    swamp                       = 15,
    trees                       = 28,
    tundra                      = 16,
    urban                       = 8,
    valley                      = 13,
    volcanic                    = 32,
    wasteland                   = 29,
    badlands                    = 40,
    wetlands                    = 31,
  }

  mmp.waterenvs = {}
  local waterids = { "river", "ocean", "freshwater", "deep ocean" }
  for i = 1, #waterids do mmp.waterenvs[mmp.envids[waterids[i]]] = true end

  mmp.envidsr = {};
  for name, id in pairs(mmp.envids) do mmp.envidsr[id] = name end
end</script>
							<eventHandlerList>
								<string>mmp logged in</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Astral utilities</name>
							<packageName></packageName>
							<script>local astralExits =
  {
    {5079, 5175, "n"},
    {5072, 5065, "w"},
    {5088, 5132, "e"},
    {5145, 5176, "s"},
    {5138, 5146, "e"},
    {5158, 5192, "s"},
    {5152, 5041, "e"},
    {5031, 5042, "e"},
    {5022, 5131, "n"},
    {5116, 5198, "w"},
    {5130, 5096, "e"},
    {5089, 5058, "n"},
    {5102, 5115, "e"},
    {5111, 5159, "e"},
    {5103, 5071, "n"},
    {5059, 5053, "w"},
    {5187, 5169, "w"},
    {5190, 5204, "e"},
    {5065, 5072, "e"},
    {45333, 5093, "u"},
    {45334, 5113, "u"},
    {45356, 5075, "u"},
    {45335, 5171, "u"},
    {45357, 5066, "u"},
    {45329, 5156, "u"},
    {45330, 5201, "u"},
    {45331, 5121, "u"},
    {45324, 5055, "u"},
    {45354, 5177, "u"},
    {45325, 5024, "u"},
    {45355, 5133, "u"},
  }
local mirror =
  {
    n = "s",
    ne = "sw",
    e = "w",
    se = "nw",
    s = "n",
    sw = "ne",
    w = "e",
    nw = "se",
    u = "d",
    d = "u",
    out = "in",
    ["in"] = "out",
  }

function mmp.astroboots()
  if mmp.game ~= "lusternia" then
    return
  end
  local option = mmp.settings.astrojump
  mmp.echo("&lt;green&gt;" .. (option and "Set up" or "Removed") .. " &lt;white&gt;Astrojump &lt;green&gt;exits")
  local exitString = [[script:if gmcp.Room.Info.exits.%s then send("%s", false) else send("astrojump", false) end]]
  for k, v in pairs(astralExits) do
    if option then
      addSpecialExit(v[1], v[2], string.format(exitString, v[3], v[3]))
      addSpecialExit(v[2], v[1], string.format(exitString, mirror[v[3]], mirror[v[3]]))
    else
      removeSpecialExit(v[1], "astrojump")
      removeSpecialExit(v[2], "astrojump")
      removeSpecialExit(v[1], string.format(exitString, v[3], v[3]))
      removeSpecialExit(v[2], string.format(exitString, mirror[v[3]], mirror[v[3]]))
    end
  end
end

function mmp.wildnodes(create)
  if mmp.game ~= "lusternia" then
    return
  end
  for k, v in pairs(astralExits) do
    if create then
      setExit(v[1], v[2], v[3])
      setExit(v[2], v[1], mirrorExits[v[3]])
    else
      setExit(v[1], -1, v[3])
      setExit(v[2], -1, mirrorExits[v[3]])
    end
  end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Transverse and pathfind</name>
							<packageName></packageName>
							<script>local planes =
  {
    ["the Prime Material Plane"] = "prime",
    ["the Ethereal Plane"] = "ethereal",
    ["the Water Elemental Plane"] = "elemental",
    ["the Earth Elemental Plane"] = "elemental",
    ["the Air Elemental Plane"] = "elemental",
    ["the Fire Elemental Plane"] = "elemental",
    ["Celestia, Plane of Light"] = "cosmic",
    ["the Cosmic Plane of Vortex"] = "cosmic",
    ["the Cosmic Plane of Continuum"] = "cosmic",
    ["the Tainted Plane of Nil"] = "cosmic",
    ["the Astral Plane"] = "astral",
  }

function mmp.transverse(_, command)
  command = command:lower()
  if command:sub(0, 11) == "transverse " or command == "pathfind" then
    transverseCMD = command
    transversedFrom = gmcp.Room.Info.num
    lastPlane = planes[gmcp.Room.Info.details[1]]
    validTransverse = true
  end
end

registerAnonymousEventHandler("sysDataSendRequest", "mmp.transverse")

function mmp.registerTransverseExit()
  if transversedFrom ~= gmcp.Room.Info.num then
    addSpecialExit(transversedFrom, gmcp.Room.Info.num, transverseCMD)
    setExitWeight(transversedFrom, transverseCMD, 20)
    if lastPlane then
      addSpecialExit(gmcp.Room.Info.num, transversedFrom, "transverse " .. lastPlane)
      setExitWeight(gmcp.Room.Info.num, "transverse " .. lastPlane, 20)
    end
    validTransverse = false
  end
end

function mmp.clearTransverse()
  local otherSide = 0
  for room, command in pairs(getSpecialExits(gmcp.Room.Info.num)) do
    if next(command) == transverseCMD then
      otherSide = room
    end
  end
  for room, command in pairs(getSpecialExits(otherSide) or {}) do
    if room == gmcp.Room.Info.num and string.sub(next(command), 0, 11) == "transverse " then
      removeSpecialExit(otherSide, next(command))
    end
  end
  removeSpecialExit(gmcp.Room.Info.num, transverseCMD)
  if mmp.autowalking then
    mmp.autowalking = false
    mmp.gotoRoom(string.split(next(mmp.showpathcache()), "_")[2])
  end
end

function mmp.registerPathfind()
  addSpecialExit(transversedFrom, gmcp.Room.Info.num, "pathfind")
  setExitWeight(transversedFrom, "pathfind", 15)
  addSpecialExit(gmcp.Room.Info.num, transversedFrom, "pathfind")
  setExitWeight(gmcp.Room.Info.num, "pathfind", 15)
  validTransverse = false
end

function mmp.clearPathfind()
  local otherSide = 0
  for room, command in pairs(getSpecialExits(gmcp.Room.Info.num)) do
    if next(command) == "pathfind" then
      otherSide = room
    end
  end
  for room, command in pairs(getSpecialExits(otherSide) or {}) do
    if room == gmcp.Room.Info.num and next(command) == "pathfind" then
      removeSpecialExit(otherSide, next(command))
    end
  end
  removeSpecialExit(gmcp.Room.Info.num, "pathfind")
  if mmp.autowalking then
    mmp.autowalking = false
    mmp.gotoRoom(string.split(next(mmp.showpathcache()), "_")[2])
  end
end

function mmp.lockpaths(lock)
  local count = 0
  for area, areaname in pairs(mmp.areatabler) do
    local rooms = getAreaRooms(area) or {}
    for i = 0, #rooms do
      local exits = getSpecialExits(rooms[i] or 0)
      for room, command in pairs(exits or {}) do
        if next(command) == "pathfind" then
          count = count + 1
          lockSpecialExit(rooms[i], room, "pathfind", lock)
        end
      end
    end
  end
  mmp.echo((lock and "Locked " or "Unlocked ") .. count .. " pathfinding exits.")
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Lusternia basin areas</name>
							<packageName></packageName>
							<script>local basinAreas =
  {
    ["Ackleberry Highway"] = true,
    ["Alabaster Road"] = true,
    ["Avechna's Peak"] = true,
    ["Avechna's Teeth"] = true,
    ["Balach Swamp"] = true,
    ["Bondero Bay"] = true,
    ["Caoimhe Dell"] = true,
    ["Cay of Cloadahi"] = true,
    ["Emerald Road"] = true,
    ["Epicure's Alley"] = true,
    ["Glomdoring Forest"] = true,
    ["Great Southern Highway"] = true,
    ["Highwater Keep"] = true,
    ["Irshaw Heights"] = true,
    ["Mornhai Sanctuary"] = true,
    ["Mount Krog"] = true,
    ["Mount Wend"] = true,
    ["Mount Zoaka"] = true,
    ["Old Imperial Road"] = true,
    ["Snow Valley"] = true,
    ["Spectre Isle"] = true,
    ["St. Gathlyn's Orphanage for the Dispossessed"] = true,
    ["The Emerald Enclave"] = true,
    ["Tolborolla Valley"] = true,
    ["Verasavir Valley"] = true,
    ["Waste Storage Facility"] = true,
    ["Wyrden Isle"] = true,
    ["the Base of Operations"] = true,
    ["the Blasted Land"] = true,
    ["the Carai Caroo"] = true,
    ["the Caverns of Muhanlesh"] = true,
    ["the Caves of Hhuhur"] = true,
    ["the Chancel of Clangoran Mysteries"] = true,
    ["the City of Gaudiguch"] = true,
    ["the City of Hallifax"] = true,
    ["the City of Magnagora"] = true,
    ["the City of New Celest"] = true,
    ["the Clarramore Cloud Gardens"] = true,
    ["the Crimson Lady"] = true,
    ["the Divine Luck Club"] = true,
    ["the Dracnari Nomad Camp"] = true,
    ["the Empress' Last Breath"] = true,
    ["the Estengare River"] = true,
    ["the Feyranti Estate"] = true,
    ["the Floating Island of the Forgotten"] = true,
    ["the Gloriana River"] = true,
    ["the Grand Junction Bazaar"] = true,
    ["the Grey Moors"] = true,
    ["the Hifarae Hills"] = true,
    ["the Inner Sea"] = true,
    ["the Isle of Itecia"] = true,
    ["the Isle of Nyalia"] = true,
    ["the Isle of Olimsito"] = true,
    ["the Isle of Vesucia"] = true,
    ["the Kelpie Maiden"] = true,
    ["the Kiakodan Nature Reserve"] = true,
    ["the Lucidian Mesa Compound"] = true,
    ["the Meliashmora of Imperial Secrets"] = true,
    ["the New Celest sewer system"] = true,
    ["the Northern Mountains"] = true,
    ["the Oleanvir Valley"] = true,
    ["the Presidio of the Damned"] = true,
    ["the Razine Mountain Range"] = true,
    ["the Rhizoda Mangrove"] = true,
    ["the Ruins of Shallach"] = true,
    ["the Scorpion Caverns"] = true,
    ["the Sea of Despair"] = true,
    ["the Serenwilde Forest"] = true,
    ["the Shallach River"] = true,
    ["the Shallamurine Cathedral"] = true,
    ["the Skarch Desert"] = true,
    ["the Southern Mountains"] = true,
    ["the Tainted Broadcast Centre"] = true,
    ["the Tar Pits"] = true,
    ["the Tosha Monastery"] = true,
    ["the Transcendental Fulcrux"] = true,
    ["the Triple Junction Inn"] = true,
    ["the Upper Peaks of the Razines"] = true,
    ["the Upper Peaks of the Southern Mountains"] = true,
    ["the Village of Acknor"] = true,
    ["the Village of Angkrag"] = true,
    ["the Village of Dairuchi"] = true,
    ["the Village of Delport"] = true,
    ["the Village of Duum"] = true,
    ["the Village of Estelbar"] = true,
    ["the Village of Paavik"] = true,
    ["the Village of Rikenfriez"] = true,
    ["the Village of Rockholm"] = true,
    ["the Village of Shanthmark"] = true,
    ["the Village of Southgard"] = true,
    ["the Village of Stewartsville"] = true,
    ["the Village of Talthos"] = true,
    ["the i'Xiia Asylum"] = true,
    ["the sewers of Magnagora"] = true,
  }

function mmp.lusterniaInBasin()
  return basinAreas[gmcp.Room.Info.area] or false
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>mmp.lusterniaMapUpdated</name>
							<packageName></packageName>
							<script>function mmp.lusterniaMapUpdated()
  if mmp.game == "lusternia" then
    mmp.lockPathways()
    mmp.astroboots()
  end
end</script>
							<eventHandlerList>
								<string>mmapper updated map</string>
								<string>sysMapDownloadEvent</string>
							</eventHandlerList>
						</Script>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Imperian</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>register_imperians_envdata</name>
							<packageName></packageName>
							<script>function register_imperians_envdata(_, game)
  if game ~= "Imperian" then return end
  mmp.envids =
  {
    ["a sheltered dell"]        = 68,
    ["Arcane Temple"]           = 66,
    ["Blackened Lands"]         = 58,
    ["Blackstone Dungeon"]      = 65,
    ["Blackstone Keep"]         = 62,
    ["Constructed underground"] = 2,
    ["Dark Forest"]             = 1,
    ["Deep Ocean"]              = 24,
    ["Desert Ruins"]            = 38,
    ["Dwarven city"]            = 18,
    ["Forestal Council"]        = 44,
    ["Frozen Bog"]              = 76,
    ["Lake of Fire"]            = 56,
    ["Natural underground"]     = 3,
    ["Noble Bar"]               = 53,
    ["Noble Chambers"]          = 51,
    ["Rocky Shore"]             = 77,
    ["Sylayan city"]            = 19,
    ["Tainted Underground"]     = 35,
    ["Tainted Water"]           = 39,
    ["Underground Lake"]        = 36,
    ["Vast Ocean"]              = 26,
    ["Wetlands Village"]        = 64,
    ["within a tent"]           = 69,
    Academia                    = 42,
    Acropolis                   = 33,
    Beach                       = 5,
    Blighted                    = 74,
    bog                         = 73,
    Catacombs                   = 63,
    Church                      = 54,
    Cliffs                      = 67,
    Crags                       = 32,
    Desert                      = 6,
    Docks                       = 30,
    Farmland                    = 41,
    Forest                      = 4,
    Freshwater                  = 22,
    Garden                      = 21,
    garrison                    = 71,
    Grasslands                  = 7,
    Graveyard                   = 46,
    Hills                       = 9,
    Jungle                      = 17,
    Mountains                   = 14,
    Nobility                    = 50,
    Ocean                       = 20,
    Path                        = 11,
    Polar                       = 27,
    Pond                        = 49,
    pyramid                     = 72,
    quarry                      = 70,
    River                       = 10,
    Road                        = 12,
    Ruins                       = 37,
    Scrublands                  = 78,
    Sewer                       = 23,
    Swamp                       = 15,
    Temple                      = 57,
    Tower                       = 79,
    transportation              = 48,
    Tundra                      = 16,
    Underworld                  = 28,
    Urban                       = 8,
    Valley                      = 13,
    Villa                       = 75,
    Village                     = 47,
    Village                     = 55,
    Volcano                     = 59,
    Warrens                     = 31,
  }

  mmp.waterenvs = {}
  local waterids = { "River", "Ocean", "Deep Ocean", "Vast Ocean", "Underground Lake", "Tainted Water", "Lake of Fire" }
  for i = 1, #waterids do mmp.waterenvs[mmp.envids[waterids[i]]] = true end

  mmp.envidsr = {};
  for name, id in pairs(mmp.envids) do mmp.envidsr[id] = name end
end</script>
							<eventHandlerList>
								<string>mmp logged in</string>
							</eventHandlerList>
						</Script>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Starmourn</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>Lifts</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function mmp.liftFloor(roomname,floornum,currentfloor) --string,int,bool
	if not mmp.autowalking then
		return
	end

	--get room name of next in speedwalkpath
	if not speedWalkCounter then
    speedWalkCounter = 1
  end
	local destRoomName = getRoomName(mmp.speedWalkPath[speedWalkCounter])
	if roomname == nil then roomname = destRoomName end

	if roomname == destRoomName then
		if currentfloor then
			send("EXIT LIFT",false) --Lift is on correct floor, can EXIT LIFT
			if mmp.liftTimer then killTimer(mmp.liftTimer) end
		else
			mmp.customwalkdelay(2) --Lift is on incorrect floor arbitrary wait for next trigger line
			if mmp.liftTimer then killTimer(mmp.liftTimer) end
			mmp.liftTimer = tempTimer(1, function() send("KEY LIFT ".. floornum,false) end )	--wait one second before requesting the correct floor (allows other users to enter/exit)
		end
	end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>register_starmourn_envdata</name>
							<packageName></packageName>
							<script>function register_starmourn_envdata(_, game)
  if game ~= "Starmourn" then
    return
  end
  mmp.envids =
    {
      ["airlock"] = 55,
      ["alleyway"] = 47,
      ["armory"] = 82,
      ["badlands"] = 45,
      ["barracks"] = 77,
      ["bathroom"] = 71,
      ["beach"] = 51,
      ["bedroom"] = 66,
      ["bridge"] = 18,
      ["building"] = 5,
      ["campsite"] = 65,
      ["canal"] = 85,
      ["cantina"] = 62,
      ["canyon"] = 31,
      ["cargo bay"] = 13,
      ["catwalk"] = 23,
      ["cave"] = 37,
      ["commandpost"] = 80,
      ["corral"] = 34,
      ["deep space"] = 11,
      ["desert"] = 7,
      ["duct"] = 22,
      ["engine room"] = 44,
      ["factory"] = 32,
      ["farmland"] = 28,
      ["firingrange"] = 83,
      ["forest"] = 8,
      ["garden"] = 12,
      ["gym"] = 60,
      ["hallway"] = 58,
      ["hangar"] = 26,
      ["hangar"] = 79,
      ["hydroponics"] = 61,
      ["icyforest"] = 52,
      ["jungle"] = 19,
      ["junkyard"] = 48,
      ["lake"] = 49,
      ["lava fields"] = 56,
      ["lava"] = 57,
      ["meadow"] = 30,
      ["medical facility"] = 17,
      ["medical facility"] = 27,
      ["messhall"] = 78,
      ["militarybase"] = 76,
      ["militaryroad"] = 81,
      ["mine"] = 3,
      ["mountain"] = 1,
      ["obstaclecourse"] = 84,
      ["ocean"] = 6,
      ["office"] = 15,
      ["pier/dock"] = 38,
      ["pond"] = 64,
      ["pool"] = 14,
      ["prison"] = 59,
      ["residence"] = 63,
      ["river"] = 50,
      ["road"] = 29,
      ["ruin"] = 42,
      ["sewer"] = 40,
      ["shop"] = 67,
      ["slum"] = 69,
      ["slumbuilding"] = 73,
      ["slumstreet"] = 70,
      ["slumtoilet"] = 72,
      ["spacecraft"] = 9,
      ["spaceport"] = 39,
      ["stateroom"] = 43,
      ["stream"] = 35,
      ["street"] = 2,
      ["swamp"] = 20,
      ["temple"] = 54,
      ["transport"] = 16,
      ["treehouse"] = 36,
      ["treetops"] = 53,
      ["tundra"] = 10,
      ["underground"] = 86,
      ["underwater"] = 87,
      ["urban"] = 4,
      ["urbanunderground"] = 46,
      ["ventilation shaft"] = 21,
      ["verdantcliffs"] = 75,
    }
  mmp.waterenvs = {}
  mmp.envidsr = {}
  for name, id in pairs(mmp.envids) do
    mmp.envidsr[id] = name
  end
end</script>
							<eventHandlerList>
								<string>mmp logged in</string>
							</eventHandlerList>
						</Script>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Lithmeria</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>register_lithmerias_envdata</name>
							<packageName></packageName>
							<script>function register_lithmerias_envdata(_, game)
  if game ~= "Lithmeria" then return end

  mmp.envids =
  {
    ["deep water"] = 4,
    beach          = 11,
    bridge         = 6,
    building       = 13,
    cliffs         = 1,
    desert         = 11,
    forest         = 2,
    highway        = 6,
    jungle         = 10,
    mountain       = 1,
    ocean          = 4,
    path           = 6,
    plains         = 3,
    river          = 4,
    road           = 6,
    shallowwater   = 4,
    swamp          = 2,
    tundra         = 7,
    underground    = 8,
    urban          = 8,
    water          = 4,
  }

  for name, number in pairs(mmp.envids) do
    mmp.envids[name] = number+256 -- adjust for in-built colors
  end

  mmp.waterenvs = {}
  local waterids = { "shallowwater", "river", "water", "deep water", "ocean" }
  for i = 1, #waterids do mmp.waterenvs[mmp.envids[waterids[i]]] = true end

  mmp.envidsr = {};
  for name, id in pairs(mmp.envids) do mmp.envidsr[id] = name end
end</script>
							<eventHandlerList>
								<string>mmp logged in</string>
							</eventHandlerList>
						</Script>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>StickMUD</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>stickmud_stop_speedwalk_for_wrong_dir</name>
							<packageName></packageName>
							<script>function stickmud_stop_speedwalk_for_wrong_dir()
  if mmp.game and mmp.game ~= "StickMUD" then
    return
  end
  if #mmp.speedWalkPath &gt; 0 then
    echo("The way \"" .. gmcp.Room.WrongDir .. "\" is blocked. Stopping speedwalk.")
    mmp.stop()
  end
end</script>
							<eventHandlerList>
								<string>gmcp.Room.WrongDir</string>
							</eventHandlerList>
						</Script>
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Test / one-time things</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="no" isFolder="no">
						<name>mmp_grabenvid</name>
						<packageName></packageName>
						<script>function mmp_grabenvid()
  if not mmp.envids[gmcp.Room.Info.environment] then
    mmp.envids[gmcp.Room.Info.environment] = getRoomEnv(mmp.currentroom)
    mmp.echo(string.format("Remembered environment %s as %d", gmcp.Room.Info.environment, mmp.envids[gmcp.Room.Info.environment]))
  end
end

function mmp.getMaxID()
  local roomIDs = {}
  for area, _ in pairs(mmp.areatabler) do
    local ok, t = pcall(getAreaRooms, area)
    if ok then
      for _, id in pairs(t or {}) do
        roomIDs[id] = true
      end
    end
  end

  return table.maxn(roomIDs)
end

function mmp.getUnknownEnvs()
  local maxid, missing = mmp.getMaxID(), {}

  for i = 1, maxid do
    if mmp.roomexists(i) then
      if not table.contains(mmp.envids, getRoomEnv(i)) and not table.contains(missing, getRoomEnv(i)) then
        mmp.echo(string.format("Missing env %d from room %d ('%s' in '%s')",
          tostring(getRoomEnv(i)), i, tostring(getRoomName(i)), tostring(mmp.areatabler[getRoomArea(i)])))
        missing[i] = getRoomEnv(i)
      end
    end
  end
end</script>
						<eventHandlerList>
							<string>gmcp.Room.Info</string>
						</eventHandlerList>
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Check for map updates</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>mmp_downloaded_file</name>
						<packageName></packageName>
						<script>function mmp_downloaded_file(_, filename)
  if not io.exists(filename) then return end

  -- workaround for https://bugs.launchpad.net/mudlet/+bug/1092769
--  if mmp["downloaded_file_block_"..filename] then return end
--  mmp["downloaded_file_block_"..filename] = tempTimer(5, [[mmp["downloaded_file_block_]]..filename..[["] = nil]])

  if filename == tostring(mmp.mapperfile) then   -- mapper script version
	mmp.checkingupdates = false

    local f, s = io.open(filename)
    if f then s = f:read("*l"):trim(); io.close(f) end

    if s ~= tostring(mmp.version) then
      mmp.newmapperversion = s
      mmp.retrievechangelog()
    end

  elseif filename == tostring(mmp.changelogfile) then   -- changelog for the mapper script
	mmp.checkingupdates = false

    local f, s, changelog = io.open(filename)
    if f then changelog = f:read("*a"); io.close(f) end

    mmp.echon("")
    echoLink("The mapper script was updated! Would you like to download the update? Click here if so.", "mmp.downloadmapperscript()", "Changelog for the latest ("..tostring(mmp.version).." -&gt; "..tostring(mmp.newmapperversion)..") update:\n"..changelog, true)

  elseif filename == mmp.crowdchangelogfile then   -- changelog for the crowdmap
    local f, s = io.open(filename)
    if f then s = f:read("*a"); io.close(f) end

    -- make environment
    local env = {} -- add functions you know are safe here

    -- run code under environment [Lua 5.1]
    local function run(untrusted_code)
      if untrusted_code:byte(1) == 27 then return nil, "binary bytecode prohibited" end
      local untrusted_function, message = loadstring(untrusted_code)
      if not untrusted_function then return nil, message end
      setfenv(untrusted_function, env)
      return pcall(untrusted_function)
    end

    run(s)

	mmp.crowdchangelog = env.changelog

    mmp.echon("The crowdmap map was ")
    setUnderline(true)
    echoLink("updated", '', "New version: "..tostring(mmp.newversion)..", previous version: "..(mmp.oldversion or "(none)"), true)
    setUnderline(false)
    echo(" (")
    setUnderline(true)
    echoLink("see full changelog", "mmp.showcrowdchangelog()", 'View the full changelog for mappers', true)
    setUnderline(false)
    echo("). Latest improvement is: "..tostring(mmp.crowdchangelog and mmp.crowdchangelog[#mmp.crowdchangelog] or '?')..".\n")

    mmp.downloadcrowdmap(mmp.newversion)

  elseif filename == mmp.crowdmapfile then    -- crowdmap map
    mmp.echo("Map downloaded, loading it in...")

    local tmp = getRoomUserData(1, "gotoMapping")
    local oldmaptable = {}

    if tmp ~= "" then
      oldmaptable = yajl.to_value(tmp)
    end

    local ok = loadMap(filename)

    if ok then
      if mmp.game ~= "starmourn" then
        local wc = mmp.lockWormholes()
  	local ws = mmp.lockSewers()
        mmp.lockPebble()
        if mmp.game == "achaea" and wc == 0 and ws == 0 then -- in achaea, using crowdmap, if we didn't get any special exits - it means Mudlet needs to be updated
          mmp.echo("Sorry, it seems your Mudlet isn't compatible with the new crowdmap format - and the map cannot be loaded fully. Please update your Mudlet:\n  http://www.mudlet.org/download/")
          return
        end
      end

      if mmp.settings.waterwalk then mmp.enableWaterWalk() else mmp.disableWaterWalk() end

      mmp.echo("Map loaded fine - enjoy!")

      tmp = getRoomUserData(1, "gotoMapping")
      local newmaptable = {}

      if tmp ~= "" then
        newmaptable = yajl.to_value(tmp)
      end

      for k,v in pairs(oldmaptable) do newmaptable[k] = v end
      setRoomUserData(1, "gotoMapping", yajl.to_string(newmaptable))
      mmp.echo("Marks from the old map migrated successfully.")

      raiseEvent("mmapper updated map")
    else
      mmp.echon("Map failed to load - you need to have the mapper open. Please open it, and then ")
      echoLink("click here", [[
        local tmp = getRoomUserData(1, "gotoMapping")
        local oldmaptable = {}
        if tmp ~= "" then
          oldmaptable = yajl.to_value(tmp)
        end

        local ok = loadMap(']]..filename..[[')
        if ok then
        local wc = mmp.lockWormholes()
	    local ws = mmp.lockSewers()
        mmp.lockPebble()
        if mmp.game == "achaea" and wc == 0 and ws == 0 then -- in achaea, using crowdmap, if we didn't get any special exits - it means Mudlet needs to be updated
          mmp.echo("Sorry, it seems your Mudlet isn't compatible with the new crowdmap format - and the map cannot be loaded fully. Please update your Mudlet:\n  http://www.mudlet.org/download/")
          return
        end

        if mmp.settings.waterwalk then mmp.enableWaterWalk() else mmp.disableWaterWalk() end

        mmp.echo("Map loaded successfully!")

          tmp = getRoomUserData(1, "gotoMapping")
          local newmaptable = {}
          if tmp ~= "" then
            newmaptable = yajl.to_value(tmp)
          end
          for k,v in pairs(oldmaptable) do newmaptable[k] = v end
          setRoomUserData(1, "gotoMapping", yajl.to_string(newmaptable))
          mmp.echo("Marks from the old map migrated successfully.")
          raiseEvent("mmapper updated map")
        else mmp.echo("Nope, didn't work. Open the map and try again?") end
      ]],
      "Click here to try loading the map again")
      echo(" to try loading it in again.\n")
    end

  elseif filename == tostring(mmp.downloadedscript) then   -- new mapper script xml downloaded
	mmp.checkingupdates = false

    mmp.echo("Your mapper script was downloaded to '"..filename.."' - uninstall the current copy and install the new one now!")

  elseif filename == tostring(mmp.mapfile) then   -- map version #, either IRE's or crowd
	mmp.checkingupdates = false

    local function needupdate(currentmd5, oldmd5)
      if not mmp.settings.crowdmap then
        mmp.echon("The games map was ")
        echoLink("updated", '', "New MD5: "..tostring(currentmd5)..", previous MD5: "..(oldmd5 or "(none)"), true)
        echo(" - you should update yours! Go to Settings -&gt; Mapper tab and click on the button there. Once you've updated, ")
        echoLink("click here", "mmp.updatedmap('"..currentmd5.."')", "Click here to quiet the update reminder")
        echo(" to remove the reminder.")
      else
        mmp.newversion, mmp.oldversion = currentmd5, oldmd5
        mmp.retrievecrowdchangelog()
      end
    end

    local f, s = io.open(filename)
    if f then s = f:read("*a"); io.close(f) end
    local currentmd5 = string.match(s, "([a-z0-9]+)  map%.xml")

    -- using crowdsourced map
    if not currentmd5 then
      currentmd5 = s:trim()
    end

	os.remove(filename)

    -- never checked yet?
    if not io.exists(getMudletHomeDir().."/map downloads/current") then needupdate(currentmd5) return end

    -- otherwise read old file and check
    local f, s = io.open(getMudletHomeDir().."/map downloads/current")
    if f then s = f:read("*a"); io.close(f) end

    if s ~= currentmd5 then needupdate(currentmd5, s) end
  end
end</script>
						<eventHandlerList>
							<string>sysDownloadDone</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Check for updates</name>
						<packageName></packageName>
						<script>local downloadfolder = getMudletHomeDir() .. "/map downloads/"
local whereisit
-- this should get called at start and every hour after that

function mmp.checkforupdate()
  if not mmp.game or mmp.checkingupdates then
    return
  end
  local game = mmp.game
  mmp.mapfile = downloadfolder .. "MD5"
  mmp.mapperfile = downloadfolder .. "mapper"
  if not downloadFile then
    mmp.echo("Your version of Mudlet doesn't support downloading files - please upgrade to 2.0+")
  else
    if not lfs.attributes(downloadfolder) then
      if lfs and lfs.mkdir then
        local t, s = lfs.mkdir(downloadfolder)
        if not t and s ~= "File exists" then
          mmp.echo("Couldn't make the '" .. downloadfolder .. "' folder; " .. s)
          return
        end
      else
        mmp.echo(
          "Sorry, but you need LuaFileSystem (lfs) installed, or have the '" ..
          downloadfolder ..
          "' folder exist."
        )
        return
      end
    end
    if mmp.settings.crowdmap then
      if game == "achaea" then
        downloadFile(
          mmp.mapfile, "http://ire-mudlet-mapping.github.io/AchaeaCrowdmap/Map/version.txt"
        )
      elseif game == "starmourn" then
        downloadFile(
          mmp.mapfile, "http://ire-mudlet-mapping.github.io/StarmournCrowdmap/Map/version.txt"
        )
      elseif game == "lusternia" then
        downloadFile(
          mmp.mapfile, "http://ire-mudlet-mapping.github.io/LusterniaCrowdmap/Map/version.txt"
        )
      elseif game == "imperian" then
        downloadFile(
          mmp.mapfile, "http://ire-mudlet-mapping.github.io/ImperianCrowdmap/Map/version.txt"
        )
      elseif game == "aetolia" then
        downloadFile(
          mmp.mapfile, "http://ire-mudlet-mapping.github.io/AetoliaCrowdmap/Map/version.txt"
        )
      elseif game == "asteria" then
        downloadFile(
          mmp.mapfile, "http://asteria-ui.github.io/AsteriaCrowdmap/Map/version.txt"
        )
      elseif game == "stickmud" then
        downloadFile(
          mmp.mapfile, "http://stickmud.github.io/StickMUDCrowdmap/Map/version.txt"
        )
      end
    elseif mmp.settings.updatemap then
      downloadFile(mmp.mapfile, "http://www." .. game .. ".com/maps/MD5SUM")
    end
    downloadFile(
      mmp.mapperfile, "http://ire-mudlet-mapping.github.io/ire-mapping-script/downloads/version"
    )
    mmp.checkingupdates = true
  end
end

-- called by the user when the map is updated to register the fact that it was

function mmp.updatedmap(currentmd5)
  assert(currentmd5, "need md5 sum to write to file")
  local f, err = io.open(downloadfolder .. "current", "w")
  if not f then
    return mmp.echo("Couldn't write to the update file, because: " .. err)
  end
  f:write(currentmd5)
  f:close()
  local t = {"Go you for updating!", "Thanks for updating the map!", "Alright, map updated!"}
  mmp.echo(t[math.random(1, #t)])
end

-- downloads the latest changelog for the mapper if it was updated

function mmp.retrievechangelog()
  mmp.changelogfile = downloadfolder .. "changelog"
  downloadFile(
    mmp.changelogfile, "http://ire-mudlet-mapping.github.io/ire-mapping-script/downloads/changelog"
  )
end

function mmp.retrievecrowdchangelog()
  mmp.crowdchangelogfile = downloadfolder .. "crowdchangelogfile"
  if mmp.game == "achaea" then
    downloadFile(
      mmp.crowdchangelogfile, "http://ire-mudlet-mapping.github.io/AchaeaCrowdmap/Map/changelog.txt"
    )
  elseif mmp.game == "starmourn" then
    downloadFile(
      mmp.crowdchangelogfile,
      "http://ire-mudlet-mapping.github.io/StarmournCrowdmap/Map/changelog.txt"
    )
  elseif mmp.game == "lusternia" then
    downloadFile(
      mmp.crowdchangelogfile,
      "http://ire-mudlet-mapping.github.io/LusterniaCrowdmap/Map/changelog.txt"
    )
  elseif mmp.game == "imperian" then
    downloadFile(
      mmp.crowdchangelogfile,
      "http://ire-mudlet-mapping.github.io/ImperianCrowdmap/Map/changelog.txt"
    )
  elseif mmp.game == "aetolia" then
    downloadFile(
      mmp.crowdchangelogfile,
      "http://ire-mudlet-mapping.github.io/AetoliaCrowdmap/Map/changelog.txt"
    )
  elseif mmp.game == "asteria" then
    downloadFile(
      mmp.crowdchangelogfile,
      "http://asteria-ui.github.io/AsteriaCrowdmap/Map/changelog.txt"
    )
  elseif mmp.game == "stickmud" then
    downloadFile(
      mmp.crowdchangelogfile,
      "http://stickmud.github.io/StickMUDCrowdmap/Map/changelog.txt"
    )
  end
end

-- downloads the public crowdsources map!

function mmp.downloadmapperscript()
  local downloadlocationfile = downloadfolder .. "savepath"
  local downloadlocation
  local exists = lfs.attributes
  -- somewhat complicated thing to nicely deal with all scenarios.
  if not exists(downloadlocationfile) then
    downloadlocation = whereisit()
    if not downloadlocation then
      return
    end
  end
  if not downloadlocation then
    local f, s = io.open(downloadlocationfile)
    if f then
      downloadlocation = f:read("*a");
      io.close(f)
    end
    if not exists(downloadlocation) then
      downloadlocation = whereisit()
      if not downloadlocation or not exists(downloadlocation) then
        return
      end
    end
  end
  mmp.downloadedscript = downloadlocation .. "/mudlet-mapper.xml"
  downloadFile(
    mmp.downloadedscript,
    "http://ire-mudlet-mapping.github.io/ire-mapping-script/downloads/mudlet-mapper.xml"
  )
  local f, err = io.open(downloadlocationfile, "w")
  if not f then
    return mmp.echo("Couldn't write to the location file, because: " .. err)
  end
  f:write(downloadlocation)
  f:close()
  mmp.echo("Okay, downloading the mapper script...")
end

function mmp.downloadcrowdmap(newversion)
  mmp.crowdmapfile = downloadfolder .. "crowdmap"
  local f, err = io.open(downloadfolder .. "current", "w")
  if not f then
    return mmp.echo("Couldn't write to the update file, because: " .. err)
  end
  f:write(newversion)
  f:close()
  if mmp.game == "achaea" then
    downloadFile(mmp.crowdmapfile, "http://ire-mudlet-mapping.github.io/AchaeaCrowdmap/Map/map")
  elseif mmp.game == "starmourn" then
    downloadFile(mmp.crowdmapfile, "http://ire-mudlet-mapping.github.io/StarmournCrowdmap/Map/map")
  elseif mmp.game == "lusternia" then
    downloadFile(mmp.crowdmapfile, "http://ire-mudlet-mapping.github.io/LusterniaCrowdmap/Map/map")
  elseif mmp.game == "imperian" then
    downloadFile(mmp.crowdmapfile, "http://ire-mudlet-mapping.github.io/ImperianCrowdmap/Map/map")
  elseif mmp.game == "aetolia" then
    downloadFile(mmp.crowdmapfile, "http://ire-mudlet-mapping.github.io/AetoliaCrowdmap/Map/map")
  elseif mmp.game == "asteria" then
    downloadFile(mmp.crowdmapfile, "http://asteria-ui.github.io/AsteriaCrowdmap/Map/map")
  elseif mmp.game == "stickmud" then
    downloadFile(mmp.crowdmapfile, "http://stickmud.github.io/StickMUDCrowdmap/Map/map")
  end
  mmp.echo("Downloading the latest crowdmap...")
end

function mmp.showcrowdchangelog()
  mmp.echo("Public map changelog:")
  if not mmp.crowdchangelog then
    mmp.echo("(none yet)")
    return
  end
  for k, v in ipairs(mmp.crowdchangelog) do
    cecho(string.format("  %s) %s\n", k, v:gsub("\t", "     ")))
  end
end

whereisit =
  function()
    local path =
      invokeFileDialog(false, "Where should we save the file? Select a folder and click Open")
    if path == "" then
      return nil
    else
      return path
    end
  end</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>mmp_checkupdatestart</name>
							<packageName></packageName>
							<script>function mmp_checkupdatestart(...)
  if mmp.checkforupdatetimer then killTimer(mmp.checkforupdatetimer) end
  mmp.checkforupdatetimer = tempTimer(math.random(3, 10), mmp.checkforupdate)
end

function mmp.changeUpdateMap()
  if mmp.settings.updatemap then
    mmp.echo("Will check for new map updates from your MUD.")
    enableTimer"Check for updates periodically"
    mmp_checkupdatestart()
  else
    mmp.echo("Won't check for new map updates from your MUD.")
    disableTimer"Check for updates periodically"
	if mmp.checkforupdatetimer then killTimer("mmp.checkforupdatetimer") end
  end
end</script>
							<eventHandlerList>
								<string>mmp logged in</string>
							</eventHandlerList>
						</Script>
					</Script>
					<Script isActive="no" isFolder="no">
						<name>mmp_see_dl_errors</name>
						<packageName></packageName>
						<script>-- this should be off by default
function mmp_see_dl_errors(...)
  display{...}
end</script>
						<eventHandlerList>
							<string>sysDownloadError</string>
						</eventHandlerList>
					</Script>
				</ScriptGroup>
				<Script isActive="yes" isFolder="no">
					<name>Initialize</name>
					<packageName></packageName>
					<script>mmp.startup()</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>mmp.mapdata_changed</name>
						<packageName></packageName>
						<script>-- aggregates map load and such events into one
function mmp.mapdata_changed()
  raiseEvent("mmapper map reloaded")
end
					</script>
						<eventHandlerList>
							<string>sysMapLoad</string>
							<string>sys2DMapLoad</string>
							<string>sys3DMapLoad</string>
							<string>sysMapDownloadEvent</string>
							<string>mapOpenEvent</string>
						</eventHandlerList>
					</Script>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>map features</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

local function loadMapFeatures()
  local mapFeaturesString = getMapUserData("mapFeatures")
  local mapFeatures
  if mapFeaturesString and mapFeaturesString ~= "" then
    mapFeatures = yajl.to_value(mapFeaturesString)
  else
    mapFeatures = {}
  end
  return mapFeatures
end

local function saveMapFeatures(mapFeaturesToSave)
  local mapFeaturesString = yajl.to_string(mapFeaturesToSave)
  setMapUserData("mapFeatures", mapFeaturesString)
end

function mmp.createMapFeature(featureName, roomCharacter)
  if not featureName or featureName == "" then
    mmp.echo("Can't create an empty map feature.")
    return
  end
  if featureName:find("%d") then
    mmp.echo("Map feature names must not contain numbers.")
    return
  end
  roomCharacter = roomCharacter or ""
  if type(roomCharacter) ~= "string" then
    mmp.echo(
      "The new room character must be either a string or nil. " ..
      type(roomCharacter) ..
      " is not allowed."
    )
    return
  end
  local lowerFeatureName = featureName:lower()
  local mapFeatures = loadMapFeatures()
  if not mapFeatures[lowerFeatureName] then
    mapFeatures[lowerFeatureName] = roomCharacter
    saveMapFeatures(mapFeatures)
    mmp.echo(
      "Created map feature '" ..
      featureName ..
      "' with the room character '" ..
      roomCharacter ..
      "'."
    )
  else
    mmp.echo("A map feature with the name '" .. featureName .. "' already exists.")
    return
  end
  return true
end

function mmp.listMapFeatures()
  local mapFeatures = loadMapFeatures()
  mmp.echo("This map has the following features:")
  echo(string.format("    %-25s | %s\n", "feature name", "room character"))
  echo(string.format("    %s\n", string.rep("-", 45)))
  for featureName, roomCharacter in pairs(mapFeatures) do
    echo(string.format("    %-25s | %s\n", featureName, roomCharacter))
  end
  return true
end

function mmp.roomCreateMapFeature(featureName, roomId)
  -- checks for the feature name
  if not featureName then
    mmp.echo("Which feature would you like to create?")
    return
  end
  local lowerFeatureName = featureName:lower()
  local mapFeatures = loadMapFeatures()
  if not mapFeatures[lowerFeatureName] then
    mmp.echo(
      "A feature with name '" ..
      featureName ..
      "' does not exist. You need to use 'feature create' first."
    )
    return
  end
  -- checks for the room ID
  if not roomId then
    if not mmp.currentroom then
      mmp.echo("Don't know where we are at the moment.")
      return
    end
    roomId = mmp.currentroom
  else
    if type(roomId) ~= "number" then
      mmp.echo("Need a room ID as number for creating a map feature on a room.")
      return
    end
  end
  if not getRoomName(roomId) then
    mmp.echo("Room number '" .. roomId .. "' does not exist.")
    return
  end
  -- check if feature already exists
  if table.contains(mmp.getRoomMapFeatures(roomId), lowerFeatureName) then
    mmp.echo("Room '" .. roomId .. "' has already map feature '" .. featureName .. "'.")
    return
  end
  -- create map feature in room
  setRoomUserData(roomId, "feature-" .. lowerFeatureName, "true")
  mmp.echo(string.format("Map feature '%s' created in room number '%d'.", featureName, roomId))
  local featureRoomChar = mapFeatures[lowerFeatureName]
  if featureRoomChar ~= "" then
    setRoomChar(roomId, featureRoomChar)
    mmp.echo("The room now carries the room char '" .. featureRoomChar .. "'.")
  end
  return true
end

function mmp.roomDeleteMapFeature(featureName, roomId)
  -- checks for the feature name
  if not featureName then
    mmp.echo("Which feature would you like to delete?")
    return
  end
  local lowerFeatureName = featureName:lower()
  -- checks for the room ID
  if not roomId then
    if not mmp.currentroom then
      mmp.echo("Don't know where we are at the moment.")
      return
    end
    roomId = mmp.currentroom
  else
    if type(roomId) ~= "number" then
      mmp.echo("Need a room ID as number for deleting a map feature from a room.")
      return
    end
  end
  if not getRoomName(roomId) then
    mmp.echo("Room number '" .. roomId .. "' does not exist.")
    return
  end
  -- check if feature exists
  local roomMapFeatures = mmp.getRoomMapFeatures(roomId)
  if not table.contains(roomMapFeatures, lowerFeatureName) then
    mmp.echo("Room '" .. roomId .. "' doesn't have map feature '" .. featureName .. "'.")
    return
  end
  -- delete map feature from room
  setRoomUserData(roomId, "feature-" .. lowerFeatureName, "")
  mmp.echo(string.format("Map feature '%s' deleted from room number '%d'.", featureName, roomId))
  -- now update room char if needed.
  -- first update current map features of this room
  roomMapFeatures = mmp.getRoomMapFeatures(roomId)
  local mapFeatures = loadMapFeatures()
  -- find out if we need to set a new room character
  if getRoomChar(roomId) == mapFeatures[lowerFeatureName] and getRoomChar(roomId) ~= "" then
    local index, otherRoomMapFeature
    -- find another usable room character
    repeat
      index, otherRoomMapFeature = next(roomMapFeatures, index)
    until not otherRoomMapFeature or mapFeatures[otherRoomMapFeature] ~= ""
    if otherRoomMapFeature then
      -- we found a usable room character, now set it
      local newRoomChar = mapFeatures[otherRoomMapFeature]
      setRoomChar(roomId, newRoomChar)
      mmp.echo("Using '" .. newRoomChar .. "' as new room character.")
    else
      -- we didn't find a usable room character, delete it.
      setRoomChar(roomId, "")
      mmp.echo("Deleted the current room character.")
    end
  end
  return true
end

function mmp.getRoomMapFeatures(roomId)
  -- checks for the room ID
  if not roomId then
    if not mmp.currentroom then
      mmp.echo("Don't know where we are at the moment.")
      return
    end
    roomId = mmp.currentroom
  else
    if type(roomId) ~= "number" then
      mmp.echo("Need a room ID as number for getting all map features of a room.")
      return
    end
  end
  if not getRoomName(roomId) then
    mmp.echo("Room number '" .. roomId .. "' does not exist.")
    return
  end
  local result = {}
  local mapFeatures = loadMapFeatures()
  for mapFeature in pairs(mapFeatures) do
    if getRoomUserData(roomId, "feature-" .. mapFeature) == "true" then
      result[#result + 1] = mapFeature
    end
  end
  return result
end

function mmp.deleteMapFeature(featureName)
  if not featureName or featureName == "" then
    mmp.echo("Which map feature would you like to delete?")
    return
  end
  local lowerFeatureName = featureName:lower()
  local mapFeatures = loadMapFeatures()
  if not mapFeatures[lowerFeatureName] then
    mmp.echo("Map feature '" .. featureName .. "' does not exist.")
    return
  end
  local roomsWithFeature = searchRoomUserData("feature-" .. lowerFeatureName, "true")
  for _, roomId in pairs(roomsWithFeature) do
    local deletionResult = mmp.roomDeleteMapFeature(lowerFeatureName, roomId)
    if not deletionResult then
      mmp.echo(
        "Something went wrong deleting the map feature '" ..
        featureName ..
        "' from all rooms. Deletion incomplete."
      )
      return
    end
  end
  mapFeatures[lowerFeatureName] = nil
  saveMapFeatures(mapFeatures)
  mmp.echo("Deleted map feature '" .. featureName .. "' from map.")
  return true
end

function mmp.getMapFeatures()
  return loadMapFeatures()
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
		</ScriptGroup>
		<Script isActive="yes" isFolder="no">
			<name>execute_when_mmapper_arrived</name>
			<packageName></packageName>
			<script>echo("This is Working")</script>
			<eventHandlerList>
				<string>mmapper arrived</string>
			</eventHandlerList>
		</Script>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>NOMAD</name>
			<packageName></packageName>
			<script></script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>Initialize</name>
				<packageName></packageName>
				<script>cycle = cycle or 0
improved_serpent = improved_serpent or false
target.burrowed = target.burrowed or {}
heartbeat = heartbeat or 0
trace = trace or ""
target.plagues = target.plagues or ""
virulence_balance = true

--User Variables
user = user or {}
user.Balance = user.Balance or {}
user.room = user.room or 0
user.oldroom = user.oldroom or "none"
user.stoxin = user.shrug or "formaldehyde"
user.shrugged = user.shrugged or false
user.parrySpots = user.parrySpots or {}
user.prone = user.prone or false
user.mode = user.mode or "shadowplant"
user.weaving = user.weaving or false
user.annihilating = user.annihilating or false
user.lightwall = user.lightwall or false
user.refillTrioxin = user.refillTrioxin or false
user.devourSetup2 = false
user.devourSetup = false
user.dead = user.dead or false
user.Balance.shrugging = user.Balance.shrugging or true
user.autoyank = false
heroism = heroism or true
user.purge = user.purge or false
user.seperatar = "::"
user.wands = {"155559","60332"}
user.says = {"Burn brightly!!","You look much better on fire!!","You look a little cold, let me help you with that!!","I will snuff you like a candle!!","Fire and brimstone!!","You will rue the day you crossed paths with a Bialystone!!","The fire that burns brightest burns.. ugh just die already!!","Is it just me or is it getting hot in here?!","Can you take the scathing heat!?","We shall see which lasts longer! My flames or your resolve!!","Resistance is futile! Die like the dog you are!!","Die in a fire!!"}
user.shopad = {"You deserve it.","Aetherius' best kept secret. Tell your friends not to keep it.","Stylish and utilitarian.","Made for you.","Do you see yourself here?","For the enlightened.","There's nothing better.","What can compare?","Make a wish.","For all your needs.","Show him you care.","Show her you care.","Get inspired.","Be original.","Make your own style.","Exactly what you are looking for.","Find yourself."}
user.shoppiecesad = {""}

--Target Variables
target = target or {}
target.name = target.name or "None"
target.aura = target.aura or false
target.engulfed = target.engulfed or false
target.shield = target.shield or false
target.fenugreek = target.fenugreek or false
target.obscured = target.obscured or false
target.hypnotised = target.hypnotised or false
target.confounded = target.confounded or false
target.becloud = target.becloud or false
target.instilled = target.instilled or false
target.instilled2 = target.instilled2 or false
target.instilled3 = target.instilled3 or false
target.afflictions = target.afflictions or {}
target.hypnoaffs = target.hypnoaffs or {}
target.mentalaffs = target.mentalaffs or {}
target.herbBalance = target.herbBalance or true
target.salveBalance = target.salveBalance or true
target.smokeBalance = target.smokeBalance or true
target.herb = target.herb or "none"
target.smoke = target.pipeSmoked or "none"
target.paralysis = target.paralysis or false
target.scourged = target.scourged or false
target.tree = target.tree or true
target.purge = target.purge or true
target.obstruct = target.obstruct or false

--Toxin Variables
Toxin = Toxin or {}
Toxin.All =Toxin.All or {}
Toxin.Kelp = Toxin.Kelp or {}
Toxin.Oxalis = Toxin.Oxalis or {}
Toxin.Kelp2 = Toxin.Kelp2 or {}
Toxin.Maidenhair = Toxin.Maidenhair or {}
Toxin.Lock = Toxin.Lock or {}
Toxin.Salve = Toxin.Salve or {}
Toxin.Evileye = Toxin.Evileye or {}
Toxin.dsl = Toxin.dsl or {}
Toxin.stab = Toxin.stab or {}
Toxin.Lock.queue = {"iodine","calotropis","bromine","aconite","atropine","mebaral"}
Toxin.Kelp.queue = {"hemotoxin"}
Toxin.Kelp2.queue = {"hemotoxin"}
Toxin.Maidenhair.queue = {"ciguatoxin","metrazol","deaf","butisol","xeroderma","mercury","strychnine"}
Toxin.All.queue = {"vitriol","chloroform","noctec","mebaral","benzene2","benzedrine2","opium","opium"}
Toxin.Salve.queue = {"hemotoxin","butisol","oxalis","strychnine","metrazol","ciguatoxin","opium","opium"}
Toxin.Oxalis.queue = {"oxalis","hemotoxin","butisol","ciguatoxin","metrazol","strychnine","mercury","iodine","calotropis","bromine","benzene2","benzedrine2","aconite","atropine","mazanor","opium","opium"}

--Misc Variables
guards = guards or true
timewarptime = timewarptime or false
timewarping = timewarping or false
devilwindow = devilwindow or "false"
markedwindow = markedwindow or "none"
undeadwindow = undeadwindow or "none"
Team = Team or {}
standguard = false
openURL = openURL
landsense = landsense or false
Team.Brazier = Team.Brazier or false
getbody = false
afk = false
allallies = false
scenttargets = {}
bloodscent = bloodscent or false
bloodscenttargets = {}
bloodscentleft = bloodscentleft or false
bloodscententered = bloodscententered or false
shardhealcd = shardhealcd or false
windowexits = windowexits or "none"
raidwindow = raidwindow or "false"
timewarpwindow = timewarpwindow or "false"
guardswindow = guardswindow or "false"
whohere = whohere or "none"
guiDrawn = guiDrawn or false
Wielded = Wielded or {"dirk","shield"}
highlighttimerroom = highlighttimerroom or "0"
daeggerhunttoxin = daeggerhunttoxin or "none"
catharsismode = catharsismode or false
target.infirmity = target.infirmity  or 0
kelpinfirmity = kelpinfirmity or false
nightshadeinfirmity = nightshadeinfirmity or false
mandrakeinfirmity = mandrakeinfirmity or false
wormwoodinfirmity = wormwoodinfirmity or false
orphineinfirmity = orphineinfirmity or false
doppieroom = doppieroom or false
instatar = instatar or "none"
engage = engage or false
DSLTIME = DSLTIME or false
limbcountrightarm = limbcountrightarm or 0
limbcountleftarm = limbcountleftarm or 0
limbcountrightleg = limbcountrightleg or 0
limbcountleftleg = limbcountleftleg or 0
limbcounthead = limbcounthead or 0
onethirdsmark = onethirdmark or 0
twothirdsmark = twothirdmark or 0
mutilatedmark = mutilatedmark or 0
lynxsurge = lynxsurge or false
leopardsurge = leopardsurge or false
wolverinesurge = wolverinesurge or false
freezeblood = freezeblood or 0
freezebloodwindow = 0
frostheart = frostheart or false
soulquenchclaymore = false
soulquenchsabre = false
bloodfreezewindow = bloodfreezewindow or 0
lastaff = lastaff or "none"
soulquench = soulquench or false
dryblood = dryblood or false
suggestkick = suggestkick or false
analysetable = analysetable or {}
Newanalysetable = Newanalysetable or {}
reraid = reraid or false
reguard = reguard or false
opendoor = opendoor or false
boardpiece = boardpiece or "none"
jump = jump or false
memory = memory or false
goldtracked = goldtracked or 0
dslaffs = dslaffs or {}
dslaffprompt = dslaffprompt or false
shadowplanted = shadowplanted or "none"
shieldtouch = shieldtouch or false
mobnumber = mobnumber or 0
chopper = chopper or false
lastevisc = atropine or "none"

--Bard Variables
revelation = revelation or false
dissonance = dissonance or false
lullaby = lullaby or false
bedazzlement = bedazzlement or false
yoth = yoth or false
nuarinyuaff = nuarinyuaff or "none"
juggleaxe = juggleaxe or "none"
juggle1 = juggle1 or false
juggle2 = juggle2 or false
juggle3 = juggle3 or false
axeenvenom = axeenvenom or "none"
sketchlink = sketchlink or true
ta = ta or false
myried = myried or false
huntingdelay = huntingdelay or false
huntingnumber = huntingnumber or 0
class = class or "none"
lastknownlocation = lastknownlocation or "none"
lastknownperson = lastknownperson or "none"
roomnumberset = roomnumberset or {}
unleashdemon = unleashdemon or "none"

--Saboteur Variables
Shadowplant = Shadowplant or {}
Worm = Worm or {}
Wielded = Wielded or {"dirk","shield"}
trioxinFill = trioxinFill or 0
kelp_affs = kelp_affs or 0
m_affs = m_affs or 0
analyser = analyser or false
toxins = toxins or {}
hypnoadd = hypnoadd or 1
hypnowrithe = hypnowrithe or 1
hypnosnap = hypnosnap or false
Hypnosislockqueue = {"Impatience","Hypochondria","Deadening","Hypersomnia"}
Hypnosiswrithequeue = {"action probe lightwall","action writhe","action writhe","action writhe","action writhe","action writhe","action writhe","action writhe","action writhe","action writhe","action writhe"}
Worm.Attached = Worm.Attached or false
Worm.Environment = Worm.Environment or "none"
Worm.Summon = Worm.Summon or false
Shadowplant.planted = Shadowplant.planted or false
Shadowplant.plant = Shadowplant.plant or "kelp"
pesalve = false
restorationdevour = false

--Pariah Variables
epitaphcount = 0
epitaphdelay = 0
epitaph = ""
swarmcommand = ""
plague = ""
exposed = false
logograph = ""

--Parry Variables
rightarmbruise = rightarmbruise or false
leftarmbruise = leftarmbruise or false
rightlegbruise = rightlegbruise or false
leftlegbruise = leftlegbruise or false

--Wytch Variables
aeon = false
nairatblock = 0
loshreblock = 0
tree = tree or true
kena = kena or false
mannaz = mannaz or false
loshre = loshre or false
nairat = nairat or false
hugalaz = hugalaz or false
inguz = inguz or false

Allies = {
Tag = true,
Septus = true,
Arakis = true,
Dreacor = true,
Jules = true,
Khizan = true,
Kryss = true,
Septus = true,
Shou = true,
Theophilus = true,
Ultrix = true,
Xeron = true,
Raini = true,
Arcarn = true,
Celestine = true,
}

nooseexits = {
"n",
"ne",
"e",
"se",
"s",
"sw",
"w",
"nw",
"up",
"d",
"in",
"out",
}

namelist = {"Millbei",
"Rasu",
"Desiray",
"Aelhion",
"Lochlann",
"Kazandar",
"Asamira",
"Haruhara",
"Ranara",
"Makog",
"Molli",
"Riayu",
"Vyla",
"Shanto",
"Aprum",
"Erick",
"Taurnil",
"Lhachman",
"Jover",
"Krystie",
"Marron",
"Lizue",
"Flaerian",
"Kogoeru",
"Rynia",
"Iva",
"Vierce",
"Xeroth",
"Lacynos",
"Riahn",
"Lystet",
"Zelon",
"Nigend",
"Sakara",
"Aidun",
"Isandria",
"Teine",
"Elinia",
"Arilanue",
"Kelstaadith",
"Dily",
"Everleigh",
"Moranda",
"Emalyna",
"Farran",
"Lelina",
"Kaishi",
"Celadriel",
}

snapnamelist = {
"Insidian",
"Suspira",
"Rynok",
"Alakshmi",
}

-- config prompt custom H:*h(%h%) M:*m(%m%) &lt;*b*I&gt; *B *w
</script>
				<eventHandlerList />
			</Script>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Configuration</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>String Functions</name>
					<packageName></packageName>
					<script>function sfind(line)
	if string.find(line, "a juniper berry") then
		target.herb = "juniper"
	elseif string.find(line, "some hyssop stem") then
		target.herb = "hyssop"
	elseif string.find(line, "an orphine seed") then
		target.herb = "orphine"
	elseif string.find(line, "a piece of kelp") then
		target.herb = "kelp"
	elseif string.find(line, "a maidenhair leaf") then
		target.herb = "maidenhair"
	elseif string.find(line, "a nightshade root") then
		target.herb = "nightshade"
	elseif string.find(line, "a mandrake root") then
		target.herb = "mandrake"
	elseif string.find(line, "a wormwood root") then
		target.herb = "wormwood"
	elseif string.find(line, "exhaling a thick, musty smoke") then
		target.smoke = "lovage"
	elseif string.find(line, "exhaling a light, bluish mist") then
		target.smoke = "laurel"
	end
end

function sysEcho(echo)
	cecho("\n&lt;red&gt;[&lt;yellow&gt;SYSTEM&lt;red&gt;::&lt;white&gt;" .. echo .. "&lt;red&gt;]")
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Dstab Functions</name>
					<packageName></packageName>
					<script>--Dstab Functions
function Dstab(type)
	if (type == "shadowplant") then
		if Wielded[1] ~= "dirk" then
			send("quickdraw dirk shield::dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm shadowplant " .. target.name .. " " .. Shadowplant.plant)
		else
			send("dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm shadowplant " .. target.name .. " " .. Shadowplant.plant)
		end
	elseif (type == "suggest") then
		if Wielded[1] ~= "dirk" then
			if (hypnoadded &gt; #Hypnosislockqueue) then
				hypnoadded = 1
				send("quickdraw dirk shield::dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::seal " .. target.name .. " 1")
				sysEcho("Problem 1")
			else
				send("quickdraw dirk shield::dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::suggest " .. target.name .. " " .. Hypnosislockqueue[hypnoadded])
				sysEcho("Problem 2")
			end
		else
			if (hypnoadded &gt; #Hypnosislockqueue) then
				hypnoadded = 1
				send("dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::seal " .. target.name .. " 1")
				sysEcho("Problem 3")
			else
				send("dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::suggest " .. target.name .. " " .. Hypnosislockqueue[hypnoadded])
				sysEcho("Problem 4")
			end
		end
	elseif (type == "hypnotise") then
		if Wielded[1] ~= "dirk" then
			send("quickdraw dirk shield::dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::hypnotise " .. target.name)
		else
			send("dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::hypnotise " .. target.name)
		end
	elseif (type == "whisper") then
		if Wielded[1] ~= "dirk" then
			send("quickdraw dirk shield::dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::suggest " .. target.name .. " whisper")
		else
			send("dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::suggest " .. target.name .. " whisper")
		end
	elseif (type == "attack") then
		if (Worm.Environment == "volcano") then
			if Wielded[1] ~= "dirk" then
				send("quickdraw dirk shield::dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm burn " .. target.name)
			else
				send("dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm burn " .. target.name)
			end				
		elseif (Worm.Environment == "tundra") then
			if Wielded[1] ~= "dirk" then
				send("quickdraw dirk shield::dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm freeze " .. target.name)
			else
				send("dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm freeze " .. target.name)
			end		
		elseif (Worm.Environment == "rashirmir") then
			if Wielded[1] ~= "dirk" then
				send("quickdraw dirk shield::dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm choke " .. target.name)
			else
				send("dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm choke " .. target.name)
			end		
		elseif (Worm.Environment ~= "volcano" or Worm.Environment ~= "tundra" or Worm.Environment ~= "rashirmir") then
			send("worm create::worm attach volcano")
		end
	elseif (type == "snap attack") then
		if Wielded[1] ~= "dirk" then
			send("quickdraw dirk shield::snap " .. target.name .. "::dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm shadowplant " .. target.name .. " " .. Shadowplant.plant)
		else
			send("snap " .. target.name .. "::dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm shadowplant " .. target.name .. " " .. Shadowplant.plant)
		end
	elseif (type == "snap tumble") then
		if Wielded[1] ~= "dirk" then
			send("quickdraw dirk shield::snap "..target.name.."::dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm shadowplant "..target.name.." hyssop")
		else
			send("snap "..target.name.."::dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm shadowplant "..target.name.." hyssop")
		end
	elseif (type == "oxalis") then
		if Wielded[1] ~= "dirk" then
			send("quickdraw dirk shield::dstab " .. target.name .. " oxalis ciguatoxin::worm shadowplant "..target.name.." hyssop")
		else
			send("dstab " .. target.name .. " oxalis ciguatoxin::worm shadowplant "..target.name.." hyssop")
		end
	elseif (type == "seal") then
		if Wielded[1] ~= "dirk" then
			send("quickdraw dirk shield::dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::seal " .. target.name .. " 1")
		else
			send("dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::seal " .. target.name .. " 1")
		end
	elseif (type == "snap confound") then
		if Wielded[1] ~= "dirk" then
			send("quickdraw dirk shield::snap " .. target.name .. "::dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm confound " .. target.name)
		else
			send("snap " .. target.name .. "::dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm confound " .. target.name)
		end
	elseif (type == "confound") then
		if Wielded[1] ~= "dirk" then
			send("quickdraw dirk shield::dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm confound " .. target.name)
		else
			send("dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm confound " .. target.name)
		end
	elseif (type == "becloud") then
		if Wielded[1] ~= "dirk" then
			send("quickdraw dirk shield::dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm becloud " .. target.name)
		else
			send("dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm becloud " .. target.name)
		end
	elseif (type == "snap instill") then
		if Wielded[1] ~= "dirk" then
			send("quickdraw dirk shield::snap " .. target.name .. "::dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm instill " .. target.name .. " hypochondria")
		else
			send("snap " .. target.name .. "::dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm instill " .. target.name .. " hypochondria")
		end
	elseif (type == "instill") then
		if Wielded[1] ~= "dirk" then
			send("quickdraw dirk shield::dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm instill " .. target.name .. " hypochondria")
		else
			send("dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm instill " .. target.name .. " hypochondria")
		end
	elseif (type == "instill2") then
		if Wielded[1] ~= "dirk" then
			send("quickdraw dirk shield::dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm instill " .. target.name .. " hemotoxin")
		else
			send("dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm instill " .. target.name .. " hemotoxin")
		end
	elseif (type == "instill3") then
		if Wielded[1] ~= "dirk" then
			send("quickdraw dirk shield::dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm instill " .. target.name .. " iodine")
		else
			send("dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm instill " .. target.name .. " iodine")
		end
	elseif (type == "snap shadowplant") then
		if Wielded[1] ~= "dirk" then
			send("quickdraw dirk shield::snap " .. target.name .. "::dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm shadowplant " .. target.name .. " " .. Shadowplant.plant)
		else
			send("snap " .. target.name .. "::dstab " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::worm shadowplant " .. target.name .. " " .. Shadowplant.plant)
		end
	elseif (type == "deadeye") then
			if (not table.contains(target.afflictions, "hemotoxin")) then
				daeggerhunttoxin = "hemotoxin"
				send("daegger hunt " .. target.name .. " hemotoxin")
			elseif (not table.contains(target.afflictions, "butisol")) then
				daeggerhunttoxin = "butisol"
				send("daegger hunt " .. target.name .. " butisol")
			elseif (not table.contains(target.afflictions, "xeroderma")) then
				daeggerhunttoxin = "xeroderma"
				send("daegger hunt " .. target.name .. " xeroderma")
			elseif (not table.contains(target.afflictions, "iodine")) and (table.contains(target.afflictions, "asthma") and table.contains(target.afflictions, "numbness")) then
				daeggerhunttoxin = "iodine"
				send("daegger hunt " .. target.name .. " iodine")
			elseif (not table.contains(target.afflictions, "calotropis") and table.contains(target.afflictions, "iodine")) then
				daeggerhunttoxin = "calotropis"
				send("daegger hunt " .. target.name .. " calotropis")
			elseif (not table.contains(target.afflictions, "metrazol")) then
				daeggerhunttoxin = "metrazol"
				send("daegger hunt " .. target.name .. " metrazol")
			elseif (not table.contains(target.afflictions, "noctec")) then
				daeggerhunttoxin = "noctec"
				send("daegger hunt " .. target.name .. " noctec")
			elseif (not table.contains(target.afflictions, "mebaral")) then
				daeggerhunttoxin = "mebaral"
				send("daegger hunt " .. target.name .. " mebaral")
			elseif (not table.contains(target.afflictions, "crippled left arm") and not table.contains(target.afflictions, "crippled right arm")) then
				daeggerhunttoxin = "benzene"
				send("daegger hunt " .. target.name .. " benzene")
			elseif (not table.contains(target.afflictions, "crippled left leg") and not table.contains(target.afflictions, "crippled right leg")) then
				daeggerhunttoxin = "benzedrine"
				send("daegger hunt " .. target.name .. " benzedrine")
			end
		send("order loyals kill " .. target.name .. "::contemplate " .. target.name .. "::deadeyes " .. target.name .. " " .. toxins[1] .. " " .. toxins[2])
	elseif (type == "breach") then
			if (not table.contains(target.afflictions, "hemotoxin")) then
				daeggerhunttoxin = "hemotoxin"
				send("daegger hunt " .. target.name .. " hemotoxin")
			elseif (not table.contains(target.afflictions, "butisol")) then
				daeggerhunttoxin = "butisol"
				send("daegger hunt " .. target.name .. " butisol")
			elseif (not table.contains(target.afflictions, "xeroderma")) then
				daeggerhunttoxin = "xeroderma"
				send("daegger hunt " .. target.name .. " xeroderma")
			elseif (not table.contains(target.afflictions, "iodine")) and (table.contains(target.afflictions, "asthma") and table.contains(target.afflictions, "numbness")) then
				daeggerhunttoxin = "iodine"
				send("daegger hunt " .. target.name .. " iodine")
			elseif (not table.contains(target.afflictions, "calotropis") and table.contains(target.afflictions, "iodine")) then
				daeggerhunttoxin = "calotropis"
				send("daegger hunt " .. target.name .. " calotropis")
			elseif (not table.contains(target.afflictions, "metrazol")) then
				daeggerhunttoxin = "metrazol"
				send("daegger hunt " .. target.name .. " metrazol")
			elseif (not table.contains(target.afflictions, "noctec")) then
				daeggerhunttoxin = "noctec"
				send("daegger hunt " .. target.name .. " noctec")
			elseif (not table.contains(target.afflictions, "mebaral")) then
				daeggerhunttoxin = "mebaral"
				send("daegger hunt " .. target.name .. " mebaral")
			elseif (not table.contains(target.afflictions, "crippled left arm") and not table.contains(target.afflictions, "crippled right arm")) then
				daeggerhunttoxin = "benzene"
				send("daegger hunt " .. target.name .. " benzene")
			elseif (not table.contains(target.afflictions, "crippled left leg") and not table.contains(target.afflictions, "crippled right leg")) then
				daeggerhunttoxin = "benzedrine"
				send("daegger hunt " .. target.name .. " benzedrine")
			end
		send("order loyals kill " .. target.name .. "::contemplate " .. target.name .. "::deadeyes " .. target.name .. " breach " .. toxins[1])
	else
		cecho("&lt;red&gt;Error - Unknown Dstab Combination")
	end
end

function pickLockToxin()
	for cure, locktoxin in ipairs (Toxin.Lock.queue) do
		if (locktoxin == "bromine") then
			if (not table.contains(target.afflictions, "bromine") and not table.contains(target.mentalaffs, "anorexia")) then
				table.insert(toxins, "bromine")
			end
		else
			if locktoxin == "ether" and not table.contains(target.afflictions, "clumsiness") then
				table.insert(toxins, "ether")
			elseif locktoxin == "arsenic" and not table.contains(target.afflictions, "weariness") then
				table.insert(toxins, "arsenic")
			elseif locktoxin == "oxalis" and not table.contains(target.afflictions, "deaf") then
				table.insert(toxins, "oxalis")
			elseif locktoxin == "oxalis" and not table.contains(target.afflictions, "deaf") then
				table.insert(toxins, "oxalis")
			elseif locktoxin == "strychnine" and not table.contains(target.afflictions, "sensitivity") then
				table.insert(toxins, "strychnine")
			elseif locktoxin == "xeroderma" and not table.contains(target.afflictions, "sunallergy") then
				table.insert(toxins, "xeroderma")
			elseif locktoxin == "butolinum" and not table.contains(target.afflictions, "nausea") then
				table.insert(toxins, "nausea")
			elseif locktoxin == "mercury" and not table.contains(target.afflictions, "asthma") then
				table.insert(toxins, "mercury")
			elseif locktoxin == "iodine" and not table.contains(target.afflictions, "slickness") then
				table.insert(toxins, "iodine")
			elseif locktoxin == "bromine" and not table.contains(target.mentalaffs, "anorexia") then
				table.insert(toxins, "bromine")
			elseif locktoxin == "mazanor" and not table.contains(target.afflictions, "slow herbs") then
				table.insert(toxins, "mazanor")
			elseif locktoxin == "aconite" and not table.contains(target.mentalaffs, "stupidity") then
				table.insert(toxins, "aconite")
			elseif locktoxin == "atropine" and not table.contains(target.mentalaffs, "recklessness") then
				table.insert(toxins, "atropine")
			elseif locktoxin == "vitriol" and not table.contains(target.mentalaffs, "disloyalty") then
				table.insert(toxins, "vitriol")
			elseif locktoxin == "chloroform" and not table.contains(target.mentalaffs, "epilepsy") then
				table.insert(toxins, "chloroform")
			elseif locktoxin == "noctec" and not table.contains(target.afflictions, "slow balance") then
				table.insert(toxins, "noctec")
			elseif locktoxin == "mebaral" and not table.contains(target.afflictions, "slow equilibrium") then
				table.insert(toxins, "mebaral")
			elseif locktoxin == "hemotoxin" and not table.contains(target.afflictions, "hemotoxin") then
				table.insert(toxins, "hemotoxin")
			elseif locktoxin == "butisol" and not table.contains(target.afflictions, "butisol") then
				table.insert(toxins, "butisol")
			elseif locktoxin == "calotropis" and not table.contains(target.afflictions, "calotropis") then
				table.insert(toxins, "calotropis")
			end
		end
	end
end

function pickKelpToxin()
	for kelp, ktoxin in ipairs (Toxin.Kelp.queue) do
			if ktoxin == "ether" and not table.contains(target.afflictions, "clumsiness") then
				table.insert(toxins, "ether")
			elseif ktoxin == "arsenic" and not table.contains(target.afflictions, "weariness") then
				table.insert(toxins, "arsenic")
			elseif ktoxin == "oxalis" and not table.contains(target.afflictions, "deaf") then
				table.insert(toxins, "oxalis")
			elseif ktoxin == "oxalis" and not table.contains(target.afflictions, "deaf") then
				table.insert(toxins, "oxalis")
			elseif ktoxin == "strychnine" and not table.contains(target.afflictions, "sensitivity") then
				table.insert(toxins, "strychnine")
			elseif ktoxin == "xeroderma" and not table.contains(target.afflictions, "sunallergy") then
				table.insert(toxins, "xeroderma")
			elseif ktoxin == "butolinum" and not table.contains(target.afflictions, "nausea") then
				table.insert(toxins, "nausea")
			elseif ktoxin == "mercury" and not table.contains(target.afflictions, "asthma") then
				table.insert(toxins, "mercury")
			elseif ktoxin == "iodine" and not table.contains(target.afflictions, "slickness") then
				table.insert(toxins, "iodine")
			elseif ktoxin == "bromine" and not table.contains(target.mentalaffs, "anorexia") then
				table.insert(toxins, "bromine")
			elseif ktoxin == "mazanor" and not table.contains(target.afflictions, "slow herbs") then
				table.insert(toxins, "mazanor")
			elseif ktoxin == "aconite" and not table.contains(target.mentalaffs, "stupidity") then
				table.insert(toxins, "aconite")
			elseif ktoxin == "vitriol" and not table.contains(target.mentalaffs, "disloyalty") then
				table.insert(toxins, "vitriol")
			elseif ktoxin == "chloroform" and not table.contains(target.mentalaffs, "epilepsy") then
				table.insert(toxins, "chloroform")
			elseif ktoxin == "noctec" and not table.contains(target.afflictions, "slow balance") then
				table.insert(toxins, "noctec")
			elseif ktoxin == "mebaral" and not table.contains(target.afflictions, "slow equilibrium") then
				table.insert(toxins, "mebaral")
			elseif ktoxin == "hemotoxin" and not table.contains(target.afflictions, "hemotoxin") then
				table.insert(toxins, "hemotoxin")
			elseif ktoxin == "butisol" and not table.contains(target.afflictions, "butisol") then
				table.insert(toxins, "butisol")
			elseif ktoxin == "calotropis" and not table.contains(target.afflictions, "calotropis") then
				table.insert(toxins, "calotropis")
			end
		if (table.contains(target.afflictions, ktoxin)) then
			kelp_affs = kelp_affs + 1
		end
	end
end

function pickMaidenhairToxin()
	for maidenhair, mtoxin in ipairs (Toxin.Maidenhair.queue) do
			if mtoxin == "ciguatoxin" and (not table.contains(target.afflictions, "numbness") and not table.contains(target.afflictions, "paralyse")) then
				table.insert(toxins, "ciguatoxin")
			elseif mtoxin == "ether" and not table.contains(target.afflictions, "clumsiness") then
				table.insert(toxins, "ether")
			elseif mtoxin == "arsenic" and not table.contains(target.afflictions, "weariness") then
				table.insert(toxins, "arsenic")
			elseif mtoxin == "oxalis" and not table.contains(target.afflictions, "deaf") then
				table.insert(toxins, "oxalis")
			elseif mtoxin == "oxalis" and not table.contains(target.afflictions, "deaf") then
				table.insert(toxins, "oxalis")
			elseif mtoxin == "strychnine" and not table.contains(target.afflictions, "sensitivity") and not table.contains(target.afflictions, "numbness") then
				table.insert(toxins, "strychnine")
			elseif mtoxin == "metrazol" and not table.contains(target.afflictions, "metrazol") and not table.contains(target.afflictions, "numbness") and target.tree == true then
				table.insert(toxins, "metrazol")
			elseif mtoxin == "xeroderma" and not table.contains(target.afflictions, "sunallergy") then
				table.insert(toxins, "xeroderma")
			elseif mtoxin == "butolinum" and not table.contains(target.afflictions, "nausea") then
				table.insert(toxins, "nausea")
			elseif mtoxin == "mercury" and not table.contains(target.afflictions, "asthma") then
				table.insert(toxins, "mercury")
			elseif mtoxin == "iodine" and not table.contains(target.afflictions, "slickness") then
				table.insert(toxins, "iodine")
			elseif mtoxin == "bromine" and not table.contains(target.mentalaffs, "anorexia") then
				table.insert(toxins, "bromine")
			elseif mtoxin == "mazanor" and not table.contains(target.afflictions, "slow herbs") then
				table.insert(toxins, "mazanor")
			elseif mtoxin == "aconite" and not table.contains(target.mentalaffs, "stupidity") then
				table.insert(toxins, "aconite")
			elseif mtoxin == "vitriol" and not table.contains(target.mentalaffs, "disloyalty") then
				table.insert(toxins, "vitriol")
			elseif mtoxin == "chloroform" and not table.contains(target.mentalaffs, "epilepsy") then
				table.insert(toxins, "chloroform")
			elseif mtoxin == "noctec" and not table.contains(target.afflictions, "slow balance") then
				table.insert(toxins, "noctec")
			elseif mtoxin == "mebaral" and not table.contains(target.afflictions, "slow equilibrium") then
				table.insert(toxins, "mebaral")
			elseif mtoxin == "hemotoxin" and not table.contains(target.afflictions, "hemotoxin") then
				table.insert(toxins, "hemotoxin")
			elseif mtoxin == "butisol" and not table.contains(target.afflictions, "butisol") then
				table.insert(toxins, "butisol")
			elseif mtoxin == "calotropis" and not table.contains(target.afflictions, "calotropis") then
				table.insert(toxins, "calotropis")
			end
			if (table.contains(target.afflictions, mtoxin)) then
				m_affs = m_affs + 1
			end
		end
	end

function pickAllToxin()
	for any, alltoxin in ipairs (Toxin.All.queue) do
		if (alltoxin == "opium") then
			table.insert(toxins, "opium")
			table.insert(toxins, "opium")
		elseif (alltoxin == "benzene2") and not table.contains(target.afflictions, "crippled right arm") then
			table.insert(toxins, "benzene")
		elseif (alltoxin == "benzedrine2") and not table.contains(target.afflictions, "crippled right leg") then
			table.insert(toxins, "benzedrine")
			elseif alltoxin == "ether" and not table.contains(target.afflictions, "clumsiness") then
				table.insert(toxins, "ether")
			elseif alltoxin == "arsenic" and not table.contains(target.afflictions, "weariness") then
				table.insert(toxins, "arsenic")
			elseif alltoxin == "oxalis" and not table.contains(target.afflictions, "deaf") then
				table.insert(toxins, "oxalis")
			elseif alltoxin == "oxalis" and not table.contains(target.afflictions, "deaf") then
				table.insert(toxins, "oxalis")
			elseif alltoxin == "strychnine" and not table.contains(target.afflictions, "sensitivity") then
				table.insert(toxins, "strychnine")
			elseif alltoxin == "xeroderma" and not table.contains(target.afflictions, "sunallergy") then
				table.insert(toxins, "xeroderma")
			elseif alltoxin == "butolinum" and not table.contains(target.afflictions, "nausea") then
				table.insert(toxins, "nausea")
			elseif alltoxin == "mercury" and not table.contains(target.afflictions, "asthma") then
				table.insert(toxins, "mercury")
			elseif alltoxin == "iodine" and not table.contains(target.afflictions, "slickness") then
				table.insert(toxins, "iodine")
			elseif alltoxin == "bromine" and not table.contains(target.mentalaffs, "anorexia") then
				table.insert(toxins, "bromine")
			elseif alltoxin == "mazanor" and not table.contains(target.afflictions, "slow herbs") then
				table.insert(toxins, "mazanor")
			elseif alltoxin == "aconite" and not table.contains(target.mentalaffs, "stupidity") then
				table.insert(toxins, "aconite")
			elseif alltoxin == "vitriol" and not table.contains(target.mentalaffs, "disloyalty") then
				table.insert(toxins, "vitriol")
			elseif alltoxin == "chloroform" and not table.contains(target.mentalaffs, "epilepsy") then
				table.insert(toxins, "chloroform")
			elseif alltoxin == "noctec" and not table.contains(target.afflictions, "slow balance") then
				table.insert(toxins, "noctec")
			elseif alltoxin == "mebaral" and not table.contains(target.afflictions, "slow equilibrium") then
				table.insert(toxins, "mebaral")
			elseif alltoxin == "hemotoxin" and not table.contains(target.afflictions, "hemotoxin") then
				table.insert(toxins, "hemotoxin")
			elseif alltoxin == "butisol" and not table.contains(target.afflictions, "butisol") then
				table.insert(toxins, "butisol")
			elseif alltoxin == "calotropis" and not table.contains(target.afflictions, "calotropis") then
				table.insert(toxins, "calotropis")
		end
	end
end

--function pickSalveToxin()
--	for any, salvetoxin in ipairs (Toxin.Salve.queue) do
--		if (salvetoxin == "ciguatoxin") then
--			if (not table.contains(target.afflictions, "ciguatoxin") and not target.paralysis) then
--				table.insert(toxins, "ciguatoxin")
--			end
--		else
--			if (salvetoxin == "benzene2") and not table.contains(target.afflictions, "crippled right arm") then
--				table.insert(toxins, "benzene")
--			elseif (salvetoxin == "benzedrine2") and not table.contains(target.afflictions, "crippled right leg") then
--				table.insert(toxins, "benzedrine")
--			else
--				if (salvetoxin == "opium") then
--					table.insert(toxins, "opium")
--					table.insert(toxins, "opium")
--			else
--				if (not table.contains(target.afflictions, salvetoxin)) and ((not salvetoxin == "benzene2") or (not salvetoxin == "benzedrine2")) then
--					table.insert(toxins, salvetoxin)
--					end
--				end
--			end
--		end
--	end
--end

function pickOxalisToxin()
	for any, oxalistoxin in ipairs (Toxin.Oxalis.queue) do
		if (oxalistoxin == "ciguatoxin") then
			if not table.contains(target.afflictions, "paralysis") and not target.paralysis then
				table.insert(toxins, "ciguatoxin")
			end
		else
			if (oxalistoxin == "opium") then
				table.insert(toxins, "opium")
				table.insert(toxins, "opium")
			elseif (oxalistoxin == "benzene2") and not table.contains(target.afflictions, "crippled right arm") then
				table.insert(toxins, "benzene")
			elseif (oxalistoxin == "benzedrine2") and not table.contains(target.afflictions, "crippled right leg") then
				table.insert(toxins, "benzedrine")
			elseif oxalistoxin == "ether" and not table.contains(target.afflictions, "clumsiness") then
				table.insert(toxins, "ether")
			elseif oxalistoxin == "arsenic" and not table.contains(target.afflictions, "weariness") then
				table.insert(toxins, "arsenic")
			elseif oxalistoxin == "oxalis" and not table.contains(target.afflictions, "deaf") then
				table.insert(toxins, "oxalis")
			elseif oxalistoxin == "oxalis" and not table.contains(target.afflictions, "deaf") then
				table.insert(toxins, "oxalis")
			elseif oxalistoxin == "strychnine" and not table.contains(target.afflictions, "sensitivity") then
				table.insert(toxins, "strychnine")
			elseif oxalistoxin == "xeroderma" and not table.contains(target.afflictions, "sunallergy") then
				table.insert(toxins, "xeroderma")
			elseif oxalistoxin == "butolinum" and not table.contains(target.afflictions, "nausea") then
				table.insert(toxins, "nausea")
			elseif oxalistoxin == "mercury" and not table.contains(target.afflictions, "asthma") then
				table.insert(toxins, "mercury")
			elseif oxalistoxin == "iodine" and not table.contains(target.afflictions, "slickness") then
				table.insert(toxins, "iodine")
			elseif oxalistoxin == "bromine" and not table.contains(target.mentalaffs, "anorexia") then
				table.insert(toxins, "bromine")
			elseif oxalistoxin == "mazanor" and not table.contains(target.afflictions, "slow herbs") then
				table.insert(toxins, "mazanor")
			elseif oxalistoxin == "aconite" and not table.contains(target.mentalaffs, "stupidity") then
				table.insert(toxins, "aconite")
			elseif oxalistoxin == "vitriol" and not table.contains(target.mentalaffs, "disloyalty") then
				table.insert(toxins, "vitriol")
			elseif oxalistoxin == "chloroform" and not table.contains(target.mentalaffs, "epilepsy") then
				table.insert(toxins, "chloroform")
			elseif oxalistoxin == "noctec" and not table.contains(target.afflictions, "slow balance") then
				table.insert(toxins, "noctec")
			elseif oxalistoxin == "mebaral" and not table.contains(target.afflictions, "slow equilibrium") then
				table.insert(toxins, "mebaral")
			elseif oxalistoxin == "hemotoxin" and not table.contains(target.afflictions, "hemotoxin") then
				table.insert(toxins, "hemotoxin")
			elseif oxalistoxin == "butisol" and not table.contains(target.afflictions, "butisol") then
				table.insert(toxins, "butisol")
			elseif oxalistoxin == "calotropis" and not table.contains(target.afflictions, "calotropis") then
				table.insert(toxins, "calotropis")
			end
		end
	end
end

function pickShadowPlant()
	Shadowplant.plant = "kelp"
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Parrying</name>
					<packageName></packageName>
					<script>function Parrying()
	if (user.parry) then
		if (gmcp.Char.Vitals.bal == "1" and gmcp.Char.Vitals.eq == "1") then
			local num = math.random(1, #user.parrySpots)
			if (#user.parrySpots == 0) then
				return
			elseif rightlegbruise == true and leftlegbruise == true and leftarmbruise == true and rightarmbruise == true then
				expandAlias("p arms")
				send("parry " .. user.parrySpots[num], false)
			elseif leftarmbruise == true and rightarmbruise == true then
				expandAlias("p legs")
				send("parry " .. user.parrySpots[num], false)
			elseif leftarmbruise == true then
				user.parrySpots = {}
				table.insert(user.parrySpots, "left leg")
				table.insert(user.parrySpots, "right leg")
				table.insert(user.parrySpots, "right arm")
				send("parry " .. user.parrySpots[num], false)
			elseif rightarmbruise == true then
				user.parrySpots = {}
				table.insert(user.parrySpots, "left leg")
				table.insert(user.parrySpots, "right leg")
				table.insert(user.parrySpots, "left arm")
				send("parry " .. user.parrySpots[num], false)
			elseif rightlegbruise == true and leftlegbruise == true then
				expandAlias("p legs")
				send("parry " .. user.parrySpots[num], false)
			elseif rightlegbruise == true then
				user.parrySpots = {}
				table.insert(user.parrySpots, "left leg")
				table.insert(user.parrySpots, "right arm")
				table.insert(user.parrySpots, "left arm")
				send("parry " .. user.parrySpots[num], false)
			elseif leftlegbruise == true then
				user.parrySpots = {}
				table.insert(user.parrySpots, "left arm")
				table.insert(user.parrySpots, "right leg")
				table.insert(user.parrySpots, "right arm")
				send("parry " .. user.parrySpots[num], false)
			else
				send("parry " .. user.parrySpots[num], false)
			end
		else
			return
		end
	else
		return
	end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Annihilate</name>
					<packageName></packageName>
					<script>function Annihilate()
	local hypno_num = 0
	if (table.contains(target.mentalaffs, "impatience")) then
		hypno_num = hypno_num + 1
	end
	if (table.contains(target.mentalaffs, "amnesia")) then
		hypno_num = hypno_num + 1
	end
	if (table.contains(target.mentalaffs, "addiction")) then
		hypno_num = hypno_num + 1
	end
	if (table.contains(target.mentalaffs, "masochism")) then
		hypno_num = hypno_num + 1
	end
	if (table.contains(target.mentalaffs, "loneliness")) then
		hypno_num = hypno_num + 1
	end
	if (table.contains(target.mentalaffs, "claustrophobia")) then
		hypno_num = hypno_num + 1
	end
	if (table.contains(target.mentalaffs, "stuttering")) then
		hypno_num = hypno_num + 1
	end
	if (table.contains(target.mentalaffs, "hallucinations")) then
		hypno_num = hypno_num + 1
	end
	if (table.contains(target.mentalaffs, "pacifism")) then
		hypno_num = hypno_num + 1
	end
	if (table.contains(target.mentalaffs, "hypersomnia")) then
		hypno_num = hypno_num + 1
	end
	if (table.contains(target.mentalaffs, "dementia")) then
		hypno_num = hypno_num + 1
	end
	if (table.contains(target.mentalaffs, "deadening")) then
		hypno_num = hypno_num + 1
	end
	if (table.contains(target.mentalaffs, "epilepsy")) then
		hypno_num = hypno_num + 1
	end
	if (table.contains(target.mentalaffs, "agoraphobia")) then
		hypno_num = hypno_num + 1
	end
	if (table.contains(target.mentalaffs, "paranoia")) then
		hypno_num = hypno_num + 1
	end
	if (table.contains(target.mentalaffs, "vertigo")) then
		hypno_num = hypno_num + 1
	end
	if (table.contains(target.mentalaffs, "heroism")) then
		hypno_num = hypno_num + 1
	end
	if (table.contains(target.mentalaffs, "confusion")) then
		hypno_num = hypno_num + 1
	end
	if (table.contains(target.mentalaffs, "generosity")) then
		hypno_num = hypno_num + 1
	end
	if (table.contains(target.mentalaffs, "lethargy")) then
		hypno_num = hypno_num + 1
	end
	if (table.contains(target.mentalaffs, "hypochondria")) then
		hypno_num = hypno_num + 1
	end
	if (hypno_num &gt;= 6) then
		cecho("&lt;cyan&gt; Annihilate")
	else
		return
	end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Shrugging</name>
					<packageName></packageName>
					<script>function Shrug()
	if (user.shrugged and user.Balance.shrugging) then
		user.Balance.shrugging = false
		send("shrug " .. user.stoxin, false)
	else
		return
	end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Targetting Highlight</name>
					<packageName></packageName>
					<script>function setTarget(tar)
   highlighttarget = tar
   if id then killTrigger(id) end
   id = tempRegexTrigger("\\b(?i)" .. highlighttarget .. "\\b", [[colorAllInLine(matches[1], "OrangeRed")]])
--   cecho("\n&lt;red&gt;[&lt;gray&gt;Highlight&lt;red&gt;]: Targetting--&gt; " .. highlighttarget:title())
   send(" ")
end
--coloring script for targetting
function colorAllInLine(word, color)
   local i = 0
   for _ in string.gmatch(line, word) do
      i = i + 1
      selectString(word, i)
      fg(color)
   end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Room Functions</name>
					<packageName></packageName>
					<script>function checkRoom()
	for k, v in pairs (gmcp.Room.Info.exits) do
		if (v == user.room) then
			user.oldroom = k
			user.room = gmcp.Room.Info.num
			break
		else
			user.room = gmcp.Room.Info.num
		end
	end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Evileye Functions</name>
					<packageName></packageName>
					<script>function pickEvileyeToxin()
	for any, evileyetoxin in ipairs (Toxin.Evileye.queue) do
		if (evileyetoxin == "numbness") then
			if not table.contains(target.afflictions, "numbness") then
				table.insert(toxins, "numbness")
			end
		elseif evileyetoxin == "peace" then
			if evileyetoxin == "peace" and not table.contains(target.mentalaffs, "peace") and not target.peace then
				table.insert(toxins, "peace")
			end
		elseif evileyetoxin == "anorexia" then
			if evileyetoxin == "anorexia" and not table.contains(target.mentalaffs, "anorexia") and table.contains(target.afflictions, "slickness") then
				table.insert(toxins, "anorexia")
			end
		elseif kelpinfirmity == false then
			if evileyetoxin == "clumsy" and not table.contains(target.afflictions, "clumsiness") then
				table.insert(toxins, "clumsy")
			end
			if (evileyetoxin == "sleep") then
				table.insert(toxins, "sleep")
				table.insert(toxins, "sleep")
			elseif evileyetoxin == "sensitivity" and not table.contains(target.afflictions, "deaf") then
				table.insert(toxins, "sensitivity")
			elseif evileyetoxin == "sensitivity2" and not table.contains(target.afflictions, "sensitivity") and target.tree == true then
				table.insert(toxins, "sensitivity")
			elseif evileyetoxin == "vomiting" and not table.contains(target.afflictions, "nausea") then
				table.insert(toxins, "vomiting")
			elseif evileyetoxin == "asthma" and not table.contains(target.afflictions, "asthma") then
				table.insert(toxins, "asthma")
			elseif evileyetoxin == "vertigo" and not table.contains(target.mentalaffs, "vertigo") then
				table.insert(toxins, "vertigo")
			elseif evileyetoxin == "masochism" and not table.contains(target.mentalaffs, "masochism") then
				table.insert(toxins, "masochism")
			elseif evileyetoxin == "stupid" and not table.contains(target.mentalaffs, "stupidity") then
				table.insert(toxins, "stupid")
			elseif evileyetoxin == "vitriol" and not table.contains(target.mentalaffs, "disloyalty") then
				table.insert(toxins, "vitriol")
			elseif evileyetoxin == "epilepsy" and not table.contains(target.mentalaffs, "epilepsy") then
				table.insert(toxins, "epilepsy")
			elseif evileyetoxin == "noctec" and not table.contains(target.afflictions, "slow balance") then
				table.insert(toxins, "noctec")
			elseif evileyetoxin == "mebaral" and not table.contains(target.afflictions, "slow equilibrium") then
				table.insert(toxins, "mebaral")
			elseif evileyetoxin == "addiction" and not table.contains(target.mentalaffs, "addiction") then
				table.insert(toxins, "addiction")
			elseif evileyetoxin == "impatience" and not table.contains(target.afflictions, "impatience") then
				table.insert(toxins, "impatience")
			elseif evileyetoxin == "epilepsy" and not table.contains(target.mentalaffs, "epilepsy") then
				table.insert(toxins, "epilepsy")
			elseif evileyetoxin == "reckless" and not table.contains(target.mentalaffs, "recklessness") then
				table.insert(toxins, "reckless")
			elseif evileyetoxin == "dizzy" and not table.contains(target.mentalaffs, "dizziness") then
				table.insert(toxins, "dizzy")
			elseif evileyetoxin == "plague" and not table.contains(target.mentalaffs, "plague") then
				table.insert(toxins, "plague")
			end
		elseif orphineinfirmity == false then
			if evileyetoxin == "masochism" and not table.contains(target.mentalaffs, "masochism") then
				table.insert(toxins, "masochism")
			end
			if evileyetoxin == "vertigo" and not table.contains(target.mentalaffs, "vertigo") then
				table.insert(toxins, "vertigo")
			end
			if evileyetoxin == "stupid" and not table.contains(target.mentalaffs, "stupidity") then
				table.insert(toxins, "stupid")
			end
			if (evileyetoxin == "sleep") then
				table.insert(toxins, "sleep")
				table.insert(toxins, "sleep")
			elseif evileyetoxin == "sensitivity" and not table.contains(target.afflictions, "deaf") then
				table.insert(toxins, "sensitivity")
			elseif evileyetoxin == "sensitivity2" and not table.contains(target.afflictions, "sensitivity") and target.tree == true then
				table.insert(toxins, "sensitivity")
			elseif evileyetoxin == "vomiting" and not table.contains(target.afflictions, "nausea") then
				table.insert(toxins, "vomiting")
			elseif evileyetoxin == "asthma" and not table.contains(target.afflictions, "asthma") then
				table.insert(toxins, "asthma")
			elseif evileyetoxin == "vertigo" and not table.contains(target.mentalaffs, "vertigo") then
				table.insert(toxins, "vertigo")
			elseif evileyetoxin == "masochism" and not table.contains(target.mentalaffs, "masochism") then
				table.insert(toxins, "masochism")
			elseif evileyetoxin == "stupid" and not table.contains(target.mentalaffs, "stupidity") then
				table.insert(toxins, "stupid")
			elseif evileyetoxin == "vitriol" and not table.contains(target.mentalaffs, "disloyalty") then
				table.insert(toxins, "vitriol")
			elseif evileyetoxin == "epilepsy" and not table.contains(target.mentalaffs, "epilepsy") then
				table.insert(toxins, "epilepsy")
			elseif evileyetoxin == "noctec" and not table.contains(target.afflictions, "slow balance") then
				table.insert(toxins, "noctec")
			elseif evileyetoxin == "mebaral" and not table.contains(target.afflictions, "slow equilibrium") then
				table.insert(toxins, "mebaral")
			elseif evileyetoxin == "addiction" and not table.contains(target.mentalaffs, "addiction") then
				table.insert(toxins, "addiction")
			elseif evileyetoxin == "impatience" and not table.contains(target.afflictions, "impatience") then
				table.insert(toxins, "impatience")
			elseif evileyetoxin == "epilepsy" and not table.contains(target.mentalaffs, "epilepsy") then
				table.insert(toxins, "epilepsy")
			elseif evileyetoxin == "reckless" and not table.contains(target.mentalaffs, "recklessness") then
				table.insert(toxins, "reckless")
			elseif evileyetoxin == "dizzy" and not table.contains(target.mentalaffs, "dizziness") then
				table.insert(toxins, "dizzy")
			elseif evileyetoxin == "plague" and not table.contains(target.mentalaffs, "plague") then
				table.insert(toxins, "plague")
			end
		elseif wormwoodinfirmity == false then
			if evileyetoxin == "confusion" and not table.contains(target.mentalaffs, "confusion") then
				table.insert(toxins, "confusion")
			end
			if evileyetoxin == "dementia" and not table.contains(target.mentalaffs, "dementia") then
				table.insert(toxins, "dementia")
			end
			if evileyetoxin == "paranoia" and not table.contains(target.mentalaffs, "paranoia") then
				table.insert(toxins, "confusion")
			end
			if (evileyetoxin == "sleep") then
				table.insert(toxins, "sleep")
				table.insert(toxins, "sleep")
			elseif evileyetoxin == "sensitivity" and not table.contains(target.afflictions, "deaf") then
				table.insert(toxins, "sensitivity")
			elseif evileyetoxin == "sensitivity2" and not table.contains(target.afflictions, "sensitivity") and target.tree == true then
				table.insert(toxins, "sensitivity")
			elseif evileyetoxin == "asthma" and not table.contains(target.afflictions, "asthma") then
				table.insert(toxins, "asthma")
			elseif evileyetoxin == "stupid" and not table.contains(target.mentalaffs, "stupidity") then
				table.insert(toxins, "stupid")
			elseif evileyetoxin == "vitriol" and not table.contains(target.mentalaffs, "disloyalty") then
				table.insert(toxins, "vitriol")
			elseif evileyetoxin == "epilepsy" and not table.contains(target.mentalaffs, "epilepsy") then
				table.insert(toxins, "epilepsy")
			elseif evileyetoxin == "noctec" and not table.contains(target.afflictions, "slow balance") then
				table.insert(toxins, "noctec")
			elseif evileyetoxin == "mebaral" and not table.contains(target.afflictions, "slow equilibrium") then
				table.insert(toxins, "mebaral")
			elseif evileyetoxin == "addiction" and not table.contains(target.mentalaffs, "addiction") then
				table.insert(toxins, "addiction")
			elseif evileyetoxin == "impatience" and not table.contains(target.afflictions, "impatience") then
				table.insert(toxins, "impatience")
			elseif evileyetoxin == "epilepsy" and not table.contains(target.mentalaffs, "epilepsy") then
				table.insert(toxins, "epilepsy")
			elseif evileyetoxin == "reckless" and not table.contains(target.mentalaffs, "recklessness") then
				table.insert(toxins, "reckless")
			elseif evileyetoxin == "dizzy" and not table.contains(target.mentalaffs, "dizziness") then
				table.insert(toxins, "dizzy")
			elseif evileyetoxin == "plague" and not table.contains(target.mentalaffs, "plague") then
				table.insert(toxins, "plague")
			end
		else
			if (evileyetoxin == "sleep") then
				table.insert(toxins, "sleep")
				table.insert(toxins, "sleep")
			elseif evileyetoxin == "sensitivity" and not table.contains(target.afflictions, "deaf") then
				table.insert(toxins, "sensitivity")
			elseif evileyetoxin == "sensitivity2" and not table.contains(target.afflictions, "sensitivity") and target.tree == true then
				table.insert(toxins, "sensitivity")
			elseif evileyetoxin == "vomiting" and not table.contains(target.afflictions, "nausea") then
				table.insert(toxins, "vomiting")
			elseif evileyetoxin == "asthma" and not table.contains(target.afflictions, "asthma") then
				table.insert(toxins, "asthma")
			elseif evileyetoxin == "vertigo" and not table.contains(target.mentalaffs, "vertigo") then
				table.insert(toxins, "vertigo")
			elseif evileyetoxin == "masochism" and not table.contains(target.mentalaffs, "masochism") then
				table.insert(toxins, "masochism")
			elseif evileyetoxin == "stupid" and not table.contains(target.mentalaffs, "stupidity") then
				table.insert(toxins, "stupid")
			elseif evileyetoxin == "vitriol" and not table.contains(target.mentalaffs, "disloyalty") then
				table.insert(toxins, "vitriol")
			elseif evileyetoxin == "epilepsy" and not table.contains(target.mentalaffs, "epilepsy") then
				table.insert(toxins, "epilepsy")
			elseif evileyetoxin == "noctec" and not table.contains(target.afflictions, "slow balance") then
				table.insert(toxins, "noctec")
			elseif evileyetoxin == "mebaral" and not table.contains(target.afflictions, "slow equilibrium") then
				table.insert(toxins, "mebaral")
			elseif evileyetoxin == "addiction" and not table.contains(target.mentalaffs, "addiction") then
				table.insert(toxins, "addiction")
			elseif evileyetoxin == "impatience" and not table.contains(target.afflictions, "impatience") then
				table.insert(toxins, "impatience")
			elseif evileyetoxin == "epilepsy" and not table.contains(target.mentalaffs, "epilepsy") then
				table.insert(toxins, "epilepsy")
			elseif evileyetoxin == "reckless" and not table.contains(target.mentalaffs, "recklessness") then
				table.insert(toxins, "reckless")
			elseif evileyetoxin == "dizzy" and not table.contains(target.mentalaffs, "dizziness") then
				table.insert(toxins, "dizzy")
			elseif evileyetoxin == "plague" and not table.contains(target.mentalaffs, "plague") then
				table.insert(toxins, "plague")
			end
		end
	end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>DSL Functions</name>
					<packageName></packageName>
					<script>Toxin.dsl.queue = {"hemotoxinpurge","ciguatoxin","metrazol","mercury","butisol","hemotoxin","xeroderma","strychnine","metrazoltree","ether","botulinum","iodine","calotropis","aconite","bromine","atropine","noctec","mazanor","benzene2","benzedrine2","vitriol","chloroform","benzene1","benzedrine1","opium","opium"}
local alreadydone = false
local alreadydonemetrazol = false
local alreadydonestrychnine = false
function pickdsltoxin()
alreadydone = false
alreadydonemetrazol = false
alreadydonestrychnine = false
	for any, dsltoxin in ipairs (Toxin.dsl.queue) do
		if dsltoxin == "ciguatoxintree" and not table.contains(target.afflictions, "numbness") and target.tree == true then
			table.insert(toxins, "ciguatoxin")
			alreadydone = true
		elseif dsltoxin == "ciguatoxin" and not table.contains(target.afflictions, "numbness") and alreadydone == false then
			table.insert(toxins, "ciguatoxin")
--		elseif (dsltoxin == "caloslick") and table.contains(target.afflictions, "calotropis") and not table.contains(target.afflictions, "numbness") then
--			table.insert(toxin, "ciguatoxin")
		elseif (dsltoxin == "atropine") and not table.contains(target.mentalaffs, "recklessness") then
			table.insert(toxins, "atropine")
		elseif (dsltoxin == "aconite") and not table.contains(target.mentalaffs, "stupidity") then
			table.insert(toxins, "aconite")
		elseif (dsltoxin == "opium") then
			table.insert(toxins, "opium")
			table.insert(toxins, "opium")
		elseif dsltoxin == "metrazoltree" and not table.contains(target.afflictions, "metrazol") and not table.contains(target.afflictions, "numbness") and target.tree == true then
			table.insert(toxins, "metrazol")
			alreadydonemetrazol = true
		elseif dsltoxin == "metrazol" and not table.contains(target.afflictions, "metrazol") and not table.contains(target.afflictions, "numbness") and alreadydonemetrazol == false then
			table.insert(toxins, "metrazol")
		elseif (dsltoxin == "benzene1") and not table.contains(target.afflictions, "crippled left arm") then
			table.insert(toxins, "benzene")
		elseif (dsltoxin == "benzedrine1") and not table.contains(target.afflictions, "crippled left leg") then
			table.insert(toxins, "benzedrine")
		elseif (dsltoxin == "benzene2") and not table.contains(target.afflictions, "crippled right arm") then
			table.insert(toxins, "benzene")
		elseif (dsltoxin == "benzedrine2") and not table.contains(target.afflictions, "crippled right leg") then
			table.insert(toxins, "benzedrine")
		elseif dsltoxin == "ether" and not table.contains(target.afflictions, "clumsiness") then
			table.insert(toxins, "ether")
		elseif dsltoxin == "arsenic" and not table.contains(target.afflictions, "weariness") then
			table.insert(toxins, "arsenic")
		elseif dsltoxin == "deaf" and not table.contains(target.afflictions, "deaf") then
			table.insert(toxins, "strychnine")
		elseif dsltoxin == "strychninetree" and not table.contains(target.afflictions, "sensitivity") and not table.contains(target.afflictions, "numbness") and not table.contains(target.afflictions, "iodine") then
			table.insert(toxins, "strychnine")
			alreadydonestrychnine = true
		elseif dsltoxin == "strychnine" and not table.contains(target.afflictions, "sensitivity") and alreadydonestrychnine == false then
			table.insert(toxins, "strychnine")
		elseif dsltoxin == "xeroderma" and not table.contains(target.afflictions, "sunallergy") then
			table.insert(toxins, "xeroderma")
		elseif dsltoxin == "butolinum" and not table.contains(target.afflictions, "nausea") then
			table.insert(toxins, "nausea")
		elseif dsltoxin == "mercury" and not table.contains(target.afflictions, "asthma") then
			table.insert(toxins, "mercury")
		elseif dsltoxin == "iodine" and not table.contains(target.afflictions, "slickness") then
			table.insert(toxins, "iodine")
		elseif dsltoxin == "bromine" and not table.contains(target.mentalaffs, "anorexia") then
			table.insert(toxins, "bromine")
		elseif dsltoxin == "mazanor" and not table.contains(target.afflictions, "slowherbs") then
			table.insert(toxins, "mazanor")
		elseif dsltoxin == "aconite" and not table.contains(target.mentalaffs, "stupidity") then
			table.insert(toxins, "aconite")
		elseif dsltoxin == "vitriol" and not table.contains(target.mentalaffs, "disloyalty") then
			table.insert(toxins, "vitriol")
		elseif dsltoxin == "chloroform" and not table.contains(target.mentalaffs, "epilepsy") then
			table.insert(toxins, "chloroform")
		elseif dsltoxin == "noctec" and not table.contains(target.afflictions, "slow balance") then
			table.insert(toxins, "noctec")
		elseif dsltoxin == "mebaral" and not table.contains(target.afflictions, "slow equilibrium") then
			table.insert(toxins, "mebaral")
		elseif dsltoxin == "hemotoxinpurge" and not table.contains(target.afflictions, "hemotoxin") and purgeblood == false then
			table.insert(toxins, "hemotoxin")
			alreadydone = true
		elseif dsltoxin == "hemotoxin" and not table.contains(target.afflictions, "hemotoxin") and alreadydone == false  then
			table.insert(toxins, "hemotoxin")
		elseif dsltoxin == "butisol" and not table.contains(target.afflictions, "butisol") then
			table.insert(toxins, "butisol")
		elseif dsltoxin == "calotropis" and not table.contains(target.afflictions, "calotropis") then
			table.insert(toxins, "calotropis")
		elseif dsltoxin == "luminal" and not table.contains(target.afflictions, "slowelixir") then
			table.insert(toxins, "luminal")
		end
	end
end

function dslprompt()
--    for k, v in pairs(dslaffs) do
--        echo("\n"..v)
--      end
	for i=1, #dslaffs do
		if dslaffs[i] == "crippled left arm" and (not table.contains(target.afflictions, "crippled left arm")) then
			targAffAdd("crippled left arm")
		elseif dslaffs[i] == "crippled right arme" and (not table.contains(target.afflictions, "crippled right arm")) then
			targAffAdd("crippled right arm")
		elseif dslaffs[i] == "crippled left leg" and (not table.contains(target.afflictions, "crippled left leg")) then
			targAffAdd("crippled left leg")
		elseif dslaffs[i] == "crippled right leg" and (not table.contains(target.afflictions, "crippled right leg")) then
			targAffAdd("crippled right leg")
		elseif dslaffs[i] == "clumsiness" and (not table.contains(target.afflictions, "clumsiness")) then
			targAffAdd("clumsiness")
		elseif dslaffs[i] == "weariness" and (not table.contains(target.afflictions, "weariness")) then
			targAffAdd("weariness")
		elseif dslaffs[i] == "numbness" and (not table.contains(target.afflictions, "numbness")) then
			targAffAdd("numbness")
		elseif dslaffs[i] == "deaf" and (not table.contains(target.afflictions, "deaf")) then
			targAffAdd("deaf")
		elseif dslaffs[i] == "sensitivity" and (not table.contains(target.afflictions, "sensitivity")) then
			targAffAdd("sensitivity")
		elseif dslaffs[i] == "sunallergy" and (not table.contains(target.afflictions, "sunallergy")) then
			targAffAdd("sunallergy")
		elseif dslaffs[i] == "nausea" and (not table.contains(target.afflictions, "nausea")) then
			targAffAdd("nausea")
		elseif dslaffs[i] == "asthma" and (not table.contains(target.afflictions, "asthma")) then
			targAffAdd("asthma")
		elseif dslaffs[i] == "slickness" and (not table.contains(target.afflictions, "slickness")) then
			targAffAdd("slickness")
		elseif dslaffs[i] == "anorexia" and (not table.contains(target.mentalaffs, "anorexia")) then
			targMaffAdd("anorexia")
		elseif dslaffs[i] == "slowherbs" and (not table.contains(target.afflictions, "slowherbs")) then
			targAffAdd("slowherbs")
		elseif dslaffs[i] == "slowelixir" and (not table.contains(target.afflictions, "slowelixir")) then
			targAffAdd("slowelixir")
		elseif dslaffs[i] == "stupidity" and (not table.contains(target.mentalaffs, "stupidity")) then
			targMaffAdd("stupidity")
		elseif dslaffs[i] == "disloyalty" and (not table.contains(target.mentalaffs, "disloyalty")) then
			targMaffAdd("disloyalty")
		elseif dslaffs[i] == "epilepsy" and (not table.contains(target.mentalaffs, "epilepsy")) then
			targMaffAdd("epilepsy")
		elseif dslaffs[i] == "slow balance" and (not table.contains(target.afflictions, "slow balance")) then
			targAffAdd("slow balance")
		elseif dslaffs[i] == "slow equilibrium" and (not table.contains(target.afflictions, "slow equilibrium")) then
			targAffAdd("slow equilibrium")
		elseif dslaffs[i] == "sleep" and (not table.contains(target.afflictions, "sleep")) then
			targAffAdd("sleep")
		elseif dslaffs[i] == "metrazol" and (not table.contains(target.afflictions, "metrazol")) then
			targAffAdd("metrazol")
		elseif dslaffs[i] == "recklessness" and (not table.contains(target.mentalaffs, "recklessness")) then
			targMaffAdd("recklessness")
		end
	end
	for i=2, #dslaffs do
		if dslaffs[i] == "crippled left arm" and (not table.contains(target.afflictions, "crippled left arm")) then
			targAffAdd("crippled left arm")
		elseif dslaffs[i] == "crippled right arme" and (not table.contains(target.afflictions, "crippled right arm")) then
			targAffAdd("crippled right arm")
		elseif dslaffs[i] == "crippled left leg" and (not table.contains(target.afflictions, "crippled left leg")) then
			targAffAdd("crippled left leg")
		elseif dslaffs[i] == "crippled right leg" and (not table.contains(target.afflictions, "crippled right leg")) then
			targAffAdd("crippled right leg")
		elseif dslaffs[i] == "clumsiness" and (not table.contains(target.afflictions, "clumsiness")) then
			targAffAdd("clumsiness")
		elseif dslaffs[i] == "weariness" and (not table.contains(target.afflictions, "weariness")) then
			targAffAdd("weariness")
		elseif dslaffs[i] == "numbness" and (not table.contains(target.afflictions, "numbness")) then
			targAffAdd("numbness")
		elseif dslaffs[i] == "deaf" and (not table.contains(target.afflictions, "deaf")) then
			targAffAdd("deaf")
		elseif dslaffs[i] == "sensitivity" and (not table.contains(target.afflictions, "sensitivity")) then
			targAffAdd("sensitivity")
		elseif dslaffs[i] == "sunallergy" and (not table.contains(target.afflictions, "sunallergy")) then
			targAffAdd("sunallergy")
		elseif dslaffs[i] == "nausea" and (not table.contains(target.afflictions, "nausea")) then
			targAffAdd("nausea")
		elseif dslaffs[i] == "asthma" and (not table.contains(target.afflictions, "asthma")) then
			targAffAdd("asthma")
		elseif dslaffs[i] == "slickness" and (not table.contains(target.afflictions, "slickness")) then
			targAffAdd("slickness")
		elseif dslaffs[i] == "anorexia" and (not table.contains(target.mentalaffs, "anorexia")) then
			targMaffAdd("anorexia")
		elseif dslaffs[i] == "slowherbs" and (not table.contains(target.afflictions, "slowherbs")) then
			targAffAdd("slowherbs")
		elseif dslaffs[i] == "stupidity" and (not table.contains(target.mentalaffs, "stupidity")) then
			targMaffAdd("stupidity")
		elseif dslaffs[i] == "disloyalty" and (not table.contains(target.mentalaffs, "disloyalty")) then
			targMaffAdd("disloyalty")
		elseif dslaffs[i] == "epilepsy" and (not table.contains(target.mentalaffs, "epilepsy")) then
			targMaffAdd("epilepsy")
		elseif dslaffs[i] == "slow balance" and (not table.contains(target.afflictions, "slow balance")) then
			targAffAdd("slow balance")
		elseif dslaffs[i] == "slow equilibrium" and (not table.contains(target.afflictions, "slow equilibrium")) then
			targAffAdd("slow equilibrium")
		elseif dslaffs[i] == "sleep" and (not table.contains(target.afflictions, "sleep")) then
			targAffAdd("sleep")
		elseif dslaffs[i] == "metrazol" and (not table.contains(target.afflictions, "metrazol")) then
			targAffAdd("metrazol")
		elseif dslaffs[i] == "recklessness" and (not table.contains(target.mentalaffs, "recklessness")) then
			targMaffAdd("recklessness")
		end
	end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Stab Function</name>
					<packageName></packageName>
					<script>Toxin.stab.queue = {"ciguatoxin","ditran","hemotoxin","xeroderma","chiltran","narcal","mercury","avidya","calotropis","bromine","aconite","atropine","mazanor","vitriol","chloroform","noctec","mebaral","benzene2","benzedrine2","opium","opium"}


function pickstabtoxin()
	for any, stabtoxin in ipairs (Toxin.stab.queue) do
		if stabtoxin == "ciguatoxin" and not table.contains(target.afflictions, "numbness") and target.tree == true then
			table.insert(toxins, "ciguatoxin")
--		elseif (stabtoxin == "caloslick") and table.contains(target.afflictions, "calotropis") and not table.contains(target.afflictions, "numbness") then
--			table.insert(toxin, "ciguatoxin")
		elseif (stabtoxin == "atropine") and not table.contains(target.mentalaffs, "recklesness") then
			table.insert(toxins, "atropine")
		elseif (stabtoxin == "anoaconite") and not table.contains(target.mentalaffs, "stupidity") then
			table.insert(toxins, "aconite")
		elseif (stabtoxin == "opium") then
			table.insert(toxins, "opium")
			table.insert(toxins, "opium")
		elseif stabtoxin == "metrazol" and not table.contains(target.afflictions, "metrazol") then
			table.insert(toxins, "metrazol")
		elseif stabtoxin == "chiltran" and not table.contains(target.afflictions, "recurring freezing") then
			table.insert(toxins, "chiltran")
		elseif stabtoxin == "ditran" and not table.contains(target.afflictions, "impatience") then
			table.insert(toxins, "ditran")
		elseif stabtoxin == "narcal" and not table.contains(target.afflictions, "addiction") then
			table.insert(toxins, "narcal")
		elseif (stabtoxin == "benzene2") and not table.contains(target.afflictions, "crippled right arm") then
			table.insert(toxins, "benzene")
		elseif (stabtoxin == "benzedrine2") and not table.contains(target.afflictions, "crippled right leg") then
			table.insert(toxins, "benzedrine")
		elseif stabtoxin == "ether" and not table.contains(target.afflictions, "clumsiness") then
			table.insert(toxins, "ether")
		elseif stabtoxin == "arsenic" and not table.contains(target.afflictions, "weariness") then
			table.insert(toxins, "arsenic")
		elseif stabtoxin == "oxalis" and not table.contains(target.afflictions, "deaf") then
			table.insert(toxins, "oxalis")
		elseif stabtoxin == "oxalis" and not table.contains(target.afflictions, "deaf") then
			table.insert(toxins, "oxalis")
		elseif stabtoxin == "strychnine" and not table.contains(target.afflictions, "sensitivity") then
			table.insert(toxins, "strychnine")
		elseif stabtoxin == "xeroderma" and not table.contains(target.afflictions, "sunallergy") then
			table.insert(toxins, "xeroderma")
		elseif stabtoxin == "butolinum" and not table.contains(target.afflictions, "nausea") then
			table.insert(toxins, "nausea")
		elseif stabtoxin == "mercury" and not table.contains(target.afflictions, "asthma") then
			table.insert(toxins, "mercury")
		elseif stabtoxin == "iodine" and not table.contains(target.afflictions, "slickness") then
			table.insert(toxins, "iodine")
		elseif stabtoxin == "bromine" and not table.contains(target.mentalaffs, "anorexia") then
			table.insert(toxins, "bromine")
		elseif stabtoxin == "mazanor" and not table.contains(target.afflictions, "slowherbs") then
			table.insert(toxins, "mazanor")
		elseif stabtoxin == "aconite" and not table.contains(target.mentalaffs, "stupidity") then
			table.insert(toxins, "aconite")
		elseif stabtoxin == "vitriol" and not table.contains(target.mentalaffs, "disloyalty") then
			table.insert(toxins, "vitriol")
		elseif stabtoxin == "chloroform" and not table.contains(target.mentalaffs, "epilepsy") then
			table.insert(toxins, "chloroform")
		elseif stabtoxin == "noctec" and not table.contains(target.afflictions, "slow balance") then
			table.insert(toxins, "noctec")
		elseif stabtoxin == "mebaral" and not table.contains(target.afflictions, "slow equilibrium") then
			table.insert(toxins, "mebaral")
		elseif stabtoxin == "hemotoxin" and not table.contains(target.afflictions, "hemotoxin") then
			table.insert(toxins, "hemotoxin")
		elseif stabtoxin == "butisol" and not table.contains(target.afflictions, "butisol") then
			table.insert(toxins, "butisol")
		elseif stabtoxin == "calotropis" and not table.contains(target.afflictions, "calotropis") then
			table.insert(toxins, "calotropis")
		end
	end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Iniar's Doblinker</name>
					<packageName></packageName>
					<script>function doblink( room, color, duration )
	local colorn, durationn
	local r,g,b,br,bg,bb
	room = tonumber(room)
	if type(color) == "table" then
		r,g,b,br,bg,bb = unpack(color)
	end
	if not color then
		r,g,b,br,bg,bb = 220,0,0,255,186,23
	end
	if not duration then durationn = 5 else durationn = duration end

	highlightRoom(room,r,g,b,br,bg,bb,1,255,255)
	for i=0.5, durationn do
		tempTimer( i, function() highlightRoom( room, r,g,b,br,bg,bb, 1, 255, 255 ) end )
		tempTimer( i+0.5, function() unHighlightRoom( room ) end )
	end
	tempTimer( durationn + 1, function() unHighlightRoom( room ) end )
end</script>
					<eventHandlerList />
				</Script>
				<ScriptGroup isActive="no" isFolder="yes">
					<name>Defiler</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="no" isFolder="no">
						<name>Please Read Me First</name>
						<packageName></packageName>
						<script>--Notes:

--Variables 'target.name', 'target.shield', 'target.afflictions' are used
--Affliction 'dryblood' is checked against 'target.afflictions'
--Function 'defiler_eight()' has a hp section

--Addendum:
--Please check Trigger: Defiler -&gt; cycle+
--Please check Trigger: Defiler -&gt; Desecration -&gt; Blood -&gt; vials
--Please check Trigger: Defiler -&gt; Desecration -&gt; implant-
--Please test Trigger: Defiler -&gt; Shadowbinding -&gt; shadowgem
--Please check values of Trigger: Defiler -&gt; Shadowbinding -&gt; apparition+
--Please assign code Trigger: Defiler -&gt; Shadowbinding -&gt; juxtaposition-
--Please define or reassign Variable: limb_target in 'defiler_two' and 'defiler_four'
--Please check game function of '^A look of pain crosses (\w+)'s tormented face\.'
--Used Alias -&gt; expandAlias("t "..matches[2]) -&gt; Check Trigger: Defiler -&gt; Desecration -&gt; treant attack+
--Please assign own ringtell code: Trigger: Defiler -&gt; Desecration -&gt; hearken
--Please check game function of relapsing Ash/Willow
--Please check game function of Trigger: Defiler -&gt; Desecration -&gt; Splinter -&gt; whirl
--Please ensure the Variable: 'blood' does not have any conflicts, it is used in Alias: Defiler -&gt; Desecration -&gt; Blood -&gt; 'bv'
--Please fix Alias: Defiler -&gt; Shadowbinding -&gt; 'jx' to suspend the system</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>[d] utility</name>
						<packageName></packageName>
						<script>toxin_affliction = {
	aconite = "stupidity",
	arsenic = "weariness",
	atropine = "recklessness",
	avidya = "ignorance",
	benzene = "crippled left arm",
	benzene2 = "crippled right arm",
	benzedrine = "crippled left leg",
	benzedrine2 = "crippled right leg",
	botulinum = "nausea",
	bromine = "anorexia",
	butisol = "butisol",
	calotropis = "calotropis",
	ciguatoxin = "numbness",
	cyanide = "cyanide",
	digitalis = "shyness",
	ether = "clumsiness",
	hemotoxin = "hemotoxin",
	iodine = "slickness",
	ketamine = "withered throat",
	lindane = "dizziness",
	luminal = "slowelixir",
	mazanor = "slowherbs",
	mebaral = "slow equilibrium",
	mercury = "asthma",
	metrazol = "metrazol",
	noctec = "slow balance",
	strychnine = "sensitivity",
	vitriol = "disloyalty",
	xeroderma = "sunallergy",
}

function reverse_lookup( arg, arg2 ) --&gt;
	for k, v in pairs( arg2	) do
		if v == arg then return tostring(k) end
	end
	return arg
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>[d] misc</name>
						<packageName></packageName>
						<script>separator = "::"

whirl = whirl or 1
whirl_timer = whirl_timer or ""
hound = 181341
treant = 184732
flail = 228982
seeds = seeds or 0
shroud = shroud or "bile"
thornroot = thornroot or {}

thornroot.on = thornroot.on or 0
thornroot.tick = thornroot.tick or 0
thornroot.timer = thornroot.timer or 0
thornroot.time = thornroot.time or 0

thornroot.show_timer = thornroot.show_timer or true

defiler_blood = {
	93648,
}

treant_attacking = treant_attacking or ""

splintered = splintered or {
	beech = false,
	birch = false,
	blackthorn = false,
	elder = false,
	hazel = false,
	honeysuckle = false,
	hawthorn = false,
	willow = false,
}

splintered_timers = splintered_timers or {
	beech = 0,
	birch = 0,
	blackthorn = 0,
	elder = 0,
	hazel = 0,
	honeysuckle = 0,
	hawthorn = 0,
	willow = 0,
}

defiler_toxins = {
	"sunallergy",
	"nausea",
	"numbness",
	"metrazol",
	"hemotoxin",
}

entropysunallergy = entropysunallergy or false
entropynausea = entropynausea or false
entropynumbness = entropynumbness or false
entropyhemotoxin = entropyhemotoxin or false
entropymetrazol = entropymetrazol or false
entropybutisol = entropybutisol or false
entropysensitivity = entropysensitivity or false
entropyasthma = entropyasthma or false
entropyclumsiness = entropyclumsiness or false
entropyslickness = entropyslickness or false
entropycalotropis = entropycalotropis or false
entropyanorexia = entropyanorexia or false
entropystupidity = entropystupidity or false
entropyrecklessness = entropyrecklessness or false


apparition = apparition or {
	timer = "",
	room = "",
	vnum = "",
}

defiler_count = defiler_count or 1
defiler_max = defiler_max or 5

--&lt;stat name="apparition" priority="237730"&gt;
--&lt;value&gt;%if(@apparition,{[ apparition : @apparition.room (@apparition.vnum) - @apparition.time ]})&lt;/value&gt;
--&lt;/stat&gt;

-- &lt;var name="relapsing" type="Record" usedef="true"&gt;
-- &lt;value&gt;five|ten&lt;/value&gt;
-- &lt;json&gt;{"ten":"","five":""}&lt;/json&gt;
-- &lt;default&gt;five=""|ten=""&lt;/default&gt;
-- &lt;/var&gt;</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>defiler_choose_toxin</name>
						<packageName></packageName>
						<script>
function defiler_choose_toxin( clist )
	local toxin = ""
	local tablen = {}

	if clist then tablen = clist else tablen = defiler_toxins end

	for i=1, #tablen do
		if not table.contains( target.afflictions, tablen[i] ) then
			toxin = tablen[i]
			break
		end
	end

	toxin = reverse_lookup( toxin, toxin_affliction ) or toxin

	return toxin
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>defiler_two</name>
						<packageName></packageName>
						<script>
function defiler_two()
	local str = ""
	local p, r, a = "", "", "treant shred target"
	local toxin = defiler_choose_toxin()
	local count = defiler_count
	dslaffs = {}

	if table.contains( target.afflictions, "addiction" ) then a = "torment target with haemophilia" end
	if table.contains( target.afflictions, "haemophilia" ) then a = "treant rigidity target" end
	if table.contains( target.afflictions, "rigidity" ) then a = "treant intoxicate target" end
	if table.contains( target.afflictions, "dryblood" ) then a = "torment target with hallucinations" end
	if table.contains( target.afflictions, "hallucinations" ) then a = "treant shred target" end

	toxin = "hemotoxin"
	if not table.contains( target.mentalaffs, "recklessness" ) and entropyrecklessness == false then toxin = "atropine" end
	if not table.contains( target.mentalaffs, "stupidity" ) and entropystupidity == false then toxin = "aconite" end
	if not table.contains( target.mentalaffs, "anorexia" ) and entropyanorexia == false then toxin = "bromine" end
	if not table.contains( target.afflictions, "calotropis" ) and entropycalotropis == false then toxin = "calotropis" end
	if not table.contains( target.afflictions, "slickness" ) and entropyslickness == false then toxin = "iodine" end
	if not table.contains( target.afflictions, "deaf" ) and entropysensitivity == false then toxin = "strychnine" end
	if not table.contains( target.afflictions, "metrazol" ) and entropymetrazol == false then toxin = "metrazol" end
	if not table.contains( target.afflictions, "asthma" ) and entropyasthma == false then toxin = "mercury" end
	if not table.contains( target.afflictions, "butisol" ) and entropybutisol == false then toxin = "butisol" end
	if not table.contains( target.afflictions, "nausea" ) and entropynausea == false then toxin = "botulinum" end
	if not table.contains( target.afflictions, "sunallergy" ) and entropysunallergy == false then toxin = "xeroderma" end
	if not table.contains( target.afflictions, "numbness" ) and entropynumbness == false then toxin = "ciguatoxin" end
	if not table.contains( target.afflictions, "hemotoxin" ) and entropyhemotoxin == false then toxin = "hemotoxin" end
	if table.contains( target.afflictions, "deaf" ) and entropysensitivity == false then toxin = "strychnine" end
	

	if target.shield or target.aura then -- or rebounding soon
		r = "devastate "
	else
		r = "ravage "
	end
	
	-- please fix targetting
	-- if limb_target then
		-- str = str.."target "..limb_target..separator
	-- end

	if Wielded[1] ~= "flail" then
	str = str.."quickdraw "..flail.." shield"..separator
	end

	if treant_attacking == "" then
		str = str.."order treant kill target"..separator
	end
	str = str..r.."target "..toxin
	if thornroot.on == 0 then
		str = str.." with thornroot"
	end
	str = str..separator

	str = str..a

	str = str:gsub("target", target.name)
	send(str)
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>defiler_three</name>
						<packageName></packageName>
						<script>
function defiler_three()
	local str = ""
	local toxin = defiler_choose_toxin()
	local s, b, r, w, sa = "", "", "", "", {}
	dslaffs = {}

	if not target.shield then
		if hawthorn == splintered then table.insert(sa, "treant germinate target hawthorn"..separator) end
		if birch == splintered then table.insert(sa, "treant germinate target birch"..separator) end
		if elder == splintered then table.insert(sa, "treant germinate target elder"..separator) end
	end

	for k, v in pairs( seeds ) do
		if not target.shield and not splintered == birch then
			w = "whirl branch at target birch"..separator
			w = w.."treant germinate target birch"..separator
		end
	end
	-- or if not table.contains( seeds, "birch" )
	if currentmana and maxmana and currentmana / maxmana &lt; 0.3 then
		s = 1
	else
		s = 0
		if not target.shield then
		if blackthorn == splintered then
			b = 1
			if whirl == 1 then
				w = "whirl branch at target elder"..separator
				w = w.."treant germinate target elder"..separator
			end
		else
			if whirl == 1 then
				w = "whirl branch at target blackthorn"..separator
			end
			b = 1
		end
		end
	end

	if target.shield or target.aura then -- or rebounding soon
		r = "devastate "
	else
		r = "ravage "
	end

	-- Start Compiling

	if #sa &gt; 0 then
		for i=1, #sa do
			str = str..sa[i]
		end
	end

	if w ~= "" then
		str = str..w
	end

	if b == 1 then
		str = str.."treant empower target blackthorn"..separator
	end

	if treant_attacking == "" then
		str = str.."order treant kill target"..separator
	end
	str = str..r.."target "..toxin
	if thornroot.on == 0 then
		str = str.." with thornroot"
	end
	str = str..separator

	str = str.."treant bellow target"..separator

	if s == 1 then
		str = str.."treant trip target"
	else
		str = str.."treant shred target"
	end

	str = str:gsub("target", target.name)
	send(str)
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>defiler_four</name>
						<packageName></packageName>
						<script>function defiler_four()
	local str = ""
	local toxin = defiler_choose_toxin()
	local count = defiler_count
	local a, p, r, s = "", "", "", ""
	dslaffs = {}

	if defiler_count == 1 then
		a = "treant intoxicate target"..separator
		if splintered["birch"] then
			p = "treant germinate target birch"..separator
		elseif whirl == 1 then
			p = "whirl branch at target birch"..separator
			p = p.."treant germinate target birch"..separator
		end
	elseif defiler_count == 2 then
		a = "torment target with haemophilia"..separator
		if splintered["elder"] then
			p = "treant empower target elder"..separator
		elseif whirl == 1 then
			p = "whirl branch at target elder"..separator
			p = p.."treant empower target elder"..separator
		end
	elseif defiler_count == 3 then
		a = "treant rigidity target"..separator
		if splintered["willow"] then
			p = "treant germinate target willow"..separator
		elseif splintered["ash"] then
			p = "treant germinate target ash"..separator
		elseif whirl == 1 then
			p = "whirl branch at target ash"..separator
			p = p.."treant germinate target ash"..separator
		end
	elseif defiler_count == 4 then
		a = "treant rigidity target"..separator
	elseif defiler_count == 5 then
		a = "treant shred target"..separator
		if splintered["willow"] then
			p = "treant germinate target willow"..separator
		elseif splintered["ash"] then
			p = "treant germinate target ash"..separator
		elseif whirl == 1 then
			p = "whirl branch at target ash"..separator
			p = p.."treant germinate target ash"..separator
		end
	end

	if whirl == 1 and not string.match(p, "whirl") and not splintered["birch"] then
		p = p.."whirl branch at target birch"..separator
		p = p.."treant germinate target birch"..separator
	end

	if target.shield then
		p = ""
	end

	if target.shield or target.aura then -- or rebounding soon
		r = "devastate "
	else
		r = "ravage "
	end

	-- Start Compiling

	if limb_target then
		str = str.."target "..limb_target..separator
	end
	str = str.."wield "..flail..separator

	if treant_attacking == "" then
		str = str.."order treant kill target"..separator
	end

	str = str..p..separator

	str = str..r.."target "..toxin
	if thornroot.on == 0 then
		str = str.." with thornroot"
	end
	str = str..separator

	str = str..a

	str = str:gsub("target", target.name)
	send(str)
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>defiler_eight</name>
						<packageName></packageName>
						<script>
function defiler_eight()
	local str = ""
	local toxin = defiler_choose_toxin()
	local s, b, r, w, sa = "","","","",{}
	dslaffs = {}

	if target.shield or target.aura then -- or rebounding soon
		defiler_two()
	else

	toxin = "hemotoxin"
	if not table.contains( target.mentalaffs, "recklessness" ) and entropyrecklessness == false then toxin = "atropine" end
	if not table.contains( target.mentalaffs, "stupidity" ) and entropystupidity == false then toxin = "aconite" end
	if not table.contains( target.mentalaffs, "anorexia" ) and entropyanorexia == false then toxin = "bromine" end
	if not table.contains( target.afflictions, "calotropis" ) and entropycalotropis == false then toxin = "calotropis" end
	if not table.contains( target.afflictions, "slickness" ) and entropyslickness == false then toxin = "iodine" end
	if not table.contains( target.afflictions, "deaf" ) and entropysensitivity == false then toxin = "strychnine" end
	if not table.contains( target.afflictions, "metrazol" ) and entropymetrazol == false then toxin = "metrazol" end
	if not table.contains( target.afflictions, "asthma" ) and entropyasthma == false then toxin = "mercury" end
	if not table.contains( target.afflictions, "butisol" ) and entropybutisol == false then toxin = "butisol" end
	if not table.contains( target.afflictions, "nausea" ) and entropynausea == false then toxin = "botulinum" end
	if not table.contains( target.afflictions, "sunallergy" ) and entropysunallergy == false then toxin = "xeroderma" end
	if not table.contains( target.afflictions, "numbness" ) and entropynumbness == false then toxin = "ciguatoxin" end
	if not table.contains( target.afflictions, "hemotoxin" ) and entropyhemotoxin == false then toxin = "hemotoxin" end
	if table.contains( target.afflictions, "deaf" ) and entropysensitivity == false then toxin = "strychnine" end

	if splintered["hawthorn"] then table.insert(sa, "treant germinate target hawthorn"..separator) end
	if splintered["birch"] then table.insert(sa, "treant germinate target birch"..separator) end
	if splintered["elder"] then table.insert(sa, "treant germinate target elder"..separator) end

	if seeds == 0 then
		if not splintered["birch"] then
			w = "whirl branch at target birch"..separator
			w = w.."treant germinate target birch"..separator
		end
	end
	-- or if not table.contains( seeds, "birch" )

	if hp and mhp and hp / mhp &lt; 0.3 then
		s = 1
	else
		s = 0
		if splintered["blackthorn"] then
			b = 1
			if whirl == 1 then
				w = "whirl branch at target elder"..separator
				w = w.."treant germinate target elder"..separator
			end
		else
			if whirl == 1 then
				w = "whirl branch at target blackthorn"..separator
			end
			b = 1
		end
	end

	if target.shield or target.aura then -- or rebounding soon
		r = "devastate "
	else
		r = "ravage "
	end

	-- Start Compiling

	if treant_attacking == "" then
		str = str.."order treant kill target"..separator
	end

	if #sa &gt; 0 then
		for i=1, #sa do
			str = str..sa[i]
		end
	end
	if w ~= "" then
		str = str..w
	end
	if b == 1 then
		str = str.."treant empower target blackthorn"..separator
	end

	str = str..r.."target "..toxin
	if thornroot.on == 0 then
		str = str.." with thornroot"
	end
	str = str..separator

	str = str.."treant bellow target"..separator
	if s == 1 then
		str = str.."treant trip target"
	else
		str = str.."treant shred target"
	end

	str = str:gsub("target", target.name)
	send(str)
	end
	end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>defiler miscellaneous</name>
						<packageName></packageName>
						<script>function defiler_control()
	local toxin = defiler_choose_toxin()
	local r = ""

	if target.shield or target.aura then
		r = "devastate "
	else
		r = "ravage "
	end
	send(r..target.name.." "..toxin..separator.."treant trip "..target.name)
end

function defiler_rigidity()
	local toxin = defiler_choose_toxin()
	local str = ""
	local r = ""

	if target.shield or target.aura then
		r = "devastate "
	else
		r = "ravage "
	end

	str = str..r.."target "..toxin
	if thornroot.on == 0 then
		str = str.." with thornroot"
	end
	str = str..separator

	if not table.contains( target.afflictions, "rigidity" ) then 
		str = str.."treant rigidity target"..separator
	else
		str = str.."treant trip target"..separator
	end

	str = str:gsub("target", target.name)
	send(str)
end

function defiler_restoration()
	local str =""
	local r = ""

	if target.shield or target.aura then
		r = "devastate "
	else
		r = "ravage "
	end
	
	str = r.."target butisol"
	if thornroot.on == 0 then
		str = str.." with thornroot"
	end
	str = str..separator

	str = str.."shadowbind target with augury of applying restoration to back"

	str = str:gsub("target", target.name)
	send(str)
end

function defiler_sleep()
	local str =""
	local r = ""
	dslaffs = {}

	if target.shield or target.aura then
		r = "devastate "
	else
		r = "ravage "
	end
	
	str = r.."target opium"..separator
	str = str.."shadowbind target with sleep"

	str = str:gsub("target", target.name)
	send(str)
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>Reference</name>
						<packageName></packageName>
						<script>&lt;?xml version="1.0" encoding="ISO-8859-1" ?&gt;
&lt;cmud&gt;
  &lt;class name="Defiler"&gt;
    &lt;alias name="ab1"&gt;
      &lt;value&gt;ab torment %if(%1,%1,full)&lt;/value&gt;
    &lt;/alias&gt;
    &lt;alias name="ab2"&gt;
      &lt;value&gt;ab shadowbinding %if(%1,%1,full)&lt;/value&gt;
    &lt;/alias&gt;
    &lt;alias name="ab3"&gt;
      &lt;value&gt;ab desecration %if(%1,%1,full)&lt;/value&gt;
    &lt;/alias&gt;
    &lt;macro key="F5"&gt;
      &lt;value&gt;eb touch shield
bash=0
autobash=0
bashing.auto=0
#T- "Autobash Toggle"&lt;/value&gt;
    &lt;/macro&gt;
    &lt;class name="Torment"&gt;
      &lt;alias name="ravage"&gt;
        &lt;value&gt;$s=0
#if (@shields() || @rebound_soon()) {$s=1}
@wield(flail)%if(@to_target,{target @to_target@separator})%if($s,devastate,ravage) @tar %-1&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="ts"&gt;
        &lt;value&gt;eb torment @weapons.flail with thornsprout&lt;/value&gt;
      &lt;/alias&gt;
      &lt;var name="hound"&gt;162194&lt;/var&gt;
      &lt;trigger name="dash" type="Command Input" priority="71280" trigontrig="false" regex="true"&gt;
        &lt;pattern&gt;^d(.+)$&lt;/pattern&gt;
        &lt;value&gt;#if %regex(%1,"^(n|ne|e|se|s|sw|w|nw|u|d|i|o)$") {
  %if(@defences.mount,{dismount@separator})mount @hound@{separator}order loyals follow me@{separator}dash %1@{separator}dismount@{separator}mount @mount.mount
  direction=@opp(%1)
  defences.block=0
}&lt;/value&gt;
      &lt;/trigger&gt;
      &lt;trigger name="hound+" priority="203100" regex="true"&gt;
        &lt;pattern&gt;^Chanting quietly, you quickly sketch a pentagram on the ground\. Flames leap high as a hideous hound appears in its center, levelling its gaze upon \a+\.&lt;/pattern&gt;
        &lt;value&gt;eb order @hound follow me&lt;/value&gt;
      &lt;/trigger&gt;
      &lt;alias name="sd"&gt;
        &lt;value&gt;eb torment @tar(%1) with shadow&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="htr"&gt;
        &lt;value&gt;@mount(@hound)hound track&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="bs"&gt;
        &lt;value&gt;eb bileshroud %if(%1,off,on)&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="hd"&gt;
        &lt;value&gt;eb torment @tar(%1) with hound&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="sa"&gt;
        &lt;value&gt;eb torment @tar(%1) with arachnids&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="ww"&gt;
        &lt;value&gt;eb torment @tar(%1) with gutwyrm&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="j"&gt;
        &lt;value&gt;#if @tarshield {@wield(flail)devastate @tar mebaral with thornroot@{separator}devastate @tar mebaral} {@sus(behead)@wield(flail)queue eqbal behead @tar}&lt;/value&gt;
      &lt;/alias&gt;
      &lt;class name="Thornroot"&gt;
        &lt;trigger name="thornroot tick" priority="123" regex="true"&gt;
          &lt;pattern&gt;^The thornroot burrows deeper into @tar.*'s body, cutting veins and causing considerable bleeding\.&lt;/pattern&gt;
          &lt;value&gt;#if @tar {
  thornroot.ignore=0
  thornroot.on=1
  thornroot.tick=@thornroot.tick+1
  #sub {%line [%ansi(15)@thornroot.tick%ansi(0)]}
}&lt;/value&gt;
        &lt;/trigger&gt;
        &lt;var name="thornroot" type="Record" usedef="true"&gt;
          &lt;value&gt;on=0|tick=0|timer=0&lt;/value&gt;
          &lt;json&gt;{"on":0,"timer":0,"tick":0}&lt;/json&gt;
          &lt;default&gt;on=0|tick=0&lt;/default&gt;
        &lt;/var&gt;
        &lt;trigger name="root -&amp;gt; seed" priority="123" regex="true"&gt;
          &lt;pattern&gt;^Soaked with \a+ blood, the thornroot in @tar.*'s body withers away and disappears, leaving behind an implanted seed\.&lt;/pattern&gt;
          &lt;value&gt;#if @tar {
  thornroot.on=0
  thornroot.tick=0
  thornroot.timer=0
  #unt root_timer
  seeds=@seeds+1
  #say %ansi(7)Seeds present: %ansi(15)@seeds
}&lt;/value&gt;
        &lt;/trigger&gt;
        &lt;var name="seeds" usedef="true"&gt;
          &lt;value&gt;0&lt;/value&gt;
          &lt;default&gt;0&lt;/default&gt;
        &lt;/var&gt;
        &lt;trigger name="seed-" priority="123" regex="true"&gt;
          &lt;pattern&gt;^A mixture of pain and relief crosses the face of @tar.* as the seed within \a+ finally perishes and withers away, burning \a+ insides\.&lt;/pattern&gt;
          &lt;value&gt;#if @tar {
  seeds=@seeds-1
  #if @seeds&amp;lt;1 {seeds=0}
  #say %ansi(7)Seeds left: %ansi(15)@seeds
  #if !@thornroot.on {
    thornroot.tick=0
    thornroot.timer=0
    #unt root_timer
  }
}&lt;/value&gt;
        &lt;/trigger&gt;
        &lt;trigger name="root explode" priority="205890" regex="true"&gt;
          &lt;pattern&gt;^Horror overcomes @tar.*'s tormented face as the thornroot in \a+ body suddenly explodes in a violent outburst of blood and gore\.&lt;/pattern&gt;
          &lt;value&gt;#if @tar {
  #if !@thornroot.ignore {
    thornroot.on=0
    thornroot.tick=0
    thornroot.timer=0
    #unt root_timer
  }
  thornroot.ignore=0
  #say @echo(13,14," Root Exploded!! ")
}&lt;/value&gt;
        &lt;/trigger&gt;
        &lt;trigger name="seed+" priority="205910" regex="true"&gt;
          &lt;pattern&gt;^A demonic seed is left behind in @tar.*'s body\.$&lt;/pattern&gt;
          &lt;value&gt;#if @tar {
  thornroot.on=0
  thornroot.tick=0
  thornroot.timer=0
  #unt root_timer
  seeds=@seeds+1
  #say %ansi(7)Seeds present: %ansi(15)@seeds
}&lt;/value&gt;
        &lt;/trigger&gt;
        &lt;trigger name="bellow" priority="123" regex="true"&gt;
          &lt;pattern&gt;^At .* order, .* bellows loudly at @tar&lt;/pattern&gt;
          &lt;value&gt;seeds=0&lt;/value&gt;
        &lt;/trigger&gt;
        &lt;trigger name="thorns-" priority="213030" regex="true"&gt;
          &lt;pattern&gt;^There are no more thorns left on the flail\.&lt;/pattern&gt;
          &lt;value&gt;#say @echo(13,14," THORNSPROUT! ")&lt;/value&gt;
        &lt;/trigger&gt;
        &lt;trigger name="root-" priority="214510" regex="true"&gt;
          &lt;pattern&gt;^A look of pain crosses @tar.*'s tormented face\.&lt;/pattern&gt;
          &lt;value&gt;#if @tar {
  thornroot.on=0
  thornroot.tick=0
  thornroot.timer=0
  #unt root_timer
}&lt;/value&gt;
        &lt;/trigger&gt;
        &lt;trigger name="evolve" priority="217910" regex="true"&gt;
          &lt;pattern&gt;^At your command, .* envelops @tar.* briefly with its tendrils and @tar.* shudders briefly\. .*&lt;/pattern&gt;
          &lt;value&gt;#if @tar {
  seeds=1
  thornroot.on=0
  thornroot.tick=0
  thornroot.timer=0
  #unt root_timer
}&lt;/value&gt;
        &lt;/trigger&gt;
        &lt;trigger name="rebuke" priority="232550" regex="true"&gt;
          &lt;pattern&gt;^You parry the attack and deftly fire a thornroot at @tar.*, which quickly burrows into \a+ flesh\.&lt;/pattern&gt;
          &lt;value&gt;#if @tar {
  thornroot.on=1
  thornroot.timer=0
  thornroot.tick=0
  #alarm root_timer *1 {
    thornroot.timer=@thornroot.timer+1
    #if @thornroot.timer&amp;gt;25 {
      thornroot.timer=0
      thornroot.on=0
      #unt root_timer
    }
  }
}&lt;/value&gt;
        &lt;/trigger&gt;
        &lt;trigger name="thornfire" priority="123" regex="true"&gt;
          &lt;pattern&gt;^You aim with your flail and fire a thornroot towards (\a+)\. It rapidly reaches \a+ and starts burrowing.*&lt;/pattern&gt;
          &lt;value&gt;#if @tar {
  thornroot.on=1
  thornroot.tick=0
  thornroot.timer=0
  #alarm root_timer *1 {
    thornroot.timer=@thornroot.timer+1
    #if @thornroot.timer&amp;gt;25 {
      thornroot.timer=0
      thornroot.on=0
      #unt root_timer
    }
  }
}&lt;/value&gt;
        &lt;/trigger&gt;
        &lt;trigger name="with thornroot" priority="292790" regex="true"&gt;
          &lt;pattern&gt;^A thornroot splits from the flail and starts burrowing into @tar.*'s flesh\.&lt;/pattern&gt;
          &lt;value&gt;#if @tar {
  thornroot.on=1
  thornroot.tick=0
  thornroot.timer=0
  thornroot.ignore=1
  #alarm root_timer *1 {
    thornroot.timer=@thornroot.timer+1
    #if @thornroot.timer&amp;gt;25 {
      thornroot.timer=0
      thornroot.on=0
      #unt root_timer
    }
  }
}&lt;/value&gt;
        &lt;/trigger&gt;
        &lt;trigger name="root- " priority="295800" regex="true"&gt;
          &lt;pattern&gt;^Soaked with \a+ blood, the thornroot in @tar.*'s body withers away and disappears\.&lt;/pattern&gt;
          &lt;value&gt;#if @tar {
  thornroot.on=0
  thornroot.tick=0
  thornroot.timer=0
  #unt root_timer
}&lt;/value&gt;
        &lt;/trigger&gt;
        &lt;trigger name="implant" priority="123" regex="true"&gt;
          &lt;pattern&gt;^[a-z, \-]+ emits a bloodcurdling hollow howl as its tendrils enter @tar.*'s mouth in a sinuous movement and inject a \a+ demonic seed into h.. throat\. The \a+ seeds enroot themselves deep within \a+'s flesh\.&lt;/pattern&gt;
          &lt;value&gt;seeds=@seeds+1&lt;/value&gt;
        &lt;/trigger&gt;
      &lt;/class&gt;
      &lt;trigger name="track+" priority="219950" regex="true"&gt;
        &lt;pattern&gt;^Your hound growls in satisfaction as the black portal grows in size and moves directly into its depths\. A moment later, you find yourself elsewhere, the portal collapsing behind you\.&lt;/pattern&gt;
        &lt;value&gt;@mount(@mount.mount)&lt;/value&gt;
      &lt;/trigger&gt;
      &lt;class name="Unseeneye"&gt;
        &lt;alias name="un"&gt;
          &lt;value&gt;#if %1 {eb torment %1 with the unseen eye} {unseeneye list}&lt;/value&gt;
        &lt;/alias&gt;
        &lt;alias name="ul"&gt;
          &lt;value&gt;#if %1 {eb unseeneye %1 listen %if(%2,off,on)} {unseeneye list}&lt;/value&gt;
        &lt;/alias&gt;
        &lt;alias name="ug"&gt;
          &lt;value&gt;#if %1 {eb unseeneye %1 look} {unseeneye list}&lt;/value&gt;
        &lt;/alias&gt;
        &lt;var name="unseeneye" type="StringList" sorted="1"&gt;
          &lt;value&gt;|Eldreth|Iluv|Kitt|Maglust|Sadey|Sumie|Tristam|Zcephonie&lt;/value&gt;
          &lt;json&gt;["","Eldreth","Iluv","Kitt","Maglust","Sadey","Sumie","Tristam","Zcephonie"]&lt;/json&gt;
        &lt;/var&gt;
        &lt;trigger name="unseeneye list" priority="234160" regex="true"&gt;
          &lt;pattern&gt;^You have tormented the following individuals with the unseen eye\:&lt;/pattern&gt;
          &lt;value&gt;unseeneye=%null
#sub {Unseen eye list:}&lt;/value&gt;
          &lt;trigger param="100" repeat="true" regex="true" prompt="true"&gt;
            &lt;pattern&gt;.*&lt;/pattern&gt;
            &lt;value&gt;#if %regex(%line,@prompt) {#state 0} {
  unseeneye=%subregex(%line,", |\.",|)
  #state 0
}
#gag
#sort unseeneye
#forall @unseeneye {
  #say %ansi(0)%i
}&lt;/value&gt;
          &lt;/trigger&gt;
        &lt;/trigger&gt;
      &lt;/class&gt;
      &lt;var name="shroud"&gt;bile&lt;/var&gt;
      &lt;trigger name="___shroud" priority="123" regex="true"&gt;
        &lt;pattern&gt;^You focus upon your demonic powers and concentrate, and a swirling (\a+)shroud slowly forms around your body, protecting you from harm\.&lt;/pattern&gt;
        &lt;value&gt;shroud=%1&lt;/value&gt;
      &lt;/trigger&gt;
      &lt;trigger name="___shroud-" priority="123" regex="true"&gt;
        &lt;pattern&gt;^You dismiss the swirling \a+shroud and it quickly dissipates\.&lt;/pattern&gt;
        &lt;value&gt;shroud=""&lt;/value&gt;
      &lt;/trigger&gt;
      &lt;trigger name="___shroud explode" priority="123" regex="true"&gt;
        &lt;pattern&gt;^You concentrate and the shroud of \a+ around you suddenly explodes outwards\.&lt;/pattern&gt;
        &lt;value&gt;shroud=""&lt;/value&gt;
      &lt;/trigger&gt;
      &lt;alias name="sh"&gt;
        &lt;value&gt;queue eqbal %switch(%1=f,flame,%1=i,ice,bile)shroud on&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="xx"&gt;
        &lt;value&gt;queue eqbal @{shroud}shroud explode&lt;/value&gt;
      &lt;/alias&gt;
      &lt;trigger name="___shroud up" priority="123" regex="true"&gt;
        &lt;pattern&gt;^Your (\a+)shroud is already on\.&lt;/pattern&gt;
        &lt;value&gt;shroud=%1&lt;/value&gt;
      &lt;/trigger&gt;
    &lt;/class&gt;
    &lt;class name="Desecration"&gt;
      &lt;var name="treant"&gt;156528&lt;/var&gt;
      &lt;alias name="te"&gt;
        &lt;value&gt;#local $a
#if @splintered.hawthorn {
  $a={treant empower @tar hawthorn}
} {
  #if @whirl {
    $a={whirl branch at @tar hawthorn\\treant empower @tar hawthorn}
  }
}
%if($a,{$a\\})queue eqbal treant entangle @tar(%1)&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="hs"&gt;
        &lt;value&gt;eb treant sustain&lt;/value&gt;
      &lt;/alias&gt;
      &lt;trigger name="implant-" priority="209780" regex="true"&gt;
        &lt;pattern&gt;^Your target must be hindered in some way for that to be possible\.&lt;/pattern&gt;
        &lt;value&gt;#sendraw {@sus()}&lt;/value&gt;
      &lt;/trigger&gt;
      &lt;alias name="ti"&gt;
        &lt;value&gt;@sus(implant)queue eqbal treant implant @tar(%1)&lt;/value&gt;
      &lt;/alias&gt;
      &lt;trigger name="implant- " priority="210140" regex="true"&gt;
        &lt;pattern&gt;^@tar.* has writhed free from the tendrils of the treant\.&lt;/pattern&gt;
        &lt;value&gt;#if @beheading=implant {
  #sendraw {@sus()}
}&lt;/value&gt;
      &lt;/trigger&gt;
      &lt;alias name="fu"&gt;
        &lt;value&gt;eb treant woodheart&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="ev"&gt;
        &lt;value&gt;eb treant evolve @tar(%1)&lt;/value&gt;
      &lt;/alias&gt;
      &lt;trigger name="treant attack+" priority="224370" regex="true"&gt;
        &lt;pattern&gt;^You order .*treant.* to attack (\a+)\.\n[a-z ]+ obeys your command\.&lt;/pattern&gt;
        &lt;value&gt;treant_attacking=%1
#if %1!=yourself {tar=%1}&lt;/value&gt;
      &lt;/trigger&gt;
      &lt;var name="treant_attacking" usedef="true"/&gt;
      &lt;trigger name="treant attack-" priority="224390" regex="true"&gt;
        &lt;pattern&gt;^You order .*treant.* to assume a passive stance\.\nWith seeming reluctance, .*treant.* obeys your command\.&lt;/pattern&gt;
        &lt;value&gt;treant_attacking=""&lt;/value&gt;
      &lt;/trigger&gt;
      &lt;class name="Blood"&gt;
        &lt;alias name="bv"&gt;
          &lt;value&gt;eb spatter blackvines from @blood(5)&lt;/value&gt;
        &lt;/alias&gt;
        &lt;alias name="wpl"&gt;
          &lt;value&gt;eb spatter whirlpool from @blood(5)&lt;/value&gt;
        &lt;/alias&gt;
        &lt;alias name="temp"&gt;
          &lt;value&gt;eb spatter tempest from @blood(20)&lt;/value&gt;
        &lt;/alias&gt;
        &lt;alias name="rain"&gt;
          &lt;value&gt;eb spatter bloodrain from @blood(10) %1&lt;/value&gt;
        &lt;/alias&gt;
        &lt;alias name="hbl"&gt;
          &lt;value&gt;eb spatter heartblood from @blood(50) %if(%1,%1,ciguatoxin)&lt;/value&gt;
        &lt;/alias&gt;
        &lt;trigger name="blood" priority="235910" regex="true"&gt;
          &lt;pattern&gt;^vial(\d+)\s+tainted blood\s+(\d+)&lt;/pattern&gt;
          &lt;value&gt;#addk blood %1 %2&lt;/value&gt;
        &lt;/trigger&gt;
        &lt;var name="blood" type="Record"&gt;
          &lt;value&gt;249942=50|249709=50|14961=50|11793=50|235645=50|234792=50|226643=50|224328=50|154609=50|141261=50|133269=50|107003=50|105524=50|68028=50|9774=50|7621=50|6267=50|31458=50&lt;/value&gt;
          &lt;json&gt;{"249942":50,"249709":50,"14961":50,"11793":50,"235645":50,"234792":50,"226643":50,"224328":50,"154609":50,"141261":50,"133269":50,"107003":50,"105524":50,"68028":50,"9774":50,"7621":50,"6267":50,"31458":50}&lt;/json&gt;
        &lt;/var&gt;
        &lt;func name="blood"&gt;
          &lt;value&gt;$u=%1
#loopdb @blood {
  #if @blood.%key&amp;gt;=$u {
    #return {%key}
    #break
  }
}&lt;/value&gt;
        &lt;/func&gt;
        &lt;alias name="blood"&gt;
          &lt;value&gt;blood=%null
elixlist blood&lt;/value&gt;
        &lt;/alias&gt;
        &lt;alias name="reblood"&gt;
          &lt;value&gt;empty %1@{separator}leech blood into %1&lt;/value&gt;
        &lt;/alias&gt;
      &lt;/class&gt;
      &lt;trigger name="hearken" priority="236120" regex="true"&gt;
        &lt;pattern&gt;^Your treant notifies you that (\a+) has (\a+) the room\.&lt;/pattern&gt;
        &lt;value&gt;;#if (@broadcast &amp;amp;&amp;amp; !@isally(%1)) {#additem movement %1_%2}
#sub {%ansi(8)Hearken - %ansi(7)%proper(%2)%ansi(7): %ansi(15)%1}&lt;/value&gt;
      &lt;/trigger&gt;
      &lt;class name="Splinter"&gt;
        &lt;var name="splintered" type="Record" usedef="true"&gt;
          &lt;value&gt;beech=0|birch=0|blackthorn=0|elder=0|hazel=0|honeysuckle=0|hawthorn=0|willow=0&lt;/value&gt;
          &lt;json&gt;{"blackthorn":0,"hawthorn":0,"honeysuckle":0,"hazel":0,"elder":0,"willow":0,"birch":0,"beech":0}&lt;/json&gt;
          &lt;default&gt;beech=0|birch=0|blackthorn=0|elder=0|hazel=0|honeysuckle=0|hawthorn=0|willow=0&lt;/default&gt;
        &lt;/var&gt;
        &lt;trigger name="splinter" priority="123" regex="true"&gt;
          &lt;pattern&gt;^At .* command, .* swings a branch rapidly at @tar.*\. Upon impact, the branch splinters, releasing a small (\a+) seed that burrows into \a+ skin and drains a portion of the energy stored within the burrowing thornroot\.&lt;/pattern&gt;
          &lt;value&gt;#if @tar {
  $s=%1
  splintered.$s=30
  #alarm splinter_$s *1 {
    #addk splintered $s (@{splintered.$s}-1)
    #if @splintered.$s&amp;lt;1 {
      #addk splintered $s 1
      #unt splinter_$s
    }
  }
}&lt;/value&gt;
        &lt;/trigger&gt;
        &lt;trigger name="splinter-" priority="500000" regex="true"&gt;
          &lt;pattern&gt;^The splintered (\a+) seed in @tar.*'s body has withered away\.&lt;/pattern&gt;
          &lt;value&gt;#unt splinter_%1
splintered.%1=0&lt;/value&gt;
        &lt;/trigger&gt;
        &lt;alias name="sp"&gt;
          &lt;value&gt;$a={treant shred @tar}
#if @afflicted.addiction {$a={treant intoxicate @tar}}
#if @afflicted.dryblood {$a={torment @tar with haemophilia}}
#if @afflicted.haemophilia {$a={treant rigidity @tar}}
#if @afflicted.rigidity {$a={torment @tar with hallucinations}}
#if @afflicted.hallucinations {$a={treant shred @tar}}
#local $s $w
#if %1 {
  #switch %1
    (b) {$s=birch}
    (l) {$s=blackthorn}
    (e) {$s=elder}
    (h) {$s=hawthorn}
    (a) {$s=ash}
    (w) {$s=willow}
    (y) {$s=honeysuckle}
    (e) {$s=beech}
}
#if !$s {
  #forall {birch|blackthorn|elder|hawthorn|honeysuckle|beech|ash|willow} {
    #if !@splintered.%i {
      $s=%i
      #break
    }
  }
}
$t=@pick(t,defilerQ)
#local $r
#if (@shields() || @rebound_soon()) {$r=devastate} {$r=ravage}
%if(@to_target,{target @to_target@{separator}})@wield(flail)%if(!@treant_attacking,%exec(fk)@separator)$r @tar $t %if(!@thornroot.on,{ with thornroot@{separator}$r @tar $t})@{separator}treant splinter @tar $s\\$a&lt;/value&gt;
        &lt;/alias&gt;
        &lt;trigger name="empower" priority="123" regex="true"&gt;
          &lt;pattern&gt;^At .* command, .* cuts @tar.* lightly, releasing a small shockwave that causes the (\a+) seed in \a+ body to start stirring\.&lt;/pattern&gt;
          &lt;value&gt;#unt splinter_%1
splintered.%1=0&lt;/value&gt;
        &lt;/trigger&gt;
        &lt;trigger name="germinate" priority="123" regex="true"&gt;
          &lt;pattern&gt;^Following .* command, .* releases a strangely smelling substance that seems into @tar.*'s pores\. The (\a+) seed inside \a+ suddenly erupts into life before withering away\.&lt;/pattern&gt;
          &lt;value&gt;#unt splinter_%1
splintered.%1=0
#if %1=willow {relapsing.ten=check}
#if %1=ash {relapsing.five=check}&lt;/value&gt;
        &lt;/trigger&gt;
        &lt;class name="Relapse Checks"&gt;
          &lt;var name="relapsing" type="Record" usedef="true"&gt;
            &lt;value&gt;five|ten&lt;/value&gt;
            &lt;json&gt;{"ten":"","five":""}&lt;/json&gt;
            &lt;default&gt;five=""|ten=""&lt;/default&gt;
          &lt;/var&gt;
          &lt;trigger name="haemophilia" priority="123" regex="true"&gt;
            &lt;pattern&gt;^You close your eyes and focus on thinning @tar.*'s blood. For a moment nothing happens, then an uncomfortable look crosses the face of @tar.* and s?he is briefly surrounded by a red nimbus\.&lt;/pattern&gt;
            &lt;value&gt;#if @relapsing.ten=check {relapsing.ten=haemophilia} {
  #if @relapsing.five=check {relapsing.five=haemophilia}
}&lt;/value&gt;
          &lt;/trigger&gt;
          &lt;trigger name="hallucinations" priority="123" regex="true"&gt;
            &lt;pattern&gt;^You whisper words of madness into @tar.*'s ears and watch with satisfaction as h\a+ eyes open wide upon seeing something that isn't there\.&lt;/pattern&gt;
            &lt;value&gt;#if @relapsing.ten=check {relapsing.ten=hallucinations} {
  #if @relapsing.five=check {relapsing.five=hallucinations}
}&lt;/value&gt;
          &lt;/trigger&gt;
        &lt;/class&gt;
        &lt;alias name="spw"&gt;
          &lt;value&gt;$a={treant shred @tar}
#if @afflicted.addiction {$a={treant intoxicate @tar}}
#if @afflicted.dryblood {$a={torment @tar with haemophilia}}
#if @afflicted.haemophilia {$a={treant rigidity @tar}}
#if @afflicted.rigidity {$a={torment @tar with hallucinations}}
#if @afflicted.hallucinations {$a={treant shred @tar}}
#local $s $w
#if %1 {
  #switch %1
    (b) {$s=birch}
    (l) {$s=blackthorn}
    (e) {$s=elder}
    (h) {$s=hawthorn}
    (a) {$s=ash}
    (w) {$s=willow}
    (y) {$s=honeysuckle}
    (e) {$s=beech}
}
#if !$s {
  #forall {birch|blackthorn|elder|hawthorn|honeysuckle|beech|ash|willow} {
    #if !@splintered.%i {
      $s=%i
      #break
    }
  }
  #forall {birch|blackthorn|elder|hawthorn|honeysuckle|beech|ash|willow} {
    #if (!@splintered.%i &amp;amp;&amp;amp; $s!=%i) {
      $w=%i
      #break
    }
  }
}
$t=@pick(t,defilerQ)
#local $r
#if (@shields() || @rebound_soon()) {$r=devastate} {$r=ravage}
%if(@to_target,{target @to_target@{separator}})@wield(flail)%if(!@treant_attacking,%exec(fk)@separator)$r @tar $t %if(!@thornroot.on,{ with thornroot@{separator}$r @tar $t})@{separator}treant splinter @tar $s\\%if($w,{whirl branch at @tar $w\\})$a&lt;/value&gt;
        &lt;/alias&gt;
        &lt;trigger name="whirl" priority="295630" regex="true"&gt;
          &lt;pattern&gt;^You whirl your arm stump mightily towards @tar.*, releasing a spore of the (\a+) tree that swiftly burrows into \a+ skin\.&lt;/pattern&gt;
          &lt;value&gt;whirl=0
$s=%1
splintered.$s=30
#alarm splinter_$s *1 {
  #addk splintered $s (@{splintered.$s}-1)
  #if @splintered.$s&amp;lt;1 {
    #addk splintered $s 1
    #unt splinter_$s
  }
}
whirl_timer=15
#alarm whirl_reset *1 {
  whirl_timer=@{whirl_timer}-1
  #if @whirl_timer&amp;lt;1 {
    #unvar whirl_timer
    #unt whirl_reset
  }
}&lt;/value&gt;
        &lt;/trigger&gt;
        &lt;trigger name="whirl+" priority="295610" regex="true"&gt;
          &lt;pattern&gt;^You are again able to whirl your arm stump\.&lt;/pattern&gt;
          &lt;value&gt;whirl=1&lt;/value&gt;
        &lt;/trigger&gt;
        &lt;trigger name="whirl-" priority="295650" regex="true"&gt;
          &lt;pattern&gt;^You are not able to whirl your arm stump again so soon\.&lt;/pattern&gt;
          &lt;value&gt;whirl=0&lt;/value&gt;
        &lt;/trigger&gt;
        &lt;trigger name="whirl 3rd" priority="123" regex="true"&gt;
          &lt;pattern&gt;^\a+ whirls? \a+ arm stump mightily towards @tar.*, releasing a spore of the (\a+) tree that swiftly burrows into \a+ skin\.&lt;/pattern&gt;
          &lt;value&gt;#if @tar {
  $s=%1
  splintered.$s=30
  #alarm splinter_$s *1 {
    #addk splintered $s (@{splintered.$s}-1)
    #if @splintered.$s&amp;lt;1 {
      #addk splintered $s 1
      #unt splinter_$s
    }
  }
}&lt;/value&gt;
        &lt;/trigger&gt;
        &lt;var name="whirl"&gt;1&lt;/var&gt;
        &lt;trigger name="germinate 3rd " priority="23" regex="true"&gt;
          &lt;pattern&gt;^[a-z, \-]+ starts releasing a strangely smelling substance and cuts @tar.* lightly, causing it to seep into h.. pores\. The (\a+) seed inside h.. suddenly erupts into life before withering away\.&lt;/pattern&gt;
          &lt;value&gt;#unt splinter_%1
splintered.%1=0
#if %1=willow {relapsing.ten=check}
#if %1=ash {relapsing.five=check}&lt;/value&gt;
        &lt;/trigger&gt;
      &lt;/class&gt;
      &lt;alias name="branch"&gt;
        &lt;value&gt;@wield(flail)treant corrupt left&lt;/value&gt;
      &lt;/alias&gt;
    &lt;/class&gt;
    &lt;macro key="F1"&gt;
      &lt;value&gt;@wield(flail)ravage @tar&lt;/value&gt;
    &lt;/macro&gt;
    &lt;macro key="F8" enabled="false"&gt;
      &lt;value&gt;#local $s $b $r $w $sa
#if @splintered.hawthorn {#additem $sa {treant germinate @tar hawthorn}}
#if @splintered.birch {#additem $sa {treant germinate @tar birch}}
#if @splintered.elder {#additem $sa {treant germinate @tar elder}}
#if @seeds {
  #if !@splintered.birch {
    $w={whirl branch at @tar birch\\treant germinate @tar birch}
  }
}
#if (100*@tarhp.cur/@tarhp.max)&amp;lt;30 {$s=1} {
  $s=0
  #if @splintered.blackthorn {
    $b=1
    #if @whirl {
      $w={whirl branch at @tar elder\\treant germinate @tar elder\\}
    }
  } {
    #if @whirl {
      $w={whirl branch at @tar blackthorn\\}
      $b=1
    }
  }
}
#if (@shields() || @rebound_soon()) {$r=devastate} {$r=ravage}
%if(!@treant_attacking,%exec(fk)@separator)$r" "@tar" "@pick(t,defilerQ)" "%if(!@thornroot.on,"with thornroot")\\%if($sa,{%expandlist($sa,"\\")\\})%if($w,{$w})%if($b,{treant empower @tar blackthorn\\})treant bellow @tar\\treant %if($s,trip,shred) @tar&lt;/value&gt;
    &lt;/macro&gt;
    &lt;macro key="F2"&gt;
      &lt;value&gt;#local $p
$a={treant shred @tar}
#if @afflicted.addiction {$a={treant intoxicate @tar}}
#if @afflicted.dryblood {$a={torment @tar with haemophilia}}
#if @afflicted.haemophilia {$a={treant rigidity @tar}}
#if @afflicted.rigidity {$a={torment @tar with hallucinations}}
#if @afflicted.hallucinations {$a={treant shred @tar}}
$t=@pick(t,defilerQ)
#local $r
#if (@shields() || @rebound_soon()) {$r=devastate} {$r=ravage}
%if(@to_target,{target @to_target@{separator}})@wield(flail)%if(!@treant_attacking,%exec(fk)@separator)$r @tar $t %if(!@thornroot.on,{ with thornroot@{separator}$r @tar $t})@{separator}$a&lt;/value&gt;
    &lt;/macro&gt;
    &lt;var name="defilerQ" type="StringList"&gt;
      &lt;value&gt;xeroderma|botulinum|ciguatoxin|metrazol|hemotoxin&lt;/value&gt;
      &lt;json&gt;["xeroderma","botulinum","ciguatoxin","metrazol","hemotoxin"]&lt;/json&gt;
    &lt;/var&gt;
    &lt;macro key="ALT-S"&gt;
      &lt;value&gt;ravage @pick(t,defilerQ)\\treant trip @tar&lt;/value&gt;
    &lt;/macro&gt;
    &lt;macro key="F4"&gt;
      &lt;value&gt;&lt;![CDATA[#local $a $p $r $s
cycle.max=5
#switch @cycle.val
  (1) {
  #if @splintered.birch {$p={treant germinate @tar birch}}
  $a={treant shred @tar}
  #if (!$p &amp;&amp; @whirl) {
    $p={whirl branch at @tar birch\\treant germinate @tar birch}
  }
}
  (2) {
  $a={treant intoxicate @tar}
  #if @splintered.elder {$p={treant empower @tar elder}}
  #if (!$p &amp;&amp; @whirl) {
    $p={whirl branch at @tar elder\\treant empower @tar elder}
  }
}
  (3) {
  $a={torment @tar with haemophilia}
  #forall {willow|ash} {
    #if @splintered.%i {
      $p={treant germinate @tar %i}
      #break
    }
  }
  #if (!$p &amp;&amp; @whirl) {
    $p={whirl branch at @tar ash\\treant germinate @tar ash}
  }
}
  (4) {$a={treant rigidity @tar}}
  (5) {
  $a={torment @tar with hallucinations}
  #forall {willow|ash} {
    #if @splintered.%i {
      $p={treant germinate @tar %i}
      #break
    }
  }
  #if (!$p &amp;&amp; @whirl) {
    $p={whirl branch at @tar ash\\treant germinate @tar ash}
  }
}
#if (@whirl &amp;&amp; !%regex($p,whirl) &amp;&amp; !@splintered.birch) {$p=%concat({whirl branch at @tar birch\\treant germinate @tar birch\\},$p)}
#if @tarshield {$p=""}
#if (@shields() || @rebound_soon()) {$r=devastate} {$r=ravage}
%if(@to_target,{target @to_target@{separator}})@wield(flail)%if(!@treant_attacking,%exec(fk)@separator)%if($p,$p"\\")$r" "@tar" "@pick(t,defilerQ)" "%if(!@thornroot.on,{ with thornroot@{separator}$r" "@tar" "@pick(t,defilerQ)})@{separator}$a]]&gt;&lt;/value&gt;
    &lt;/macro&gt;
    &lt;macro key="ALT-1"&gt;
      &lt;value&gt;ravage @pick(t) %if(!@thornroot.on,"with thornroot")\\%if(!@afflicted.rigidity,{treant rigidity @tar},{treant trip @tar})&lt;/value&gt;
    &lt;/macro&gt;
    &lt;alias name="rme"&gt;
      &lt;value&gt;touch jera on me\\touch algiz on me\\touch berkana on me&lt;/value&gt;
    &lt;/alias&gt;
    &lt;alias name="fk"&gt;
      &lt;value&gt;order @treant kill @tar(%1)&lt;/value&gt;
    &lt;/alias&gt;
    &lt;alias name="emp"&gt;
      &lt;value&gt;eldreth empress me&lt;/value&gt;
    &lt;/alias&gt;
    &lt;macro key="ALT-2"&gt;
      &lt;value&gt;ravage butisol %if(!@thornroot.on,"with thornroot")\\shadowbind @tar with augury of applying restoration to back&lt;/value&gt;
    &lt;/macro&gt;
    &lt;macro key="ALT-3"&gt;
      &lt;value&gt;give fish to @tar\\devastate @tar @pick(t,defilerQ) %if(!@thornroot.on,"with thornroot")\\shadowbind @tar with augury of eating fish&lt;/value&gt;
    &lt;/macro&gt;
    &lt;alias name="lame"&gt;
      &lt;value&gt;give %1 to @tar\\devastate @tar @pick(t,defilerQ) %if(!@thornroot.on,"with thornroot")\\shadowbind @tar with augury of eating %1&lt;/value&gt;
    &lt;/alias&gt;
    &lt;macro key="ALT-X"&gt;
      &lt;value&gt;ravage opium\\shadowbind @tar with sleep&lt;/value&gt;
    &lt;/macro&gt;
    &lt;class name="Shadowbinding"&gt;
      &lt;alias name="anb"&gt;
        &lt;value&gt;eb shadowbind me with antibodies %if(%1,off)&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="apr"&gt;
        &lt;value&gt;eb shadowbind here with apparition&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="bss"&gt;
        &lt;value&gt;eb shadowbind @tar(%1) with breathsap&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="cf"&gt;
        &lt;value&gt;eb shadowbind @tar(%1) with confutation&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="ck"&gt;
        &lt;value&gt;eb shadowbind me with shroud&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="dr"&gt;
        &lt;value&gt;eb shadowbind @tar(%1) with healthdrain&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="fs"&gt;
        &lt;value&gt;eb shadowbind @tar(%1) with firesap&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="ing"&gt;
        &lt;value&gt;eb siphon haze into %if(%1,%1,shadowcrown)&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="jx"&gt;
        &lt;value&gt;@sus(juxtaposition)queue eqbal shadowbind here with juxtaposition&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="md"&gt;
        &lt;value&gt;eb shadowbind @tar(%1) with manadrain&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="obs"&gt;
        &lt;value&gt;eb shadowbind here with obscurity&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="pss"&gt;
        &lt;value&gt;eb shadowbind @tar(%1) with poisonsap&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="pt"&gt;
        &lt;value&gt;eb shadowbind here with mistbind&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="py"&gt;
        &lt;value&gt;eb shadowbind @tar(%1) with psysap&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="sg"&gt;
        &lt;value&gt;shadowgems&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="ssee"&gt;
        &lt;value&gt;eb shadowbind seek @tar(%1)&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="tr"&gt;
        &lt;value&gt;eb shadowbind @tar(%1) with transmission&lt;/value&gt;
      &lt;/alias&gt;
      &lt;alias name="v"&gt;
        &lt;value&gt;eb shadowbind me with projection %if(%1,%1,@direction)&lt;/value&gt;
      &lt;/alias&gt;
      &lt;var name="apparition" type="Literal"/&gt;
      &lt;trigger name="apparition+" priority="237710" regex="true"&gt;
        &lt;pattern&gt;^You rub a shadowgem and an apparition materialises slowly in the room, taking on your appearance\.&lt;/pattern&gt;
        &lt;value&gt;apparition.room=%gmcp.room.info.name
apparition.vnum=%gmcp.room.info.num
apparition.time=150
#alarm apparition_timer *1 {
  apparition.time=@{apparition.time}-1
  #if @apparition.time&amp;lt;1 {
    apparition.time=0
    #unt apparition_timer
  }
}&lt;/value&gt;
      &lt;/trigger&gt;
      &lt;trigger name="apparition-" priority="237740" regex="true"&gt;
        &lt;pattern&gt;^Your apparition has vanished\.&lt;/pattern&gt;
        &lt;value&gt;apparition=""
#unt apparition_timer&lt;/value&gt;
      &lt;/trigger&gt;
      &lt;trigger name="juxtaposition-" priority="234640" regex="true"&gt;
        &lt;pattern&gt;^You cease maintaining the juxtaposition and planes separate themselves once again\.&lt;/pattern&gt;
        &lt;value&gt;#sendraw {@sus()}&lt;/value&gt;
      &lt;/trigger&gt;
      &lt;trigger name="shadowgem" priority="202880" regex="true"&gt;
        &lt;pattern&gt;^"shadowveil(\d+)"\s+a constructed shadowveil&lt;/pattern&gt;
        &lt;value&gt;get 50 shadowgem from %1&lt;/value&gt;
      &lt;/trigger&gt;
      &lt;stat name="apparition" priority="237730"&gt;
        &lt;value&gt;%if(@apparition,{[ apparition : @apparition.room (@apparition.vnum) - @apparition.time ]})&lt;/value&gt;
      &lt;/stat&gt;
    &lt;/class&gt;
    &lt;alias name="em"&gt;
      &lt;value&gt;whirl branch at @tar %1\\treant empower @tar %1&lt;/value&gt;
    &lt;/alias&gt;
    &lt;alias name="ge"&gt;
      &lt;value&gt;whirl branch at @tar %1\\treant germinate @tar %1&lt;/value&gt;
    &lt;/alias&gt;
    &lt;alias name="rr"&gt;
      &lt;value&gt;#local $r
#if (@shields() || @rebound_soon()) {$r=devastate} {$r=ravage}
$r @tar" "@pick(t,defilerQ) with thornroot&lt;/value&gt;
    &lt;/alias&gt;
    &lt;trigger name="cycle+" priority="123" regex="true"&gt;
      &lt;pattern&gt;^Smiling sadistically, you&lt;/pattern&gt;
      &lt;value&gt;cycle.val=@{cycle.val}+1
#if @cycle.val&amp;gt;@cycle.max {cycle.val=1}&lt;/value&gt;
    &lt;/trigger&gt;
    &lt;macro key="F3"&gt;
      &lt;value&gt;#local $s $b $r $w $sa
#if !@tarshield {
  #if @splintered.hawthorn {#additem $sa {treant germinate @tar hawthorn}}
  #if @splintered.birch {#additem $sa {treant germinate @tar birch}}
  #if @splintered.elder {#additem $sa {treant germinate @tar elder}}
}
#if @seeds {
  #if !@tarshield {
    #if !@splintered.birch {
      $w={whirl branch at @tar birch\\treant germinate @tar birch}
    }
  }
}
//#if (100*@tarhp.cur/@tarhp.max)&amp;lt;30 {$s=1} {
  //$s=0
  $s=0
  #if !@tarshield {
    #if @splintered.blackthorn {
      $b=1
      #if @whirl {
        $w={whirl branch at @tar elder\\treant germinate @tar elder}
      }
    } {
      #if @whirl {
        $w={whirl branch at @tar blackthorn\\}
        $b=1
      }
    }
  }
//}
#if (@shields() || @rebound_soon()) {$r=devastate} {$r=ravage}
%if($sa,{%expandlist($sa,"\\")\\})%if($w,{$w\\})%if($b,{treant empower @tar blackthorn\\})%if(!@treant_attacking,%exec(fk)@separator)$r" "@tar" "@pick(t,defilerQ)" "%if(!@thornroot.on,"with thornroot")\\treant bellow @tar\\treant %if($s,trip,shred) @tar&lt;/value&gt;
    &lt;/macro&gt;
  &lt;/class&gt;
&lt;/cmud&gt;</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>defiler_nine</name>
						<packageName></packageName>
						<script>
function defiler_nine()
	local str = ""
	local toxin = defiler_choose_toxin()
	local s, b, r, w, sa = "","","","",{}
	dslaffs = {}

	if splintered["hawthorn"] then table.insert(sa, "treant germinate target hawthorn"..separator) end
	if splintered["birch"] then table.insert(sa, "treant germinate target birch"..separator) end
	if splintered["elder"] then table.insert(sa, "treant germinate target elder"..separator) end

	if seeds == 0 then
		if not splintered["birch"] then
			w = "whirl branch at target birch"..separator
			w = w.."treant germinate target birch"..separator
		end
	end
	-- or if not table.contains( seeds, "birch" )

	s = 1
	if splintered["blackthorn"] then
		b = 1
		if whirl == 1 then
			w = "whirl branch at target elder"..separator
			w = w.."treant germinate target elder"..separator
		end
	else
		if whirl == 1 then
			w = "whirl branch at target blackthorn"..separator
		end
		b = 1
	end


	if target.shield or target.aura then -- or rebounding soon
		r = "devastate "
	else
		r = "ravage "
	end

	-- Start Compiling

	if treant_attacking == "" then
		str = str.."order treant kill target"..separator
	end

	if #sa &gt; 0 then
		for i=1, #sa do
			str = str..sa[i]
		end
	end
	if w ~= "" then
		str = str..w
	end
	if b == 1 then
		str = str.."treant empower target blackthorn"..separator
	end

	str = str..r.."target "..toxin
	if thornroot.on == 0 then
		str = str.." with thornroot"
	end
	str = str..separator

	str = str.."treant bellow target"..separator
	if s == 1 then
		str = str.."treant trip target"
	else
		str = str.."treant shred target"
	end

	str = str:gsub("target", target.name)
	send(str)
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>crit counter</name>
				<packageName>crit counter</packageName>
				<script></script>
				<eventHandlerList />
				<Script isActive="no" isFolder="no">
					<name></name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>GMCP</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>GMCP-Skills-Items</name>
					<packageName>GMCP-Skills-Items</packageName>
					<script>demonnic = demonnic or {}</script>
					<eventHandlerList />
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>GMCP Events</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Room Items</name>
							<packageName></packageName>
							<script>--[[
The events kept within this folder will populate demonnic.roomItems on entering a room or doing 'look'
It also adds items to the list as they enter the room (or get dropped)
And removes them when they get picked up
you can do display(demonnic.roomItems) to see the format to work with
]]</script>
							<eventHandlerList />
							<ScriptGroup isActive="yes" isFolder="yes">
								<name>Populate on look</name>
								<packageName></packageName>
								<script>--[[
This event resets demonnic.roomItems, since it gives the complete list of items
It fires when you move, or LOOK.
]]</script>
								<eventHandlerList />
								<Script isActive="yes" isFolder="no">
									<name>demonnic_rilist</name>
									<packageName></packageName>
									<script>function demonnic_rilist()
  local list = gmcp.Char.Items.List
  if list.location == "room" then
    demonnic.roomItems = {}
    for _,v in ipairs(list.items) do
      if not demonnic.roomItems[v.name] then demonnic.roomItems[v.name] = {} end
      table.insert(demonnic.roomItems[v.name], v.id)
    end
  end
  
	for k, v in ipairs (gmcp.Char.Items.List.items) do
		if (gmcp.Char.Items.List.items[k].name == "a wall of light") then 
			user.lightwall = true
			break
		else
			user.lightwall = false 
		end 
	end

	mobnumber = 0
	for k, v in ipairs (gmcp.Char.Items.List.items) do
		if (gmcp.Char.Items.List.items[k].name == "a deformed crawler") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a soaked and swollen undead man") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a cadaverous sailor") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a putrefying undead woman") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a distended skeleton") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "an undead and rotting stingray") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a long-undead fisherman") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a horrendous wight") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "an intimidating wight") then
			mobnumber = mobnumber + 2
		end
		if (gmcp.Char.Items.List.items[k].name == "a macabre wight") then
			mobnumber = mobnumber + 2
		end
		if (gmcp.Char.Items.List.items[k].name == "a ghost of a weary traveler") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a crazed ghost") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a pompous regal ghost") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a ghost of a giddy boy") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a bewildered ghost") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a wight juggernaut") then
			mobnumber = mobnumber + 2
		end
		if (gmcp.Char.Items.List.items[k].name == "a soot-stained skeleton") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a crazed ghost") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a pompous regal ghost") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a mutated direwolf") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a rotting direwolf") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a decomposing bat") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a massive crypt bat") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a black-winged crow") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a long-legged wolf") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a blood-caked direwolf") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a massive skeletal bat") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a silent ghoul") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a rabid ghoul") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a gibbering ghoul") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a raging moroi") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a demented moroi") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a hulking moroi") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a wailing banshee") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a furious banshee") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a lithe ebonmarrow") then
			mobnumber = mobnumber + 1.5
		end
		if (gmcp.Char.Items.List.items[k].name == "a masked tribal warrior") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a paradise bird") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a large red crab") then
			mobnumber = mobnumber + 1
		end
--		if (gmcp.Char.Items.List.items[k].name == "") then
--			mobnumber = mobnumber + 1
--		end
	end
end</script>
									<eventHandlerList>
										<string>gmcp.Char.Items.List</string>
									</eventHandlerList>
								</Script>
							</ScriptGroup>
							<ScriptGroup isActive="yes" isFolder="yes">
								<name>Add items when they enter</name>
								<packageName></packageName>
								<script>--[[
This event adds items when gmcp tells you items have been added to the room
IE a creature enters, someone drops something, etc.
]]</script>
								<eventHandlerList />
								<Script isActive="yes" isFolder="no">
									<name>demonnic_riadd</name>
									<packageName></packageName>
									<script>function demonnic_riadd()
  local item = gmcp.Char.Items.Add.item
  if not demonnic.roomItems[item.name] then demonnic.roomItems[item.name] = {} end
  table.insert(demonnic.roomItems[item.name], item.id)
  
	for k, v in ipairs (gmcp.Char.Items.List.items) do
		if (gmcp.Char.Items.List.items[k].name == "a wall of light") then 
			user.lightwall = true
			break
		else
			user.lightwall = false 
		end 
	end

	mobnumber = 0
	for k, v in ipairs (gmcp.Char.Items.List.items) do
		if (gmcp.Char.Items.List.items[k].name == "a deformed crawler") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a soaked and swollen undead man") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a cadaverous sailor") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a putrefying undead woman") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a distended skeleton") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "an undead and rotting stingray") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a long-undead fisherman") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a horrendous wight") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "an intimidating wight") then
			mobnumber = mobnumber + 2
		end
		if (gmcp.Char.Items.List.items[k].name == "a macabre wight") then
			mobnumber = mobnumber + 2
		end
		if (gmcp.Char.Items.List.items[k].name == "a ghost of a weary traveler") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a crazed ghost") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a pompous regal ghost") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a ghost of a giddy boy") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a bewildered ghost") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a wight juggernaut") then
			mobnumber = mobnumber + 2
		end
		if (gmcp.Char.Items.List.items[k].name == "a soot-stained skeleton") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a crazed ghost") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a pompous regal ghost") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a mutated direwolf") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a rotting direwolf") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a decomposing bat") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a massive crypt bat") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a black-winged crow") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a long-legged wolf") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a blood-caked direwolf") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a massive skeletal bat") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a silent ghoul") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a rabid ghoul") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a gibbering ghoul") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a raging moroi") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a demented moroi") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a hulking moroi") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a lithe ebonmarrow") then
			mobnumber = mobnumber + 1.5
		end
		if (gmcp.Char.Items.List.items[k].name == "a masked tribal warrior") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a paradise bird") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a large red crab") then
			mobnumber = mobnumber + 1
		end
--		if (gmcp.Char.Items.List.items[k].name == "") then
--			mobnumber = mobnumber + 1
--		end
	end
end</script>
									<eventHandlerList>
										<string>gmcp.Char.Items.Add</string>
									</eventHandlerList>
								</Script>
							</ScriptGroup>
							<ScriptGroup isActive="yes" isFolder="yes">
								<name>Remove items when they leave</name>
								<packageName></packageName>
								<script>--[[
This event fires when gmcp says an item leaves the room
IE someone picks it up, it's a mob and it moves out of the room, etc.
]]</script>
								<eventHandlerList />
								<Script isActive="yes" isFolder="no">
									<name>demonnic_rileave</name>
									<packageName></packageName>
									<script>function demonnic_rileave()
  local remove = gmcp.Char.Items.Remove
  if remove.location == "room" then
    for name,items in pairs(demonnic.roomItems) do
      for i,id in ipairs(items) do
        if id == tostring(remove.item) then
          table.remove(demonnic.roomItems[name],i) 
          if #demonnic.roomItems[name] == 0 then
            demonnic.roomItems[name] = nil
          end
        end
      end
    end
  end
  
	for k, v in ipairs (gmcp.Char.Items.List.items) do
		if (gmcp.Char.Items.List.items[k].name == "a wall of light") then 
			user.lightwall = true
			break
		else
			user.lightwall = false 
		end 
	end

	mobnumber = 0
	for k, v in ipairs (gmcp.Char.Items.List.items) do
		if (gmcp.Char.Items.List.items[k].name == "a deformed crawler") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a soaked and swollen undead man") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a cadaverous sailor") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a putrefying undead woman") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a distended skeleton") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "an undead and rotting stingray") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a long-undead fisherman") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a horrendous wight") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "an intimidating wight") then
			mobnumber = mobnumber + 2
		end
		if (gmcp.Char.Items.List.items[k].name == "a macabre wight") then
			mobnumber = mobnumber + 2
		end
		if (gmcp.Char.Items.List.items[k].name == "a ghost of a weary traveler") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a crazed ghost") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a pompous regal ghost") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a ghost of a giddy boy") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a bewildered ghost") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a wight juggernaut") then
			mobnumber = mobnumber + 2
		end
		if (gmcp.Char.Items.List.items[k].name == "a soot-stained skeleton") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a crazed ghost") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a pompous regal ghost") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a mutated direwolf") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a rotting direwolf") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a decomposing bat") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a massive crypt bat") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a black-winged crow") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a long-legged wolf") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a blood-caked direwolf") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a massive skeletal bat") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a silent ghoul") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a rabid ghoul") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a gibbering ghoul") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a raging moroi") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a demented moroi") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a hulking moroi") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a lithe ebonmarrow") then
			mobnumber = mobnumber + 1.5
		end
		if (gmcp.Char.Items.List.items[k].name == "a masked tribal warrior") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a paradise bird") then
			mobnumber = mobnumber + 1
		end
		if (gmcp.Char.Items.List.items[k].name == "a large red crab") then
			mobnumber = mobnumber + 1
		end
--		if (gmcp.Char.Items.List.items[k].name == "") then
--			mobnumber = mobnumber + 1
--		end
	end
end</script>
									<eventHandlerList>
										<string>gmcp.Char.Items.Remove</string>
									</eventHandlerList>
								</Script>
							</ScriptGroup>
						</ScriptGroup>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Skill Events</name>
							<packageName></packageName>
							<script>--[[
set of events which will autopopulate a skills table called demonnic.skills
You can use this to determine what skills are available to your char
and adjust other variables accordingly
display(demonnic.skills) to see the format
]]</script>
							<eventHandlerList />
							<ScriptGroup isActive="yes" isFolder="yes">
								<name>Get list of groups</name>
								<packageName></packageName>
								<script>--[[
This will create demonnic.skills.skillgroup as a table, and send a GMCP request for the list of skills in each skillgroup
IOW, this tells us what skills we can lookup (like AB with no argument)
It also sends a newline, so that we get all the returns from the gmcp requests
]]</script>
								<eventHandlerList />
								<Script isActive="yes" isFolder="no">
									<name>demonnic_skillGroups</name>
									<packageName></packageName>
									<script>function demonnic_skillGroups()
  demonnic.skills = {}
  for _,extra in ipairs(gmcp.Char.Skills.Groups) do
    skillstring = string.format("Char.Skills.Get %s", yajl.to_string({group=extra.name}))
    sendGMCP(skillstring)
  end
  send("\n")
end

function testFunc()
test = sendGMCP("Char.Skills.Get "..yajl.to_string({group = "perception", name = "elixlist"}))
send("\n")
if (test) then
	echo("it works")
end
end</script>
									<eventHandlerList>
										<string>gmcp.Char.Skills.Groups</string>
									</eventHandlerList>
								</Script>
							</ScriptGroup>
							<ScriptGroup isActive="yes" isFolder="yes">
								<name>Get skills in group</name>
								<packageName></packageName>
								<script>--[[
This populates the subtable for each skill group. It is recieved for an individual skillgroup, and will fire once for each one
demonnic.skills.skillgroup will be the name (IE demonnic.skills.environment will hold the list of all the skills you've learned in environment
Because when we get the list of groups it sends a request for each group of skills we know, it will populate the whole table.
]]</script>
								<eventHandlerList />
								<Script isActive="yes" isFolder="no">
									<name>demonnic_skillsList</name>
									<packageName></packageName>
									<script>function demonnic_skillsList()
  local group = gmcp.Char.Skills.List.group
  local list = gmcp.Char.Skills.List.list
  if group then
    if not demonnic.skills then demonnic.skills = {} end
    demonnic.skills[group] = list
  end
end</script>
									<eventHandlerList>
										<string>gmcp.Char.Skills.List</string>
									</eventHandlerList>
								</Script>
							</ScriptGroup>
						</ScriptGroup>
					</ScriptGroup>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>GMCP_Inventory</name>
					<packageName>GMCP_Inventory</packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>inventory_gmcp</name>
						<packageName></packageName>
						<script>if not items then items = {} end
function items:Add()
   local location = gmcp.Char.Items.Add.location
   if location ~= "inv" and location ~= "room" then
      location = location:match("%d+$")
   end
   local loc = location .. "_items"
   local item = gmcp.Char.Items.Add.item
   if not self[loc] then
      sendGMCP("Char.Items.Inv")
      return
   end
   table.insert(self[loc], gmcp.Char.Items.Add.item)
   if loc == "inv_items" and item.attrib and item.attrib:find("c") then
      sendGMCP("Char.Items.Contents "..item.id)
   end
   if gmcp.Char.Items.Add['location'] == 'room' then
    get_stuff('add')
   end
end

function items:Remove()
   local location = gmcp.Char.Items.Remove.location
   if location ~= "inv" and location ~= "room" then
      location = location:match("%d+$")
   end
   local loc = location .. "_items"
   if not self[loc] then
      sendGMCP("Char.Items.Inv")
    return
   end
   for k,v in pairs(self[loc]) do
      if v.id*1 == gmcp.Char.Items.Remove.item then
         table.remove(self[loc], k)
         break
      end
   end
end


function items:List()
   if not items then items = {} end
   local location = gmcp.Char.Items.List.location
    if location == "room" then
     state.check_shrines = true
   end
   if location ~= "inv" and location ~= "room" then
      location = location:match("%d+$")
   end
   local loc = location .. "_items"
   self[loc] = {}
   for k,v in pairs(gmcp.Char.Items.List.items) do
      table.insert(self[loc], v)
      if loc == "inv_items" and v.attrib and v.attrib:find("c") then
         sendGMCP("Char.Items.Contents "..v.id)
      end
   end
   
end


function items:Update()
   local location = gmcp.Char.Items.Update.location
   if location ~= "inv" and location ~= "room" then
      location = location:match("%d+$")
   end
   local loc = location .. "_items"
   local item = gmcp.Char.Items.Update.item
   local updated
      if not self[loc] then
      sendGMCP("Char.Items.Inv")
      return
   end
   for k,v in pairs(self[loc]) do
      if v.id == item.id then
         self[loc][k] = item
         updated = true
         break
      end
   end
   if loc == "inv_items" and not updated then sendGMCP("Char.Items.Inv") end
   if loc == "inv_items" and item.attrib and item.attrib:find("c") then
      sendGMCP("Char.Items.Contents "..item.id)
   end
  --display(gmcp.Char.Items.Update)
end

function items:StatusVars()
   self.inv_items = {}
   self.room_items = {}
 
   tempTimer(1.5,[[char_status_login_name = gmcp.Char.Status.name]])
   tempTimer(1.5,[[sendGMCP("Char.Items.Inv")]])
end

function inventory_gmcp(event,args)
   if not items then items = {} end
   local event = event:match("%w+$")
   local func = loadstring("items:"..event.."()")
   func()
   inv_items = items.inv_items
   room_items = items.room_items
end</script>
						<eventHandlerList>
							<string>gmcp.Char.Items.List</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>inventory_display</name>
						<packageName></packageName>
						<script>function display_inventory(match)
 local worn_items = {}
 local my_items = {}

 if not inventory then inventory = {} end

 tempTimer(5,[[if iventory then inventory.pager = nil end]])
 if inventory and inventory.pager then
   inventory.pager['held']['__orderedIndex'] = nil
   worn_items = inventory.pager['worn']
   my_items = inventory.pager['held']
 else
  wield = {}
  wtc = nil
  worn_table = {}

  local count = 0
  for k,v in pairs(inv_items) do
   if not my_items[v['name']] then my_items[v['name']] = {['ids'] = {}, ['amount'] = 0} end
   my_items[v['name']]['amount'] = my_items[v['name']]['amount'] + 1
   table.insert(my_items[v['name']]['ids'], v['id'])

   if v['attrib'] then
    if string.find(v['attrib'],'l') then
     wield[v['id']] = {['name'] = v['name'],['loc']=''}
     
     if not wtc then 
      wield[v['id']].loc = 'left' 
      wtc= 'right'
     else
      wield[v['id']].loc = 'right' 
      wtc = nil
     end
     
     my_items[v['name']] = nil
    end
    
    if string.find(v['attrib'],'w') then
     table.insert(worn_items,v['name'])
     worn_table[v['name']] = v['id']
     my_items[v['name']] = nil
    end
   end
  end
 end



 echo("\n")
 if not inventory.pager then 
  if len(wield) == 2 then
   local wtc = 0
   cecho("&lt;olive_drab&gt;You are wielding:&lt;grey&gt;\n")

   for k,v in pairs(wield) do
     cecho(string.format("        (%i) %s in your %s hand.\n",k,v.name,v.loc))
   end

  elseif len(wield) == 1 then
   local num = ''
   local status = {}

   cecho("&lt;olive_drab&gt;You are wielding:&lt;grey&gt;\n")

   for k,v in pairs(wield) do
    num = k
    status = v
   end
   
   if string.find(status.name,'Bow') or string.find(status.name,'warhammer') or string.find(status.name,'bastard') or string.find(status.name,'halberd') or string.find(status.name,'bardiche') or string.find(status.name,'bow' or string.find(status.name,'quarterstaff' )) then
     cecho(string.format("        (%s) %s in both hands.\n",num,status.name))
   else
    cecho(string.format("        (%s) %s in your %s hand.\n",num,status.name,status.loc))
   end
  else
   cecho("&lt;olive_drab&gt;You are wielding:&lt;grey&gt;\n")
   cecho(string.format("        Nothing in either hand.\n"))
  end
  echo("\n")
 end

 inventory.pager = {}
 inventory.pager['held'] = my_items
 inventory.pager['worn'] = worn_items
 inventory.pager['matches3'] = match[3]

 cecho("&lt;olive_drab&gt;You are holding:\n")

 local count = 0 
 local ln_count = 0

 for k,v in orderedPairs(my_items) do
  local name = k

  if match[3] then
   if string.find(k,match[3]:trim()) then
    fg("medium_aquamarine")
    echo("(")
    fg("white")
    echo(string.format("%s",string.rpad(tostring(v.amount),3)))
    fg("medium_aquamarine")
    echo(")")
    resetFormat()
    cecho(string.format(" %s&lt;grey&gt;\n",align(name,{width=30,alignment='left'})))
    resetFormat()
    cecho(string.format("        ID: "))

    for num,value in ipairs(my_items[k]['ids']) do
     setUnderline(true)
     echoLink(string.format("%s", value),[[appendCmdLine("]]..value..[[")]],"Append to Command line",true)
     resetFormat()
     if num ~= table.size(my_items[k]['ids']) then
      echo(", ")
     end
    end
    echo("\n")
   end
  else
   inventory.pager['held'][k] = nil
   if #name &gt;= 25 then
    name = truncate(k,25)
   else
    name = k
   end

   count = count + 1
   fg("medium_aquamarine")
   echo("(")
   fg("white")
   echo(string.format("%s",string.rpad(tostring(v.amount),3)))
   fg("medium_aquamarine")
   echo(")")
   resetFormat()
   cecho(string.format(" %s",align(name,{width=30,alignment='left'})))
  end

  if count == 2 then
   echo("\n")
   count = 0
   ln_count = ln_count + 1
  end

  if ln_count == 20 then 
   echo("\n")
   cecho(align("Type &lt;green&gt;MORE&lt;grey&gt; to continue",{alignment="center"}))
   echo("\n")
   return
  end
 end

 echo("\n\n")
 cecho("&lt;olive_drab&gt;You are wearing:\n")
 ln_count = nil
 local count = 0

 table.sort(worn_items)

 for _,v in ipairs(worn_items) do
  local name = v
  if match[3] then
   if string.find(v,match[3]:trim()) then
    cecho(string.format("&lt;white&gt;*&lt;grey&gt;("))
    setUnderline(true)
    echoLink(string.format("%s",string.rpad(worn_table[name],6)),[[appendCmdLine("]]..worn_table[name]..[[")]],"Append to Command line",true)
    resetFormat()
    cecho(string.format(") %s\n",name))
   end
  else
   if #name &gt;= 34 then
    name = truncate(v,34)
   else
    name = v
   end
   count = count + 1
   cecho(string.format("&lt;white&gt;*&lt;grey&gt; %s",align(name,{width=38,alignment='left'})))
  end
  
  if count == 2 then
   echo("\n")
   count = 0
  end
 end

 if inventory.pager['held'] and table.size(inventory.pager['held']) &lt;= 1 then
  inventory.pager = nil
  inventory.page_command = nil
  send('show gold',false)
 end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>inventory_utility</name>
						<packageName></packageName>
						<script>-- Table functions

function len(t)
-- Count the items in a table
 local count
 count = 0
 for ii,xx in pairs(t) do
    count = count + 1
 end -- for
 return count
end -- tcount

function __genOrderedIndex( t )
-- Generates index for ordering a table
-- DO NOT CALL THIS FUNCTION
    local orderedIndex = {}
    for key in pairs(t) do
        table.insert( orderedIndex, key )
    end
    table.sort( orderedIndex )
    return orderedIndex
end -- genOrderedIndex

function orderedNext(t, state)
-- Same as 'next' function, except returns the keys in the alphabetic order
    if state == nil then
        --generate index
        t.__orderedIndex = __genOrderedIndex( t )
        key = t.__orderedIndex[1]
        return key, t[key]
    end
    key = nil
    for i = 1,table.getn(t.__orderedIndex) do
        if t.__orderedIndex[i] == state then
            key = t.__orderedIndex[i+1]
        end
    end

    if key then
        return key, t[key]
    end

    t.__orderedIndex = nil
    return
end -- orderedNext

function orderedPairs(t)
    -- Call THIS function
    return orderedNext, t, nil
end -- orderedPairs


-- String functions
function trim(s)
  -- from PiL2 20.4
  return (s:gsub("^%s*(.-)%s*$", "%1"))
end


function pack2(...) return {n=select('#', ...), ...} end
function unpack2(t) return unpack(t, 1, t.n) end

string.rpad = function(str, len, char)
    if char == nil then char = ' ' end
    return string.rep(char, len - #str) .. str
end

function truncate(s,num)

 return string.format("%s...", string.sub(s, 1, num))
end


-- Alignment

function align(str,options) --str is a string, options is a table
--[[ If they sent anything but a table as the second argument, return useful
info. But if they didn't send a second argument then that's ok, the defaults
will be enough to get by and just center the txt
]]--
  if (type(options) ~= "table") and (options ~= nil) then return "You call this with align(\"some text to format\", &lt;table of options&gt;. Pls check comments for what options and usage information" end
  options = options or {} --if they sent options, don't overwrite them
  options.width = options.width or 80 --default line length of 80
  options.alignment = options.alignment or "center" --if we don't specify, it's centered
  options.cap = options.cap or "" --default endcap of nothing (an empty string, technically)
  options.spacer = options.spacer or " " --default spacer is.. well.. space
  options.inside = options.inside or false --by default, when centering, formation as spacers|cap|text|cap|spacers
  if not options.mirror == false then options.mirror = options.mirror or true end--by default, we do want to use mirroring for the caps
  local strLen = string.len(str)
  local leftCap = options.cap
  local rightCap = options.cap
  local leftPadLen = math.floor((options.width - strLen)/2,1) - 1
  local rightPadLen = leftPadLen + ((options.width - strLen)%2)
  local maxPad = 0
  local capLen = string.len(options.cap)
  if capLen &gt; leftPadLen then --if the cap is bigger than the left total padding
    options.cap = options.cap:sub(1, leftPadLen) -- trim it up right!
    capLen = string.len(options.cap)
  end --otherwise, don't mess with it

 
  if options.alignment == "center" then --we're going to center something
    leftPadLen = math.floor((options.width - strLen)/2,1) - 1 --get the padding needed on the left
    rightPadLen = leftPadLen + ((options.width - strLen)%2) --and on the right
    if options.mirror then --if we're reversing the left cap and the right cap (IE {{[[ turns into ]]}} )
      rightCap = string.gsub(rightCap, "&lt;", "&gt;")
      rightCap = string.gsub(rightCap, "%[", "%]")
      rightCap = string.gsub(rightCap, "{", "}")
      rightCap = string.gsub(rightCap, "%(", "%)")
      rightCap = string.reverse(rightCap)
    end --otherwise, they'll be the same, so don't do anything
    str = string.format(" %s ", str)
   
  elseif options.alignment == "right" then --we'll right-align the text
    leftPadLen = options.width - strLen - 1
    rightPadLen = 0
    rightCap = ""
    str = string.format(" %s", str)
   
  else --Ok, so if it's not center or right, we assume it's left. We don't do justified. Sorry.
    leftPadLen = 0
    rightPadLen = options.width - strLen -1
    leftCap = ""
    str = string.format("%s ", str)
  end--that's it, took care of both left, right, and center formattings, now to output the durn thing.
 
  if options.inside then
  --if we're placing the repated spacer inside
  --"=====endcap some text endcap====="
  --"=====endcap some text pacdne====="
  --"=================endcap some text"
  --"some text endcap================="
    return leftCap .. string.rep(options.spacer, (leftPadLen - capLen)) .. str ..string.rep(options.spacer, (rightPadLen - capLen)).. rightCap
  else
  --otherwise, it''s be the spaces on the 'inside'
  -- "endcap===== some text =====endcap"
  -- "endcap===== some text =====pacdne"
  -- "endcap================= some text"
  -- "some text =================endcap"
    return string.rep(options.spacer, (leftPadLen - capLen)) .. leftCap .. str .. rightCap .. string.rep(options.spacer, (rightPadLen - capLen))
  end
end


function calign(str,options) --str is a string, options is a table
--[[ If they sent anything but a table as the second argument, return useful 
info. But if they didn't send a second argument then that's ok, the defaults 
will be enough to get by and just center the txt
]]--
  if (not type(options) == "table") and (not options == nil) then return "You call this with align(\"some text to format\", &lt;table of options&gt;. Pls check comments for what options and usage information" end 
  options = options or {} --if they sent options, don't overwrite them
  options.width = options.width or 80 --default line length of 80
  options.alignment = options.alignment or "center" --if we don't specify, it's centered
  options.cap = options.cap or "" --default endcap of nothing (an empty string, technically)
  options.spacer = options.spacer or " " --default spacer is.. well.. space
  options.inside = options.inside or false --by default, when centering, formation as spacers|cap|text|cap|spacers
  options.capColor = options.capColor or "&lt;white&gt;"--by default, don't change the color of the caps
  options.spacerColor = options.spacerColor or "&lt;white&gt;"
  options.textColor = options.textColor or "&lt;white&gt;"--or the text
  if not options.mirror == false then options.mirror = options.mirror or true end--by default, we do want to use mirroring for the caps
  local strLen = string.len(str)
  local leftCap = options.cap
  local rightCap = options.cap
  local leftPadLen = math.floor((options.width - strLen)/2,1) - 1
  local rightPadLen = leftPadLen + ((options.width - strLen)%2)
  local maxPad = 0
  local capLen = string.len(options.cap)
  if capLen &gt; leftPadLen then --if the cap is bigger than the left total padding
    options.cap = options.cap:sub(1, leftPadLen) -- trim it up right!
    capLen = string.len(options.cap)
  end --otherwise, don't mess with it

  
  if options.alignment == "center" then --we're going to center something
    leftPadLen = math.floor((options.width - strLen)/2,1) - 1 --get the padding needed on the left
    rightPadLen = leftPadLen + ((options.width - strLen)%2) --and on the right
    if options.mirror then --if we're reversing the left cap and the right cap (IE {{[[ turns into ]]}} )
      rightCap = string.gsub(rightCap, "&lt;", "&gt;")
      rightCap = string.gsub(rightCap, "%[", "%]")
      rightCap = string.gsub(rightCap, "{", "}")
      rightCap = string.gsub(rightCap, "%(", "%)")
      rightCap = string.reverse(rightCap)
    end --otherwise, they'll be the same, so don't do anything
    str = string.format(" %s ", str)
    
  elseif options.alignment == "right" then --we'll right-align the text
    leftPadLen = options.width - strLen - 1
    rightPadLen = 0
    rightCap = ""
    str = string.format(" %s", str)
    
  else --Ok, so if it's not center or right, we assume it's left. We don't do justified. Sorry.
    leftPadLen = 0
    rightPadLen = options.width - strLen -1
    leftCap = ""
    str = string.format("%s ", str)
  end--that's it, took care of both left, right, and center formattings, now to output the durn thing. 
  
  if options.inside then 
  --if we're placing the repated spacer inside
  --"=====endcap some text endcap=====" 
  --"=====endcap some text pacdne====="
  --"=================endcap some text" 
  --"some text endcap================="
    return options.capColor .. leftCap .. options.spacerColor.. string.rep(options.spacer, (leftPadLen - capLen)) .. options.textColor .. str .. options.spacerColor ..string.rep(options.spacer, (rightPadLen - capLen)) .. options.capColor .. rightCap
  else 
  --otherwise, it''s be the spaces on the 'inside'
  -- "endcap===== some text =====endcap"
  -- "endcap===== some text =====pacdne" 
  -- "endcap================= some text" 
  -- "some text =================endcap"
    return options.spacerColor .. string.rep(options.spacer, (leftPadLen - capLen)) .. options.capColor .. leftCap .. options.textColor .. str .. options.capColor .. rightCap .. options.spacerColor .. string.rep(options.spacer, (rightPadLen - capLen))
  end
end

function dalign(str,options) --str is a string, options is a table
--[[ If they sent anything but a table as the second argument, return useful 
info. But if they didn't send a second argument then that's ok, the defaults 
will be enough to get by and just center the txt
]]--
  if (not type(options) == "table") and (not options == nil) then return "You call this with align(\"some text to format\", &lt;table of options&gt;. Pls check comments for what options and usage information" end 
  options = options or {} --if they sent options, don't overwrite them
  options.width = options.width or 80 --default line length of 80
  options.alignment = options.alignment or "center" --if we don't specify, it's centered
  options.cap = options.cap or "" --default endcap of nothing (an empty string, technically)
  options.spacer = options.spacer or " " --default spacer is.. well.. space
  options.inside = options.inside or false --by default, when centering, formation as spacers|cap|text|cap|spacers
  options.capColor = options.capColor or "&lt;255,255,255&gt;"--by default, don't change the color of the caps
  options.spacerColor = options.spacerColor or "&lt;255,255,255&gt;" 
  options.textColor = options.textColor or "&lt;255,255,255&gt;"--or the text
  if not options.mirror == false then options.mirror = options.mirror or true end--by default, we do want to use mirroring for the caps
  local strLen = string.len(str)
  local leftCap = options.cap
  local rightCap = options.cap
  local leftPadLen = math.floor((options.width - strLen)/2,1) - 1
  local rightPadLen = leftPadLen + ((options.width - strLen)%2)
  local maxPad = 0
  local capLen = string.len(options.cap)
  if capLen &gt; leftPadLen then --if the cap is bigger than the left total padding
    options.cap = options.cap:sub(1, leftPadLen) -- trim it up right!
    capLen = string.len(options.cap)
  end --otherwise, don't mess with it

  
  if options.alignment == "center" then --we're going to center something
    leftPadLen = math.floor((options.width - strLen)/2,1) - 1 --get the padding needed on the left
    rightPadLen = leftPadLen + ((options.width - strLen)%2) --and on the right
    if options.mirror then --if we're reversing the left cap and the right cap (IE {{[[ turns into ]]}} )
      rightCap = string.gsub(rightCap, "&lt;", "&gt;")
      rightCap = string.gsub(rightCap, "%[", "%]")
      rightCap = string.gsub(rightCap, "{", "}")
      rightCap = string.gsub(rightCap, "%(", "%)")
      rightCap = string.reverse(rightCap)
    end --otherwise, they'll be the same, so don't do anything
    str = string.format(" %s ", str)
    
  elseif options.alignment == "right" then --we'll right-align the text
    leftPadLen = options.width - strLen - 1
    rightPadLen = 0
    rightCap = ""
    str = string.format(" %s", str)
    
  else --Ok, so if it's not center or right, we assume it's left. We don't do justified. Sorry.
    leftPadLen = 0
    rightPadLen = options.width - strLen -1
    leftCap = ""
    str = string.format("%s ", str)
  end--that's it, took care of both left, right, and center formattings, now to output the durn thing. 
  
  if options.inside then 
  --if we're placing the repated spacer inside
  --"=====endcap some text endcap=====" 
  --"=====endcap some text pacdne====="
  --"=================endcap some text" 
  --"some text endcap================="
    return options.capColor .. leftCap .. options.spacerColor.. string.rep(options.spacer, (leftPadLen - capLen)) .. options.textColor .. str .. options.spacerColor ..string.rep(options.spacer, (rightPadLen - capLen)) .. options.capColor .. rightCap
  else 
  --otherwise, it''s be the spaces on the 'inside'
  -- "endcap===== some text =====endcap"
  -- "endcap===== some text =====pacdne" 
  -- "endcap================= some text" 
  -- "some text =================endcap"
    return options.spacerColor .. string.rep(options.spacer, (leftPadLen - capLen)) .. options.capColor .. leftCap .. options.textColor .. str .. options.capColor .. rightCap .. options.spacerColor .. string.rep(options.spacer, (rightPadLen - capLen))
  end
end

function halign(str,options) --str is a string, options is a table
--[[ If they sent anything but a table as the second argument, return useful 
info. But if they didn't send a second argument then that's ok, the defaults 
will be enough to get by and just center the txt
]]--
  if (not type(options) == "table") and (not options == nil) then return "You call this with align(\"some text to format\", &lt;table of options&gt;. Pls check comments for what options and usage information" end 
  options = options or {} --if they sent options, don't overwrite them
  options.width = options.width or 80 --default line length of 80
  options.alignment = options.alignment or "center" --if we don't specify, it's centered
  options.cap = options.cap or "" --default endcap of nothing (an empty string, technically)
  options.spacer = options.spacer or " " --default spacer is.. well.. space
  options.inside = options.inside or false --by default, when centering, formation as spacers|cap|text|cap|spacers
  options.capColor = options.capColor or "|cFFFFFF"--by default, don't change the color of the caps
  options.spacerColor = options.spacerColor or "|cFFFFFF" 
  options.textColor = options.textColor or "|cFFFFFF"--or the text
  if not options.mirror == false then options.mirror = options.mirror or true end--by default, we do want to use mirroring for the caps
  local strLen = string.len(str)
  local leftCap = options.cap
  local rightCap = options.cap
  local leftPadLen = math.floor((options.width - strLen)/2,1) - 1
  local rightPadLen = leftPadLen + ((options.width - strLen)%2)
  local maxPad = 0
  local capLen = string.len(options.cap)
  if capLen &gt; leftPadLen then --if the cap is bigger than the left total padding
    options.cap = options.cap:sub(1, leftPadLen) -- trim it up right!
    capLen = string.len(options.cap)
  end --otherwise, don't mess with it

  
  if options.alignment == "center" then --we're going to center something
    leftPadLen = math.floor((options.width - strLen)/2,1) - 1 --get the padding needed on the left
    rightPadLen = leftPadLen + ((options.width - strLen)%2) --and on the right
    if options.mirror then --if we're reversing the left cap and the right cap (IE {{[[ turns into ]]}} )
      rightCap = string.gsub(rightCap, "&lt;", "&gt;")
      rightCap = string.gsub(rightCap, "%[", "%]")
      rightCap = string.gsub(rightCap, "{", "}")
      rightCap = string.gsub(rightCap, "%(", "%)")
      rightCap = string.reverse(rightCap)
    end --otherwise, they'll be the same, so don't do anything
    str = string.format(" %s ", str)
    
  elseif options.alignment == "right" then --we'll right-align the text
    leftPadLen = options.width - strLen - 1
    rightPadLen = 0
    rightCap = ""
    str = string.format(" %s", str)
    
  else --Ok, so if it's not center or right, we assume it's left. We don't do justified. Sorry.
    leftPadLen = 0
    rightPadLen = options.width - strLen -1
    leftCap = ""
    str = string.format("%s ", str)
  end--that's it, took care of both left, right, and center formattings, now to output the durn thing. 
  
  if options.inside then 
  --if we're placing the repated spacer inside
  --"=====endcap some text endcap=====" 
  --"=====endcap some text pacdne====="
  --"=================endcap some text" 
  --"some text endcap================="
    return options.capColor .. leftCap .. options.spacerColor.. string.rep(options.spacer, (leftPadLen - capLen)) .. options.textColor .. str .. options.spacerColor ..string.rep(options.spacer, (rightPadLen - capLen)) .. options.capColor .. rightCap
  else 
  --otherwise, it''s be the spaces on the 'inside'
  -- "endcap===== some text =====endcap"
  -- "endcap===== some text =====pacdne" 
  -- "endcap================= some text" 
  -- "some text =================endcap"
    return options.spacerColor .. string.rep(options.spacer, (leftPadLen - capLen)) .. options.capColor .. leftCap .. options.textColor .. str .. options.capColor .. rightCap .. options.spacerColor .. string.rep(options.spacer, (rightPadLen - capLen))
  end
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Vitals</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="no" isFolder="no">
						<name>my_vitals_function</name>
						<packageName></packageName>
						<script>function my_vitals_function()
	echo("gmcp.Char.Vitals was updated!")
end</script>
						<eventHandlerList>
							<string>gmcp.Char.Vitals</string>
						</eventHandlerList>
					</Script>
				</ScriptGroup>
				<Script isActive="yes" isFolder="no">
					<name>gmcp.Room.Players</name>
					<packageName></packageName>
					<script>function Players()
        whoshere = ""
 
        for _, tablen in pairs( gmcp.Room.Players ) do
				whoshere = whoshere ..tablen.name
				if #gmcp.Room.Players &gt; 1 and _ ~= #gmcp.Room.Players then
					whoshere = whohere ..", "
				end
        end
        display( whoshere )
end</script>
					<eventHandlerList>
						<string>gmcp.Room.Players</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Players</name>
					<packageName></packageName>
					<script>function Players()
	local enemies = "&lt;red&gt;Enemies&lt;white&gt;: &lt;medium_aquamarine&gt;"
	local allies = "&lt;green&gt;Allies&lt;white&gt;: &lt;medium_aquamarine&gt;"
	for k, v in pairs( gmcp.Room.Players) do
		if table.contains( Allies, v.name ) then
			allies = allies..v.name.." "
		else
			enemies = enemies..v.name.." "
		end
	end
	whohere = enemies.."\n"..allies
	printTargetWindow()
end</script>
					<eventHandlerList>
						<string>gmcp.Room.Players</string>
						<string>gmcp.Room.AddPlayer</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>gmcp Professions</name>
					<packageName></packageName>
					<script>class = gmcp.Char.Status.prof</script>
					<eventHandlerList>
						<string>gmcp.Char.Status.prof</string>
					</eventHandlerList>
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Stupidity</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Stupidity Handler</name>
					<packageName></packageName>
					<script>emoteStupidity = {
"ack", "admire", "adulate", "afarewell", "agree",
"ah", "aha", "ahah", "ahem", "ahoy",
"applaud", "arespect", "argh", "aroo", "attention",
"awesomeness", "aww", "aye", "babble", "bah",
"barf", "bark", "bawl", "beam", "bearhug",
"beckon", "beg", "belch", "bellypoke", "bellyrub",
"bibble", "bird", "bitelip", "blankstare", "bleat",
"bleh", "blink", "blowkiss", "blush", "boast",
"bob", "boggle", "bollocks", "bollox", "boo",
"boogie", "bop", "bored", "bounce", "bow",
"brag", "brandish", "bray", "brb", "bristle",
"brush", "bugeye", "burp", "buzz", "bye",
"cackle", "caper", "caress", "cartwheel", "cavort",
"chant", "check", "cheekpinch", "cheer", "cheers",
"chew", "chin", "chirp", "chortle", "chuckle",
"clampteeth", "clap", "clear", "clingto", "club",
"cluck", "cmon", "collapse", "comfort", "comfortkiss",
"comfy", "complain", "concerned", "confused", "console",
"contemplate", "contentsigh", "convulse", "cool", "cough",
"cower", "coy", "crack", "cringe", "cross",
"cry", "cuddle", "cuff", "cupcheek", "curious",
"curl", "curlup", "curse", "curtsey", "cya",
"damn", "dance", "daydream", "deepkiss", "defy",
"deny", "despair", "determined", "dirge", "dismay",
"doff", "doh", "dominance", "dork", "dribble",
"drool", "drum", "duck", "eagerkiss", "earflick",
"earlick", "earpull", "earscratch", "eek", "eep",
"egg", "eh", "elbow", "embrace", "envy",
"erk", "erm", "evilgrin", "ew", "excellent",
"eye", "eyepoke", "eyerub", "eyetwitch", "facepalm",
"faint", "fakesmile", "farewell", "fart", "fell",
"fiddle", "fidget", "finally", "fingercross", "fingerprick",
"firmshake", "fistofrage", "flail", "flap", "flex",
"flip", "flirt", "flit", "flop", "flounce",
"flutter", "foldchair", "fondle", "fool", "footrub",
"fret", "frolic", "frown", "fume", "furrow",
"gag", "gah", "gambol", "gan", "gape",
"gasp", "gawk", "gaze", "gentlehands", "gibber",
"giggle", "gigglefit", "gigglesnort", "glare", "glee",
"gloat", "gloveslap", "glower", "gnash", "gnaw",
"gnehe", "gnod", "good", "goodnight", "goosestep",
"grab", "greet", "grimace", "grin", "grind",
"gripe", "groan", "groom", "groove", "grope",
"gross", "grouch", "grouphug", "grouse", "grovel",
"growl", "grr", "grumble", "grump", "grunt",
"guffaw", "gulp", "ha", "hail", "hairstroke",
"halter", "hammer", "happygasp", "harumph", "hate",
"headbang", "headpat", "headslam", "heckle", "heh",
"hehe", "hello", "heyo", "hi", "hiccup",
"hideface", "highfive", "hiss", "hmm", "hmph",
"hoho", "holdhands", "hop", "hope", "howl",
"hrm", "huff", "hug", "huh", "hum",
"humor", "hush", "huzzah", "ick", "ignore",
"incline", "inhalescent", "innocence", "innocent", "insane",
"isee", "jig", "jump", "keel", "kiss",
"kisshand", "kneel", "kowtow", "laugh", "lean",
"leanhug", "leanon", "leer", "lick", "listen",
"lmao", "lol", "loom", "love", "lovecomfort",
"lovekiss", "lovetoo", "luck", "manhug", "march",
"massage", "meek", "meh", "melt", "mend",
"meow", "mercy", "mewl", "mhm", "milk",
"mm", "moan", "mock", "moo", "moon",
"mope", "muhaha", "mumble", "murmur", "mutter",
"nag", "nah", "nailbite", "narf", "narrow",
"nay", "nevermind", "nibble", "nibblekiss", "nice",
"nip", "nm", "no", "nod", "noogie",
"nose", "noserub", "nothing", "noway", "np",
"nudge", "nuzzle", "ogle", "oh", "ohh",
"ohpoo", "oi", "oink", "ok", "omg",
"onetear", "ooer", "oof", "ooo", "oops",
"ouch", "ow", "owlgaze", "pace", "pah",
"pal", "pale", "panic", "pant", "pants",
"paranoia", "pardon", "pat", "peck", "peer",
"perk", "pester", "pet", "pfft", "phew",
"picknose", "pickshow", "pinch", "pishposh", "pity",
"plead", "please", "point", "poke", "politenod",
"ponder", "poo", "pose", "pounce", "pout",
"praise", "prance", "pray", "preen", "prickears",
"pride", "prod", "proudsmile", "psh", "pucker",
"puke", "punt", "purr", "purse", "puzzle",
"quack", "quake", "question", "quiet", "quiver",
"raise", "raisehand", "rally", "rasp", "rave",
"relax", "relief", "restless", "roar", "rock",
"rofl", "roll", "romp", "rub", "rubfoot",
"rubtemp", "rue", "ruffle", "sadshake", "sadsmile",
"sagenod", "sageshake", "salute", "san", "sarcasm",
"sarcastic", "saunter", "scamper", "scoff", "scold",
"scorn", "scowl", "scratch", "scream", "scuff",
"serenade", "shake", "shakefist", "shakehand", "shame",
"shamescuff", "sheepish", "shinkick", "shiver", "shock",
"shoo", "showthroat", "shriek", "shrug", "shudder",
"shuffle", "shun", "shush", "sigh", "simper",
"sing", "sit", "skip", "skulk", "slap",
"sling", "slobber", "slowdance", "slownod", "slump",
"smack", "smile", "smirk", "smooch", "smooth",
"smoulder", "smug", "snap", "snarl", "sneer",
"sneeze", "snicker", "sniff", "sniffle", "snigger",
"snivel", "snog", "snoodle", "snore", "snort",
"snuffle", "snuggle", "sob", "softsmile", "solemn",
"soothe", "sorry", "sound", "spank", "sparkle",
"speechless", "spin", "spinaround", "spit", "splutter",
"sputter", "squeak", "squeal", "squeeze", "squirm",
"squish", "stagger", "stand", "standdown", "stare",
"stars", "stomp", "stoprambling", "stretch", "stroke",
"strokecheek", "stroll", "strum", "strut", "study",
"stumble", "submission", "suck", "sulk", "sure",
"surprise", "suspicious", "swagger", "sway", "swear",
"sweat", "swoon", "tackle", "tada", "tailgreet",
"tailwave", "tailwhip", "tango", "tantrum", "tap",
"tapdance", "taunt", "tease", "temples", "tenderkiss",
"thank", "thanks", "think", "thought", "thrash",
"thumb", "thumbsdown", "thumbsup", "thump", "thwap",
"tickle", "timid", "tiptoe", "tired", "titter",
"toast", "tongue", "tongueclick", "tossaxe", "totaldominance",
"totalsubmission", "tralala", "tremble", "tsk", "tug",
"tut", "twiddle", "twinkle", "twirl", "twitch",
"twitter", "ugh", "uh", "uhuh", "um",
"unclean", "urge", "victory", "voices", "vomit",
"wag", "waggle", "wahoo", "wail", "wait",
"waltz", "wan", "wave", "wavehand", "wb",
"weak", "weary", "weep", "welcome", "wha?",
"what", "whee", "wheeze", "whew", "whimper",
"whine", "whinny", "whirl", "whistle", "whoa",
"whoop", "whoops", "wiggle", "wilt", "wince",
"wink", "winknudge", "wolfgrin", "wolfhowl", "woo",
"woot", "worship", "wow", "wrap", "wrestle",
"wriggle", "wring", "wrinkle", "wry", "yahoo",
"yawn", "yay", "yelp", "yep", "yes",
"yo", "yodel", "yuck", "yum",	 "sco",
"score",	 "remove armour",	 "remove greaves",	 "remove vambraces",
"remove helm",	 "remove pants",
}

function checkCommand()
	if (table.contains(emoteStupidity, command)) then
		return true
	else
		return false
	end
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Profession Specific</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Summoner</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Enslavery</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>Enslavery Unleash Functions</name>
							<packageName></packageName>
							<script>function Unleash(type)
	if (type == "damage") then
		if demonleash == 1 then
			if golgotha == 1 then
				send("unleash golgotha at " .. target.name)
			elseif dameron == 1 then
				send("unleash dameron at " .. target.name .. " golgotha")
			elseif palpatar == 1 then
				send("unleash palpatar at " .. target.name)
			elseif belial == 1 then
				send("unleash belial at " .. target.name)
			elseif lyncantha == 1 then
				send("unleash  lyncantha at " .. target.name)
			elseif scrag == 1 then
				send("unleash scrag at " .. target.name)
			end
		end
	elseif (type == "damageinline") then
		if demonleash == 1 then
			if golgotha == 1 then
				unleashdemon = "golgotha"
			elseif dameron == 1 then
				unleashdemon = "dameron"
			elseif palpatar == 1 then
				unleashdemon = "palpatar"
			elseif belial == 1 then
				unleashdemon = "belial"
			elseif lyncantha == 1 then
				unleashdemon = "lyncantha"
			elseif scrag == 1 then
				unleashdemon = "scrag"
			end
		end
	elseif (type == "damagerinline") then
		if demonleash == 1 then
			if belial == 1 then
				unleashdemon = "belial"
			elseif palpatar == 1 then
				unleashdemon = "palpatar"
			elseif golgotha == 1 then
				unleashdemon = "golgotha"
			elseif hecate == 1 and target.aura == false then
				unleashdemon = "hecate"
			elseif lyncantha == 1 then
				unleashdemon = "lyncantha"
			elseif dameron == 1 then
				unleashdemon = "dameron"
			elseif scrag == 1 then
				unleashdemon = "scrag"
			elseif rixil == 1 then
				unleashdemon = "rixil"
			elseif eerion == 1 then
				unleashdemon = "eerion"
			elseif skyrax == 1 then
				unleashdemon = "skyrax"
			end
		end
	elseif (type == "madness") then
		if demonleash == 1 then
			if cadmus == 1 then
				send("unleash cadmus at " .. target.name)
			elseif golgotha == 1 then
				send("unleash golgotha at " .. target.name)
			elseif dameron == 1 then
				send("unleash dameron at " .. target.name .. " golgotha")
			elseif palpatar == 1 then
				send("unleash palpatar at " .. target.name)
			elseif belial == 1 then
				send("unleash belial at " .. target.name)
			elseif (pyradius == 1) and (spark &lt;= 60) then
				send("unleash pyradius at " .. target.name)
			elseif (dameron == 1) and (spark &lt;= 60) then
				send("unleash dameron at " .. target.name .. " pyradius")
			elseif lyncantha == 1 then
				send("unleash  lyncantha at " .. target.name)
			elseif scrag == 1 then
				send("unleash scrag at " .. target.name)
			end
		end
	elseif (type == "damager") then
		if demonleash == 1 then
			if belial == 1 then
				send("unleash belial at " .. target.name)
			elseif palpatar == 1 then
				send("unleash palpatar at " .. target.name)
			elseif golgotha == 1 then
				send("unleash golgotha at " .. target.name)
			elseif hecate == 1 and target.aura == false then
				send("unleash hecate at " .. target.name)
			elseif lyncantha == 1 then
				send("unleash  lyncantha at " .. target.name)
			elseif dameron == 1 then
				send("unleash dameron at " .. target.name .. " golgotha")
			elseif scrag == 1 then
				send("unleash scrag at " .. target.name)
			elseif rixil == 1 then
				send("unleash  rixil at " .. target.name)
			elseif eerion == 1 then
				send("unleash eerion at " .. target.name)
			elseif skyrax == 1 then
				send("unleash skyrax at " .. target.name)
			end
		end
	elseif (type == "attunement") then
		if demonleash == 1 then
			if hecate == 1 and target.aura == false then
				send("unleash hecate at " .. target.name)
			elseif (pyradius == 1) and (spark &lt;= 60) then
				send("unleash pyradius at " .. target.name)
			elseif belial == 1 then
				send("unleash belial at " .. target.name)
			elseif palpatar == 1 then
				send("unleash palpatar at " .. target.name)
			elseif (pyradius == 1) and incinerate == true then
				send("unleash pyradius at " .. target.name)
			elseif (dameron == 1) and incinerate == true then
				send("unleash dameron at " .. target.name .. " pyradius")
			elseif (dameron == 1) and (spark &lt;= 50) then
				send("unleash dameron at " .. target.name .. " pyradius")
			elseif lyncantha == 1 then
				send("unleash lyncantha at " .. target.name)
			elseif golgotha == 1 then
				send("unleash golgotha at " .. target.name)
			elseif rixil == 1 then
				send("unleash  rixil at " .. target.name)
			elseif scrag == 1 then
				send("unleash scrag at " .. target.name)
			elseif eerion == 1 then
				send("unleash eerion at " .. target.name)
			elseif skyrax == 1 then
				send("unleash skyrax at " .. target.name)
			end
		end
	elseif (type == "affliction") then
		if demonleash == 1 then
			if cadmus == 1 and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "hallucinations") then
				send("unleash cadmus at " .. target.name)
			elseif dameron == 1 and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "hallucinations") then
				send("unleash dameron at " .. target.name .. " cadmus")
			elseif hecate == 1 then
				send("unleash hecate at " .. target.name)
			elseif belial == 1 then
				send("unleash belial at " .. target.name)
			elseif palpatar == 1 then
				send("unleash palpatar at " .. target.name)
			elseif lyncantha == 1 then
				send("unleash lyncantha at " .. target.name)
			elseif scrag == 1 then
				send("unleash scrag at " .. target.name)
			end
		end
	elseif (type == "nocadmus") then
		if demonleash == 1 then
			if golgotha == 1 and table.contains(target.afflictions, "sensitivity") then
				send("unleash golgotha at " .. target.name)
			elseif dameron == 1 and table.contains(target.afflictions, "sensitivity") then
				send("unleash dameron at " .. target.name .. " golgotha")
			elseif hecate == 1 and target.aura == false then
				send("unleash hecate at " .. target.name)
			elseif dameron == 1 and target.aura == false then
				send("unleash dameron at " .. target.name .. " hecate")
			elseif palpatar == 1 then
				send("unleash palpatar at " .. target.name)
			elseif lyncantha == 1 and table.contains(target.afflictions, "butisol") then
				send("unleash lyncantha at " .. target.name)
			elseif scrag == 1 then
				send("unleash scrag at " .. target.name)
			elseif belial == 1 then
				send("unleash belial at " .. target.name)
			end
		end
	elseif (type == "heave") then
		if demonleash == 1 then
			if (pyradius == 1) then
				send("unleash pyradius at " .. target.name)
			elseif (dameron == 1) then
				send("unleash dameron at " .. target.name .. " pyradius")
			end
		end
	end
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Noctu</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="no" isFolder="no">
							<name>Summoner Functions Creator</name>
							<packageName></packageName>
							<script>function Noctu(type)
	if type == "impatience" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice quicken at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant quicken at " .. target.name)
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor quicken at " .. target.name)
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon quicken at " .. target.name .. " stupidity")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " heroism")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " stupidity")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " masochism")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " confusion")
		else
			Unleash("affliction")
			send("fling creator quicken at " .. target.name)
		end	
	elseif type == "impatienceduplicate" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice quicken at " .. target.name .. " duplicate")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant quicken at " .. target.name .. " duplicate")
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor quicken at " .. target.name .. " duplicate")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon quicken at " .. target.name .. " stupidity duplicate")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " heroism duplicate")
		elseif (not table.contains(target.afflictions, "justice")) then
			Unleash("affliction")
			send("fling justice quicken at " .. target.name .. " duplicate")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " stupidity duplicate")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " masochism duplicate")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " confusion duplicate")
		else
			Unleash("affliction")
			send("fling creator quicken at " .. target.name .. " duplicate")
		end	
	elseif type == "impatienceduplicatepyradius" then
		if (not table.contains(target.afflictions, "justice"))  then
			send("fling justice quicken at " .. target.name .. " duplicate")
		elseif target.hierophant == false and hierophantmode == true then		
			send("fling hierophant quicken at " .. target.name .. " duplicate")
		elseif (not table.contains(target.afflictions, "numbness")) then		
			send("fling emperor quicken at " .. target.name .. " duplicate")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			send("fling moon quicken at " .. target.name .. " stupidity duplicate")
--		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			send("fling moon quicken at " .. target.name .. " heroism duplicate")
		elseif (not table.contains(target.afflictions, "justice")) then
			send("fling justice quicken at " .. target.name .. " duplicate")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			send("fling moon quicken at " .. target.name .. " stupidity duplicate")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			send("fling moon quicken at " .. target.name .. " masochism duplicate")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			send("fling moon quicken at " .. target.name .. " confusion duplicate")
		else
			send("fling creator quicken at " .. target.name)
		end	
	elseif type == "impatienceblast" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice quicken at " .. target.name .. " blast")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant quicken at " .. target.name.. " blast")
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor quicken at " .. target.name .. " blast")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon quicken at " .. target.name .. " stupidity blast")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " heroism blast")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " stupidity blast")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " masochism blast")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " confusion blast")
		else
			Unleash("affliction")
			send("fling creator quicken at " .. target.name .. " blast")
		end	
	elseif type == "impatiencestrengthen" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice quicken at " .. target.name .. " strengthen")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant quicken at " .. target.name .. " strenghten")
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor quicken at " .. target.name .. " strengthen")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " stupidity strengthen")
--		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
--			Unleash("affliction")
--			send("fling moon quicken at " .. target.name .. " heroism strengthen")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling justice quicken at " .. target.name .. " strengthen")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " stupidity strengthen")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " masochism strengthen")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " confusion strengthen")
		else
			Unleash("affliction")
			send("fling creator quicken at " .. target.name .. " strengthen")
		end	
	elseif type == "vertigo" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice disorient at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant disorient at " .. target.name)
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor disorient at " .. target.name .. " strengthen")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon disorient at " .. target.name .. " stupidity")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon disorient at " .. target.name .. " heroism")
		elseif (not table.contains(target.afflictions, "justice")) then
			Unleash("affliction")
			send("fling justice disorient at " .. target.name)
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon disorient at " .. target.name .. " stupidity")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon disorient at " .. target.name .. " masochism")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon disorient at " .. target.name .. " confusion")
		else
			Unleash("affliction")
			send("fling creator disorient at " .. target.name)
		end	
	elseif type == "epilepsy" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice flash at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant flash at " .. target.name)
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor flash at " .. target.name)
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon flash at " .. target.name .. " stupidity")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon flash at " .. target.name .. " heroism")
		elseif (not table.contains(target.afflictions, "justice")) then
			Unleash("affliction")
			send("fling justice flash at " .. target.name)
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon flash at " .. target.name .. " stupidity")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon flash at " .. target.name .. " masochism")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon flash at " .. target.name .. " confusion")
		else
			Unleash("affliction")
			send("fling creator flash at " .. target.name)
		end	
	elseif type == "epilepsyduplicate" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice flash at " .. target.name .. " duplicate")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant flash at " .. target.name .. " duplicate")
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor flash at " .. target.name .. " duplicate")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon flash at " .. target.name .. " stupidity duplicate")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon flash at " .. target.name .. " heroism duplicate")
		elseif (not table.contains(target.afflictions, "justice")) then
			Unleash("affliction")
			send("fling justice flash at " .. target.name .. " duplicate")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon flash at " .. target.name .. " stupidity duplicate")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon flash at " .. target.name .. " masochism duplicate")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon flash at " .. target.name .. " confusion duplicate")
		else
			Unleash("affliction")
			send("fling creator flash at " .. target.name .. " duplicate")
		end	
	elseif type == "soulwrack" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice soulwrack at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant soulwrack at " .. target.name)
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor soulwrack at " .. target.name)
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon soulwrack at " .. target.name .. " stupidity")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon soulwrack at " .. target.name .. " heroism")
		elseif (not table.contains(target.afflictions, "justice")) then
			Unleash("affliction")
			send("fling justice soulwrack at " .. target.name)
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon soulwrack at " .. target.name .. " stupidity")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon soulwrack at " .. target.name .. " masochism")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon soulwrack at " .. target.name .. " confusion")
		else
			Unleash("affliction")
			send("fling creator soulwrack at " .. target.name)
		end	
	elseif type == "soulwrackduplicate" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice soulwrack at " .. target.name .. " duplicate")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant soulwrack at " .. target.name .. " duplicate")
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor soulwrack at " .. target.name .. " duplicate")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon soulwrack at " .. target.name .. " stupidity duplicate")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon soulwrack at " .. target.name .. " heroism duplicate")
		elseif (not table.contains(target.afflictions, "justice")) then
			Unleash("affliction")
			send("fling justice soulwrack at " .. target.name .. " heroism duplicate")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon soulwrack at " .. target.name .. " stupidity duplicate")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon soulwrack at " .. target.name .. " masochism duplicate")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon soulwrack at " .. target.name .. " confusion duplicate")
		else
			Unleash("affliction")
			send("fling creator soulwrack at " .. target.name .. " duplicate")
		end	
	elseif type == "vertigointensify" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice disorient at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant disorient at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor disorient at " .. target.name.. " intensify")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon disorient at " .. target.name .. " stupidity intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon disorient at " .. target.name .. " heroism intensify")
		elseif (not table.contains(target.afflictions, "justice")) then
			Unleash("affliction")
			send("fling justice disorient at " .. target.name .. " intensify")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon disorient at " .. target.name .. " stupidity intensify")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon disorient at " .. target.name .. " masochism intensify")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon disorient at " .. target.name .. " confusion intensify")
		else
			Unleash("affliction")
			send("fling creator disorient at " .. target.name .. " intensify")
		end	
	elseif type == "hallucinationsintensify" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("nocadmus")
			send("fling justice fever at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("nocadmus")
			send("fling hierophant fever at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "numbness")) then
			Unleash("nocadmus")
			send("fling emperor fever at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("nocadmus")
			send("fling moon fever at " .. target.name .. " heroism intensify")
		elseif (not table.contains(target.afflictions, "justice")) then
			Unleash("nocadmus")
			send("fling justice fever at " .. target.name .. " intensify")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("nocadmus")
			send("fling moon fever at " .. target.name .. " masochism intensify")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("nocadmus")
			send("fling moon fever at " .. target.name .. " confusion intensify")
		else
			Unleash("nocadmus")
			send("fling creator fever at " .. target.name .. " intensify")
		end	
	elseif type == "hallucinations" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("nocadmus")
			send("fling justice fever at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("nocadmus")
			send("fling hierophant fever at " .. target.name)
		elseif (not table.contains(target.afflictions, "numbness")) then
			Unleash("nocadmus")
			send("fling emperor fever at " .. target.name)
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("nocadmus")
--			send("fling moon fever at " .. target.name .. " stupidity")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("nocadmus")
			send("fling moon fever at " .. target.name .. " heroism")
		elseif (not table.contains(target.afflictions, "justice")) then
			Unleash("nocadmus")
			send("fling justice fever at " .. target.name)
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("nocadmus")
			send("fling moon fever at " .. target.name .. " stupidity")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("nocadmus")
			send("fling moon fever at " .. target.name .. " masochism")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("nocadmus")
			send("fling moon fever at " .. target.name .. " confusion")
		else
			Unleash("nocadmus")
			send("fling creator fever at " .. target.name)
		end	
	elseif type == "deafintensify" then
		if (not table.contains(target.afflictions, "justice")) then
			send("fling justice nervewrack at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			send("fling hierophant nervewrack at " .. target.name .." intensify")
		elseif (not table.contains(target.afflictions, "numbness")) then		
			send("fling emperor nervewrack at " .. target.name.. " intensify")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			send("fling moon nervewrack at " .. target.name .. " stupidity intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			send("fling moon nervewrack at " .. target.name .. " heroism intensify")
		elseif (not table.contains(target.afflictions, "justice")) then
			send("fling justice nervewrack at " .. target.name .. " intensify")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			send("fling moon nervewrack at " .. target.name .. " stupidity intensify")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			send("fling moon nervewrack at " .. target.name .. " masochism intensify")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			send("fling moon nervewrack at " .. target.name .. " confusion intensify")
		else
			send("fling creator neverwrack at " .. target.name .. " intensify")
		end	
	elseif type == "deafintensifycreator" then
		if (not table.contains(target.afflictions, "justice")) then
			send("fling justice nervewrack at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			send("fling hierophant nervewrack at " .. target.name .." intensify")
		elseif (not table.contains(target.afflictions, "numbness")) then		
			send("fling emperor nervewrack at " .. target.name.. " intensify")
		else
			send("fling creator nervewrack at " .. target.name .. " intensify")
		end	
	elseif type == "deaf" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice nervewrack at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant nervewrack at " .. target.name)
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor nervewrack at " .. target.name)
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon nervewrack at " .. target.name .. " stupidity")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon nervewrack at " .. target.name .. " heroism")
		elseif (not table.contains(target.afflictions, "justice")) then
			Unleash("affliction")
			send("fling justice nervewrack at " .. target.name)
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon nervewrack at " .. target.name .. " stupidity")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon nervewrack at " .. target.name .. " masochism")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon nervewrack at " .. target.name .. " confusion")
		else
			Unleash("affliction")
			send("fling creator nervewrack at " .. target.name)
		end	
	elseif type == "heave" then
		if (not table.contains(target.afflictions, "justice"))  then
			send("fling justice heave at " .. target.name .. " intensify")
			Unleash("heave")
		elseif target.hierophant == false and hierophantmode == true then		
			send("fling hierophant heave at " .. target.name .. " intensify")
			Unleash("heave")
		elseif (not table.contains(target.afflictions, "numbness")) then		
			send("fling emperor heave at " .. target.name.. " intensify")
			Unleash("heave")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			send("fling moon heave at " .. target.name .. " stupidity intensify")
--			Unleash("heave")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			send("fling moon heave at " .. target.name .. " heroism intensify")
			Unleash("heave")
		elseif (not table.contains(target.afflictions, "justice")) then
			send("fling justice heave at " .. target.name .. " intensify")
			Unleash("heave")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			send("fling moon heave at " .. target.name .. " stupidity intensify")
			Unleash("heave")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			send("fling moon heave at " .. target.name .. " masochism intensify")
			Unleash("heave")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			send("fling moon heave at " .. target.name .. " confusion intensify")
			Unleash("heave")
		else
			send("fling creator quicken at " .. target.name .. " intensify")
			Unleash("heave")
		end	
	elseif type == "heaveho" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice heave at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant heave at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "numbness")) then
			Unleash("affliction")		
			send("fling emperor heave at " .. target.name.. " intensify")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon heave at " .. target.name .. " stupidity")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon heave at " .. target.name .. " heroism")
		elseif (not table.contains(target.afflictions, "justice")) then
			Unleash("affliction")
			send("fling justice heave at " .. target.name)
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon heave at " .. target.name .. " stupidity")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon heave at " .. target.name .. " masochism")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon heave at " .. target.name .. " confusion")
		else
			Unleash("affliction")
			send("fling creator heave at " .. target.name)
		end	
	elseif type == "soulburn" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice soulburn at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant soulburn at " .. target.name)
		elseif (not table.contains(target.afflictions, "numbness")) then
			Unleash("affliction")
			send("fling emperor soulburn at " .. target.name)
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon soulburn at " .. target.name .. " stupidity")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon soulburn at " .. target.name .. " heroism")
		elseif (not table.contains(target.afflictions, "justice")) then
			Unleash("affliction")
			send("fling justice soulburn at " .. target.name)
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon soulburn at " .. target.name .. " stupidity")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon soulburn at " .. target.name .. " masochism")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon soulburn at " .. target.name .. " confusion")
		else
			Unleash("affliction")
			send("fling creator soulburn at " .. target.name)
		end	
	elseif type == "healthleech" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice dehydrate at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant dehydrate at " .. target.name)
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor dehydrate at " .. target.name)
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon dehydrate at " .. target.name .. " stupidity")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon dehydrate at " .. target.name .. " heroism")
		elseif (not table.contains(target.afflictions, "justice")) then
			Unleash("affliction")
			send("fling justice dehydrate at " .. target.name)
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon dehydrate at " .. target.name .. " stupidity")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon dehydrate at " .. target.name .. " masochism")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon dehydrate at " .. target.name .. " confusion")
		else
			Unleash("affliction")
			send("fling creator dehydrate at " .. target.name)
		end	
	elseif type == "healthleechintensify" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice dehydrate at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant dehydrate at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor dehydrate at " .. target.name .. " intensify")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon dehydrate at " .. target.name .. " stupidity intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
  			Unleash("affliction")
			send("fling moon dehydrate at " .. target.name .. " heroism intensify")
		elseif (not table.contains(target.afflictions, "justice")) then
  			Unleash("affliction")
			send("fling justice dehydrate at " .. target.name .. " intensify")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon dehydrate at " .. target.name .. " stupidity intensify")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon dehydrate at " .. target.name .. " masochism intensify")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon dehydrate at " .. target.name .. " confusion intensify")
		else
			Unleash("affliction")
			send("fling creator dehydrate at " .. target.name .. " intensify")
		end	
	elseif type == "nerveburn" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice nerveburn at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant nerveburn at " .. target.name)
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor nerveburn at " .. target.name)
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon nerveburn at " .. target.name .. " stupidity")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon nerveburn at " .. target.name .. " heroism")
		elseif (not table.contains(target.afflictions, "justice")) then
			Unleash("affliction")
			send("fling justice nerveburn at " .. target.name)
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon nerveburn at " .. target.name .. " stupidity")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon nerveburn at " .. target.name .. " masochism")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon nerveburn at " .. target.name .. " confusion")
		else
			Unleash("affliction")
			send("fling creator nerveburn at " .. target.name)
		end	
	elseif type == "nerveburnintensify" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice nerveburn at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant nerveburn at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor nerveburn at " .. target.name.. " intensify")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon nerveburn at " .. target.name .. " stupidity intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon nerveburn at " .. target.name .. " heroism intensify")
		elseif (not table.contains(target.afflictions, "justice")) then
			Unleash("affliction")
			send("fling justice nerveburn at " .. target.name .. " intensify")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon nerveburn at " .. target.name .. " stupidity intensify")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon nerveburn at " .. target.name .. " masochism intensify")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon nerveburn at " .. target.name .. " confusion intensify")
		else
			Unleash("affliction")
			send("fling creator nerveburn at " .. target.name .. " intensify")
		end	
	elseif type == "asthma" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice combustion at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant combustion at " .. target.name)
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor combustion at " .. target.name.. " intensify")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon combustion at " .. target.name .. " stupidity intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon combustion at " .. target.name .. " heroism intensify")
		elseif (not table.contains(target.afflictions, "justice")) then
			Unleash("affliction")
			send("fling justice combustion at " .. target.name .. " intensify")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon combustion at " .. target.name .. " stupidity intensify")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon combustion at " .. target.name .. " masochism intensify")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon combustino at " .. target.name .. " confusion intensify")
		else
			Unleash("affliction")
			send("fling creator combustion at " .. target.name .. " intensify")
		end	
	elseif type == "soulwrack" then
		if (not table.contains(target.afflictions, "justice"))  then
			send("fling justice soulwrack at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			send("fling hierophant soulwrack at " .. target.name)
		elseif (not table.contains(target.afflictions, "numbness")) then		
			send("fling emperor soulwrack at " .. target.name)
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			send("fling moon soulwrack at " .. target.name .. " stupidity")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			send("fling moon soulwrack at " .. target.name .. " heroism")
		elseif (not table.contains(target.afflictions, "justice")) then
			send("fling justice soulwrack at " .. target.name)
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			send("fling moon soulwrack at " .. target.name .. " stupidity")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			send("fling moon soulwrack at " .. target.name .. " masochism")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			send("fling moon soulwrack at " .. target.name .. " confusion")
		else
			send("fling creator soulwrack at " .. target.name)
		end	
	elseif type == "soulburnblast" then
		send("invoke soulburn " .. target.name .. " blast")
	end
end

function Creator(type)
	if type == "impatience" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice quicken at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant quicken at " .. target.name)
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor quicken at " .. target.name)
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " heroism")
		else
			Unleash("affliction")
			send("fling creator quicken at " .. target.name)
		end	
	elseif type == "impatienceduplicate" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice quicken at " .. target.name .. " duplicate")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant quicken at " .. target.name .. " duplicate")
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor quicken at " .. target.name .. " duplicate")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " heroism duplicate")
		else
			Unleash("affliction")
			send("fling creator quicken at " .. target.name .. " duplicate")
		end	
	elseif type == "impatienceduplicatepyradius" then
		if (not table.contains(target.afflictions, "justice"))  then
			send("fling justice quicken at " .. target.name .. " duplicate")
		elseif target.hierophant == false and hierophantmode == true then		
			send("fling hierophant quicken at " .. target.name .. " duplicate")
		elseif (not table.contains(target.afflictions, "numbness")) then		
			send("fling emperor quicken at " .. target.name .. " duplicate")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			send("fling moon quicken at " .. target.name .. " heroism duplicate")
		else
			send("fling creator quicken at " .. target.name)
		end	
	elseif type == "impatienceblast" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice quicken at " .. target.name .. " blast")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant quicken at " .. target.name.. " blast")
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor quicken at " .. target.name .. " blast")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " heroism")
		else
			Unleash("affliction")
			send("fling creator quicken at " .. target.name .. " blast")
		end	
	elseif type == "impatiencestrengthen" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice quicken at " .. target.name .. " strengthen")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant quicken at " .. target.name .. " strenghten")
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor quicken at " .. target.name .. " strengthen")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " heroism strengthen")
		else
			Unleash("affliction")
			send("fling creator quicken at " .. target.name .. " strengthen")
		end	
	elseif type == "vertigo" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice disorient at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant disorient at " .. target.name)
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor disorient at " .. target.name .. " strengthen")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon disorient at " .. target.name .. " heroism")
			Unleash("affliction")
			send("fling creator disorient at " .. target.name)
		end	
	elseif type == "epilepsy" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice flash at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant flash at " .. target.name)
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor flash at " .. target.name)
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon flash at " .. target.name .. " heroism")
		else
			Unleash("affliction")
			send("fling creator flash at " .. target.name)
		end	
	elseif type == "epilepsyduplicate" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice flash at " .. target.name .. " duplicate")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant flash at " .. target.name .. " duplicate")
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor flash at " .. target.name .. " duplicate")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon flash at " .. target.name .. " heroism duplicate")
		else
			Unleash("affliction")
			send("fling creator flash at " .. target.name .. " duplicate")
		end	
	elseif type == "soulwrack" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice soulwrack at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant soulwrack at " .. target.name)
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor soulwrack at " .. target.name)
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon soulwrack at " .. target.name .. " heroism")
		else
			Unleash("affliction")
			send("fling creator soulwrack at " .. target.name)
		end	
	elseif type == "soulwrackduplicate" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice soulwrack at " .. target.name .. " duplicate")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant soulwrack at " .. target.name .. " duplicate")
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor soulwrack at " .. target.name .. " duplicate")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon soulwrack at " .. target.name .. " heroism duplicate")
		else
			Unleash("affliction")
			send("fling creator soulwrack at " .. target.name .. " duplicate")
		end	
	elseif type == "vertigointensify" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice disorient at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant disorient at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor disorient at " .. target.name.. " intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon disorient at " .. target.name .. " heroism intensify")
		else
			Unleash("affliction")
			send("fling creator disorient at " .. target.name .. " intensify")
		end	
	elseif type == "hallucinationsintensify" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice fever at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant fever at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "numbness")) then
			Unleash("affliction")
			send("fling emperor fever at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon fever at " .. target.name .. " heroism intensify")
		else
			Unleash("affliction")
			send("fling creator fever at " .. target.name .. " intensify")
		end	
	elseif type == "hallucinations" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice fever at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant fever at " .. target.name)
		elseif (not table.contains(target.afflictions, "numbness")) then
			Unleash("affliction")
			send("fling emperor fever at " .. target.name)
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon fever at " .. target.name .. " heroism")
		else
			Unleash("affliction")
			send("fling creator fever at " .. target.name)
		end	
	elseif type == "deafintensify" then
		if (not table.contains(target.afflictions, "justice"))  then
			send("fling justice nervewrack at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			send("fling hierophant nervewrack at " .. target.name .." intensify")
		elseif (not table.contains(target.afflictions, "numbness")) then		
			send("fling emperor nervewrack at " .. target.name.. " intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			send("fling moon nervewrack at " .. target.name .. " heroism intensify")
		else
			send("fling creator neverwrack at " .. target.name .. " intensify")
		end	
	elseif type == "deafintensifycreator" then
		if (not table.contains(target.afflictions, "justice"))  then
			send("fling justice nervewrack at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			send("fling hierophant nervewrack at " .. target.name .." intensify")
		elseif (not table.contains(target.afflictions, "numbness")) then		
			send("fling emperor nervewrack at " .. target.name.. " intensify")
		else
			send("fling creator nervewrack at " .. target.name .. " intensify")
		end	
	elseif type == "deaf" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice nervewrack at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant nervewrack at " .. target.name)
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor nervewrack at " .. target.name)
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon nervewrack at " .. target.name .. " heroism")
		else
			Unleash("affliction")
			send("fling creator nervewrack at " .. target.name)
		end	
	elseif type == "heave" then
		if (not table.contains(target.afflictions, "justice"))  then
			send("fling justice heave at " .. target.name .. " intensify")
			Unleash("heave")
		elseif target.hierophant == false and hierophantmode == true then		
			send("fling hierophant heave at " .. target.name .. " intensify")
			Unleash("heave")
		elseif (not table.contains(target.afflictions, "numbness")) then		
			send("fling emperor heave at " .. target.name.. " intensify")
			Unleash("heave")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			send("fling moon heave at " .. target.name .. " heroism intensify")
			Unleash("heave")
		else
			send("fling creator quicken at " .. target.name .. " intensify")
			Unleash("heave")
		end	
	elseif type == "heaveho" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice heave at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant heave at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "numbness")) then
			Unleash("affliction")		
			send("fling emperor heave at " .. target.name.. " intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon heave at " .. target.name .. " heroism")
		else
			Unleash("affliction")
			send("fling creator heave at " .. target.name)
		end	
	elseif type == "soulburn" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice soulburn at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant soulburn at " .. target.name)
		elseif (not table.contains(target.afflictions, "numbness")) then
			Unleash("affliction")
			send("fling emperor soulburn at " .. target.name)
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon soulburn at " .. target.name .. " heroism")
		else
			Unleash("affliction")
			send("fling creator soulburn at " .. target.name)
		end	
	elseif type == "healthleech" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice dehydrate at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant dehydrate at " .. target.name)
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor dehydrate at " .. target.name)
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon dehydrate at " .. target.name .. " heroism")
		else
			Unleash("affliction")
			send("fling creator dehydrate at " .. target.name)
		end	
	elseif type == "healthleechintensify" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice dehydrate at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant dehydrate at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor dehydrate at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
  			Unleash("affliction")
			send("fling moon dehydrate at " .. target.name .. " heroism intensify")
		else
			Unleash("affliction")
			send("fling creator dehydrate at " .. target.name .. " intensify")
		end	
	elseif type == "nerveburn" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice nerveburn at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant nerveburn at " .. target.name)
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor nerveburn at " .. target.name)
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon nerveburn at " .. target.name .. " heroism")
		else
			Unleash("affliction")
			send("fling creator nerveburn at " .. target.name)
		end	
	elseif type == "nerveburnintensify" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice nerveburn at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant nerveburn at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor nerveburn at " .. target.name.. " intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon nerveburn at " .. target.name .. " heroism intensify")
		else
			Unleash("affliction")
			send("fling creator nerveburn at " .. target.name .. " intensify")
		end	
	elseif type == "asthma" then
		if (not table.contains(target.afflictions, "justice"))  then
			Unleash("affliction")
			send("fling justice combustion at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant combustion at " .. target.name)
		elseif (not table.contains(target.afflictions, "numbness")) then		
			Unleash("affliction")
			send("fling emperor combustion at " .. target.name.. " intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon combustion at " .. target.name .. " heroism intensify")
		else
			Unleash("affliction")
			send("fling creator combustion at " .. target.name .. " intensify")
		end	
	elseif type == "soulwrack" then
		if (not table.contains(target.afflictions, "justice"))  then
			send("fling justice soulwrack at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			send("fling hierophant soulwrack at " .. target.name)
		elseif (not table.contains(target.afflictions, "numbness")) then		
			send("fling emperor soulwrack at " .. target.name)
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			send("fling moon soulwrack at " .. target.name .. " heroism")
		else
			send("fling creator soulwrack at " .. target.name)
		end	
	elseif type == "soulburnblast" then
		send("invoke soulburn " .. target.name .. " blast")
	end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Summoner Function Heroism</name>
							<packageName></packageName>
							<script>function Noctu(type)
	if type == "impatience" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor quicken at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant quicken at " .. target.name)
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice quicken at " .. target.name)
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon quicken at " .. target.name .. " stupidity")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " heroism")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " stupidity")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " masochism")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " confusion")
		else
			Unleash("affliction")
			send("fling creator quicken at " .. target.name)
		end	
	elseif type == "impatienceduplicate" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor quicken at " .. target.name .. " duplicate")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant quicken at " .. target.name .. " duplicate")
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice quicken at " .. target.name .. " duplicate")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon quicken at " .. target.name .. " stupidity duplicate")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " heroism duplicate")
		elseif (not table.contains(target.afflictions, "numbness")) then
			Unleash("affliction")
			send("fling emperor quicken at " .. target.name .. " duplicate")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " stupidity duplicate")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " masochism duplicate")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " confusion duplicate")
		else
			Unleash("affliction")
			send("fling creator quicken at " .. target.name .. " duplicate")
		end	
	elseif type == "impatienceduplicatepyradius" then
		if (not table.contains(target.afflictions, "numbness"))  then
			send("fling emperor quicken at " .. target.name .. " duplicate")
		elseif target.hierophant == false and hierophantmode == true then		
			send("fling hierophant quicken at " .. target.name .. " duplicate")
		elseif (not table.contains(target.afflictions, "justice")) then		
			send("fling justice quicken at " .. target.name .. " duplicate")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			send("fling moon quicken at " .. target.name .. " stupidity duplicate")
--		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			send("fling moon quicken at " .. target.name .. " heroism duplicate")
		elseif (not table.contains(target.afflictions, "numbness")) then
			send("fling emperor quicken at " .. target.name .. " duplicate")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			send("fling moon quicken at " .. target.name .. " stupidity duplicate")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			send("fling moon quicken at " .. target.name .. " masochism duplicate")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			send("fling moon quicken at " .. target.name .. " confusion duplicate")
		else
			send("fling creator quicken at " .. target.name)
		end	
	elseif type == "impatienceblast" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor quicken at " .. target.name .. " blast")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant quicken at " .. target.name.. " blast")
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice quicken at " .. target.name .. " blast")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon quicken at " .. target.name .. " stupidity blast")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " heroism blast")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " stupidity blast")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " masochism blast")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " confusion blast")
		else
			Unleash("affliction")
			send("fling creator quicken at " .. target.name .. " blast")
		end	
	elseif type == "impatiencestrengthen" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor quicken at " .. target.name .. " strengthen")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant quicken at " .. target.name .. " strenghten")
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice quicken at " .. target.name .. " strengthen")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " stupidity strengthen")
--		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
--			Unleash("affliction")
--			send("fling moon quicken at " .. target.name .. " heroism strengthen")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling emperor quicken at " .. target.name .. " strengthen")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " stupidity strengthen")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " masochism strengthen")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " confusion strengthen")
		else
			Unleash("affliction")
			send("fling creator quicken at " .. target.name .. " strengthen")
		end	
	elseif type == "vertigo" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor disorient at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant disorient at " .. target.name)
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice disorient at " .. target.name .. " strengthen")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon disorient at " .. target.name .. " stupidity")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon disorient at " .. target.name .. " heroism")
		elseif (not table.contains(target.afflictions, "numbness")) then
			Unleash("affliction")
			send("fling emperor disorient at " .. target.name)
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon disorient at " .. target.name .. " stupidity")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon disorient at " .. target.name .. " masochism")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon disorient at " .. target.name .. " confusion")
		else
			Unleash("affliction")
			send("fling creator disorient at " .. target.name)
		end	
	elseif type == "epilepsy" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor flash at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant flash at " .. target.name)
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice flash at " .. target.name)
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon flash at " .. target.name .. " stupidity")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon flash at " .. target.name .. " heroism")
		elseif (not table.contains(target.afflictions, "numbness")) then
			Unleash("affliction")
			send("fling emperor flash at " .. target.name)
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon flash at " .. target.name .. " stupidity")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon flash at " .. target.name .. " masochism")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon flash at " .. target.name .. " confusion")
		else
			Unleash("affliction")
			send("fling creator flash at " .. target.name)
		end	
	elseif type == "epilepsyduplicate" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor flash at " .. target.name .. " duplicate")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant flash at " .. target.name .. " duplicate")
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice flash at " .. target.name .. " duplicate")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon flash at " .. target.name .. " stupidity duplicate")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon flash at " .. target.name .. " heroism duplicate")
		elseif (not table.contains(target.afflictions, "numbness")) then
			Unleash("affliction")
			send("fling emperor flash at " .. target.name .. " duplicate")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon flash at " .. target.name .. " stupidity duplicate")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon flash at " .. target.name .. " masochism duplicate")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon flash at " .. target.name .. " confusion duplicate")
		else
			Unleash("affliction")
			send("fling creator flash at " .. target.name .. " duplicate")
		end	
	elseif type == "soulwrack" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor soulwrack at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant soulwrack at " .. target.name)
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice soulwrack at " .. target.name)
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon soulwrack at " .. target.name .. " stupidity")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon soulwrack at " .. target.name .. " heroism")
		elseif (not table.contains(target.afflictions, "numbness")) then
			Unleash("affliction")
			send("fling emperor soulwrack at " .. target.name)
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon soulwrack at " .. target.name .. " stupidity")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon soulwrack at " .. target.name .. " masochism")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon soulwrack at " .. target.name .. " confusion")
		else
			Unleash("affliction")
			send("fling creator soulwrack at " .. target.name)
		end	
	elseif type == "soulwrackduplicate" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor soulwrack at " .. target.name .. " duplicate")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant soulwrack at " .. target.name .. " duplicate")
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice soulwrack at " .. target.name .. " duplicate")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon soulwrack at " .. target.name .. " stupidity duplicate")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon soulwrack at " .. target.name .. " heroism duplicate")
		elseif (not table.contains(target.afflictions, "numbness")) then
			Unleash("affliction")
			send("fling emperor soulwrack at " .. target.name .. " heroism duplicate")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon soulwrack at " .. target.name .. " stupidity duplicate")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon soulwrack at " .. target.name .. " masochism duplicate")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon soulwrack at " .. target.name .. " confusion duplicate")
		else
			Unleash("affliction")
			send("fling creator soulwrack at " .. target.name .. " duplicate")
		end	
	elseif type == "vertigointensify" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor disorient at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant disorient at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice disorient at " .. target.name.. " intensify")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon disorient at " .. target.name .. " stupidity intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon disorient at " .. target.name .. " heroism intensify")
		elseif (not table.contains(target.afflictions, "numbness")) then
			Unleash("affliction")
			send("fling emperor disorient at " .. target.name .. " intensify")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon disorient at " .. target.name .. " stupidity intensify")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon disorient at " .. target.name .. " masochism intensify")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon disorient at " .. target.name .. " confusion intensify")
		else
			Unleash("affliction")
			send("fling creator disorient at " .. target.name .. " intensify")
		end	
	elseif type == "hallucinationsintensify" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("nocadmus")
			send("fling emperor fever at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("nocadmus")
			send("fling hierophant fever at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "justice")) then
			Unleash("nocadmus")
			send("fling justice fever at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("nocadmus")
			send("fling moon fever at " .. target.name .. " heroism intensify")
		elseif (not table.contains(target.afflictions, "numbness")) then
			Unleash("nocadmus")
			send("fling emperor fever at " .. target.name .. " intensify")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("nocadmus")
			send("fling moon fever at " .. target.name .. " masochism intensify")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("nocadmus")
			send("fling moon fever at " .. target.name .. " confusion intensify")
		else
			Unleash("nocadmus")
			send("fling creator fever at " .. target.name .. " intensify")
		end	
	elseif type == "hallucinations" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("nocadmus")
			send("fling emperor fever at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("nocadmus")
			send("fling hierophant fever at " .. target.name)
		elseif (not table.contains(target.afflictions, "justice")) then
			Unleash("nocadmus")
			send("fling justice fever at " .. target.name)
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("nocadmus")
--			send("fling moon fever at " .. target.name .. " stupidity")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("nocadmus")
			send("fling moon fever at " .. target.name .. " heroism")
		elseif (not table.contains(target.afflictions, "numbness")) then
			Unleash("nocadmus")
			send("fling emperor fever at " .. target.name)
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("nocadmus")
			send("fling moon fever at " .. target.name .. " stupidity")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("nocadmus")
			send("fling moon fever at " .. target.name .. " masochism")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("nocadmus")
			send("fling moon fever at " .. target.name .. " confusion")
		else
			Unleash("nocadmus")
			send("fling creator fever at " .. target.name)
		end	
	elseif type == "deafintensify" then
		if (not table.contains(target.afflictions, "numbness")) then
			send("fling emperor nervewrack at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			send("fling hierophant nervewrack at " .. target.name .." intensify")
		elseif (not table.contains(target.afflictions, "justice")) then		
			send("fling justice nervewrack at " .. target.name.. " intensify")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			send("fling moon nervewrack at " .. target.name .. " stupidity intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			send("fling moon nervewrack at " .. target.name .. " heroism intensify")
		elseif (not table.contains(target.afflictions, "numbness")) then
			send("fling emperor nervewrack at " .. target.name .. " intensify")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			send("fling moon nervewrack at " .. target.name .. " stupidity intensify")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			send("fling moon nervewrack at " .. target.name .. " masochism intensify")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			send("fling moon nervewrack at " .. target.name .. " confusion intensify")
		else
			send("fling creator neverwrack at " .. target.name .. " intensify")
		end	
	elseif type == "deafintensifycreator" then
		if (not table.contains(target.afflictions, "numbness")) then
			send("fling emperor nervewrack at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			send("fling hierophant nervewrack at " .. target.name .." intensify")
		elseif (not table.contains(target.afflictions, "justice")) then		
			send("fling justice nervewrack at " .. target.name.. " intensify")
		else
			send("fling creator nervewrack at " .. target.name .. " intensify")
		end	
	elseif type == "deaf" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor nervewrack at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant nervewrack at " .. target.name)
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice nervewrack at " .. target.name)
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon nervewrack at " .. target.name .. " stupidity")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon nervewrack at " .. target.name .. " heroism")
		elseif (not table.contains(target.afflictions, "numbness")) then
			Unleash("affliction")
			send("fling emperor nervewrack at " .. target.name)
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon nervewrack at " .. target.name .. " stupidity")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon nervewrack at " .. target.name .. " masochism")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon nervewrack at " .. target.name .. " confusion")
		else
			Unleash("affliction")
			send("fling creator nervewrack at " .. target.name)
		end	
	elseif type == "heave" then
		if (not table.contains(target.afflictions, "numbness"))  then
			send("fling emperor heave at " .. target.name .. " intensify")
			Unleash("heave")
		elseif target.hierophant == false and hierophantmode == true then		
			send("fling hierophant heave at " .. target.name .. " intensify")
			Unleash("heave")
		elseif (not table.contains(target.afflictions, "justice")) then		
			send("fling justice heave at " .. target.name.. " intensify")
			Unleash("heave")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			send("fling moon heave at " .. target.name .. " stupidity intensify")
--			Unleash("heave")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			send("fling moon heave at " .. target.name .. " heroism intensify")
			Unleash("heave")
		elseif (not table.contains(target.afflictions, "numbness")) then
			send("fling emperor heave at " .. target.name .. " intensify")
			Unleash("heave")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			send("fling moon heave at " .. target.name .. " stupidity intensify")
			Unleash("heave")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			send("fling moon heave at " .. target.name .. " masochism intensify")
			Unleash("heave")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			send("fling moon heave at " .. target.name .. " confusion intensify")
			Unleash("heave")
		else
			send("fling creator quicken at " .. target.name .. " intensify")
			Unleash("heave")
		end	
	elseif type == "heaveho" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor heave at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant heave at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "justice")) then
			Unleash("affliction")		
			send("fling justice heave at " .. target.name.. " intensify")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon heave at " .. target.name .. " stupidity")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon heave at " .. target.name .. " heroism")
		elseif (not table.contains(target.afflictions, "numbness")) then
			Unleash("affliction")
			send("fling emperor heave at " .. target.name)
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon heave at " .. target.name .. " stupidity")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon heave at " .. target.name .. " masochism")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon heave at " .. target.name .. " confusion")
		else
			Unleash("affliction")
			send("fling creator heave at " .. target.name)
		end	
	elseif type == "soulburn" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor soulburn at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant soulburn at " .. target.name)
		elseif (not table.contains(target.afflictions, "justice")) then
			Unleash("affliction")
			send("fling justice soulburn at " .. target.name)
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon soulburn at " .. target.name .. " stupidity")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon soulburn at " .. target.name .. " heroism")
		elseif (not table.contains(target.afflictions, "numbness")) then
			Unleash("affliction")
			send("fling emperor soulburn at " .. target.name)
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon soulburn at " .. target.name .. " stupidity")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon soulburn at " .. target.name .. " masochism")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon soulburn at " .. target.name .. " confusion")
		else
			Unleash("affliction")
			send("fling creator soulburn at " .. target.name)
		end	
	elseif type == "healthleech" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor dehydrate at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant dehydrate at " .. target.name)
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice dehydrate at " .. target.name)
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon dehydrate at " .. target.name .. " stupidity")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon dehydrate at " .. target.name .. " heroism")
		elseif (not table.contains(target.afflictions, "numbness")) then
			Unleash("affliction")
			send("fling emperor dehydrate at " .. target.name)
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon dehydrate at " .. target.name .. " stupidity")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon dehydrate at " .. target.name .. " masochism")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon dehydrate at " .. target.name .. " confusion")
		else
			Unleash("affliction")
			send("fling creator dehydrate at " .. target.name)
		end	
	elseif type == "healthleechintensify" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor dehydrate at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant dehydrate at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice dehydrate at " .. target.name .. " intensify")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon dehydrate at " .. target.name .. " stupidity intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
  			Unleash("affliction")
			send("fling moon dehydrate at " .. target.name .. " heroism intensify")
		elseif (not table.contains(target.afflictions, "numbness")) then
  			Unleash("affliction")
			send("fling emperor dehydrate at " .. target.name .. " intensify")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon dehydrate at " .. target.name .. " stupidity intensify")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon dehydrate at " .. target.name .. " masochism intensify")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon dehydrate at " .. target.name .. " confusion intensify")
		else
			Unleash("affliction")
			send("fling creator dehydrate at " .. target.name .. " intensify")
		end	
	elseif type == "nerveburn" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor nerveburn at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant nerveburn at " .. target.name)
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice nerveburn at " .. target.name)
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon nerveburn at " .. target.name .. " stupidity")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon nerveburn at " .. target.name .. " heroism")
		elseif (not table.contains(target.afflictions, "numbness")) then
			Unleash("affliction")
			send("fling emperor nerveburn at " .. target.name)
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon nerveburn at " .. target.name .. " stupidity")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon nerveburn at " .. target.name .. " masochism")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon nerveburn at " .. target.name .. " confusion")
		else
			Unleash("affliction")
			send("fling creator nerveburn at " .. target.name)
		end	
	elseif type == "nerveburnintensify" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor nerveburn at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant nerveburn at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice nerveburn at " .. target.name.. " intensify")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon nerveburn at " .. target.name .. " stupidity intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon nerveburn at " .. target.name .. " heroism intensify")
		elseif (not table.contains(target.afflictions, "numbness")) then
			Unleash("affliction")
			send("fling emperor nerveburn at " .. target.name .. " intensify")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon nerveburn at " .. target.name .. " stupidity intensify")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon nerveburn at " .. target.name .. " masochism intensify")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon nerveburn at " .. target.name .. " confusion intensify")
		else
			Unleash("affliction")
			send("fling creator nerveburn at " .. target.name .. " intensify")
		end	
	elseif type == "asthma" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor combustion at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant combustion at " .. target.name)
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice combustion at " .. target.name.. " intensify")
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			Unleash("affliction")
--			send("fling moon combustion at " .. target.name .. " stupidity intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon combustion at " .. target.name .. " heroism intensify")
		elseif (not table.contains(target.afflictions, "numbness")) then
			Unleash("affliction")
			send("fling emperor combustion at " .. target.name .. " intensify")
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			Unleash("affliction")
			send("fling moon combustion at " .. target.name .. " stupidity intensify")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			Unleash("affliction")
			send("fling moon combustion at " .. target.name .. " masochism intensify")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			Unleash("affliction")
			send("fling moon combustino at " .. target.name .. " confusion intensify")
		else
			Unleash("affliction")
			send("fling creator combustion at " .. target.name .. " intensify")
		end	
	elseif type == "soulwrack" then
		if (not table.contains(target.afflictions, "numbness"))  then
			send("fling emperor soulwrack at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			send("fling hierophant soulwrack at " .. target.name)
		elseif (not table.contains(target.afflictions, "justice")) then		
			send("fling justice soulwrack at " .. target.name)
--		elseif (not table.contains(target.mentalaffs, "stupidity")) then
--			send("fling moon soulwrack at " .. target.name .. " stupidity")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			send("fling moon soulwrack at " .. target.name .. " heroism")
		elseif (not table.contains(target.afflictions, "numbness")) then
			send("fling emperor soulwrack at " .. target.name)
		elseif (not table.contains(target.mentalaffs, "stupidity")) then
			send("fling moon soulwrack at " .. target.name .. " stupidity")
		elseif (not table.contains(target.mentalaffs, "masochism")) then
			send("fling moon soulwrack at " .. target.name .. " masochism")
		elseif (not table.contains(target.mentalaffs, "confusion")) then
			send("fling moon soulwrack at " .. target.name .. " confusion")
		else
			send("fling creator soulwrack at " .. target.name)
		end	
	elseif type == "soulburnblast" then
		send("invoke soulburn " .. target.name .. " blast")
	end
end

function Creator(type)
	if type == "impatience" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor quicken at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant quicken at " .. target.name)
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice quicken at " .. target.name)
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " heroism")
		else
			Unleash("affliction")
			send("fling creator quicken at " .. target.name)
		end	
	elseif type == "impatienceduplicate" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor quicken at " .. target.name .. " duplicate")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant quicken at " .. target.name .. " duplicate")
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice quicken at " .. target.name .. " duplicate")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " heroism duplicate")
		else
			Unleash("affliction")
			send("fling creator quicken at " .. target.name .. " duplicate")
		end	
	elseif type == "impatienceduplicatepyradius" then
		if (not table.contains(target.afflictions, "numbness"))  then
			send("fling emperor quicken at " .. target.name .. " duplicate")
		elseif target.hierophant == false and hierophantmode == true then		
			send("fling hierophant quicken at " .. target.name .. " duplicate")
		elseif (not table.contains(target.afflictions, "justice")) then		
			send("fling justice quicken at " .. target.name .. " duplicate")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			send("fling moon quicken at " .. target.name .. " heroism duplicate")
		else
			send("fling creator quicken at " .. target.name)
		end	
	elseif type == "impatienceblast" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor quicken at " .. target.name .. " blast")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant quicken at " .. target.name.. " blast")
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice quicken at " .. target.name .. " blast")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " heroism")
		else
			Unleash("affliction")
			send("fling creator quicken at " .. target.name .. " blast")
		end	
	elseif type == "impatiencestrengthen" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor quicken at " .. target.name .. " strengthen")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant quicken at " .. target.name .. " strenghten")
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice quicken at " .. target.name .. " strengthen")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon quicken at " .. target.name .. " heroism strengthen")
		else
			Unleash("affliction")
			send("fling creator quicken at " .. target.name .. " strengthen")
		end	
	elseif type == "vertigo" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor disorient at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant disorient at " .. target.name)
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice disorient at " .. target.name .. " strengthen")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon disorient at " .. target.name .. " heroism")
			Unleash("affliction")
			send("fling creator disorient at " .. target.name)
		end	
	elseif type == "epilepsy" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor flash at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant flash at " .. target.name)
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice flash at " .. target.name)
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon flash at " .. target.name .. " heroism")
		else
			Unleash("affliction")
			send("fling creator flash at " .. target.name)
		end	
	elseif type == "epilepsyduplicate" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor flash at " .. target.name .. " duplicate")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant flash at " .. target.name .. " duplicate")
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice flash at " .. target.name .. " duplicate")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon flash at " .. target.name .. " heroism duplicate")
		else
			Unleash("affliction")
			send("fling creator flash at " .. target.name .. " duplicate")
		end	
	elseif type == "soulwrack" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor soulwrack at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant soulwrack at " .. target.name)
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice soulwrack at " .. target.name)
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon soulwrack at " .. target.name .. " heroism")
		else
			Unleash("affliction")
			send("fling creator soulwrack at " .. target.name)
		end	
	elseif type == "soulwrackduplicate" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor soulwrack at " .. target.name .. " duplicate")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant soulwrack at " .. target.name .. " duplicate")
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice soulwrack at " .. target.name .. " duplicate")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon soulwrack at " .. target.name .. " heroism duplicate")
		else
			Unleash("affliction")
			send("fling creator soulwrack at " .. target.name .. " duplicate")
		end	
	elseif type == "vertigointensify" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor disorient at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant disorient at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice disorient at " .. target.name.. " intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon disorient at " .. target.name .. " heroism intensify")
		else
			Unleash("affliction")
			send("fling creator disorient at " .. target.name .. " intensify")
		end	
	elseif type == "hallucinationsintensify" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor fever at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant fever at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "justice")) then
			Unleash("affliction")
			send("fling justice fever at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon fever at " .. target.name .. " heroism intensify")
		else
			Unleash("affliction")
			send("fling creator fever at " .. target.name .. " intensify")
		end	
	elseif type == "hallucinations" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor fever at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant fever at " .. target.name)
		elseif (not table.contains(target.afflictions, "justice")) then
			Unleash("affliction")
			send("fling justice fever at " .. target.name)
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon fever at " .. target.name .. " heroism")
		else
			Unleash("affliction")
			send("fling creator fever at " .. target.name)
		end	
	elseif type == "deafintensify" then
		if (not table.contains(target.afflictions, "numbness"))  then
			send("fling emperor nervewrack at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			send("fling hierophant nervewrack at " .. target.name .." intensify")
		elseif (not table.contains(target.afflictions, "justice")) then		
			send("fling justice nervewrack at " .. target.name.. " intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			send("fling moon nervewrack at " .. target.name .. " heroism intensify")
		else
			send("fling creator neverwrack at " .. target.name .. " intensify")
		end	
	elseif type == "deafintensifycreator" then
		if (not table.contains(target.afflictions, "numbness"))  then
			send("fling emperor nervewrack at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			send("fling hierophant nervewrack at " .. target.name .." intensify")
		elseif (not table.contains(target.afflictions, "justice")) then		
			send("fling justice nervewrack at " .. target.name.. " intensify")
		else
			send("fling creator nervewrack at " .. target.name .. " intensify")
		end	
	elseif type == "deaf" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor nervewrack at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant nervewrack at " .. target.name)
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice nervewrack at " .. target.name)
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon nervewrack at " .. target.name .. " heroism")
		else
			Unleash("affliction")
			send("fling creator nervewrack at " .. target.name)
		end	
	elseif type == "heave" then
		if (not table.contains(target.afflictions, "numbness"))  then
			send("fling emperor heave at " .. target.name .. " intensify")
			Unleash("heave")
		elseif target.hierophant == false and hierophantmode == true then		
			send("fling hierophant heave at " .. target.name .. " intensify")
			Unleash("heave")
		elseif (not table.contains(target.afflictions, "justice")) then		
			send("fling justice heave at " .. target.name.. " intensify")
			Unleash("heave")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			send("fling moon heave at " .. target.name .. " heroism intensify")
			Unleash("heave")
		else
			send("fling creator quicken at " .. target.name .. " intensify")
			Unleash("heave")
		end	
	elseif type == "heaveho" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor heave at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant heave at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "justice")) then
			Unleash("affliction")		
			send("fling justice heave at " .. target.name.. " intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon heave at " .. target.name .. " heroism")
		else
			Unleash("affliction")
			send("fling creator heave at " .. target.name)
		end	
	elseif type == "soulburn" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor soulburn at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant soulburn at " .. target.name)
		elseif (not table.contains(target.afflictions, "justice")) then
			Unleash("affliction")
			send("fling justice soulburn at " .. target.name)
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon soulburn at " .. target.name .. " heroism")
		else
			Unleash("affliction")
			send("fling creator soulburn at " .. target.name)
		end	
	elseif type == "healthleech" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor dehydrate at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant dehydrate at " .. target.name)
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice dehydrate at " .. target.name)
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon dehydrate at " .. target.name .. " heroism")
		else
			Unleash("affliction")
			send("fling creator dehydrate at " .. target.name)
		end	
	elseif type == "healthleechintensify" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor dehydrate at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant dehydrate at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice dehydrate at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
  			Unleash("affliction")
			send("fling moon dehydrate at " .. target.name .. " heroism intensify")
		else
			Unleash("affliction")
			send("fling creator dehydrate at " .. target.name .. " intensify")
		end	
	elseif type == "nerveburn" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor nerveburn at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant nerveburn at " .. target.name)
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice nerveburn at " .. target.name)
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon nerveburn at " .. target.name .. " heroism")
		else
			Unleash("affliction")
			send("fling creator nerveburn at " .. target.name)
		end	
	elseif type == "nerveburnintensify" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor nerveburn at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant nerveburn at " .. target.name .. " intensify")
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice nerveburn at " .. target.name.. " intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon nerveburn at " .. target.name .. " heroism intensify")
		else
			Unleash("affliction")
			send("fling creator nerveburn at " .. target.name .. " intensify")
		end	
	elseif type == "asthma" then
		if (not table.contains(target.afflictions, "numbness"))  then
			Unleash("affliction")
			send("fling emperor combustion at " .. target.name .. " intensify")
		elseif target.hierophant == false and hierophantmode == true then		
			Unleash("affliction")
			send("fling hierophant combustion at " .. target.name)
		elseif (not table.contains(target.afflictions, "justice")) then		
			Unleash("affliction")
			send("fling justice combustion at " .. target.name.. " intensify")
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			Unleash("affliction")
			send("fling moon combustion at " .. target.name .. " heroism intensify")
		else
			Unleash("affliction")
			send("fling creator combustion at " .. target.name .. " intensify")
		end	
	elseif type == "soulwrack" then
		if (not table.contains(target.afflictions, "numbness"))  then
			send("fling emperor soulwrack at " .. target.name)
		elseif target.hierophant == false and hierophantmode == true then		
			send("fling hierophant soulwrack at " .. target.name)
		elseif (not table.contains(target.afflictions, "justice")) then		
			send("fling justice soulwrack at " .. target.name)
		elseif (not table.contains(target.afflictions, "heroism")) and heroism == true then
			send("fling moon soulwrack at " .. target.name .. " heroism")
		else
			send("fling creator soulwrack at " .. target.name)
		end	
	elseif type == "soulburnblast" then
		send("invoke soulburn " .. target.name .. " blast")
	end
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Wytch</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Diabolist</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Assassin</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
				</ScriptGroup>
				<ScriptGroup isActive="no" isFolder="yes">
					<name>Predator</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="no" isFolder="no">
						<name>raze</name>
						<packageName></packageName>
						<script>	if (target.shield and target.aura) then
		send("switch stance ein-fasit::combo raze raze "..target.name)
	elseif (target.shield or target.aura) then
		if stance == "Vae-Sant" then
			send("switch stance laesan::combo raze vertical "..target.name)
		elseif stance == "Ein-Fasit" then
			send("combo raze vertical vertical "..target.name)
		elseif stance == "Gyanis" then
			send("combo raze pinprick lateral "..target.name)
		elseif stance == "Rizet" then
			send("combo raze lateral vertical "..target.name)
		elseif stance == "Laesan" then
			send("combo raze vertical vertical "..target.name)
		end
	end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
			</ScriptGroup>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>Affliction Tracker</name>
			<packageName></packageName>
			<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>Affliction Handling</name>
				<packageName></packageName>
				<script>--Affliction functions
aff = aff or "none"
guards = guards or false

function targAffAdd(aff)
  cecho("&lt;white&gt;[&lt;blue&gt;Tracking&lt;white&gt;] &lt;green&gt;+&lt;purple&gt;" .. aff .. " &lt;grey&gt;(physical)")
	table.insert(target.afflictions, aff)
	-- if guards then
		-- send("pt " .. target.name .. " gained physical aff " .. aff, false)
	-- end
end

function targAffSub(aff)
	for k, v in ipairs (target.afflictions) do
		if (v == aff) then
      cecho("&lt;white&gt;[&lt;blue&gt;Tracking&lt;white&gt;] &lt;red&gt;-&lt;purple&gt;" .. aff .. " &lt;grey&gt;(physical)")
			table.remove(target.afflictions, k)
     -- send("pt " .. target.name .. " cured physical aff " .. aff, false)
			break
		end
	end
end

function targMaffAdd(aff)
  cecho("&lt;white&gt;[&lt;blue&gt;Tracking&lt;white&gt;] &lt;green&gt;+&lt;purple&gt;" .. aff .. " &lt;grey&gt;(mental)")
	table.insert(target.mentalaffs, aff)
	-- if guards then
		-- send("pt " .. target.name .. " gained mental aff " .. aff, false)
	-- end
end

function targMaffSub(aff)
	for k, v in ipairs (target.mentalaffs) do
		if (v == aff) then
      cecho("&lt;white&gt;[&lt;blue&gt;Tracking&lt;white&gt;] &lt;red&gt;-&lt;purple&gt;" .. aff .. " &lt;grey&gt;(mental)")
			table.remove(target.mentalaffs, k)
      -- send("pt " .. target.name .. " cured mental aff " .. aff, false)
			break
		end
	end
end

function targPlagueAdd(aff)
  cecho("&lt;white&gt;[&lt;blue&gt;Tracking&lt;white&gt;] &lt;green&gt;+&lt;purple&gt;" .. aff .. " &lt;grey&gt;(plague)")
	table.insert(target.plagues, aff)
	-- if guards then
		-- send("pt " .. target.name .. " gained plague aff " .. aff, false)
	-- end
end

function targPlagueSub(aff)
	for k, v in ipairs (target.plagues) do
		if (v == aff) then
      cecho("&lt;white&gt;[&lt;blue&gt;Tracking&lt;white&gt;] &lt;red&gt;-&lt;purple&gt;" .. aff .. " &lt;grey&gt;(plague)")
			table.remove(target.plagues, k)
     -- send("pt " .. target.name .. " cured plague aff " .. aff, false)
			break
		end
	end
end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Guard Handling</name>
				<packageName></packageName>
				<script>--Affliction functions

function targGaffAdd(aff)
	table.insert(target.afflictions, aff)
	printTargetWindow()
end

function targGmaffAdd(aff)
	table.insert(target.mentalaffs, aff)
	printTargetWindow()
end
</script>
				<eventHandlerList />
			</Script>
			<ScriptGroup isActive="no" isFolder="yes">
				<name>Affliction Tracker</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="no" isFolder="no">
					<name>Affliction Handling</name>
					<packageName></packageName>
					<script>--Affliction functions

physical_aff = physical_aff or 0
mental_aff = mental_aff or 0
guards = guards or false

function targAffAdd(aff)
	table.insert(target.afflictions, aff)
	physical_affs = physical_affs + 1
	if guards then
	if aff == "paralyse" then
		send("clan guards tell " .. target.name .. " aff paralysis", false)
	elseif aff == "deaf" then
		send("clan guards tell " .. target.name .. " aff undeaf", false)
	else
		send("clan guards tell " .. target.name .. " aff " .. aff, false)
	end
	end
end

function targAffSub(aff)
	for k, v in ipairs (target.afflictions) do
		if (v == aff) then
			table.remove(target.afflictions, k)
			physical_affs = physical_affs - 1
			break
		end
	end
end

function targMaffAdd(aff)
	table.insert(target.mentalaffs, aff)
	mental_affs = mental_affs + 1
	if guards then
		send("clan guards tell " .. target.name .. " aff " .. aff, false)
	end
end

function targMaffSub(aff)
	for k, v in ipairs (target.mentalaffs) do
		if (v == aff) then
			mental_affs = mental_affs - 1
			table.remove(target.mentalaffs, k)
			break
		end
	end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="no" isFolder="no">
					<name>Guard Handling</name>
					<packageName></packageName>
					<script>--Affliction functions

function targGaffAdd(aff)
	table.insert(target.afflictions, guardaff)
	physical_affs = physical_affs + 1
	printTargetWindow()
end

function targGmaffAdd(aff)
	table.insert(target.mentalaffs, guardaff)
	mental_affs = mental_affs + 1
	printTargetWindow()
end
</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>Bashing</name>
			<packageName></packageName>
			<script></script>
			<eventHandlerList />
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Variables</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Bashing Information</name>
					<packageName></packageName>
					<script>user.Balance.Bashing = false
user.Slain = user.Slain or false
user.followBashing = user.followBashing or false
user.Bashing = user.Bashing or false
user.Gold = false or false
user.FirstHit = user.FirstHit or false
nextbashArea = nextbashArea or false
user.targetInRoom = false
fuckthis = 1
shieldarea = false
bashmap = bashmap or {}
Hunting_Partners =
  {
    ["Ario"] = true,
    ["Aleutia"] = true,
    ["Lionas"] = true,
    ["Ahkan"] = true,
    ["Menoch"] = true,
    ["Kanthari"] = true,
    ["Yaribelle"] = true,
    ["Mena"] = true,
    ["Adrienne"] = true,
    ["Nolwyn"] = true,
    ["Iyrandar"] = true,
    ["Calais"] = true,
    ["Fahrer"] = true,
    ["Mena"] = true,
    ["Sarciossis"] = true,
    ["Delrayne"] = true,
    ["Ander"] = true,
    ["Reid"] = true,
    ["Teshar"] = true,
    ["Samiel"] = true,
    ["Nessima"] = true,
    ["Isadarr"] = true,
    ["Viziria"] = true,
    ["Scantor"] = true,
    ["Selthis"] = true,
    ["Isabella"] = true,
    ["Katalina"] = true,
    ["Onaedan"] = true,
    ["Demion"] = true,
    ["Dicene"] = true,
    ["Kaveri"] = true,
    ["Iniar"] = true,
    ["Hanzou"] = true,
    ["Kalcer"] = true,
    ["Auvryist"] = true,
    ["Mykael"] = true,
    ["Tanaros"] = true,
    ["Giselle"] = true,
    ["Linslet"] = true,
    ["Sverrir"] = true,
    ["Lemuel"] = true,
    ["Eldreth"] = true,
    ["Bathan"] = true,
    ["Cadeyrn"] = true,
    ["Dagna"] = true,
    ["Lixan"] = true,
    ["Ichimoru"] = true,
    ["Iroth"] = true,
    ["Zarim"] = true,
    ["Khizan"] = true,
    ["Caelya"] = true,
    ["Mikihide"] = true,
    ["Saitou"] = true,
    ["Suki"] = true,
    ["Vivianne"] = true,
    ["Aulani"] = true,
    ["Verexa"] = true,
    ["Leikara"] = true,
  }
-- [""] = "",
--["a mineral leech"] = "leech",
--["a queen leech"] = "leech",
--["Chancellor Ashem"] = "chancellor",
--["a necromancer"] = "necromancer",
--["a carrion beetle"] = "beetle",
--["an orc scout"] = "orc",
-- ["Duke Semiro"] = "semiro",
-- ["Daerlain, an elderly noblewoman"] = "daerlain",
-- ["Jadorno, a cloaked nobleman"] = "jadorno",
Targets =
  {
    ["Vendril, Master Assassin"] = "vendril",
    ["Vorin, High Shaman"] = "vorin",
    ["Omavivi, a spindly apprentice shaman"] = "omavivi",
    ["a pygmy hunter"] = "hunter",
    ["a pygmy guard"] = "guard",
    ["Siathana, the Healer"] = "siathana",
    ["Thorlis, the Warrior Chiefta"] = "thorlis",
    ["Frewynne, the Warrior Chieftess"] = "frewynne",
    ["a cloaked assassin"] = "assassin",
    ["a Colchian warrioress"] = "warrioress",
    ["a Colchian warrior"] = "warrior",
    ["an Ulsyndar guard"] = "guard",
    ["an off-duty prison guard"] = "guard",
    ["a disgruntled salt miner"] = "miner",
    ["a prison miner"] = "miner",
    ["a stocky dwarf foreman"] = "foreman",
    ["a young dwarven miner"] = "miner",
    ["a bloodstained miner"] = "miner",
    ["a young dwarven miner"] = "miner",
    ["a dishevelled dwarven miner"] = "miner",
    ["an alert dwarven guard"] = "guard",
    ["a convulsing miner"] = "miner",
    ["Grelda Stonefist"] = "grelda",
    ["a vomiting miner"] = "miner",
    ["Brok, the Blackfire shaman"] = "brok",
    ["a delirious miner"] = "miner",
    ["Bartok Stonefist, Leader of the Blackfire clan"] = "bartok",
    ["a nervous acolyte"] = "acolyte",
    ["a dwarven priest"] = "priest",
    ["a priest"] = "priest",
    ["High Priest Asdath"] = "asdath",
    ["Thraken, the Bloodstone shaman"] = "thraken",
    ["Glath Ironhammer, Leader of the Bloodstone clan"] = "glath",
    ["Breana Ironhammer"] = "breana",
    ["an adolescent minerih"] = "miner",
    ["a blood-soaked dwarven miner"] = "miner",
    ["a dirt-encrusted miner"] = "miner",
    ["an injured miner"] = "miner",
    ["a ghost bat"] = "bat",
    ["a giant quartz beetle"] = "beetle",
    ["a rope lichen"] = "lichen",
    ["a plated fernbeast"] = "fernbeast",
    ["a rockhide basilisk"] = "basilisk",
    ["a bioluminescent ooze"] = "ooze",
    ["a lost spirit"] = "spirit",
    ["a malevolent echo"] = "echo",
    ["a massive jade spider"] = "spider",
    ["a crystal georith"] = "georith",
    ["a malevolent echo"] = "echo",
    ["an adult Sileg"] = "sileg",
    ["an aged Sileg"] = "sileg",
    ["Mokgrin, the fernbeast herder"] = "mokgrin",
    ["Firad, the Sileg Chieftain"] = "firad",
    ["Girda, Ritualist of the Sileg"] = "girda",
    ["a juvenile Sileg"] = "sileg",
    ["Dregun, Keeper of the Nursery"] = "dregun",
    ["a Dralhuan guard"] = "guard",
    ["a Dralhuan woman"] = "woman",
    ["a Dralhuan man"] = "woman",
    ["Eraon, the armourer"] = "eraon",
    ["Matriarch Trisa"] = "trisa",
    ["Patriarch Grethan"] = "grethan",
    ["Patriarch Deniar"] = "deniar",
    ["an elderly apothecary"] = "apothecary",
    ["a brown-haired trainee"] = "trainee",
    ["Overseer Breoln"] = "breoln",
    ["a blond-haired trainee"] = "trainee",
    ["Winre, the bird keeper"] = "winre",
    ["a sturdy knight"] = "knight",
    ["a proud knight errant"] = "knight",
    ["Commander Farista Errikale"] = "farista",
    ["a dishevelled young squire"] = "squire",
    ["a dishevelled young squire"] = "squire",
    ["Commander Malrian Kyra"] = "malrian",
    ["Knight Commander Lord Ethran Rani"] = "ethran",
    ["an injured knight"] = "knight",
    ["a mummy"] = "mummy",
    ["a revolting ghoul"] = "ghoul",
    ["a decaying zombie"] = "zombie",
    ["a vicious dulosi majorus"] = "dulosi",
    ["a vicious dulosi minorus"] = "dulosi",
    ["a crocodile"] = "crocodile",
    ["a vicious swarm of acacidic ants"] = "ants",
    ["a transparent cahno"] = "cahno",
    ["a bunyip"] = "bunyip",
    ["a mud urchin"] = "urchin",
    ["an azure koparfish"] = "koparfish",
    ["an energetic red turtle"] = "turtle",
    ["a school of vicious piranha"] = "piranha",
    ["a serpentine tssalo"] = "tssalo",
    ["a swarm of mosquitoes"] = "swarm",
    ["a multicoloured boa constrictor"] = "constrictor",
    ["an enormous anaconda"] = "anaconda",
    ["a thornback frog"] = "frog",
    ["a sinister glubber"] = "glubber",
    ["a knight of the Siroccian Order"] = "knight",
    ["a stout footsoldier"] = "footsoldier",
    ["a keen-eyed archer"] = "archer",
    ["a stout footsoldier"] = "footsoldier",
    ["a fortress guardsman"] = "guardsman",
    ["the fortress steward"] = "steward",
    ["the Captain of the Guard"] = "captain",
    ["a bearded cook"] = "cook",
    ["a proud ducal guard"] = "guard",
    ["Duchess Alorina"] = "alorina",
    ["a giant bat"] = "bat",
    ["a wight"] = "wight",
    ["a wraith"] = "wraith",
    ["a mhun guard"] = "guard",
    ["a mhun miner"] = "miner",
    ["a goblin miner"] = "miner",
    ["a vampire"] = "vampire",
    ["a goblin slave"] = "slave",
    ["a hobgoblin warrior"] = "warrior",
    ["a shady goblin"] = "miner",
    ["a goblin smith"] = "smith",
    ["a goblin foreman"] = "foreman",
    ["a mhun worker"] = "worker",
    ["a mhun demolitionist"] = "demolitionist",
    ["a master mhun demolitionist"] = "demolitionist",
    ["a mhun labourer"] = "labourer",
    ["a goblin sergeant"] = "sergeant",
    ["a flesh-eating slug"] = "slug",
    ["a ghast"] = "ghast",
    ["a goblin ghoul"] = "ghoul",
    ["a goblin zombie"] = "zombie",
    ["a goblin soldier"] = "soldier",
    ["a master mhun labourer"] = "labourer",
    ["a master mhun miner"] = "miner",
    ["a mhun keeper"] = "keeper",
    ["Guard Captain Chelak"] = "chelak",
    ["Guard Captain Darion"] = "darion",
    ["a mhun conjuror"] = "conjuror",
    ["an elite mhun keeper"] = "keeper",
    ["a mhun knight"] = "knight",
    ["a mhun archer"] = "archer",
    ["Derfan, the zombie Captain"] = "Derfan",
    ["an indistinct wraith"] = "undead",
    ["a ghost rat"] = "rat",
    ["a morey eel"] = "eel",
    ["an ancient esilderi"] = "esilderi",
    ["a man-eating shark"] = "shark",
    ["a diamond fish"] = "fish",
    ["a fangtooth"] = "fangtooth",
    ["a barracuda"] = "barracuda",
    ["Vorynag, Base Commander"] = "Vorynag",
    ["an orc cadet"] = "orc",
    ["an orc colonel"] = "orc",
    ["a rotund orc chef"] = "orc",
    ["an orc drill sergeant"] = "orc",
    ["an orc slave master"] = "orc",
    ["a tattooed orcish warrior"] = "orc",
    ["an orc slave master"] = "orc",
    ["Trilug the One-Eyed"] = "Trilug",
    ["a troll brute"] = "troll",
    ["an orc knight"] = "orc",
    ["an orc trainee"] = "orc",
    ["a foul-tempered orc matron"] = "orc",
    ["a polar bear"] = "bear",
    ["a polar bear cub"] = "cub",
    ["a giant ice wyrm"] = "wyrm",
    ["an ice wyrm hatchling"] = "wyrm",
    ["a frost beetle "] = "beetle",
    ["a squat sanderling"] = "sanderling",
    ["a young sanderling chick"] = "sanderling",
    ["a gigantic monitor lizard"] = "lizard",
    ["an oversized weevil"] = "weevil",
    ["a young weevil"] = "weevil",
    ["a bulky weevil"] = "weevil",
    ["a harvesting weevil"] = "weevil",
    ["Ulmdo, the overseer"] = "Ulmdo",
    ["a sleek siyld"] = "siyld",
    ["a burrowing siyld"] = "siyld",
    ["an imposing, crystalline siyld"] = "siyld",
    ["a swarm of tiny arachnids"] = "arachnids",
    ["an albino hobo spider"] = "spider",
    ["an intimidating hobo spider"] = "spider",
    ["a hairy hobo spider"] = "spider",
    ["a timber rattlesnake"] = "rattlesnake",
    ["a bazwolf pup"] = "pup",
    ["an orc overseer"] = "orc",
    ["a blind cave-dwelling troglo"] = "troglo",
    ["a blind cave-dwelling infant troglo"] = "troglo",
    ["a blind cave-dwelling adolescent troglo"] = "troglo",
    ["a juvenile woolly mammoth"] = "mammoth",
    ["a young woolly mammoth calf"] = "mammoth",
    ["an enormous woolly mammoth bull"] = "mammoth",
    ["a woolly mammoth matriarch"] = "mammoth",
    ["a dark minotaur"] = "minotaur",
    ["a brawny magicker man"] = "magicker",
    ["a stern-looking zealot woman"] = "woman",
    ["a sadistic demoner man"] = "man",
    ["a crazed ghost"] = "undead",
    ["Rynar the shadow"] = "undead",
    ["Shayor the burning"] = "undead",
    ["Irqua the exterminator"] = "Irqua",
    ["Deradril the vicious"] = "Deradril",
    ["an annoyed wraith"] = "wraith",
    ["Khakgugh"] = "Khakgugh",
    ["a large armoured orc"] = "orc",
    ["Mahusala, a regal gryphon"] = "rimpin",
    ["a masculine rimpin"] = "rimpin",
    ["a cloud of juvenile rimpin"] = "rimpin",
    ["a female rimpin"] = "rimpin",
    ["Ougduth the Troll Giant"] = "Ougduth",
    ["an orc soldier"] = "horde",
    ["a troll soldier"] = "horde",
    ["a lumbering ogre soldier"] = "horde",
    ["a nearly intact drowned man"] = "man",
    ["a distended skeleton"] = "undead",
    ["a ghost of a weary traveler"] = "undead",
    ["a macabre wight"] = "undead",
    ["Arog, the Skeletal Commander"] = "undead",
    ["an intimidating wight"] = "undead",
    ["Xhara, the Undead Priestess"] = "undead",
    ["Tronoc, the Skeleton General"] = "skeleton",
    ["K'taru, Head Chieftain"] = "Ktaru",
    ["Jorros, an orc cook"] = "orc",
    ["Rogned, High Elder of Skegdald"] = "ogre",
    ["Slood, an ogre fisherman"] = "ogre",
    ["a two-headed primate guard"] = "guard",
    ["a rat"] = "rat",
    ["an enchanted soot-stained skeleton"] = "skeleton",
    ["a mesmerized rattletrap skeleton"] = "skeleton",
    ["a young rat"] = "rat",
    ["a black rat"] = "rat",
    ["an old rat"] = "rat",
    ["a malformed millipede"] = "millipede",
    ["a mutated earwig"] = "earwig",
    ["a blighted giant weta"] = "weta",
    ["a hooded servant"] = "servant",
    ["a dark mist"] = "mist",
    ["Ielurr, the bone reaper"] = "ielurr",
    ["a mountain grizzly bear"] = "bear",
    ["a feral cougar"] = "cougar",
    ["a demented moroi"] = "undead",
    ["a gibbering ghoul"] = "undead",
    ["a badly battered zombie"] = "undead",
    ["a silent ghoul"] = "undead",
    ["a hulking moroi"] = "undead",
    ["an apish zombie lumberjack"] = "undead",
    ["Barsul, the Wraith Lord"] = "barsul",
    ["a grotesque moroi"] = "undead",
    ["a badly battered zombie"] = "undead",
    ["a badly battered zombie"] = "undead",
    ["a badly battered zombie"] = "undead",
    ["a badly battered zombie"] = "undead",
    ["a monstrous ghoul"] = "undead",
    ["a deranged ghoul"] = "undead",
    ["a disgruntled zombie"] = "undead",
    ["an eerie zombie child"] = "undead",
    ["a massive crypt bat"] = "undead",
    ["a raging moroi"] = "undead",
    ["a demented moroi"] = "undead",
    ["a decomposing bat"] = "undead",
    ["an apish zombie"] = "undead",
    ["a rabid ghoul"] = "undead",
    ["a madcap zombie jester"] = "undead",
    ["a massive skeletal bat"] = "undead",
    ["Michelina Thunderclaw"] = "michelina",
    ["Delreth Aran"] = "delreth",
    ["a foul priest"] = "priest",
    ["a masked executioner"] = "executioner",
    ["an armoured defender"] = "defender",
    ["a quivering stem"] = "stem",
    ["a builder"] = "builder",
    ["a scout"] = "scout",
    ["a hunter"] = "hunter",
    ["a monstrous plant"] = "plant",
    ["a fiendish fell beast"] = "beast",
    ["a senile skeleton"] = "undead",
    ["a soot-stained skeleton"] = "undead",
    ["a ghost of a giddy boy"] = "undead",
    ["a pompous regal ghost"] = "undead",
    ["a rattletrap skeleton"] = "undead",
    ["a jewelry-bedecked skeleton"] = "undead",
    [" an annoyed wraith"] = "undead",
    ["a towering fell beast"] = "beast",
    ["a monstrous fell beast"] = "beast",
    ["a blood-caked direwolf"] = "undead",
    ["a mutated direwolf"] = "undead",
    ["a massive skeletal bat"] = "undead",
    ["a rotting direwolf"] = "undead",
    ["a horrendous wight"] = "undead",
    ["a wight juggernaut"] = "undead",
    ["a frost banshee"] = "undead",
    ["a wailing banshee"] = "undead",
    ["a furious banshee"] = "undead",
    ["a hooded wraith"] = "undead",
    ["a bewildered ghost"] = "undead",
    ["a morbid banshee"] = "undead",
    ["a rickety skeleton"] = "undead",
    ["an insane banshee"] = "undead",
    ["a disgruntled enchanted zombie"] = "zombie",
    ["a mesmerized zombie lumberjack"] = "zombie",
    ["a pregnant Klakan orc"] = "orc",
    ["a goblin hunter"] = "goblin",
    ["a tumor-ridden hound"] = "hound",
    ["a Klakan orc woman"] = "orc",
    ["a Klakan orc child"] = "orc",
    ["a Klakan orc guard"] = "orc",
    ["a Klakan orc youth"] = "orc",
    ["a Klakan orc soldier"] = "orc",
    ["an undead and rotting stingray"] = "stingray",
    ["Crevonix"] = "crevonix",
    [" a bone-studded mastiff"] = "creature",
    ["a leathery bat mutation"] = "creature",
    ["a deformed crawler"] = "crawler",
    ["a long-undead fisherman"] = "undead",
    ["a distended skeleton"] = "undead",
    ["a soaked and swollen undead man"] = "undead",
    ["a bloated corpse-child"] = "undead",
    ["a cadaverous sailor"] = "undead",
    ["an undead and rotting stingray"] = "undead",
    ["an immense undead jellyfish"] = "undead",
    ["Lakhild the Dread"] = "Lakhild",
    ["a decomposing sea turtle"] = "turtle",
    ["a putrefying undead woman"] = "undead",
    ["a sulphurous steam wraith"] = "wraith",
    ["a phantom wolf"] = "wolf",
    ["an iniquitous raven"] = "raven",
    ["an arctic monitor lizard"] = "lizard",
    ["an orc siege lieutenant"] = "orc",
    ["a mindless guardian"] = "guardian",
    ["a twisted servant"] = "servant",
    ["a shadowed heartsapper"] = "heartsapper",
    ["Duresach, a giant mirebeast"] = "Duresach",
    ["Polindus, the Outcast"] = "Polindus",
    ["Gul'goa, the Orc General"] = "gulgoa",
    ["a slime-coated tentacle"] = "beast",
    ["Treslein, the Necromancer"] = "necromancer",
    ["a bladefang crocodile"] = "beast",
    ["a gruesome monstrosity"] = "mutant",
    ["a twin-headed festering crane"] = "beast",
    ["a snarling mutant bear"] = "beast",
    ["Chraskelth, the Carver"] = "carver",
    ["a towering muskeg wolf"] = "beast",
    ["a bladefanged crocodile"] = "beast",
    ["a bloated mirebeast"] = "beast",
    ["an aberrant mirebeast"] = "beast",
    ["a tumor-ridden hound"] = "beast",
    ["a rabid rabbit"] = "animal",
    ["a large moose"] = "animal",
    ["a sly red fox"] = "animal",
    ["an eagle"] = "animal",
    ["a foul smelling skunk"] = "animal",
    ["a great black bear"] = "animal",
    ["a large elk"] = "animal",
    ["a diseased raccoon"] = "animal",
    ["a murder of crows"] = "animal",
    ["an ogre trooper"] = "horde",
    ["a crazed deer"] = "animal",
    ["a hulking ogre soldier"] = "horde",
    ["a goblin assassin"] = "horde",
    ["an orc axeman"] = "horde",
    ["an armored giant"] = "horde",
    ["an orc honor guard"] = "horde",
    ["a goblin sorcerer"] = "horde",
    ["a giant black orc"] = "horde",
    ["a heavily armored giant"] = "horde",
    ["a tremendous hill giant"] = "horde",
    ["a maurader"] = "marauder",
    ["an orc scout"] = "horde",
    ["a skeletal archer"] = "undead",
    ["K'taru, Head Chieftain"] = "chieftain",
    ["Wi'arnaru, Elemental Guardian"] = "elemental",
    ["a rabid Lycaean slave"] = "slave",
    ["a decrepit Sidhe slave"] = "slave",
    ["a massive orc soldier"] = "orc",
    ["an orc assassin"] = "orc",
    ["Prison Warden Zraxxis"] = "Zraxxis",
    ["a crystal infused ogre"] = "ogre",
    ["a crystal infused golem"] = "golem",
    ["a crystallized dire wolf"] = "wolf",
    ["an enormous crystal golem"] = "golem",
    ["a flaming ruby golem"] = "golem",
    ["a splintered clattering skeleton"] = "skeleton",
    ["a filmy ghost"] = "ghost",
    ["a rotted, undead zombie"] = "zombie",
    ["a battered skeleton"] = "skeleton",
    ["a large ravenmasque"] = "ravenmasque",
    ["a translucent ghost"] = "ghost",
    ["an orc overseer"] = "orc",
    ["a goblin slave"] = "goblin",
    ["a goblin tamer"] = "goblin",
    ["a goblin blacksmith"] = "goblin",
    ["a goblin messenger"] = "goblin",
    ["a goblin shaman"] = "goblin",
    ["a goblin woodcutter"] = "goblin",
    ["Tachyk, an ogre commander"] = "Tachyk",
    ["a young Tanari priest"] = "priest",
    ["a demonic malformity"] = "demon",
    ["a juvenile orc"] = "orc",
    ["a demonic malformity"] = "demon",
    ["a gooey demon"] = "demon",
    ["a speckled bush sidewinder"] = "sidewinder",
    ["Fen'taku, Elemental Guardian"] = "Fen'taku",
    ["W'aurik, Elemental Guardian"] = "W'aurik",
    ["a fearsome atrocity"] = "atrocity",
    ["a tormented scavenger"] = "scavenger",
    ["a fierce black wolf"] = "wolf",
    [" a diseased raccoon"] = "raccoon",
    ["a foul abomination"] = "abomination",
    ["an orc assassin"] = "orc",
    ["a stealthy orcish scout"] = "orc",
    ["a bloody mutation"] = "mutation",
    ["a vaguely humanoid mutation"] = "mutation",
    ["a skeletal mage"] = "skeleton",
    ["a dark necromancer apprentice"] = "necromancer",
    ["a grotesque zombie"] = "zombie",
    ["a bat winged ghoul"] = "ghoul",
    ["a blood wyrm"] = "wyrm",
    ["a rabid badger"] = "badger",
    ["an undead mountain lion"] = "lion",
    ["an undead seagull"] = "seagull",
    ["an undead wolf"] = "wolf",
    ["a skeleton sentry"] = "sentry",
    ["an undead minion"] = "undead",
    ["a skeletal sorcerer"] = "sorcerer",
    ["a skeletal soldier"] = "soldier",
    ["Nor'teki, Elemental Shaman"] = "shaman",
    ["E'niki, Elemental Guardian"] = "guardian",
    ["a large red crab"] = "crab",
    ["a large ravenmasque"] = "ravenmasque",
    ["a lumbering titricnor"] = "titricnor",
    ["Kandek, the orcish Alchemist"] = "orc",
    ["Greshka, the orcish chef"] = "orc",
    ["an orcish warden"] = "orc",
    ["an orcish footsoldier"] = "orc",
    ["an orcish mage"] = "orc",
    ["an orcish ritualist"] = "orc",
    ["a stealthy orcish scout"] = "orc",
    ["an ogre soldier"] = "soldier",
    ["a bloated corpse"] = "corpse",
    ["Arog, the Skeletal Commander"] = "arog",
    ["a tortured soldier"] = "soldier",
    ["a small scuttlebear"] = "scuttlebear",
    ["a paradise bird"] = "paradise",
    ["a masked tribal warrior"] = "warrior",
    ["a lithe ebonmarrow"] = "ebonmarrow",
    ["a large red crab"] = "crab",
    ["a large ravenmasque"] = "ravenmasque",
    ["a lumbering titricnor"] = "titricnor",
    ["Axemaster Balan"] = "balan",
    ["Rafe, the Blademaster"] = "rafe",
    ["an eldritch guard"] = "eldritch",
    ["a mutated serpent"] = "serpent",
    ["a leathery bat mutation"] = "bat",
    ["a chimeric canine"] = "canine",
    ["a two-headed primate guard"] = "guard",
    ["a twisted equine creature"] = "equine",
    ["a furred reptilian creature"] = "creature",
    ["a bone-studded mastiff"] = "mastiff",
    ["a horned beast"] = "beast",
    ["a dire bear-like creature"] = "creature",
    ["a carapaced mutant"] = "mutant",
    ["a chimeric avian"] = "avian",
    ["a frost behemoth"] = "behemoth",
    ["a blood wisp"] = "wisp",
    ["a tainted grizzly"] = "bear",
    ["a blighted frost wolf"] = "wolf",
    ["a vile crow"] = "crow",
    ["a stone badger"] = "badger",
    ["a skittering cephyreid"] = "worm",
    ["a strong Tanari guardsman"] = "guard",
    ["a camouflaged Muamrite mercenary"] = "mercenary",
    ["a muscular Tanari thug"] = "thug",
    ["a dark skinned Muamrite female"] = "muamrite",
    ["a rough female mercenary"] = "mercenary",
    ["an agile Muamrite mercenary"] = "mercenary",
    ["an aggressive brown bear"] = "bear",
    ["a lean reddish-gray coyote"] = "coyote",
    ["a brawny Muamrite combat leader"] = "muamrite",
    ["the tissue of the stomach lining"] = "lining",
    ["an undead priest"] = "undead",
    ["a serpentine ouroboros"] = "ouroboros",
    ["a large golden root"] = "root",
    ["an ogre weaponsmith"] = "ogre",
    ["Naugon, a Nagiri Necromancer"] = "nagiri",
    ["an ogre warmage"] = "ogre",
    ["an obese demon"] = "demon",
    ["a tall, sneering demon"] = "demon",
    ["a furious demon"] = "demon",
    ["a tall, powerful demon"] = "demon",
    ["a demonic beast"] = "demon",
    ["a frog-faced demon"] = "demon",
    ["a diseased demon"] = "demon",
    ["a demon covered in boils"] = "demon",
    ["a bejeweled demon"] = "demon",
    ["a demon of fire and ice"] = "demon",
    ["a lame demon"] = "demon",
    ["a green-faced demon"] = "demon",
    ["a blood-streaked demon"] = "demon",
    ["a demonic temptress"] = "demon",
    ["a demonic locust"] = "demon",
    ["an obese demon"] = "gooey",
    ["a shadowy demon"] = "shadow",
    ["a fierce prowling anvore"] = "anvore",
    ["a short-horned desert locust"] = "locust",
    ["a carrion creeper"] = "creeper",
    ["a daunting ogre guard"] = "ogre",
    ["a giant snarling frost ogre"] = "ogre",
    ["an enormous ogre defender"] = "ogre",
    ["a husky ogre woman"] = "ogre",
    ["Wek, a frost ogre warden"] = "ogre",
    ["a giant black-eyed raven"] = "raven",
    ["an enormous black snow wolf"] = "wolf",
    ["an alert ogre lookout"] = "ogre",
    ["Rogned, High Elder of Skegdald"] = "rogned",
    ["a Nagirian archer"] = "nagiri",
    ["a Nagiri warrior"] = "nagiri",
    ["a nagiri hatchling"] = "nagiri",
    ["Nagira, the Nagiri queen"] = "nagiri",
    ["an ogre knight"] = "ogre",
    ["Groar, the Ogre Necromancer"] = "groar",
    ["an Ogre soldier"] = "ogre",
    ["an ogre bowman"] = "ogre",
    ["Chur, the Ogre Captain"] = "chur",
    ["an ogre sentry"] = "ogre",
    ["a bloodstone shapeshifter"] = "shapeshifter",
    ["an adolescent quarry drone"] = "drone",
    ["a fiendish spectre"] = "spectre",
    ["a listless quarry drone"] = " drone",
    ["Itzai, the quarry foreman"] = "itzai",
    ["a black-eyed orc"] = "orc",
    ["an orc cook"] = "orc",
    ["an ogre watchman"] = "ogre",
    ["an orc miner"] = "orc",
    ["an agitated kochlan"] = "dog",
    ["an enraged rakrtai"] = "rakrtai",
    ["a female rakrtai"] = "rakrtai",
    ["a bakul priest"] = "priest",
    ["a fierce prowling anvore"] = "anvore",
    ["a murky-brown freshwater eel"] = "eel",
    ["a burly orc"] = "orc",
    ["an orc guard"] = "orc",
    ["an orc lieutenant"] = "orc",
    ["Jorros, an orc cook"] = "jorros",
    ["a rabid Lycaean slave"] = "slave",
    ["an ominous orc warrior"] = "orc",
    ["a powerful orc archer"] = "orc",
    ["an orc assassin"] = "orc",
    ["a robust orc female"] = "orc",
    ["a mutated orc"] = "orc",
    ["a massive orc soldier"] = "orc",
    ["a well-worked lamiran slave"] = "slave",
    ["Stikla, Mystic Seer of Skegdald"] = "stikla",
    ["Vandrad, Skegdald War Chief"] = "vandrad",
    ["a Tanari warrior"] = "warrior",
    ["a Tanari defender"] = "defender",
    ["an elderly Tanari priest"] = "tanari",
    ["Jaenal, a Tanari cook"] = "jaenal",
    ["Raevis, the High Priest"] = "raevis",
    ["a spelunker"] = "spelunker",
    ["a nagiri hatchling"] = "nagiri",
    ["an aquatic spider"] = "spider",
    ["an ebony, aquatic wyrm"] = "wyrm",
    ["a giant, freshwater crab"] = "crab",
    ["a captured warrior"] = "warrior",
    ["a skeletal hound"] = "skeleton",
    ["a skeleton soldier"] = "skeleton",
    ["a skeletal archer"] = "skeleton",
    ["a skeleton necromancer"] = "skeleton",
    ["Tronoc, the Skeleton General"] = "tronoc",
    ["an undead warrior"] = "undead",
    ["an exotic quezdra bird"] = "bird",
    ["a quivering stem"] = "stem",
    ["a monstrous plant"] = "plant",
    ["a hulking mutant rat"] = "rat",
    ["a goblin guard"] = "goblin",
    ["a goblin chieftain"] = "goblin",
    ["the goblin lieutenant"] = "goblin",
    ["the goblin shaman"] = "goblin",
    ["a goblin girl"] = "goblin",
    ["a goblin youth"] = "goblin",
    ["the goblin matron"] = "goblin",
    ["an elderly goblin"] = "goblin",
    ["a necromancer"] = "necromancer",
    ["a goblin recruit"] = "goblin",
    ["a short-horned desert locust"] = "locust",
  }</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Functions</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Bashing</name>
					<packageName></packageName>
					<script>--Is our target even in the room?

function huntingCheck()
  for k, v in pairs(Targets) do
    if (demonnic.roomItems[k]) then
      user.targetInRoom = true
      break
    else
      user.targetInRoom = false
    end
  end
end

--Next Bash Area to go to

function nextBashArea()
  if nextbashArea == Ulsyndar then
    send("score")
    expandAlias("bash none")
    expandAlias("bash Sirocco")
  elseif nextbashArea == Sirocco then
    send("score")
    expandAlias("bash none")
    expandAlias("bash Dralhu")
  elseif nextbashArea == Dralhu then
    send("score")
    expandAlias("bash none")
    expandAlias("bash Mirror")
  elseif nextbashArea == Mirror then
    send("score")
    expandAlias("bash none")
    expandAlias("bash Mourning")
  elseif nextbashArea == Mourning then
    send("score")
    expandAlias("bash none")
    expandAlias("bash Grukai")
  elseif nextbashArea == Grukai then
    send("score")
    expandAlias("bash none")
    expandAlias("bash Ulsyndar")
    --expandAlias("bash Iskadar")
  end
end

--Kill the target, get gold, or move to next room

function bashing()
  --quest stuff
  --	if user.Bashing and bashArea == Board and jump == false and memory == true then
  --		send("jump")
  --		jump = true
  --		memory = false
  --	elseif (user.Bashing and user.Balance.Bashing and bashArea == Keep and gmcp.Room.Info.num == 17043 and not mmp.autowalking) then
  --		bashWalking()
  --	elseif (user.Bashing and user.Balance.Bashing and bashArea == Klakan and gmcp.Room.Info.num == 5057 and not mmp.autowalking) then
  --		send("give 50 orc to tolgar::give 50 orc to tolgar::put gold in cloak")
  --		bashWalking()
  --	elseif (user.Bashing and user.Balance.Bashing and bashArea == Feinhorn and gmcp.Room.Info.num == 16969 and not mmp.autowalking) then
  --		user.Balance.Bashing = false
  --		send("give root to visarae")
  --	elseif (user.Bashing and user.Balance.Bashing and gmcp.Room.Info.num == 15612 and not mmp.autowalking) then
  --		user.Balance.Bashing = false
  --		send("give worm to relg")
  --	elseif (user.Bashing and user.Balance.Bashing and bashArea == Vorrak and gmcp.Room.Info.num == 9573 and not mmp.autowalking) then
  --			if (not parchmentGiven) then
  --				user.Balance.Bashing = false
  --				send("give parchment to grorsh")
  --				user.Balance.Bashing = true
  --			end
  if (user.followBashing and not user.FirstHit) then
    user.Balance.Bashing = false
    expandAlias("kill", false)
    --	elseif (shieldtouch == true and user.Bashing == false and user.targetInRoom and bashArea == Iaat and tonumber(gmcp.Char.Vitals.hp / 11) &gt;= 440 and not mmp.autowalking) then
    --		if (gmcp.Char.Vitals.bal == "1" and gmcp.Char.Vitals.eq == "1" and user.Balance.Bashing) then
    --			user.Bashing = false
    --			shieldtouch = false
    --			expandAlias("bash Iaat")	
    --		end		
    --	elseif (shieldtouch == false and user.Bashing and user.targetInRoom and bashArea == Iaat and tonumber(gmcp.Char.Vitals.hp / 11) &lt;= 350 and not mmp.autowalking) then
    --		if (gmcp.Char.Vitals.bal == "1" and gmcp.Char.Vitals.eq == "1" and user.Balance.Bashing) then
    --			keneanung.bashing.flee()
    --		end		
    --	elseif (shieldtouch == true and user.Bashing == false and user.targetInRoom and bashArea == Kilathu and tonumber(gmcp.Char.Vitals.hp / 11) &gt;= 480 and not mmp.autowalking) then
    --		if (gmcp.Char.Vitals.bal == "1" and gmcp.Char.Vitals.eq == "1" and user.Balance.Bashing) then
    --			user.Bashing = false
    --			shieldtouch = false
    --			expandAlias("bash Kilathu")	
    --		end		
    --	elseif (shieldtouch == false and user.Bashing and user.targetInRoom and bashArea == Kilathu and tonumber(gmcp.Char.Vitals.hp / 11) &lt;= 300 and not mmp.autowalking) then
    --		if (gmcp.Char.Vitals.bal == "1" and gmcp.Char.Vitals.eq == "1" and user.Balance.Bashing) then
    --			send("bulwark")
    --		end		
    --	elseif (user.Bashing and user.targetInRoom and bashArea == Kilathu and #gmcp.Room.Players == tonumber(huntingnumber) and not mmp.autowalking) then
    --		if (gmcp.Char.Vitals.bal == "1" and gmcp.Char.Vitals.eq == "1" and user.Balance.Bashing) then
    --			if tonumber(mobnumber) &gt; 3 then
    --				bashWalking()
    --			else
    --				for k, v in pairs (Targets) do
    --					if (demonnic.roomItems[k]) then
    --						target.name = demonnic.roomItems[k][1]
    --						user.Balance.Bashing = false
    --local list = gmcp.Char.Items.List
    --demonnic.roomItems = {}
    --    for _,v in ipairs(list.items) do
    --      if not demonnic.roomItems[v.name] then demonnic.roomItems[v.name] = {} end
    --     table.insert(demonnic.roomItems[v.name], v.id)
    --    end
    --		sysEcho("Problem 0")
    --		send("decay crab::decay " .. target.name)
    --		send("attack crab::attack " .. target.name)
    --		huntingdelay = true
    --						break
    --					end
    --				end	
    --			end
    --		end
    --	elseif (user.Bashing and user.targetInRoom and bashArea == Crawlers and #gmcp.Room.Players == tonumber(huntingnumber) and not mmp.autowalking) then
    --		if user.ih then
    --			send("ql")
    --			send("ih")
    --			user.ih = false
    --		end
    --	elseif (user.Bashing and user.targetInRoom and bashArea == Crawlers and #gmcp.Room.Players == tonumber(huntingnumber) and not mmp.autowalking) then
    --		if (gmcp.Char.Vitals.bal == "1" and gmcp.Char.Vitals.eq == "1" and user.Balance.Bashing) then
    --			if tonumber(mobnumber) &gt; 1 then
    --				bashWalking()
    --			else
    --				for k, v in pairs (Targets) do
    --					if (demonnic.roomItems[k]) then
    --						target.name = demonnic.roomItems[k][1]
    --						user.Balance.Bashing = false
    --  local list = gmcp.Char.Items.List
    --    demonnic.roomItems = {}
    --    for _,v in ipairs(list.items) do
    --      if not demonnic.roomItems[v.name] then demonnic.roomItems[v.name] = {} end
    --       table.insert(demonnic.roomItems[v.name], v.id)
    --    end
    --		sysEcho("Problem 0")
    --		expandAlias("aa", false)
    --		huntingdelay = true
    --						break
    --					end
    --				end	
    --			end
    --		end
    --	elseif (user.Bashing and user.targetInRoom and bashArea == DemonPass and #gmcp.Room.Players == tonumber(huntingnumber) and not mmp.autowalking) then
    --		if (gmcp.Char.Vitals.bal == "1" and gmcp.Char.Vitals.eq == "1" and user.Balance.Bashing) then
    --			if tonumber(mobnumber) &gt; 2 then
    --				bashWalking()
    --			else
    --				for k, v in pairs (Targets) do
    --					if (demonnic.roomItems[k]) then
    --						target.name = demonnic.roomItems[k][1]
    --						user.Balance.Bashing = false
    --local list = gmcp.Char.Items.List
    --demonnic.roomItems = {}
    --for _,v in ipairs(list.items) do
    --if not demonnic.roomItems[v.name] then demonnic.roomItems[v.name] = {} end
    --table.insert(demonnic.roomItems[v.name], v.id)
    --end
    --		expandAlias("aa", false)
    --		huntingdelay = true
    --						break
    --					end
    --				end	
    --			end
    --		end
    --	elseif (user.Bashing and user.targetInRoom and bashArea == KhousSolo and #gmcp.Room.Players == tonumber(huntingnumber) and not mmp.autowalking) then
    --		if (gmcp.Char.Vitals.bal == "1" and gmcp.Char.Vitals.eq == "1" and user.Balance.Bashing) then
    --			if tonumber(mobnumber) &gt; 2 then
    --				bashWalking()
    --			else
    --				for k, v in pairs (Targets) do
    --					if (demonnic.roomItems[k]) then
    --						target.name = demonnic.roomItems[k][1]
    --						user.Balance.Bashing = false
    --  local list = gmcp.Char.Items.List
    --    demonnic.roomItems = {}
    --    for _,v in ipairs(list.items) do
    --     if not demonnic.roomItems[v.name] then demonnic.roomItems[v.name] = {} end
    --      table.insert(demonnic.roomItems[v.name], v.id)
    --    end
    --		expandAlias("aa", false)
    --		huntingdelay = true
    --						break
    --					end
    --				end	
    --			end
    --		end
    --	elseif (user.Bashing and user.targetInRoom and bashArea == Llus and #gmcp.Room.Players == tonumber(huntingnumber) and not mmp.autowalking) then
    --		if (gmcp.Char.Vitals.bal == "1" and gmcp.Char.Vitals.eq == "1" and user.Balance.Bashing) then
    --				for k, v in pairs (Targets) do
    --					if (demonnic.roomItems[k]) then
    --						target.name = demonnic.roomItems[k][1]
    --						user.Balance.Bashing = false
    --  local list = gmcp.Char.Items.List
    --    demonnic.roomItems = {}
    --    for _,v in ipairs(list.items) do
    --      if not demonnic.roomItems[v.name] then demonnic.roomItems[v.name] = {} end
    --      table.insert(demonnic.roomItems[v.name], v.id)
    --    end
    --		sysEcho("Problem 0")
    --		send("stand::attack anvore::attack " .. target.name)
    --		huntingdelay = true
    --						break
    --					end
    --				end	
    --			end
    --	elseif (user.Bashing and user.targetInRoom and bashArea == Gongen and #gmcp.Room.Players == tonumber(huntingnumber) and not mmp.autowalking) then
    --		if (gmcp.Char.Vitals.bal == "1" and gmcp.Char.Vitals.eq == "1" and user.Balance.Bashing) then
    --				for k, v in pairs (Targets) do
    --					if (demonnic.roomItems[k]) then
    --						target.name = demonnic.roomItems[k][1]
    --						user.Balance.Bashing = false
    --  local list = gmcp.Char.Items.List
    --    demonnic.roomItems = {}
    --    for _,v in ipairs(list.items) do
    --      if not demonnic.roomItems[v.name] then demonnic.roomItems[v.name] = {} end
    --      table.insert(demonnic.roomItems[v.name], v.id)
    --    end
    --		sysEcho("Problem 0")
    --		send("attack assassin::attack " .. target.name)
    --		huntingdelay = true
    --						break
    --					end
    --				end	
    --			end
    -- elseif (user.Bashing and user.targetInRoom and #gmcp.Room.Players == tonumber(huntingnumber) and not mmp.autowalking) then
    -- --	elseif (user.Bashing and user.targetInRoom and not mmp.autowalking) then
    --
    -- --	elseif (user.Bashing and user.targetInRoom and not mmp.autowalking) then
    --
    -- if (gmcp.Char.Vitals.bal == "1" and gmcp.Char.Vitals.eq == "1" and user.Balance.Bashing) then
    -- for k, v in pairs (Targets) do
    -- if (demonnic.roomItems[k]) then
    -- target.name = demonnic.roomItems[k][1]
    -- user.Balance.Bashing = false
    -- local list = gmcp.Char.Items.List
    -- demonnic.roomItems = {}
    -- for _,v in ipairs(list.items) do
    -- if not demonnic.roomItems[v.name] then demonnic.roomItems[v.name] = {} end
    -- table.insert(demonnic.roomItems[v.name], v.id)
    -- end
    -- --		sysEcho("Problem 0")
    -- expandAlias("aa", false)
    -- huntingdelay = true
    -- break
    -- end
    -- end	
    -- end
    -- elseif (user.Bashing and not mmp.autowalking and not user.targetInRoom and user.Balance.Bashing) then
    -- if (gmcp.Char.Vitals.bal == "1" and gmcp.Char.Vitals.eq == "1") then
    -- if huntingdelay == true and tonumber(huntingnumber) &gt;= 1 then
    -- mmp.customwalkdelay(5)
    -- end
    -- bashWalking()
    -- huntingdelay = false
    -- end
    -- --	elseif (user.Bashing and not mmp.autowalking and user.targetInRoom and #gmcp.Room.Players &gt;= tonumber(huntingnumber + 1) and user.Balance.Bashing) then
    -- elseif (user.Bashing and not mmp.autowalking and user.targetInRoom and user.Balance.Bashing) then
    --
    -- if (gmcp.Char.Vitals.bal == "1" and gmcp.Char.Vitals.eq == "1") then
    -- if huntingdelay == true and tonumber(huntingnumber) &gt;= 1 then
    -- mmp.customwalkdelay(5)
    -- end
    -- bashWalking()
    -- huntingdelay = false
    -- end
    -- end
    -- end
  elseif
    (
      user.Bashing and
      user.targetInRoom and
      #gmcp.Room.Players == tonumber(huntingnumber) and
      not mmp.autowalking
    )
  then
    --	elseif (user.Bashing and user.targetInRoom and not mmp.autowalking) then
    --	elseif (user.Bashing and user.targetInRoom and not mmp.autowalking) then
    if (user.Balance.Bashing) then
      for k, v in pairs(Targets) do
        if (demonnic.roomItems[k]) then
          target.name = demonnic.roomItems[k][1]
          user.Balance.Bashing = false
          local list = gmcp.Char.Items.List
          demonnic.roomItems = {}
          for _, v in ipairs(list.items) do
            if not demonnic.roomItems[v.name] then
              demonnic.roomItems[v.name] = {}
            end
            table.insert(demonnic.roomItems[v.name], v.id)
          end
          --		sysEcho("Problem 0")
          expandAlias("kill", false)
          huntingdelay = true
          break
        end
      end
    end
  elseif
    (user.Bashing and not mmp.autowalking and not user.targetInRoom and user.Balance.Bashing)
  then
    if huntingdelay == true and tonumber(huntingnumber) &gt;= 1 then
      mmp.customwalkdelay(5)
    end
    bashWalking()
    huntingdelay = false
    --	elseif (user.Bashing and not mmp.autowalking and user.targetInRoom and #gmcp.Room.Players &gt;= tonumber(huntingnumber + 1) and user.Balance.Bashing) then
  elseif (user.Bashing and not mmp.autowalking and user.targetInRoom and user.Balance.Bashing) then
    if huntingdelay == true and tonumber(huntingnumber) &gt;= 1 then
      mmp.customwalkdelay(5)
    end
    bashWalking()
    huntingdelay = false
  end
end

--How do we get from room to room?
--dont move if in blackout
bashRoom = bashRoom or 1
bashArea = bashArea or "none"

function bashWalking()
  if blackout then
    cecho("&lt;red&gt; NOT MOVING, YOU ARE IN BLACKOUT")
  elseif offense_paused then
    offense_paused = true
  else
    if (bashArea ~= "none") then
      if (bashRoom &gt; #bashArea) then
        sysEcho("Area Cleared")
        bashRoom = 1
        bashArea = "none"
        nextBashArea()
      end
      if (gmcp.Room.Info.num == bashArea[bashRoom]) then
        for k, v in pairs(Targets) do
          if (demonnic.roomItems[k]) then
            bashRoom = bashRoom + 1
            bashing()
            break
          end
        end
      else
        expandAlias("goto " .. bashArea[bashRoom])
        bashRoom = bashRoom + 1
      end
    else
      return
    end
  end
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Areas Achaea</name>
				<packageName></packageName>
				<script></script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Azdun</name>
					<packageName></packageName>
					<script>Azdun =
  {
    1773,
    1774,
    1775,
    1776,
    1777,
    1834,
    1835,
    1836,
    1837,
    1838,
    1839,
    1840,
    1841,
    1844,
    1845,
    1842,
    1843,
    6725,
    6734,
    6735,
    6952,
    6953,
    6954,
    1833,
    3106,
    3107,
    3110,
    3243,
    3242,
    3240,
    3241,
    3106,
    3110,
    3243,
    3242,
    3240,
    3241,
    3106,
    3200,
    3202,
    3111,
    3198,
    3113,
    3118,
    16125,
    36980,
    3134,
    3147,
    15591,
    15586,
    3146,
    3121,
    3117,
    3116,
    46015,
    3119,
    3144,
    14271,
    12994,
    18668,
    18666,
    18652,
    18659,
    18665,
    21872,
    21541,
    21635,
    21760,
    21766,
    3172,
    3175,
    3179,
    3180,
    3181,
    3183,
    3182,
    3184,
    3186,
    3185,
    3187,
    3188,
    3189,
    3190,
    3191,
    3192,
    3193,
    3194,
    3195,
    3196,
  }</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Grukai</name>
					<packageName></packageName>
					<script>Grukai =
  {
    19938,
    36832,
    36831,
    36837,
    36839,
    36843,
    34788,
    35910,
    35914,
    36813,
    36649,
    36275,
    35197,
    9309,
    35725,
    36809,
    36829,
    28122,
    28111,
    28110,
    28120,
    28121,
    28137,
    28147,
    28045,
    28096,
    28102,
    28106,
    28958,
    28959,
    28987,
    28960,
    28946,
    28964,
    28974,
    28992,
    28990,
    28993,
    28982,
    28887,
    28868,
    28867,
    28948,
    28862,
    28816,
    28814,
    28803,
    28744,
    28485,
    28469,
    28484,
    28244,
    28247,
    28251,
    28258,
    28255,
    28266,
    28271,
    28280,
    28282,
    18333,
    28295,
    18045,
    27927,
    27614,
    27931,
    27956,
    27958,
    27969,
    27986,
    27998,
    28028,
    28496,
    28399,
    28390,
    28503,
    28732,
    28728,
    28835,
    28857,
    28858,
    28830,
    28854,
    28891,
    28944,
    28965,
    28175,
    28179,
    28850,
    28843,
    28709,
    28181,
    28202,
    28190,
    28188,
    37257,
    28191,
    28693,
    28657,
    28238,
    28230,
    28218,
    28239,
    28243,
    28214,
    28207,
    28208,
    28194,
    28211,
    37404,
    37437,
    37436,
    37425,
    37427,
    37434,
    37424,
    37416,
    37415,
    37413,
    37414,
    37412,
    37411,
    37405,
    37403,
    37402,
    37252,
    37407,
    37408,
    37369,
    37368,
    37367,
    37365,
    37364,
    37362,
    37361,
    37360,
    37382,
    37377,
    37370,
    37378,
    37380,
    37236,
    37235,
    37232,
    37239,
    37314,
    37304,
    37303,
    37301,
    37300,
    37299,
    37298,
    37296,
    37353,
    37358,
    37359,
    29506,
  }</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Sirocco</name>
					<packageName></packageName>
					<script>Sirocco =
  {
    28999,
    29019,
    29021,
    29010,
    29009,
    29008,
    29005,
    29000,
    29004,
    29041,
    29039,
    29024,
    29033,
    29043,
    29058,
    29060,
    29045,
    29075,
    29061,
    29117,
    29364,
    29112,
    29307,
    29078,
    29118,
    29125,
    29124,
    29120,
    29119,
    29130,
    29136,
    29137,
    29156,
    29159,
    29154,
    29150,
    29147,
    29146,
    29153,
    29144,
    29152,
    29157,
    29173,
    29171,
    29194,
    29195,
    29192,
    29185,
    30152,
  }</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Ulsyndar</name>
					<packageName></packageName>
					<script>Ulsyndar =
  {
    27888,
    35417,
    34985,
    35284,
    35161,
    35381,
    35372,
    35296,
    34999,
    35476,
    35832,
    35524,
    28553,
    35350,
    35540,
    35408,
    8207,
    35747,
    34505,
    35448,
    35624,
    34983,
    35472,
    35621,
    35662,
    35735,
    35848,
    34904,
    35044,
    35251,
    35656,
    35374,
    35443,
    35520,
    35437,
    35322,
  }</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Iskadar</name>
					<packageName></packageName>
					<script>Iskadar =
  {
    27951,
    27974,
    28174,
    29480,
    29482,
    28952,
    29142,
    27863,
    28733,
    28752,
    27709,
    27786,
    27887,
    27932,
    27369,
    29615,
    27681,
    27757,
    27940,
    28277,
    26924,
    28619,
    27893,
    27924,
    27957,
    28103,
    28459,
    28582,
    28623,
    28458,
    39402,
    27886,
    28339,
    28391,
    28032,
    28886,
    39395,
    28866,
    28558,
    28846,
    28892,
    28900,
    28902,
    28916,
    28956,
    28567,
    28630,
    28640,
    28642,
    28651,
    28659,
    22750,
    27232,
    28768,
    26630,
  }</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Mirror</name>
					<packageName></packageName>
					<script>Mirror =
  {
    28350,
    28396,
    28403,
    28418,
    28408,
    28419,
    28426,
    28428,
    28432,
    28433,
    28434,
    28429,
    27697,
    28435,
    28438,
    28439,
    28440,
    28441,
    28443,
    28444,
    28445,
    28447,
    28448,
    26194,
    26950,
    27521,
    27501,
    27446,
    27860,
    27977,
    27980,
    27997,
    27707,
    27861,
    27975,
    27859,
    27852,
    27851,
    27824,
    27854,
    27806,
    27823,
    27857,
    27949,
    28472,
    28471,
    28470,
    28467,
    28464,
    28474,
    28476,
    28479,
    28480,
    27193,
    27206,
    27256,
    28478,
    28186,
    27780,
    27734,
    28350,
    28396,
  }</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Dralhu</name>
					<packageName></packageName>
					<script>Dralhu =
  {
    14694,
    14477,
    23564,
    9296,
    9298,
    9284,
    14780,
    14697,
    14834,
    15264,
    15010,
    15101,
    15151,
    18232,
    18511,
    1198,
    16495,
    16372,
    16337,
    7681,
  }</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Mourning</name>
					<packageName></packageName>
					<script>Mourning =
  {
    29282,
    26922,
    8578,
    28532,
    30527,
    30131,
    18867,
    27568,
    30005,
    29798,
    29434,
    29897,
    29209,
    30126,
    29416,
    29623,
    29808,
    29815,
    29329,
    29788,
    29771,
    30151,
    29792,
    29388,
    28274,
    29863,
    29257,
    19989,
    27967,
    37797,
    29441,
    29561,
    29977,
    29954,
    29895,
    29797,
    30070,
    23831,
    28647,
    29087,
    28547,
    19429,
    20445,
    29284,
    22614,
    26916,
    29302,
    29344,
    29115,
    28486,
    28370,
    28790,
    29015,
    20409,
    28296,
    29081,
    28936,
    28638,
    29776,
    29663,
  }</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Colchis</name>
					<packageName></packageName>
					<script>Colchis =
  {
    19795,
    19916,
    19917,
    19925,
    19926,
    19927,
    19944,
    19943,
    19942,
    19935,
    19934,
    19936,
    19953,
    19961,
    19962,
    19964,
    19967,
    19975,
    19954,
    19950,
    19951,
  }</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
		</ScriptGroup>
		<Script isActive="yes" isFolder="no">
			<name>Nomad Dragon</name>
			<packageName></packageName>
			<script>mimicname = math.random(#namelist)

combat = combat or false
combat_shield = combat_shield or false
combat_diagnose = combat_diagnose or false
combat_evade = combat_evade or false
combat_heal = combat_heal or false
combat_raze = combat_raze or false
combat_attack = combat_attack or false

hunting = hunting or false
hunting_evade = hunting_evade or false
hunting_raze = hunting_raze or false
hunting_attack = hunting_attack or false

offense_paused = offense_paused or false
pre_offense_pause = pre_offense_pause or false
sailing = sailing or false
-- Combat Functions

function nomad_combat_shield()
    expandAlias("ts on")
    pre_offense_pause = true
end


function nomad_combat_diagnose()
  send("queue addclear eqbal stand::diagnose")
end

function nomad_combat_heal()
  send("")
end

function nomad_combat_evade()
  pre_offense_pause = true
  for k, v in pairs(gmcp.Room.Info.exits) do
    send("queue addclear eqbal stand::" .. k)
    break
  end
end

function nomad_combat_raze()
  if skillset == "dragon" then
    --pvp raze here
  end
end

function nomad_combat_attack()
  if skillset == "dragon" then
    --pvp attack here
  end
end

function nomad_hunting_evade()
  pre_offense_pause = true
  local safety = bashroom - 2
  expandAlias("goto " .. bashArea(safety))
end

function nomad_hunting_raze()
    send(
      "queue addclear eqbal stand::touch chameleon " ..
      namelist[mimicname] ..
      "::get gold::put gold in pack::tailsmash " ..
      target.name ..
      "::override " ..
      target.name
    )
end

function nomad_hunting_attack()
    send(
      "queue addclear eqbal stand::touch chameleon " ..
      namelist[mimicname] ..
      "::get gold::put gold in pack::dragonsting " ..
      target.name ..
      "::override " ..
      target.name ..
      "::gut " ..
      target.name ..
      "::dragonspit " ..
      target.name
    )
end</script>
			<eventHandlerList />
		</Script>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>[BATMAN]</name>
			<packageName></packageName>
			<script>-- I am the Batman!</script>
			<eventHandlerList />
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Preserving</name>
				<packageName>Preserving</packageName>
				<script></script>
				<eventHandlerList />
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Preserving</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Functions</name>
						<packageName></packageName>
						<script>function showList()
local num = 0
	cecho(string.format("\n&lt;white&gt;   %-15s                                 %3s", "Toxin", "Amount"))
	cecho("\n&lt;red&gt;------------------------------------------------------------")
	for k, v in pairs (preserve.list) do
		if (v &gt; 0) then
		num = num + v
		cecho(string.format("\n&lt;red&gt;[&lt;white&gt;  %-15s                                 %3s&lt;red&gt;     ]", string.title(k), tostring(v)))
		end
	end
	cecho(string.format("\n&lt;red&gt;[  %s                                     %s    ]", string.rep("-", 12), string.rep("-", 3)))
	cecho(string.format("\n&lt;red&gt;[&lt;white&gt;  %-15s                                 %3s&lt;red&gt;     ]", "Total", tostring(num)))
	cecho(string.format("\n&lt;red&gt;[&lt;white&gt;  %-15s                                 %3s&lt;red&gt;     ]", "Empties", tostring(#vials - num)))
	cecho("\n&lt;red&gt;------------------------------------------------------------")
	if (num == 0) then
		echo("\n")
		expandAlias("preserving")
	else
		cecho("\n&lt;red&gt;[&lt;white&gt;Add more toxins or pretox to start.&lt;red&gt;]")
	end
end

function preserveToxin()
	if (user.preserving and preserve.status == "go") then
		if (preserve.toxin ~= "none" and not preserve.full) then
			send("preserve toxin " .. preserve.toxin .. " in vial" .. vials[1])
		end
		if (preserve.toxin == "none") then
			for k, v in pairs (preserve.list) do
				if (v &gt; 0) then
					preserve.toxin = k
					send("preserve toxin " .. preserve.toxin .. " in vial" .. vials[1])
					break
				end
			end
		end
		if (preserve.full) then
			preserve.list[preserve.toxin] = preserve.list[preserve.toxin] - 1
			table.remove(vials, 1)
			showList()
			user.preservecount = 0
			preserve.full = false
			if (preserve.list[preserve.toxin] == 0) then
				for k, v in pairs (preserve.list) do
					if (v &gt; 0) then
						preserve.toxin = k
						send("preserve toxin " .. preserve.toxin .. " in vial" .. vials[1])
						break
					end
				end
			else
				send("preserve toxin " .. preserve.toxin .. " in vial" .. vials[1])
			end
		end
	end
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Variables</name>
						<packageName></packageName>
						<script>vials = vials or {}
user.preserving = user.preserving or false
user.preservecount = user.preservecount or 0
preserve = preserve or {}
preserve.full = preserve.full or false
preserve.toxin = preserve.toxin or "none"
preserve.status = preserve.status or "paused"
preserve.list = {
["aconite"] = 0,
["actinium"] = 0,
["arsenic"] = 0,
["aspartame"] = 0,
["atropine"] = 0,
["avidya"] = 0,
["benzedrine"] = 0,
["benzene"] = 0,
["botulinum"] = 0,
["bromine"] = 0,
["butisol"] = 0,
["calotropis"] = 0,
["chloroform"] = 0,
["ciguatoxin"] = 0,
["cyanide"] = 0,
["digitalis"] = 0,
["ether"] = 0,
["formaldehyde"] = 0,
["hemotoxin"] = 0,
["iodine"] = 0,
["ketamine"] = 0,
["lindane"] = 0,
["luminal"] = 0,
["mazanor"] = 0,
["mebaral"] = 0,
["mercury"] = 0,
["metrazol"] = 0,
["noctec"] = 0,
["opium"] = 0,
["oxalis"] = 0,
["oxycodone"] = 0,
["psilocybin"] = 0,
["strychnine"] = 0,
["veratrum"] = 0,
["vitriol"] = 0,
["xeroderma"] = 0,
["trioxin"] = 0
}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Trioxin Flask</name>
						<packageName></packageName>
						<script>function PreserveTrioxin()
	if (user.preservingflask) then
		if (gmcp.Char.Vitals.bal == "1" and gmcp.Char.Vitals.eq == "1") then
			send("preserve toxin trioxin in flask303177")
		else
			return
		end
	end
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Harvesting</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Areas</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Potash</name>
						<packageName></packageName>
						<script>Potash = {2538,12066,12067,12077,12078,12104,12119,12120,12122,12124,12125,12180,12187,12189,12190,12191,12192,12193,12194,12195,12196,12197,12199,12202,12204,12206,12211,12234,12239,12240,12243,12244,12252,12255,12256,12259,12262,12263,12265,12285,12315,12320,12342,12360,12376,12386,12434,12439,12472,12519,12536,12562,12711,12782,12925,13027,13162,13181,14262,14642,15180,15223,15224,15580,44867,44940,45161,45345,60185,60724,60508,37639,37660,37661,37665,37670,37810,37814,37816,37823,37824,37848,37849,37850,37851,38624,37667,7694,7695,7696,7697,7698,7699,7700,7701,7702,7703,7704,7705,7706,7707,7708,7709,7710,7711,7712,7713,7714,7715,7716,7717,7718,7719,7720,7721,7722,7723,7724,7725,7726,7727,7728,7729,7730,7731,7732,7733,7734,7735,7736,7737,7738,7739,7740,7741,7742,7743,7744,7745,7746,7747,7748,7749,7750,7751,7752,7753,7754,7755,7756,7757,7758,7759,7760,7761,7762,7763,7764,7766,7767,7768,7769,7772,7773,7774,7775,7776,7777,7778,7779,7780,7781,7782,7783,7784,7785,7786,7787,7788,7789,8117,7765,658,13975,18293,19728,19903,22567,23123,23582,23734,23926,23939,24084,24309,24419,24422,24427,24464,24533,24548,24554,24577,24594,24727,24829,24830,24832,24839,24850,24859,24864,24866,24868,24870,24876,24881,24882,24883,24892,24894,24903,24908,24916,24967,25010,25035,25072,25108,25126,25148,25205,25206,25217,25297,25544,25546,25549,25553,25559,25566,25583,25588,25589,25592,25595,25614,25631,25659,25873,25892,25895,25908,26022,26038,26130,26137,26142,26151,26154,26156,26170,26270,26319,26347,26358,26371,26386,26420,26438,26449,26462,26471,26485,26491,26502,26515,26522,26547,26563,26579,26588,26598,26617,26627,26637,26650,26662,26672,26682,26688,26699,26707,26753,26759,26761,26772,36191,36316,36930,38051,40254,40894,44742,46412,47102,47183,47391,47707,47759,47971,48177,48186,48279,48354,48450,48498,48558,48592,48698,48987,49197,26608}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Underground</name>
						<packageName></packageName>
						<script>Underground = {
12695,
161,
12632,
155,
4667,
4668,
4669,
23109,
18454,
18560,
18592,
18669,
19755,
18864,
21191,
21192,
26425,
39888,
15936,
22114,
2008,
2009,
2010,
2017,
2400,
2401,
2402,
2418,
2403,
2417,
2414,
2415,
2413,
2422,
2416,
2421,
2412,
2420,
2411,
18784,
2404,
2405,
2406,
2407,
2409,
2410,
2419,
2408,
19054,
18528,
17571,
19073,
19081,
30014,
12263,
12265,
18356,
4097,
4093,
3986,
4092,
4094,
4095,
4096,
4098,
4099,
9877,
18349,
18303,
18279,
30036,
4197,
18361,
18057,
4182,
4183,
4184,
4185,
4186,
4199,
4187,
4192,
4193,
4196,
4194,
4198,
17080,
17086,
4195,
29943,
4188,
4190,
4191,
4189,
4204,
4202,
16986,
4200,
4203,
4201,
4205,
17042,
17048,
17051,
4206,
12321,
12319,
12332,
12313,
27199,
25059,
27279,
29645,
29689,
29910,
29941,
29969,
30027,
29983,
30267,
30428,
30434,
30444,
30445,
30455,
30463,
30464,
30465,
30479,
30488,
30512,
30525,
30559,
30095,
30079,
30060,
30056,
30032,
12455,
12481,
12642,
13078,
24813,
30018,
25098,
27508,
30012,
29497,
29907,
30022,
30221,
29925,
29926,
30023,
29933,
29940,
29964,
29952,
29957,
29953,
29963,
29972,
29981,
30006,
29988,
30011,
30029,
30052,
30059,
30063,
30135,
30217,
30140,
30201,
30215,
30212,
30068,
30087,
30101,
30128,
45049,
12342,
12434,
12285,
12376,
12439,
36980,
3970,
4169,
3969,
4228,
249,
251,
250,
252,
4207,
4208,
4227,
4209,
4210,
4212,
4213,
4226,
10010,
60,
2011,
2012,
2014,
4233,
4232,
4231,
4230,
4229,
4234,
4235,
4236,
4237,
4249,
4238,
4255,
21709,
4239,
4244,
4240,
4241,
4242,
4243,
4246,
4248,
4247,
4245,
4250,
4253,
4251,
4252,
4254,
4256,
4280,
4278,
4281,
4279,
4282,
4283,
4285,
4284,
4286,
4287,
2015,
2013,
4289,
4288,
2016,
2018,
4291,
4290,
4292,
4293,
4294,
4295,
2019,
2020,
2022,
26376,
2023,
2026,
2024,
2028,
2039,
2025,
2027,
2029,
2031,
2030,
2032,
2033,
2021,
2037,
2038,
5027,
2034,
2035,
10181,
10409,
10206,
10222,
10189,
10184,
10190,
10185,
10182,
10193,
1773,
1774,
1775,
1776,
1777,
1778,
1828,
1834,
1835,
1836,
1839,
1837,
1838,
1840,
1841,
1844,
1842,
1843,
6725,
6734,
6735,
6952,
6953,
6954,
1845,
1779,
1780,
1781,
1814,
1782,
1783,
1787,
1794,
1784,
1790,
1792,
1788,
1791,
1789,
1793,
1795,
1796,
1797,
1802,
1798,
1799,
1800,
1801,
1803,
1805,
1804,
1812,
1811,
1813,
1785,
1786,
1829,
1830,
1831,
1832,
1833,
3106,
3107,
3108,
3109,
3110,
3242,
3243,
3111,
3240,
3241,
3239,
3200,
24712,
3202,
24649,
3199,
21858,
3208,
3209,
3112,
3198,
3113,
14594,
3114,
3172,
3175,
3179,
3183,
3180,
3181,
3184,
3182,
3187,
3185,
3186,
3190,
3188,
3189,
3193,
3191,
3192,
3196,
3194,
3195,
3197,
3115,
3118,
3117,
3116,
3121,
3134,
3147,
3146,
3144,
3119,
16125,
15591,
15586,
14271,
18668,
18652,
18666,
18659,
18665,
12994,
26584,
26559,
26401,
26360,
22952,
23025,
23788,
22222,
22523,
28242,
30642,
21872,
21541,
21635,
21760,
21766,
21636,
23265,
21879,
22050,
21410,
23191,
24147,
24151,
24149,
24148,
15449,
23214,
4788,
38174,
37639,
37660,
37661,
37665,
37667,
37670,
37848,
37814,
37810,
37816,
37824,
37823,
24203,
24101,
24053,
10583,
10584,
55637,
10586,
10587,
8230,
35338,
28565,
10186,
39115,
39620,
39573,
39924,
3927,
40044,
33449,
18425,
3201,
3368,
3476,
3475,
3477,
3478,
3482,
3479,
3485,
3487,
3486,
3488,
3481,
3480,
38162,
38939,
38984,
22708,
23193,
23471,
23468,
23399,
20822,
21697,
21708,
21711,
21745,
21767,
21789,
21924,
21853,
21936,
21972,
22016,
22022,
21983,
22034,
21677,
21600,
21713,
21623,
21646,
20893,
20872,
21038,
21104,
20956,
21362,
21252,
21379,
21422,
21434,
21425,
21517,
21497,
21465,
21467,
21524,
21559,
21556,
21625,
21628,
20171,
29338,
10240,
10194,
10195,
10202,
10196,
10712,
10197,
10198,
10200,
10203,
10209,
10228,
10205,
10593,
10408,
10225,
10335,
10830,
11032,
10204,
10258,
10210,
10259,
10238,
10229,
10231,
10379,
10192,
10187,
10211,
10212,
10803,
10213,
10214,
10215,
5855,
5856,
5854,
5853,
5852,
5851,
720,
721,
7759,
7760,
7761,
7762,
7763,
7764,
7765,
7766,
7767,
7768,
7769,
7772,
7787,
7788,
7773,
7774,
7775,
7780,
7781,
8117,
7782,
7778,
7779,
7776,
7777,
7783,
7784,
7785,
7786,
7789,
9560,
9561,
9562,
31679,
10217,
10567,
10412,
10223,
7628,
7629,
7630,
7631,
7637,
7638,
7632,
7633,
7635,
7636,
7634,
16349,
10330,
10311,
10868,
10429,
10218,
10448,
10219,
10220,
10221,
10250,
10280,
10299,
10295,
10342,
10241,
10235,
13553,
8265,
8457,
10458,
10381,
10502,
10224,
10226,
10230,
10233,
10232,
10247,
10039,
18886,
15941,
16743,
17491,
17375,
17520,
17536,
17588,
17602,
17608,
17430,
17703,
18463,
17736,
17848,
18063,
18650,
18541,
18091,
18135,
18670,
18154,
17859,
16490,
18715,
18829,
18737,
18800,
18807,
18819,
18858,
18614,
18609,
18497,
18474,
18422,
18316,
19006,
19036,
19037,
17868,
17937,
18062,
18107,
18157,
18201,
18251,
18190,
18304,
18315,
18630,
18706,
18854,
19059,
18936,
18981,
19003,
19065,
19080,
19089,
19112,
19201,
18878,
19249,
17335,
19539,
19535,
18859,
19540,
19552,
19559,
19567,
19576,
19588,
19577,
19590,
19591,
19592,
19596,
19600,
19603,
19612,
19614,
19615,
19637,
19632,
19629,
19622,
19623,
19621,
19618,
18885,
18887,
18958,
18891,
18949,
18911,
18926,
18919,
18920,
18966,
19182,
18975,
19218,
19222,
19238,
19241,
19254,
19347,
19346,
19358,
19345,
19348,
19363,
19364,
19367,
19369,
19375,
19342,
19341,
19331,
19328,
19319,
19315,
19301,
19291,
19290,
19280,
19269,
19265,
19001,
19002,
19020,
19030,
19032,
19075,
19175,
19086,
19101,
19174,
19102,
19164,
17593,
22889,
22888,
22876,
22897,
22909,
22916,
22922,
22933,
22939,
22951,
22960,
22875,
22863,
22849,
22855,
22836,
22843,
22830,
22814,
19984,
26220,
22600,
25660,
26320,
24988,
25285,
25293,
25430,
25623,
5782,
6023,
5783,
5784,
5785,
5787,
5786,
5788,
6032,
6033,
6040,
6034,
6035,
6036,
6037,
6039,
6038,
6041,
6043,
6042,
6044,
6045,
6050,
6049,
6048,
6047,
6046,
6066,
6067,
6068,
6069,
5906,
5917,
5918,
17015,
5905,
19537,
26558,
26560,
26566,
26567,
26572,
26573,
26574,
30320,
22702,
30514,
30740,
30350,
20579,
30683,
30346,
31097,
31177,
31182,
30614,
30336,
14315,
30344,
15827,
14308,
30952,
30774,
1263,
7347,
1109,
6,
8,
6950,
37,
9,
17,
18,
19,
20,
23,
22,
26,
24,
25,
21,
13,
10,
12,
14,
15,
16,
32,
31,
38,
28,
101,
27,
30,
29,
100,
103,
55,
52,
53,
66,
54,
51,
67,
68,
62,
17396,
61,
102,
59,
9962,
16973,
9968,
16990,
9892,
50,
63,
64,
65,
97,
49,
46,
43,
39,
45,
48,
41,
40,
47,
56,
57,
58,
2838,
96,
98,
99,
95,
2837,
79,
75,
74,
78,
73,
72,
69,
19658,
19042,
19048,
9789,
9898,
9893,
17948,
17990,
18857,
18863,
19634,
19643,
19644,
70,
84,
85,
91,
86,
87,
90,
88,
89,
94,
93,
18544,
18563,
18558,
92,
83,
82,
2841,
80,
71,
81,
18750,
18805,
18852,
18843,
18834,
18252,
149,
151,
152,
175,
153,
154,
140,
157,
16315,
156,
146,
167,
168,
163,
160,
141,
142,
173,
148,
164,
165,
166,
179,
158,
178,
177,
176,
144,
143,
174,
159,
150,
162,
172,
169,
145,
170,
171,
364,
363,
365,
367,
368,
369,
383,
384,
12849,
385,
386,
387,
388,
2839,
2840,
375,
376,
377,
374,
373,
372,
371,
370,
366,
379,
378,
380,
418,
381,
382,
420,
419,
422,
424,
392,
416,
399,
417,
401,
389,
390,
391,
398,
407,
406,
397,
408,
421,
405,
404,
403,
11684,
402,
423,
425,
412,
413,
409,
393,
410,
411,
415,
394,
395,
396,
414,
10035,
10044,
10040,
10041,
7271,
7270,
9042,
37849,
21687,
20699,
23600,
13131,
23692,
23730,
19373,
23733,
23731,
22015,
23587,
23531,
23526,
23348,
22817,
23473,
25018,
23078,
24961,
23977,
20004,
24956,
23779,
24955,
23969,
24233,
24230,
23768,
23388,
23962,
23970,
24282,
24344,
24546,
24553,
24562,
23771,
16244,
23897,
24190,
24194,
23912,
24690,
24202,
24231,
24283,
23350,
24284,
23276,
23374,
24254,
22520,
22526,
23894,
24510,
23366,
24685,
24072,
23826,
23719,
23475,
14532,
15407,
14536,
14046,
14145,
13832,
14619,
14215,
7675,
14768,
14072,
15715,
14079,
15183,
16661,
13941,
14160,
14534,
15284,
15321,
15448,
14334,
8249,
15975,
15607,
16102,
16124,
16145,
15762,
15338,
14713,
14903,
14346,
15005,
14802,
14795,
14357,
14482,
15644,
15061,
15895,
16011,
16237,
14863,
15795,
15149,
15732,
16112,
15225,
14037,
15750,
14530,
14446,
14439,
14435,
14122,
15812,
14449,
13514,
14364,
14567,
14343,
14862,
14956,
14962,
13212,
15181,
14622,
18376,
18565,
18345,
19662,
18690,
8288,
8270,
8405,
8298,
8313,
8304,
8284,
8287,
8301,
8340,
8285,
8305,
8353,
8310,
13505,
13185,
13573,
8242,
8282,
8289,
13285,
12809,
13738,
23437,
22575,
22577,
18404,
22570,
24403,
24431,
24439,
11377,
21427,
21491,
13796,
21503,
21601,
21756,
21354,
20695,
22333,
22541,
22542,
22547,
24084,
26170,
26270,
23734,
26156,
26319,
25217,
26151,
26154,
26347,
26358,
26371,
19728,
25592,
25035,
13192,
26707,
26753,
26761,
26772,
23926,
8424,
14836,
14011,
7483,
7469,
7187,
11694,
10128,
10129,
10130,
10132,
10139,
10131,
10133,
10134,
10135,
10136,
10137,
10147,
10148,
10153,
10149,
10150,
10151,
10154,
10155,
10152,
10140,
16076,
10141,
10142,
10143,
10144,
10145,
2981,
3420,
2982,
15961,
2979,
16098,
2980,
14509,
15981,
16023,
16088,
11663,
16089,
16100,
14527,
3421,
16104,
11682,
11611,
2977,
2983,
3422,
3423,
3424,
3425,
3426,
3427,
3428,
3011,
3009,
3022,
3008,
3007,
2986,
37919,
2984,
2985,
2987,
2988,
2989,
3004,
3006,
3003,
3001,
3021,
3010,
3002,
3020,
2998,
3000,
3014,
2999,
2997,
2990,
2991,
3013,
16563,
2992,
2993,
2994,
38325,
13038,
2995,
2996,
8619,
5467,
3012,
3015,
3016,
23839,
23842,
23854,
23863,
23871,
23862,
3017,
3019,
3018,
3389,
3390,
23525,
14402,
15655,
16375,
10837,
10839,
10840,
11121,
10858,
10859,
11030,
11389,
11622,
10861,
10862,
10864,
10860,
10865,
10867,
10869,
10863,
10871,
11198,
10874,
10875,
10876,
10877,
10885,
10987,
10873,
10879,
11036,
10882,
10881,
16429,
17368,
17378,
17390,
17445,
17453,
17949,
16710,
8423,
17920,
23770,
24112,
24109,
23535,
24092,
24076,
24002,
23717,
23472,
23658,
24295,
24301,
23727,
23744,
23751,
23755,
23760,
16777,
16796,
16800,
16801,
16804,
17925,
17926,
17927,
11322,
16241,
16057,
18168,
18618,
16616,
18055,
18136,
16847,
16895,
17327,
17724,
16956,
9935,
9815,
9797,
15596,
9811,
9806,
17182,
5036,
5035,
5034,
5033,
5032,
5031,
5030,
5029,
5028,
2036,
4695,
4696,
4704,
4705,
5225,
5178,
5179,
5180,
5181,
5182,
5183,
13396,
13424,
13376,
13580,
13584,
13574,
13566,
13593,
13352,
13348,
13606,
13353,
13335,
13323,
13341,
13317,
13346,
13363,
13499,
13507,
13511,
13516,
13599,
13525,
13605,
13546,
13538,
13555,
13589,
13591,
13588,
13587,
20542,
28404,
28407,
28412,
28415,
28425,
28453,
28454,
28323,
28460,
28477,
28562,
28506,
28509,
28525,
28528,
29639,
29595,
29601,
29605,
29643,
29637,
28529,
28699,
28702,
28704,
28533,
28618,
28698,
28520,
28705,
28708,
28707,
28706,
28549,
28710,
28314,
27970,
28598,
28497,
29250,
29151,
29126,
9570,
9569,
9571,
9572,
9573,
9574,
11113,
11041,
11038,
11039,
11043,
11718,
11803,
12126,
11056,
11183,
11240,
11914,
11044,
11203,
11046,
11274,
11279,
11353,
11455,
11686,
11609,
11050,
11051,
11053,
11052,
11055,
11040,
11071,
11073,
11034,
11035,
11074,
11075,
12158,
12159,
11024,
11028,
11031,
11029,
11033,
22444,
22116,
1451,
1452,
1453,
1454,
1455,
1456,
7050,
7051,
7052,
7053,
7054,
7056,
7057,
22204,
22203,
22101,
21800,
28821,
29451,
29453,
29552,
29454,
29466,
29455,
29465,
29457,
29461,
29462,
29467,
29468,
29515,
29470,
29471,
29472,
29475,
29479,
29476,
29486,
29487,
29488,
29528,
29491,
29529,
29495,
29524,
29505,
29513,
29514,
29523,
29518,
29530,
29536,
29532,
29534,
29570,
29537,
29538,
29540,
29539,
29545,
29542,
29551,
29550,
29546,
29553,
29556,
29557,
29559,
29560,
29567,
29569,
27826,
29287,
25790,
28482,
28357,
28763,
25796,
25820,
25862,
27814,
28466,
25865,
25814,
25604,
27400,
27955,
25869,
25866,
1110,
10823,
11856,
10818,
11421,
10819,
10965,
10821,
10986,
11091,
10966,
11923,
10820,
10981,
11216,
11149,
10962,
8579,
10967,
10838,
10824,
10826,
8368,
8466,
8380,
8360,
8392,
8526,
8386,
8418,
10841,
10842,
10829,
25225,
25229,
24650,
24599,
24637,
23833,
18469,
25222,
25210,
24885,
12649,
8129,
8128,
8131,
8132,
29631,
10939,
10948,
11103,
10949,
11163,
10952,
10950,
10953,
11100,
10954,
10956,
10951,
13195,
17085,
19555,
11922,
20994,
17118,
19882,
20406,
17781,
20085,
20076,
20182,
20192,
18671,
18855,
17070,
18730,
18812,
18754,
18826,
18925,
18928,
18941,
18943,
20103,
20355,
20122,
20112,
19097,
20145,
20322,
20354,
18809,
19118,
20356,
20361,
20362,
20363,
20364,
19223,
20547,
20533,
19708,
19299,
19330,
19376,
19815,
19386,
19712,
19707,
19723,
19701,
18346,
19339,
19354,
9901,
19734,
20097,
19735,
20544,
20108,
20546,
19700,
20117,
20098,
20131,
20132,
20118,
20126,
20090,
20089,
20105,
20096,
20123,
20104,
20121,
20099,
20139,
20162,
20166,
20136,
20163,
20161,
20160,
20155,
20152,
20143,
20140,
18982,
18824,
11661,
18980,
18983,
19015,
19021,
19027,
19026,
19045,
19129,
19149,
18027,
18137,
18291,
18340,
18330,
19888,
19884,
19415,
19532,
19405,
13179,
13311,
13270,
13328,
13286,
13408,
13477,
13391,
13512,
13542,
13522,
13520,
13545,
13563,
13581,
13572,
13590,
13597,
13592,
13608,
13083,
13247,
13665,
13532,
20159,
18471,
18161,
19664,
19771,
20034,
21127,
21095,
21072,
20383,
21135,
18512,
20793,
18774,
18942,
19399,
20930,
18791,
16965,
13871,
18672,
19793,
19477,
18773,
19303,
19055,
19333,
19394,
19464,
19121,
19517,
19488,
18215,
18429,
18729,
16860,
18862,
19007,
19512,
19809,
19907,
18561,
16832,
19378,
28717,
28896,
28727,
29079,
29080,
29170,
29088,
29172,
29187,
29190,
28828,
28791,
30963,
30978,
31009,
31004,
31003,
30997,
30996,
30995,
30991,
30988,
31010,
30971,
31021,
31028,
31031,
31032,
31033,
31054,
31061,
31059,
26317,
30509,
31441,
30513,
30519,
30530,
30548,
30545,
30579,
30660,
30583,
30586,
30596,
30608,
30636,
30823,
30675,
30733,
30842,
30846,
30881,
30850,
30862,
31440,
31087,
31446,
31458,
31459,
31460,
31462,
31474,
31463,
31464,
31467,
31475,
31478,
31476,
31479,
31448,
31450,
31454,
31452,
31457,
23045,
23112,
23685,
23286,
23816,
23934,
23941,
26303,
26268,
26256,
26098,
27168,
27245,
27287,
27313,
27314,
26255,
26315,
26336,
26323,
26349,
26337,
26384,
26496,
26534,
26486,
26507,
26575,
26517,
26523,
26576,
26545,
26580,
26601,
26585,
26602,
26604,
26607,
26613,
26565,
26500,
26949,
26951,
26955,
26959,
26957,
26961,
26960,
26956,
26952,
26954,
26741,
26715,
26948,
26501,
26614,
26620,
26623,
26625,
26626,
26633,
26640,
26656,
26669,
26642,
26695,
26712,
26685,
26673,
26648,
26659,
26731,
26736,
26743,
26738,
26754,
26745,
26755,
26756,
26765,
26776,
26799,
26839,
26840,
26842,
26943,
26844,
26850,
26851,
26847,
26849,
26709,
26679,
26716,
26717,
26719,
26721,
26723,
26726,
26729,
26696,
26720,
26704,
26671,
26537,
26546,
20330,
26236,
25937,
26244,
26397,
26595,
26549,
26557,
26312,
25196,
27301,
27320,
27326,
27457,
27454,
27385,
27356,
27390,
27461,
27420,
27445,
27467,
27472,
27476,
27499,
27506,
27507,
27515,
27516,
27532,
27538,
27542,
27555,
27545,
27634,
27567,
27556,
27564,
27631,
27620,
27571,
27582,
27589,
27590,
27598,
27596,
27606,
27637,
27624,
27644,
27650,
27643,
27648,
27649,
27492,
27595,
27983,
28235,
28340,
28350,
28813,
28815,
28834,
31288,
23127,
32733,
32854,
32740,
32131,
32363,
31875,
32457,
32816,
33055,
33278,
32709,
32771,
31360,
31935,
32435,
32061,
31781,
32318,
32717,
18602,
32697,
31962,
32203,
32370,
32472,
32399,
32477,
33077,
33176,
33169,
32757,
33307,
32801,
32804,
32821,
32207,
32377,
31302,
7079,
32443,
32508,
32530,
12151,
5797,
5798,
5842,
7097,
13658,
12933,
15381,
16833,
34144,
34147,
34986,
35410,
35449,
35451,
27951,
27974,
28174,
27863,
29482,
29480,
28952,
29142,
27757,
28733,
28752,
27709,
27786,
27887,
27932,
27681,
27369,
28032,
28886,
27886,
28391,
28558,
28339,
27957,
28103,
27924,
27893,
28846,
28892,
28956,
28567,
28630,
28640,
28642,
28651,
28659,
22750,
28768,
27232,
28900,
28902,
28916,
28459,
28582,
28458,
28623,
27940,
26924,
28277,
28866,
28619,
39395,
28396,
28403,
28418,
28408,
28419,
28426,
28428,
28432,
28434,
28429,
27697,
28433,
28435,
28438,
27860,
27861,
27977,
27859,
27852,
27975,
27851,
27854,
27824,
27857,
27806,
27780,
27734,
28445,
27980,
27997,
28447,
25927,
26194,
28448,
27521,
26950,
27446,
27501,
27949,
28472,
28474,
28464,
28467,
28470,
28471,
28476,
27256,
28478,
28479,
27206,
27193,
28480,
28186,
22120,
21393,
20414,
21146,
20841,
20411,
21648,
18447,
20458,
20072,
20867,
21118,
21020,
21202,
21109,
21235,
21544,
21622,
19937,
21315,
21316,
21322,
21326,
21328,
20351,
21338,
21344,
21371,
21372,
3699,
3700,
3701,
5399,
5400,
5356,
3677,
3678,
3491,
3492,
3493,
3495,
3494,
3496,
5415,
5411,
5413,
5414,
13842,
5412,
5416,
13752,
14199,
8801,
8799,
8800,
8802,
8798,
8795,
8797,
8796,
8804,
8806,
8805,
8803,
8809,
8808,
8807,
8814,
8811,
8810,
8812,
8813,
11105,
11107,
11088,
11187,
11093,
11188,
11189,
11117,
11120,
11111,
11109,
39062,
39207,
39100,
2344,
2340,
2341,
2342,
2343,
2345,
17414,
14366,
12075,
12076,
12387,
12086,
12489,
12574,
12203,
12769,
12441,
12087,
12088,
12286,
12083,
12084,
12085,
12096,
12091,
8345,
8162,
8223,
8214,
12886,
8634,
8410,
8138,
8309,
8248,
8255,
8540,
8393,
13199,
8127,
8130,
8204,
8568,
8125,
8123,
8269,
9212,
36646,
36647,
36703,
37095,
37146,
37142,
38553,
37850,
37851,
36804,
38208,
37521,
37532,
37130,
37997,
37887,
37493,
37957,
37083,
37646,
38398,
38450,
37702,
37953,
37455,
38139,
38543,
38124,
35789,
37889,
38296,
37488,
23402,
31891,
32020,
32021,
32023,
35601,
35193,
1815,
1816,
1817,
1818,
1819,
1820,
1822,
1824,
1826,
1823,
1825,
1827,
39415,
37794,
37801,
12663,
39402,
29615,
26945,
36705,
36723,
36724,
36778,
36737,
36790,
36774,
36795,
36810,
36822,
36846,
36836,
36842,
36848,
36852,
36857,
36861,
36869,
36865,
36892,
36872,
36913,
36907,
36917,
36933,
36931,
36921,
36929,
37791,
37720,
36937,
37797,
36941,
36970,
36950,
36957,
36961,
37039,
36998,
36965,
37042,
37043,
37048,
37047,
37060,
37061,
37063,
37075,
37030,
37065,
37066,
37068,
37070,
37071,
37073,
37029,
37033,
37024,
37032,
36967,
36995,
36986,
36975,
36983,
37011,
37013,
37021,
37014,
37026,
37037,
37036,
37015,
37016,
37019,
36938,
36939,
36914,
36864,
29015,
20409,
28296,
29081,
36006,
37251,
37262,
33506,
35751,
35577,
35578,
33300,
33304,
29695,
29699,
29715,
29714,
29777,
28903,
35548,
36226,
35164,
35687,
35139,
35768,
35844,
36298,
35134,
36297,
36271,
36253,
36161,
34531,
35450,
36235,
35085,
34871,
35516,
35809,
35830,
35104,
35001,
35089,
35081,
35747,
34505,
35251,
35472,
35448,
35624,
35656,
35374,
35443,
35520,
35322,
35437,
35621,
35662,
35735,
35848,
35044,
34904,
29197,
29201,
28511,
32827,
9803,
24638,
21906,
23121,
23164,
23132,
23173,
23182,
16982,
23142,
23153,
24648,
24651,
24659,
24665,
24673,
24681,
24688,
24694,
22837,
22838,
22842,
22841,
22861,
22859,
22846,
22845,
22844,
14806,
15295,
15303,
15595,
29335,
30132,
30234,
30240,
30252,
30276,
23419,
27692,
27954,
28260,
30573,
30569,
29473,
20551,
28544,
30572,
30570,
30571,
29105,
31020,
31001,
30837,
31024,
28977,
29077,
29164,
28275,
28279,
28375,
28798,
28687,
28808,
29165,
29134,
29100,
29131,
29116,
29047,
29106,
29263,
29114,
29046,
28978,
28870,
28853,
29193,
29271,
29277,
29276,
29169,
29265,
29281,
30840,
30839,
30838,
29285,
29288,
29289,
30822,
29299,
29296,
30826,
30834,
30819,
30817,
30828,
30835,
30833,
30832,
30836,
31025,
31030,
31051,
31038,
31039,
31043,
31040,
31045,
31046,
31044,
31055,
31049,
22675,
23387,
23258,
23290,
23352,
3233,
3237,
3238,
3234,
3235,
6997,
37107,
39484,
30117,
40056,
40239,
40137,
17695,
18593,
29051,
36346,
39977,
39780,
39654,
39898,
39951,
30617,
39899,
39875,
39955,
39944,
30937,
39630,
39284,
38992,
39921,
39907,
39884,
38986,
36364,
953,
12782,
41238,
40329,
40261,
40263,
40442,
41252,
41336,
41611,
40486,
38379,
2887,
2888,
2889,
2890,
33,
35,
36,
34,
8136,
41571,
41394,
41290,
40900,
41470,
42398,
42787,
41062,
41086,
41707,
42377,
9295,
41531,
41714,
41861,
41769,
41765,
42615,
42925,
41560,
21420,
21453,
21476,
23806,
23964,
23965,
23958,
24428,
23966,
23999,
24000,
24155,
24303,
24157,
23051,
23057,
23232,
23073,
23244,
23262,
24336,
23076,
24400,
24119,
23593,
24120,
23908,
23896,
23993,
24132,
24272,
23233,
24235,
23099,
24442,
25012,
23901,
22672,
22867,
23872,
22629,
23900,
24125,
24135,
24142,
24389,
24686,
24772,
24773,
22944,
23478,
22963,
24791,
23942,
24161,
24313,
24314,
24380,
23293,
22967,
23082,
23083,
23333,
23332,
22733,
22827,
22926,
22932,
22936,
22711,
22873,
23205,
23212,
23268,
22553,
27338,
22680,
26276,
25616,
26341,
26463,
26587,
26645,
26600,
26487,
26612,
26553,
26953,
26984,
26979,
27024,
27039,
27231,
27059,
27057,
27150,
27409,
27493,
27490,
27292,
27053,
27550,
27666,
27719,
27720,
27370,
27776,
27916,
27622,
27587,
27280,
27335,
27133,
27260,
27533,
27124,
27130,
27153,
27192,
27265,
27104,
27211,
27201,
27179,
27203,
28002,
27544,
27510,
28000,
27552,
28402,
28016,
28250,
27299,
28140,
27482,
28248,
27981,
23810,
28043,
28040,
27342,
27422,
27440,
27316,
27559,
27592,
27597,
27132,
24410,
20908,
27252,
28220,
19631,
23247,
20274,
28221,
23899,
23516,
23736,
23813,
23848,
24081,
24080,
24111,
24113,
23518,
23532,
41111,
41261,
41271,
41281,
41303,
41326,
41975,
41984,
41986,
41871,
41876,
41877,
41878,
41929,
39789,
40840,
41340,
41515,
40901,
41363,
4224,
41712,
41018,
17861,
18104,
18146,
18212,
46086,
46322,
38176,
38794,
38913,
39440,
39122,
38768,
28632,
7683,
7669,
20598,
28910,
44803,
41850,
20802,
28754,
28756,
29042,
28716,
28008,
45293,
44719,
28416,
28421,
28423,
28427,
28442,
28463,
28465,
28483,
28501,
28925,
31431,
29883,
32276,
32328,
32768,
32928,
32937,
32989,
33013,
33020,
33353,
33360,
33402,
33404,
33469,
33476,
33479,
33488,
33502,
33521,
33555,
33559,
33582,
33587,
33569,
33575,
33603,
33604,
33606,
33650,
17381,
15704,
14393,
14260,
12845,
13998,
46015,
45554,
45983,
45986,
45989,
45889,
45900,
45271,
45888,
45890,
12061,
6761,
45987,
45988,
45626,
45634,
44137,
44808,
44798,
44763,
44117,
44695,
19949,
20135,
20615,
21861,
45214,
45109,
45509,
45156,
30042,
40543,
45186,
27427,
27196,
28138,
28090,
26687,
26947,
27747,
26749,
27180,
27185,
27882,
27884,
20649,
27363,
19462,
23930,
25315,
26345,
26435,
27580,
27334,
27585,
27663,
27645,
27671,
27674,
27705,
41157,
33911,
41464,
27669,
27678,
27676,
27679,
40888,
27639,
6694,
41549,
41253,
32992,
2942,
33890,
12227,
17330,
20800,
34522,
34610,
34659,
46097,
46076,
46233,
46079,
46088,
46101,
46103,
46108,
46189,
46223,
46224,
46228,
46131,
46324,
46344,
46351,
46625,
45940,
46066,
47288,
47329,
47290,
47295,
47294,
47310,
47293,
47301,
47291,
47300,
47299,
47298,
47506,
47512,
47503,
47513,
37973,
44917,
44919,
41066,
44921,
42660,
44923,
60394,
61311,
41870,
45849,
45772,
44737,
44741,
44751,
44753,
44757,
37946,
44766,
44769,
44777,
44780,
32688,
45877,
39763,
44802,
44782,
44783,
45709,
45756,
47394,
48061,
45063,
46909,
48282,
48413,
48698,
48987,
49197,
48450,
40254,
48592,
47102,
48558,
44742,
47183,
48279,
25126,
48354,
48498,
47759,
46278,
47395,
47392,
51393,
51395,
51399,
51396,
51397,
51398,
51400,
51401,
51407,
51406,
51405,
51404,
51402,
51408,
51409,
51413,
51410,
51411,
51414,
51416,
51415,
51417,
51418,
51419,
51421,
45076,
45091,
45075,
45074,
45072,
45071,
45067,
45066,
45065,
53827,
53834,
53846,
53950,
53736,
53936,
53946,
53948,
53964,
53981,
53983,
53987,
54138,
45039,
45289,
45358,
45850,
44963,
44964,
44960,
44959,
44958,
44950,
44947,
44944,
44943,
44930,
44928,
44965,
44966,
44967,
44968,
44970,
44972,
45033,
45416,
51966,
45512,
41853,
45514,
45515,
45516,
45519,
45438,
51985,
52003,
52026,
52029,
45440,
45422,
45423,
45420,
45419,
45424,
45426,
45427,
45428,
45431,
45434,
45435,
45449,
45451,
45448,
45447,
45445,
45444,
45443,
45452,
45454,
45455,
45456,
45458,
45375,
52555,
52128,
52431,
52506,
52513,
52514,
52551,
52554,
52558,
52559,
42115,
20222,
41751,
52123,
52131,
52349,
52352,
52358,
52360,
52391,
45359,
45333,
45328,
45327,
45236,
45173,
45360,
45363,
45364,
45365,
45366,
45380,
46191,
46195,
44989,
52522,
31594,
35060,
41301,
42720,
46615,
50884,
41906,
42070,
44676,
45182,
45187,
13205,
52516,
44991,
44985,
44961,
44962,
44954,
44951,
44942,
44924,
44910,
44908,
44904,
44897,
44896,
44969,
44993,
44979,
45034,
44992,
45009,
45040,
45041,
30829,
45132,
45061,
45133,
52517,
52116,
52126,
52221,
52291,
52294,
52295,
52298,
33051,
35069,
40378,
42038,
42178,
47510,
45060,
45057,
45055,
45054,
45047,
44869,
44870,
44863,
44871,
44882,
44890,
44893,
48036,
51485,
51850,
53544,
53047,
53502,
41708,
53844,
53845,
53751,
52146,
52484,
53672,
53878,
53671,
53899,
53882,
53900,
53670,
53667,
53666,
53665,
53663,
53662,
53659,
52851,
53068,
53114,
53122,
53123,
53135,
53136,
53138,
53142,
53211,
53223,
53254,
53304,
53305,
53345,
53351,
53357,
53383,
53393,
53398,
53407,
53414,
53548,
53596,
53599,
53603,
53632,
53642,
53654,
53674,
53676,
53692,
53680,
53708,
53694,
53698,
53722,
53719,
53721,
53701,
53733,
53726,
53731,
53723,
53756,
53748,
53734,
53828,
53808,
53821,
53775,
53779,
53869,
53850,
53849,
38601,
26569,
54460,
54463,
54464,
54467,
54468,
54471,
54472,
54473,
54475,
54476,
54478,
54480,
54481,
54487,
54488,
54500,
54501,
54502,
53658,
53664,
54032,
54039,
54043,
54044,
54045,
54051,
54061,
54088,
54093,
54103,
54106,
54110,
54122,
54113,
54123,
54126,
54127,
54132,
52598,
31095,
53014,
40093,
39747,
49393,
47381,
51173,
52503,
32842,
46190,
41831,
37482,
35264,
52853,
38996,
52224,
52488,
52609,
53030,
53197,
54129,
24998,
54177,
51370,
54574,
54572,
44886,
51547,
52902,
36592,
52310,
50897,
51198,
32892,
42069,
51219,
35000,
39923,
51283,
30824,
52897,
52990,
52663,
37103,
27159,
52670,
29593,
52606,
52031,
53087,
52485,
53434,
53560,
53585,
53601,
53606,
53614,
53626,
55638,
55640,
55641,
46839,
45793,
26134,
55665,
55979,
55860,
55912,
56044,
51977,
40427,
54318,
34236,
34142,
34235,
34146,
34150,
34153,
33977,
34012,
34168,
34175,
34013,
34021,
34159,
34019,
34128,
34130,
33961,
55597,
56849,
56670,
56846,
57304,
57287,
57295,
18931,
21018,
22839,
31401,
44956,
52010,
51853,
52044,
29260,
15650,
40864,
44825,
58379,
53507,
57839,
53763,
57856,
53988,
58001,
51357,
39320,
58523,
13357,
46501,
48655,
39075,
58118,
58570,
58583,
58164,
58497,
57802,
57137,
57704,
51542,
41155,
42671,
53588,
41193,
47765,
50951,
57046,
48627,
58655,
58463,
57913,
58071,
58509,
56478,
58368,
48805,
59325,
60608,
57329,
59982,
21693,
58756,
58768,
58781,
53271,
58176,
36209,
58215,
58170,
59402,
58294,
62575,
59416,
61741,
61977,
61544,
61148,
62042,
61570,
61347,
61740,
62097,
61553,
61744,
61540,
61808,
61501,
29510,
61503,
60816,
61918,
61931,
61948,
61985,
59205,
61203,
61492,
62175,
56809,
62147,
59460,
60823,
61117,
61000,
61105,
58533,
61147,
61150,
61765,
40991,
61910,
60541,
61132,
61091,
61183,
64299,
61483,
4988,
10817,
10734,
10758,
10738,
10739,
11784,
11785,
11786,
11787,
11801,
11791,
11800,
11802,
11804,
11794,
11795,
19263,
11796,
18866,
9930,
16391,
17172,
17572,
17325,
17339,
17482,
17532,
17605,
17769,
17767,
17789,
17546,
17539,
10736,
11805,
11807,
11809,
11811,
11812,
11813,
}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Saltwater</name>
						<packageName></packageName>
						<script>Saltwater = {
 11531, -- In the clear water.
 11532, -- Among sea anemone.
 11533, -- Coral formations.
 11535, -- A sand bar in the bay.
 11536, -- Among blue fishes.
 11538, -- Bay near a tall rock.
 11539, -- New reef formations.
 11540, -- In the tide.
 11541, -- Swaying ocean.
 11542, -- Near a rock formation in Karakas.
 11543, -- Where the ocean meets the bay.
 17064, -- Beneath a small outcropping.
 17065, -- A large crumbling stone.
 17066, -- Along the rim of a newly formed reef.
 17067, -- Wading along Karakas Pier.
 17068, -- Approaching a nearby pier.
 17069, -- Off the end of a pier.
 23100, -- Upon a gentle ocean current.
 23101, -- Within a gentle ocean tide.
 23102, -- Atop a deep ocean dropoff.
 23103, -- Within the waves approaching a large rock.
 23104, -- Within an ocean riptide.
 23105, -- Upon a sandbar.
  3857, -- The bottom of an ocean water pool.
  5182, -- In the ocean near a pier.
  5183, -- Deep waters near a floating village.
  5184, -- Deep ocean waters.
  5185, -- Shallows off a rocky beach.
  5186, -- Shallow water near a beach.
  5187, -- Deep ocean waters.
  5188, -- Deep ocean waters.
  5189, -- Deep ocean waters.
  5190, -- In the Aori Bay waters.
  5191, -- Deep ocean waters.
  5192, -- Deep in the Aori Bay.
  5193, -- Deep in the Aori Bay.
  5194, -- Deep ocean waters.
  5195, -- The ocean near a beach.
  5196, -- Open ocean near a rocky beach.
  5197, -- In the Aori Bay waters.
  5198, -- Deep ocean waters.
}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Forest</name>
						<packageName></packageName>
						<script>Forest = {
  1855, -- Edge of the Khandava forest.
  1856, -- Path through grasslands north of the Khandava forest.
  1857, -- Grasslands north of a redwood forest.
  1858, -- On the edge of a redwood forest.
  1859, -- On the northern edge of the Khandava forest.
  1860, -- On the edge of a redwood forest.
  1861, -- Grasslands north of the Khandava forest.
  1862, -- Northwestern edge of a redwood forest.
  1863, -- Path into the Khandava forest.
  1865, -- Wandering beneath the giant redwoods.
  1866, -- Near the western edge of the redwood forest.
  1867, -- On the western edge of the redwood forest.
  1868, -- Cleared section of the Khandava forest.
  1869, -- By a redwood stump.
  1870, -- The remains of a giant redwood.
  1871, -- Where a giant redwood once stood.
  1872, -- Near the western edge of the Khandava forest.
  1873, -- By what was once a tall tree.
  1874, -- Under the redwoods.
  1875, -- Beneath the giant redwoods.
  1876, -- Under the shadow of the redwoods.
  1877, -- On the eastern edge of the Khandava forest.
  1878, -- Where the redwoods grow tall.
  1879, -- In the Khandava forest.
  1880, -- On the western edge of the redwood forest.
  1881, -- On the western edge of the redwood forest.
  1882, -- Beneath the redwoods.
  1883, -- Under the cover of the redwoods.
  1886, -- Below the towering redwoods.
  1887, -- Underneath the redwood trees.
  1888, -- The eastern edge of the redwood forest.
  1889, -- The eastern edge of the Khandava forest.
  1890, -- Near the eastern edge of the forest.
  1895, -- On the western edge of the forest.
  1896, -- Western edge of the Khandava forest.
  1897, -- Near the western edge of the forest.
  1902, -- In the redwood forest.
  1903, -- Nearing the eastern edge of the Khandava forest.
  1904, -- Khandava forest approaching the Areish mountains.
  1905, -- Where the trees meet the mountains.
  1906, -- In the forest next to the mountains.
  1907, -- Near the Areish mountains.
  1908, -- Beneath the giant redwoods.
  1909, -- On a cliff overlooking the Khandava stream.
  1910, -- Quiet corner of the Khandava forest.
  1915, -- In the Khandava forest.
  1916, -- Near the western edge of the redwood forest.
  1917, -- The western edge of the redwood forest.
  1918, -- Western edge of the Khandava forest.
  1919, -- Close to the edge of the forest.
  1924, -- Redwood forest approaching Areish mountains.
  1925, -- Where the forest ends and the mountains begin.
  1926, -- Waterfall on the edge of the Khandava forest.
  1927, -- Khandava stream near the mountains.
  1928, -- Along the Khandava stream.
  1929, -- Stream through the Khandava forest.
  1930, -- Khandava stream nearing a small lake.
  1931, -- Under the tall trees of the Khandava forest.
  1932, -- Tall tree surrounded by rabbit burrows.
  1933, -- On the western edge of the redwood forest.
  1934, -- Edge of the Khandava forest.
  1935, -- In the Khandava forest.
  1936, -- Small freshwater lake deep in the Khandava Forest.
  1937, -- Overlooking the Khandava stream.
  1938, -- Deep in the Khandava forest.
  1939, -- Somewhere in the redwood forest.
  1940, -- Approaching the southeastern edge of the forest.
  1941, -- Edge of Khandava forest by the mountains.
  1942, -- On the edge of the redwood forest.
  1943, -- Southeastern edge of the Khandava forest.
  1944, -- Under the tall trees of the Khandava.
  1945, -- In the depths of the Khandava forest.
  1946, -- Secluded area of the Khandava forest.
  1947, -- Under cover of the giant redwoods.
  1948, -- In the forest south of a lake.
  1949, -- Near the western edge of the Khandava.
  1950, -- Western eaves of the Khandava forest.
  1951, -- Southwestern edge of the forest.
  1952, -- Under the tall redwoods.
  1953, -- A secluded corner of the Khandava forest.
  1954, -- Under a rugged giant redwood.
  1955, -- Among the redwoods.
  1956, -- On the southeastern edge of the forest.
  1957, -- Charred eaves of the Khandava forest.
  1958, -- Effete trees on the edge of the forest.
  1959, -- Scorched trees near the edge of the forest.
  1960, -- On the southern edge of the forest.
  1961, -- A section of burnt forest.
  1962, -- Cliff overlooking the Khandava stream.
  1963, -- A darkened corner of the Khandava forest.
  1964, -- Deep in the Khandava forest.
  1987, -- The joining of a waterfall and stream.
  2458, -- A secluded grove.
  6556, -- A comfortable den.
 13324, -- Before a circle of Giant Redwood.
 13359, -- The Khandava Archway.
 18602, -- The Khandavan coach service courtyard.
 18603, -- A registry office in the Khandava Council.
 21426, -- A naturally formed alcove of trees.
 21430, -- A hidden chamber beneath the graves.
 21466, -- Within a concealed passageway.
 21467, -- Widening stone lined tunnel.
 21468, -- At the edge of a decent.
 21469, -- A rusted gateway.
 21470, -- A desecrated shrine.
 26927, -- Amidst crimson blossoms before a redwood cottage.
}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Grassland</name>
						<packageName></packageName>
						<script>Grasslands = {
  8829, -- Grassy southwestern plains.
  8830, -- Southern grasslands.
  8831, -- Southern grasslands.
  8832, -- Southern grasslands.
  8833, -- Southern grasslands.
  8834, -- Undulating prairie.
  8835, -- Near a lone tree on the grasslands.
  8836, -- Southern grasslands.
  8837, -- On the open prairie.
  8838, -- Southern grasslands.
  8839, -- Southern grasslands.
  8840, -- Next to a rabbit warren on the grasslands.
  8841, -- On the open grasslands.
  8842, -- Southern grasslands.
  8843, -- Amidst the northern prairies.
  8844, -- Southern grasslands.
  8845, -- Undulating prairie.
  8846, -- On the Dardanic plains.
  8847, -- On the open grasslands.
  8848, -- Undulating prairie.
  8849, -- Southern grasslands.
  8850, -- Southern grasslands.
--  8851, -- Next to a rabbit warren on the grasslands.
  8853, -- Southern grasslands.
  8854, -- Southeastern grasslands.
  8855, -- Grassy southwestern plains.
  8856, -- On the open prairie.
  8857, -- In the tall grass.
  8858, -- Amidst the northern prairies.
  8859, -- Near a lone tree on the grasslands.
  8860, -- Near a lone tree on the grasslands.
  8861, -- On the Dardanic plains.
  8862, -- On the open prairie.
  8863, -- Near a lone tree on the grasslands.
  8864, -- Amid the western plains.
  8865, -- Next to a rabbit warren on the grasslands.
  8866, -- On the open grasslands.
  8867, -- Western Plains approaching Adram Valley.
  8868, -- Western grasslands.
  8869, -- On the western plains.
  8870, -- Western plains along the coast.
  8871, -- In the tall grass.
  8872, -- Northwestern grasslands.
  8873, -- Grasslands along the Bitterflow river.
  8874, -- Grasslands along the Bitterflow river.
  8875, -- Grasslands along the Bitterflow river.
  8876, -- On the Dardanic plains.
  8877, -- In the tall grass.
  8878, -- Western grasslands.
  8879, -- Undulating prairie.
  8880, -- Amidst the northern prairies.
  8881, -- Surrounded by grasslands.
  8882, -- Western grasslands.
  8883, -- Western grasslands.
  8884, -- Near a lone tree on the grasslands.
  8885, -- Western grasslands.
  8886, -- Surrounded by grasslands.
  8887, -- Undulating prairie.
  8888, -- Undulating prairie.
  8889, -- On the Dardanic plains.
  8890, -- On the open prairie.
  8891, -- Amidst the northern prairies.
  8892, -- Near a lone tree on the grasslands.
  8893, -- Surrounded by grasslands.
  8894, -- Grasslands south of the Reate.
  8895, -- Northern grasslands.
  8896, -- Amidst the northern prairies.
  8897, -- Surrounded by grasslands.
  8898, -- Next to a rabbit warren on the grasslands.
  8899, -- On the open grasslands.
  8900, -- Amidst the northern prairies.
  8901, -- Next to a rabbit warren on the grasslands.
  8902, -- On the open prairie.
  8903, -- Undulating prairie.
  8904, -- On the open grasslands.
  8905, -- Undulating prairie.
  8906, -- On the open grasslands.
  8907, -- Undulating prairie.
  8908, -- On the open grasslands.
  8909, -- Near a lone tree on the grasslands.
  8910, -- On the Dardanic plains.
  8911, -- On the open grasslands.
  8912, -- On the open grasslands.
  8913, -- Near a lone tree on the grasslands.
  8914, -- Near a lone tree on the grasslands.
  8915, -- On the Dardanic plains.
  8916, -- Surrounded by grasslands.
  8917, -- On the Dardanic plains.
  8918, -- Surrounded by grasslands.
  8919, -- In the tall grass.
  8920, -- In the tall grass.
  8921, -- Grasslands south of the Reate.
  8922, -- Northern grasslands.
  8923, -- Next to a rabbit warren on the grasslands.
  8924, -- Surrounded by grasslands.
  8925, -- Next to a rabbit warren on the grasslands.
  8926, -- West of Lake Orestis.
  8927, -- West of Lake Orestis.
  8928, -- On the Dardanic plains.
  8929, -- On the Dardanic plains.
  8930, -- On the open grasslands.
  8931, -- North of Lake Orestis.
  8932, -- On Lake Orestis.
  8933, -- On Lake Orestis.
  8934, -- South of Lake Orestis.
  8935, -- On the open grasslands.
  8936, -- North of Lake Orestis.
  8937, -- On Lake Orestis.
  8938, -- On Lake Orestis.
  8939, -- South of Lake Orestis.
  8940, -- On the open grasslands.
  8941, -- On the open grasslands.
  8942, -- On the open grasslands.
  8943, -- Amidst the northern prairies.
  8944, -- On the open grasslands.
  8945, -- East of Lake Orestis.
  8946, -- East of Lake Orestis.
  8947, -- Surrounded by grasslands.
  8948, -- Undulating prairie.
  8949, -- On the Dardanic plains.
  8950, -- Northern grasslands.
  8951, -- Amidst the northern prairies.
  8952, -- Undulating prairie.
  8953, -- Grasslands south of the Reate.
  8954, -- Grasslands south of the Reate.
  8955, -- On the Dardanic plains.
  8956, -- On the open grasslands.
  8957, -- On the open prairie.
  8958, -- Surrounded by grasslands.
  8959, -- Amidst the northern prairies.
  8960, -- Near a lone tree on the grasslands.
  8961, -- Undulating prairie.
  8962, -- In the tall grass.
  8963, -- Surrounded by grasslands.
  8964, -- Surrounded by grasslands.
  8965, -- Near a lone tree on the grasslands.
  8966, -- In the tall grass.
  8967, -- Undulating prairie.
  8968, -- Amidst the northern prairies.
  8969, -- On the open prairie.
  8970, -- Amidst the northern prairies.
  8971, -- On the Dardanic plains.
  8972, -- Surrounded by grasslands.
  8973, -- Amidst the northern prairies.
  8974, -- Amidst the northern prairies.
  8975, -- Amidst the northern prairies.
  8976, -- On the open grasslands.
  8977, -- On the open grasslands.
  8978, -- On the open grasslands.
  8979, -- Amidst the northern prairies.
  8980, -- On the open grasslands.
  8981, -- On the open prairie.
  8982, -- Next to a rabbit warren on the grasslands.
  8983, -- Northern grasslands.
  8984, -- Grasslands south of the Reate.
  8985, -- Northern grasslands.
  8986, -- Grasslands south of the Reate.
  8987, -- Undulating prairie.
  8988, -- Near a lone tree on the grasslands.
  8989, -- On the Dardanic plains.
  8990, -- Near a lone tree on the grasslands.
  8991, -- Near a lone tree on the grasslands.
  8992, -- On the open grasslands.
  8993, -- Undulating prairie.
  8994, -- In the tall grass.
  8995, -- Surrounded by grasslands.
  8996, -- Undulating prairie.
  8997, -- On the open prairie.
  8998, -- In the tall grass.
  8999, -- Southeastern grasslands near the ocean.
  9000, -- On the Dardanic plains.
  9001, -- Southeastern grasslands near the ocean.
  9002, -- Southeastern grasslands near the ocean.
  9003, -- Eastern grasslands.
  9004, -- Eastern grasslands.
  9005, -- Eastern grasslands.
  9006, -- Eastern plains along the coast.
  9007, -- Undulating prairie.
  9008, -- Eastern plains along the coast.
  9009, -- Eastern plains along the coast.
  9010, -- On the open grasslands.
  9011, -- Eastern grasslands.
  9012, -- Eastern grasslands.
  9013, -- In the tall grass.
  9014, -- Eastern grasslands.
  9015, -- In the tall grass.
  9016, -- Eastern grasslands.
  9017, -- Near a lone tree on the grasslands.
  9018, -- Undulating prairie.
  9019, -- Near a lone tree on the grasslands.
  9020, -- Undulating prairie.
  9021, -- Grasslands south of the Reate.
  9022, -- Northeastern grasslands.
  9023, -- Northeastern grasslands.
  9024, -- Northeastern grasslands.
  9025, -- Eastern plains along the coast.
  9026, -- On the Dardanic plains.
  9027, -- Grasslands south of the Reate.
  9030, -- On the open grasslands.
  9043, -- On the open grasslands.
  9044, -- Amidst the northern prairies.
  9045, -- Amidst the northern prairies.
  9046, -- Undulating prairie.
  9047, -- On the open grasslands.
  9048, -- Amidst the northern prairies.
  9049, -- Surrounded by grasslands.
  9050, -- Surrounded by grasslands.
  9051, -- On the Dardanic plains.
  9052, -- On the Dardanic plains.
  9053, -- On the open grasslands.
  9054, -- Next to a rabbit warren on the grasslands.
  9055, -- In the tall grass.
  9056, -- In the tall grass.
  9057, -- On the open grasslands.
 22833, -- A secluded grotto within the grasslands.
 22852, -- Withering plains.
 22853, -- Wandering the plains.
 22854, -- Overlooking a browning valley.
 22855, -- A low valley.
 22856, -- A patch of tall grass.
}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Swamp</name>
						<packageName></packageName>
						<script>Swamp = {
  2823, -- Deep within the Nogba.
  2824, -- On the edge of the Nogba.
  2825, -- On the edge of the Wetlands.
  2826, -- On the edge of the Wetlands.
  2827, -- Deep within the Nogba.
  2828, -- Deep within the Nogba.
  2829, -- Deep within the Nogba.
  2836, -- On the edge of the Wetlands.
  2837, -- On the edge of the Wetlands.
  2838, -- On the edge of the Wetlands.
  2839, -- On the edge of the Wetlands.
  2840, -- Within the Nogba nearing the Flatlands.
  2841, -- Within the Nogba nearing the Flatlands.
  2842, -- Within the Nogba nearing the Flatlands.
  2843, -- Within the Nogba nearing the Flatlands.
  2844, -- Within the Nogba nearing the Flatlands.
  2845, -- Within the Nogba nearing the Flatlands.
  2846, -- Within the Nogba nearing the Flatlands.
  2847, -- On the edge of the Wetlands.
  2848, -- Surrounding a village.
  2863, -- Surrounding a village.
  2864, -- Surrounding a village.
  2878, -- Ouria river through the Wetlands.
  2879, -- Wetlands on the coast of Iahamos Bay.
  2886, -- Scrubby terrain.
  2887, -- Nogba nearing the Iahamos Bay.
  2888, -- Thick weeds nearing the bay.
  2889, -- Edge of the Nogba.
  2890, -- Nogba bordering the Iahamos.
  2891, -- Marshy growth nearing the beach.
  2895, -- Deep within the Nogba.
  2896, -- Deep within the Nogba.
  2897, -- Deep within the Nogba.
  2904, -- The Nogba near a marshy Delta.
  2905, -- On the edge of the Wetlands.
  2906, -- Nearing a river.
  2907, -- Rickety bridge over the Ouria.
  2908, -- Rickety bridge over the Ouria.
  2909, -- The Nogba near a marshy Delta.
  2910, -- On the edge of the Wetlands.
  2911, -- On the edge of the Wetlands.
  2912, -- On the edge of the Wetlands.
  2913, -- On the edge of the Wetlands.
  2915, -- On the edge of the Wetlands.
  2916, -- Deep within the Nogba.
  2917, -- Surrounding a village.
  2918, -- Surrounding a village.
  2920, -- Beneath a village in the Nogba.
  2921, -- Deep within the Nogba.
  3229, -- Deep within the Nogba.
  3230, -- Deep within the Nogba.
  3231, -- Within the Nogba nearing the Flatlands.
  3232, -- Within the Nogba nearing the Flatlands.
  3233, -- Within the Nogba nearing the Flatlands.
  3234, -- Surrounding a village.
  3235, -- Surrounding a village.
  3236, -- Surrounding a village.
  3237, -- Surrounding a village.
  3238, -- Surrounding a village.
  3553, -- Surrounding a village.
  3554, -- Surrounding a village.
  3555, -- Deep within the Nogba.
  3556, -- The Nogba Wetlands.
  3557, -- The Nogba Wetlands nearing the bay.
  3579, -- Surrounding a village.
  3603, -- The Nogba Wetlands nearing the bay.
  3604, -- The Nogba Wetlands nearing the bay.
  3605, -- The Nogba Wetlands nearing the bay.
  3606, -- Deep within the Nogba.
  3607, -- The Nogba Wetlands nearing the bay.
  3608, -- Deep within the Nogba.
  3609, -- Deep within the Nogba.
  3610, -- Deep within the Nogba.
  3611, -- The Nogba Wetlands nearing the bay.
  3612, -- On the edge of the Wetlands.
  3613, -- Deep within the Nogba.
  3614, -- Deep within the Nogba.
  3615, -- Deep within the Nogba.
  3616, -- The Nogba Wetlands nearing the bay.
  3617, -- Deep within the Nogba.
  3618, -- Deep within the Nogba.
  3619, -- Deep within the Nogba.
  3620, -- Deep within the Nogba.
  3621, -- Deep within the Nogba.
  3622, -- On the edge of the Wetlands.
  3623, -- Deep within the Nogba.
  3624, -- The Nogba near a marshy Delta.
  3625, -- Deep within the Nogba.
  3626, -- On the edge of the Wetlands.
  3627, -- Deep within the Nogba.
  3628, -- The Nogba near a marshy Delta.
  3629, -- Deep within the Nogba.
  3630, -- Deep within the Nogba.
  3631, -- Deep within the Nogba.
  3632, -- Deep within the Nogba.
  3633, -- Deep within the Nogba.
  3634, -- Deep within the Nogba.
  3635, -- Deep within the Nogba.
  3636, -- Deep within the Nogba.
  3637, -- On the edge of the Wetlands.
  3638, -- Deep within the Nogba.
  3763, -- Deep within the Nogba.
  3764, -- The Nogba near a marshy Delta.
  3765, -- The Nogba near a marshy Delta.
  3766, -- A marshy delta.
  3767, -- Deep within the Nogba.
  3768, -- Deep within the Nogba.
  3769, -- Deep within the Nogba.
  3770, -- Deep within the Nogba.
  3771, -- Deep within the Nogba.
  3772, -- Deep within the Nogba.
  3773, -- Deep within the Nogba.
  3774, -- Deep within the Nogba.
  3775, -- Deep within the Nogba.
  3776, -- Deep within the Nogba.
  3777, -- Deep within the Nogba.
  3778, -- Deep within the Nogba.
  3779, -- Deep within the Nogba.
  3780, -- Deep within the Nogba.
  3781, -- Deep within the Nogba.
  3782, -- Deep within the Nogba.
  3783, -- Deep within the Nogba.
  3784, -- Deep within the Nogba.
  3785, -- Deep within the Nogba.
  3786, -- Deep within the Nogba.
  3787, -- Deep within the Nogba.
  3788, -- Deep within the Nogba.
  3790, -- Deep within the Nogba.
  3791, -- Deep within the Nogba.
  3792, -- Deep within the Nogba.
  3831, -- Deep within the Nogba.
  3832, -- Deep within the Nogba.
  3852, -- Deep within the Nogba.
  6166, -- The edge of the Nogba Wetlands.
  6167, -- The edge of the Nogba Wetlands.
  6168, -- The edge of the Nogba Wetlands.
  6169, -- Within the Nogba Wetlands.
  6170, -- The edge of the Nogba Wetlands.
  6171, -- Within the Nogba Wetlands.
  6172, -- Deep within the Nogba Wetlands.
  6173, -- Within the Nogba Wetlands.
  6174, -- The edge of the Nogba Wetlands.
  6175, -- Dilapidated cottage.
  6176, -- Within the Nogba Wetlands.
  6177, -- Deep within the Nogba Wetlands.
  6178, -- Deep within the Nogba Wetlands.
  6179, -- Deep within the Nogba Wetlands.
  6180, -- Within the Nogba Wetlands.
  8360, -- An ancient jousting arena.
  8534, -- A path leading down the cliff.
 12850, -- Traversing the Nogba Wetlands.
 12854, -- The edge of the Nogba Wetlands.
 12855, -- Deep in the Nogba Wetlands.
 12857, -- Deep in the Nogba Wetlands.
 12858, -- At the edge of the Nogba Wetlands.
 12860, -- Traversing the Nogba Wetlands.
 12897, -- At the edge of the Nogba Wetlands.
 12898, -- Deep within the Nogba Wetlands.
 12899, -- Deep in the Nogba Wetlands.
 12901, -- Deep in the Nogba Wetlands.
 12903, -- Deep within the Nogba Wetlands.
 12904, -- Deep within the Nogba Wetlands.
 12906, -- Deep within the Nogba Wetlands.
 12907, -- Deep within the Nogba Wetlands.
 12909, -- At the edge of the Nogba Wetlands.
 14343, -- Overlooking the ruined coliseum.
 14344, -- At the foot of a ridge.
 14347, -- Nearing the ruined walls of an ancient coliseum.
 14357, -- Outside the shattered walls of the coliseum.
 14360, -- Overlooking the ruins of the coliseum.
}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Desert</name>
						<packageName></packageName>
						<script>Desert = {
   301, -- Nearing the edge of the desert.
   302, -- In the desert.
   303, -- Fringes of the desert nearing grasslands.
   304, -- Fringe of the desert nearing grassland.
   305, -- Fringe of the desert approaching mountains.
   306, -- Nearing the deserts edge approaching mountains.
   307, -- Nearing the deserts edge.
   309, -- Nearing the desert's edge approaching grassland.
   310, -- On the edge of the desert.
   311, -- On the edge of the Heartlands.
   312, -- Border of the desert nearing grassland.
   313, -- Fringes of desert scree and grassland.
   314, -- In the Shaahri desert.
   315, -- In the Shaahri desert.
   316, -- In the Shaahri desert.
   317, -- Nearing the edge of the desert.
   318, -- Nearing the edge of the desert.
   319, -- Stony desert.
   320, -- Rock strewn desert.
   321, -- On the edge of rock desert.
   323, -- Rock strewn desert nearing mountains.
   324, -- Rock desert approaching base of mountain.
   325, -- Stone desert.
   326, -- Stone desert approaching Areish range.
   327, -- The mouth of a dry riverbed.
   328, -- Into a dry riverbed.
   329, -- Before the Paran mountains.
   330, -- Desert approaching hills.
   331, -- Desert Nearing hills.
   332, -- Desert nearing hills.
   333, -- Desert nearing hills and grassland.
   334, -- Desert on the eastern fringe of Hills.
   335, -- Fringes of desert nearing hills.
   336, -- Desert nearing hills.
   337, -- On the edge of stone desert.
   338, -- Stone desert By Mountain Range.
   339, -- On the edge of the stone desert.
   340, -- Edge of desert by the hills.
   341, -- Edge of Desert amid hills.
   342, -- At the foot of hills.
   343, -- Amid the dunes.
   344, -- Amid the dunes.
   345, -- Amid the dunes.
   346, -- Amid the dunes.
   347, -- Amid the dunes.
   348, -- Amid the dunes.
   349, -- Amid the dunes.
   350, -- Amid the dunes.
   351, -- Amid the dunes.
   352, -- Amid the dunes.
   353, -- Amid the dunes.
   354, -- Amid the dunes.
   355, -- Amid the dunes.
   356, -- Amid the dunes.
   357, -- Amid the dunes.
   358, -- Amid the dunes.
   359, -- Amid the dunes.
   360, -- Amid the dunes.
   361, -- Amid the dunes.
   362, -- Amid the dunes.
  1232, -- Southern old road nearing desert.
  1235, -- Amid the dunes.
  1236, -- Amid the dunes.
  1237, -- Amid the dunes.
  1240, -- Amid the dunes.
  1241, -- Amid the dunes.
  1242, -- Amid the dunes.
  1243, -- Amid the dunes.
  1244, -- Amid the dunes.
  1245, -- Amid the dunes.
  1246, -- Amid the dunes.
  1247, -- Amid the dunes.
  1248, -- Amid the dunes.
  1249, -- Amid the dunes.
  1250, -- Amid the dunes.
  1251, -- Amid the dunes.
  1252, -- Amid the dunes.
  1253, -- Amid the dunes.
  1254, -- Amid the dunes.
  1255, -- Amid the dunes.
  1256, -- Amid the dunes.
  1257, -- Amid the dunes.
  1258, -- Amid the dunes.
  1259, -- Amid the dunes.
  1260, -- Amid the dunes.
  1261, -- Amid the dunes.
  1262, -- Amid the dunes.
  3413, -- A rocky beach in a cove.
  3414, -- A rocky beach in a cove.
  3415, -- A rocky beach in a cove.
  3416, -- Rocky shallows.
  3430, -- Outcropping of rocks.
  5469, -- Porous desert rock.
  5597, -- On the rolling ocean.
  7684, -- Far out to sea.
  7685, -- Far out to sea.
  7686, -- Far out to sea.
 13704, -- Red-hued desert.
 13706, -- Red-hued desert.
 13710, -- Nearing the edge of the desert.
 13711, -- Red-hued desert.
 13719, -- Fringe of the desert approaching mountains.
 13720, -- Fringe of the desert approaching mountains.
 13721, -- Fringe of the desert approaching mountains.
 13722, -- In the desert.
 13723, -- Nearing the deserts edge approaching mountains.
 13724, -- Nearing the edge of the desert.
 13726, -- Fringe of the desert approaching mountains.
 13727, -- Red-hued desert.
 13729, -- In the desert.
 13730, -- Red-hued desert.
 13731, -- Red-hued desert.
 13732, -- Red-hued desert.
 13734, -- Red-hued desert.
 13735, -- Red-hued desert.
 13736, -- In the desert.
 13738, -- Nearing the edge of the desert.
 13739, -- Fringes of the desert nearing a vast ocean.
 13740, -- Fringes of the desert nearing a vast ocean.
 13743, -- Fringe of the desert nearing ocean.
 13744, -- Fringes of the desert nearing a vast ocean.
 13745, -- In the desert.
 13748, -- Red-hued desert.
 13749, -- Red-hued desert.
 13750, -- In the desert.
 13751, -- Red-hued desert.
 13752, -- Nearing the desert's edge approaching mountains.
 13754, -- Nearing the deserts edge approaching mountains.
 13756, -- Fringe of the desert approaching mountains.
 13757, -- Fringe of the desert approaching mountains.
 13758, -- In the desert.
 13759, -- Red-hued desert.
 13760, -- Red-hued desert.
 13846, -- Tracks through the sand.
 14342, -- Between the cacti.
 14354, -- A cave under the desert.
 14370, -- Within a small encampment.
 14379, -- An ibexskin tent.
 14380, -- An ibexskin tent.
 14381, -- An ibexskin tent.
 20104, -- Hidden cavern of falling sands.
 20112, -- A dusty desert catacomb.
 20113, -- A sandy dome.
 20114, -- A cavernous checkpoint.
 20115, -- A narrow descending tunnel.
 20116, -- A split in the tunnel.
 20117, -- A sweltering kitchen.
 20118, -- A quiet subterranean grotto.
 20119, -- A utilitarian cavern dormitory.
 20120, -- An underground hot springs.
 20121, -- An enclosed fissure.
 20122, -- A dusty shelf-lined niche.
 20123, -- A decorated meditation chamber.
 20124, -- A filthy holding cavern.
 20125, -- Within a filthy cave cell.
 20126, -- The interrogation chamber.
 20127, -- The cleansing catacombs.
 20128, -- The chamber of salvation.
 20159, -- The blessed springs.
 22184, -- Rough hewn passageway within the red stone.
 22185, -- Below the surface of the desert.
 22186, -- Rounding a stairway leading further underground.
 22187, -- Within the casern.
 22188, -- Above a trap door.
 22189, -- Before a wall of blades and armour.
 22190, -- A steep passageway.
 22191, -- Before a long hallway.
 22192, -- Entering the researchers' chambers.
 22193, -- A small cavern abode.
 22194, -- Within an elaborate laboratory.
 22195, -- A tidy torch lit library.
 22196, -- Within the interrogation chamber.
 22197, -- Passing through a consecrated chamber.
 22198, -- A guarded doorway.
 22199, -- A shelf lined recess within the laboratory.
 22200, -- The hall of death.
 22201, -- Overlooking the sepulcher.
 22202, -- Before the sepulcher of air.
 22203, -- Office of the Captain.
 22204, -- Before the sepulcher of water.
 22205, -- Before the remnants of an archaic statue.
 22209, -- Before the sepulcher of earth.
 22210, -- A destroyed sepulcher.
 24247, -- Damp beach next to the ocean.
 24248, -- A section of beach covered in footprints.
 24249, -- A fire pit on the beach.
 24250, -- Beach south of a tent.
 24251, -- A well walked section of beach.
 24252, -- Beach covered in waterlogged cargo.
 24253, -- Beach near a small camp.
 24254, -- A large, community tent.
 24255, -- A large tent.
 24256, -- A simple, furnished tent.
 24257, -- A tranquil section of beach.
 24258, -- A tranquil section of beach.
 24775, -- Emerging into a sandy battlefield.
 24776, -- A covered garden before great golden doors.
 25511, -- Embraced by a great hearth.
 25512, -- A regal living area.
 25513, -- Among the stores of the Viantha.
 25514, -- The Matriarch's chambers.
 25515, -- A pristine bathchamber.
 25516, -- An austere bedchamber.
 25517, -- An austere bedchamber.
 25518, -- Surrounded by the majesty of the Divine.
 25951, -- The Ravenstehl Garden.
 25952, -- A red-brick gazebo surrounded by lavender.
 25953, -- A wood-paneled, high-class foyer.
 25954, -- A comfortable, posh living-area.
 25955, -- A richly-furnished noble bedroom.
 25976, -- A small passage between foothills.
 25977, -- A long upward path leading to ruins.
 25978, -- The mesa's rise.
 26046, -- A lavish indoor hot-spring.
 26108, -- A dimly-lit bedchamber of stone.
 27412, -- A weathered, statue-lined thoroughfare.
 27413, -- An expansive, rubble-filled domed temple.
 27415, -- a tiny bronze altar atop a sandstone dais.
 28388, -- A desert plain of bones.
}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Mountains</name>
						<packageName></packageName>
						<script>Mountains = {
  2006, -- Hills climbing towards the Areish range.
  2007, -- Hills climbing towards the Areish range.
  2008, -- In the outskirts of the Areish mountains.
  2009, -- Climbing the Areish range.
  2010, -- Climbing the Areish range.
  2011, -- Deep in the Areish mountains.
  2012, -- Deep in the Areish mountains.
  2013, -- A box canyon in the Areish mountains.
  2014, -- Valley in the shadow of Dun mountain.
  2015, -- Deep in the Areish mountains.
  2016, -- A box canyon in the Areish mountains.
  2017, -- Deep in the Areish mountains.
  2018, -- Deep in the Areish mountains.
  2024, -- Deep in the Areish mountains.
  2025, -- A box canyon in the Areish mountains.
  2026, -- Deep in the Areish mountains.
  2027, -- A stunning overlook.
  2028, -- Surrounded by peaks.
  2029, -- Alpine meadow in the Areish mountains.
  2030, -- At the rim of a wide canyon.
  2033, -- Steep mountain slope covered with chaparral.
  2034, -- Steep mountain slope covered with chaparral.
  2038, -- Before a deep valley.
  2039, -- Deep in the Areish mountains.
  4342, -- The House of Hycanthus.
  5482, -- A faintly visible foot path.
  5483, -- A rock garden.
  5484, -- Amid frozen ash and ruin.
  5485, -- A ruin of wood and ash.
 16945, -- Among the fragrant evergreens.
 16946, -- Winding path bordered by ancient trees.
 16948, -- In a wild garden.
 19320, -- Approaching the Cuhpfehr hills.
 19321, -- View overlooking Cuhpfehr hills.
 19322, -- Approaching a large fissure.
 19323, -- Near a gaping fissure.
 19324, -- A gaping fissure.
 19325, -- Approaching a large fissure.
 19326, -- Along a narrow ridge.
 19327, -- Along a narrow ridge.
 19328, -- Near a ring of small mountains.
 19329, -- A collapsed mine entrance.
 19330, -- A quiet mountaintop.
 19331, -- At the foot of a mountain ring.
 19332, -- Amidst a ring of small mountains.
 19333, -- At the foot of a mountain ring.
 19334, -- Through a narrow pass.
 19335, -- A narrow mountain pass.
 19336, -- At a narrow fork in the mountains.
 19337, -- Amongst rugged terrain.
 19338, -- Nearing the Cuhpfehr hills.
 19339, -- Foothills of the Areish mountains.
 19340, -- Within the Northern Areish mountains.
 19341, -- Amidst rocky terrain.
 19342, -- Within view of the Cuhpfehr hills.
 19343, -- A narrow mountain path.
 19344, -- A narrow mountain path.
 19345, -- Overlooking the Ik'taru Expanse.
 19346, -- A small plateau near the Ik'taru Expanse.
 19347, -- Near a sapphire hued stream.
 19348, -- Atop a towering outcropping.
 19349, -- A boulder strewn path.
 19350, -- Nearing an abandoned village.
 19351, -- A boulder strewn path.
 19352, -- Among dilapidated shacks.
 19353, -- Remnants of a campsite.
 19354, -- Among abandoned buildings.
 19355, -- A small mountaintop.
 19356, -- Winding through the Areish mountains.
 19357, -- A small mountaintop.
 19358, -- A wide mountain ledge.
 19359, -- Atop a barren mining strip.
 19360, -- Winding through the Areish mountains.
 19361, -- Among the Areish foothills.
 19362, -- Nearing a barren mountainside.
 19363, -- Atop a barren mining strip.
 19364, -- Atop a barren mining strip.
 19365, -- A wide mountain ledge.
 19366, -- A desolate mountain area.
 19367, -- Near the northern Areish mountains.
 19368, -- Within a large crater.
 19369, -- The apex of a stony path.
 19370, -- Within sight of Khandava forest.
 19371, -- Along a ridge in the Western Areish mountains.
 19372, -- Within the Areish Highlands.
 19373, -- A rocky slope.
 19374, -- Nearing a patch of tall mountain grass.
 19375, -- Wading through tall mountain grass.
 19376, -- A turn in the trail.
 19377, -- Ascending into the Western Areish mountains.
 19378, -- A narrow mountain trail.
 19379, -- Before a fallen log in the trail.
 19380, -- A northerly trail in the Western Areish.
 19381, -- A scenic view overlooking the redwoods.
 19382, -- A small copse of foxtail.
 19383, -- A trail overlooking Ik'taru Expanse.
 19384, -- Nearing an outcrop of stone.
 19385, -- A scenic outcrop.
 19386, -- Within view of a field of poppies.
 19387, -- Surrounded by a field of poppies.
 19388, -- A descent lined with stepping stones.
 19389, -- A trail pocked with ruts.
 19390, -- Along a shallow decline in the Western Areish mountains.
 19391, -- Approaching a rugged path.
 19606, -- At a large fissure.
 19607, -- At a bubbling geyser.
 19608, -- Within a heated spring.
 19609, -- A steam-filled cavern.
 19610, -- At an underground waterfall.
 19611, -- Near a sapphire hued stream.
 19612, -- In a cavern of crystal shards.
 19613, -- A cave of natural crystals.
 19614, -- Surrounded by crystal caverns.
 19655, -- A rutted path.
}</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Functions</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Harvest Functions</name>
						<packageName></packageName>
						<script>Antimony = Antimony or {}
Argentum = Argentum or {}
Arsenic = Arsenic or {}
Aurum = Aurum or {}
Azurite = Azurite or {}
Bisemutum = Bisemutum or {}
Calamine = Calamine or {}
Calcite = Calcite or {}
Cinnabar = Cinnabar or {}
Cuprum = Cuprum or {}
Dolomite = Dolomite or {}
Ferrum = Ferrum or {}
Gypsum = Gypsum or {}
Magnesium = Magnesium or {}
Malachite = Malachite or {}
Plumbum = Plumbum or {}
Potash = Potash or {}
Quartz = Quartz or {}
Quicksilver = Quicksilver or {}
Realgar = Realgar or {}
Stannum = Stannum or {}


harvRoom = harvRoom or 1
harvArea = harvArea or "none"
function harvDir()
	if (harvArea ~= "none") then
		if (harvRoom &gt; #harvArea) then
			sysEcho("Area Cleared")
			harvRoom = 1
			harvArea = "none"
		else
			mmp.customwalkdelay(0)
			expandAlias("goto " .. harvArea[harvRoom])
			harvRoom = harvRoom + 1
		end
	else
		return
	end
end
</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Fishing</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Variables</name>
					<packageName></packageName>
					<script>fish = fish or {}
fish.fishing = fish.fishing or false
fish.number = fish.number or 5
fish.weight = fish.weight or 0
fish.hooked = fish.hooked or false
fish.cast = fish.cast or false
fish.baited = fish.baited or false
fish.exits = fish.exits or {}
fish.exitNum = fish.exitNum or 1
fish.area = fish.area or ""
fish.pounds = fish.pounds or 0
fish.ounces = fish.ounces or 0</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Functions</name>
					<packageName></packageName>
					<script>function swimDir()
	if (gmcp.Room.Info.num == 3473) then
		send("queue eqbal path find 5195")
	elseif (gmcp.Room.Info.num == 5195) then
		send("queue eqbal path find 5194")
	elseif (gmcp.Room.Info.num == 5194) then
		send("queue eqbal path find 5193")
	elseif (gmcp.Room.Info.num == 5193) then
		send("queue eqbal path find 5191")
	elseif (gmcp.Room.Info.num == 5191) then
		send("queue eqbal path find 5190")
	elseif (gmcp.Room.Info.num == 5190) then
		send("queue eqbal path find 5182")
	elseif (gmcp.Room.Info.num == 5182) then
		send("queue eqbal path find 5183")
	elseif (gmcp.Room.Info.num == 5183) then
		send("queue eqbal path find 5184")
	elseif (gmcp.Room.Info.num == 5184) then
		send("queue eqbal path find 3569")
	elseif (gmcp.Room.Info.num == 3569) then
		sysEcho("Aori Bay Fishing Cleared!")
	elseif (gmcp.Room.Info.num == 12064) then
		send("queue eqbal path find 12058")
	elseif (gmcp.Room.Info.num == 12058) then
		send("queue eqbal path find 12063")
	elseif (gmcp.Room.Info.num == 12063) then
		send("queue eqbal path find 12062")
	elseif (gmcp.Room.Info.num == 12062) then
		send("queue eqbal path find 12098")
	elseif (gmcp.Room.Info.num == 12098) then
		send("queue eqbal path find 12096")
	elseif (gmcp.Room.Info.num == 12096) then
		send("queue eqbal path find 12095")
	elseif (gmcp.Room.Info.num == 12095) then
		send("queue eqbal path find 12094")
	elseif (gmcp.Room.Info.num == 12094) then
		send("queue eqbal path find 12089")
	elseif (gmcp.Room.Info.num == 12089) then
		sysEcho("Ik'taru Expanse Fishing Cleared!")
	elseif (gmcp.Room.Info.num == 3062) then
		send("queue eqbal path find 3057")
	elseif (gmcp.Room.Info.num == 3057) then
		send("queue eqbal path find 3059")
	elseif (gmcp.Room.Info.num == 3059) then
		send("queue eqbal path find 3060")
	elseif (gmcp.Room.Info.num == 3060) then
		send("queue eqbal path find 3063")
	elseif (gmcp.Room.Info.num == 3063) then
		send("queue eqbal path find 3065")
	elseif (gmcp.Room.Info.num == 3065) then
		send("queue eqbal path find 3072")
	elseif (gmcp.Room.Info.num == 3072) then
		send("queue eqbal path find 3074")
	elseif (gmcp.Room.Info.num == 3074) then
		send("queue eqbal path find 3075")
	elseif (gmcp.Room.Info.num == 3075) then
		send("queue eqbal path find 2927")
	elseif (gmcp.Room.Info.num == 2927) then
		send("queue eqbal path find 2923")
	elseif (gmcp.Room.Info.num == 2923) then
		send("queue eqbal path find 2941")
	elseif (gmcp.Room.Info.num == 2941) then
		send("queue eqbal path find 2930")
	elseif (gmcp.Room.Info.num == 2930) then
		send("queue eqbal path find 2944")
	elseif (gmcp.Room.Info.num == 2944) then
		send("queue eqbal path find 2949")
	elseif (gmcp.Room.Info.num == 2949) then
		send("queue eqbal path find 2962")
	elseif (gmcp.Room.Info.num == 2962) then
		send("queue eqbal path find 2963")
	elseif (gmcp.Room.Info.num == 2963) then
		send("queue eqbal path find 3029")
	elseif (gmcp.Room.Info.num == 3029) then
		send("queue eqbal path find 3034")
	elseif (gmcp.Room.Info.num == 3034) then
		send("queue eqbal path find 3023")
	elseif (gmcp.Room.Info.num == 3023) then
		send("queue eqbal path find 3030")
	elseif (gmcp.Room.Info.num == 3030) then
		send("queue eqbal path find 3026")
	elseif (gmcp.Room.Info.num == 3026) then
		send("queue eqbal path find 3207")
	elseif (gmcp.Room.Info.num == 3207) then
		send("queue eqbal path find 3109")
	elseif (gmcp.Room.Info.num == 3109) then
		send("queue eqbal path find 3052")
	elseif (gmcp.Room.Info.num == 3052) then
		send("queue eqbal path find 3047")
	elseif (gmcp.Room.Info.num == 3047) then
		send("queue eqbal path find 3045")
	elseif (gmcp.Room.Info.num == 3045) then
		send("queue eqbal path find 3043")
	elseif (gmcp.Room.Info.num == 3043) then
		send("queue eqbal path find 3042")
	elseif (gmcp.Room.Info.num == 3042) then
		send("queue eqbal path find 3051")
	elseif (gmcp.Room.Info.num == 3051) then
		send("queue eqbal path find 3050")
	elseif (gmcp.Room.Info.num == 3050) then
		send("queue eqbal path find 5292")
	elseif (gmcp.Room.Info.num == 5292) then
		sysEcho("Seven Fishing Cleared!")
	elseif (gmcp.Room.Info.num == 28471) then
		send("queue eqbal path find 28473")
	elseif (gmcp.Room.Info.num == 28473) then
		send("queue eqbal path find 28466")
	elseif (gmcp.Room.Info.num == 28466) then
		send("queue eqbal path find 28470")
	elseif (gmcp.Room.Info.num == 28470) then
		send("queue eqbal path find 28466")
	elseif (gmcp.Room.Info.num == 28466) then
		send("queue eqbal path find 28467")
	elseif (gmcp.Room.Info.num == 28467) then
		send("queue eqbal path find 28468")
	elseif (gmcp.Room.Info.num == 28468) then
		send("queue eqbal path find 28472")
	elseif (gmcp.Room.Info.num == 28472) then
		send("queue eqbal path find 28476")
	elseif (gmcp.Room.Info.num == 28476) then
		send("queue eqbal path find 28475")
	elseif (gmcp.Room.Info.num == 28475) then
		send("queue eqbal path find 28474")
	elseif (gmcp.Room.Info.num == 28474) then
		send("queue eqbal path find 28461")
	elseif (gmcp.Room.Info.num == 28461) then
		send("queue eqbal path find 28456")
	elseif (gmcp.Room.Info.num == 28456) then
		sysEcho("Khous Fishing Cleared!")
	end
end

function fishExits()
	if (gmcp.Room.Info.num == 3473) then
		fish.exits = {"nw"}
	elseif (gmcp.Room.Info.num == 5195) then
		fish.exits = {"nw","w"}
	elseif (gmcp.Room.Info.num == 5194) then
		fish.exits = {"nw","w"}
	elseif (gmcp.Room.Info.num == 5193) then
		fish.exits = {"nw","sw"}
	elseif (gmcp.Room.Info.num == 5191) then
		fish.exits = {"w","sw"}
	elseif (gmcp.Room.Info.num == 5190) then
		fish.exits = {"sw","s"}
	elseif (gmcp.Room.Info.num == 5182) then
		fish.exits = {"sw","s"}
	elseif (gmcp.Room.Info.num == 5183) then
		fish.exits = {"sw","s"}
	elseif (gmcp.Room.Info.num == 5184) then
		fish.exits = {"sw","s"}
	elseif (gmcp.Room.Info.num == 12064) then
		fish.exits = {"s"}
	elseif (gmcp.Room.Info.num == 12058) then
		fish.exits = {"nw","ne","se","s","sw"}
	elseif (gmcp.Room.Info.num == 12063) then
		fish.exits = {"sw"}
	elseif (gmcp.Room.Info.num == 12062) then
		fish.exits = {"s"}
	elseif (gmcp.Room.Info.num == 12098) then
		fish.exits = {"sw"}
	elseif (gmcp.Room.Info.num == 12096) then
		fish.exits = {"sw"}
	elseif (gmcp.Room.Info.num == 12095) then
		fish.exits = {"nw"}
	elseif (gmcp.Room.Info.num == 12094) then
		fish.exits = {"nw"}
	elseif (gmcp.Room.Info.num == 12089) then
		fish.exits = {"n"}
	elseif (gmcp.Room.Info.num == 3569) then
		fish.exits = {"e"}
	elseif (gmcp.Room.Info.num == 3062) then
		fish.exits = {"ne", "w"}
	elseif (gmcp.Room.Info.num == 3057) then
		fish.exits = {"e","se"}
	elseif (gmcp.Room.Info.num == 3059) then
		fish.exits = {"nw","sw"}
	elseif (gmcp.Room.Info.num == 3060) then
		fish.exits = {"e","se","s"}
	elseif (gmcp.Room.Info.num == 3063) then
		fish.exits = {"se"}
	elseif (gmcp.Room.Info.num == 3065) then
		fish.exits = {"n","se","w"}
	elseif (gmcp.Room.Info.num == 3072) then
		fish.exits = {"n","se"}
	elseif (gmcp.Room.Info.num == 3074) then
		fish.exits = {"n","se","s"}
	elseif (gmcp.Room.Info.num == 3075) then
		fish.exits = {"e"}
	elseif (gmcp.Room.Info.num == 2927) then
		fish.exits = {"s","sw"}
	elseif (gmcp.Room.Info.num == 2923) then
		fish.exits = {"nw","n","ne","e","se","s","w"}
	elseif (gmcp.Room.Info.num == 2941) then
		fish.exits = {"nw","n","e","se","s","sw","w"}
	elseif (gmcp.Room.Info.num == 2930) then
		fish.exits = {"se","s"}
	elseif (gmcp.Room.Info.num == 2944) then
		fish.exits = {"ne","e","se","s"}
	elseif (gmcp.Room.Info.num == 2949) then
		fish.exits = {"w","e"}
	elseif (gmcp.Room.Info.num == 2962) then
		fish.exits = {"n","ne","e","se","s","w"}
	elseif (gmcp.Room.Info.num == 2963) then
		fish.exits = {"e"}
	elseif (gmcp.Room.Info.num == 3029) then
		fish.exits = {"n","se","sw","nw"}
	elseif (gmcp.Room.Info.num == 3034) then
		fish.exits = {"nw","se","w"}
	elseif (gmcp.Room.Info.num == 3023) then
		fish.exits = {"e"}
	elseif (gmcp.Room.Info.num == 3030) then
		fish.exits = {"ne","d"}
	elseif (gmcp.Room.Info.num == 3026) then
		fish.exits = {"nw"}
	elseif (gmcp.Room.Info.num == 3207) then
		fish.exits = {"ne","e"}
	elseif (gmcp.Room.Info.num == 3109) then
		fish.exits = {"nw","n"}
	elseif (gmcp.Room.Info.num == 3117) then
		fish.exits = {"up","w"}
	elseif (gmcp.Room.Info.num == 3113) then
		fish.exits = {"d","n","se","w"}
	elseif (gmcp.Room.Info.num == 3118) then
		fish.exits = {"up","s"}
	elseif (gmcp.Room.Info.num == 3052) then
		fish.exits = {"nw","sw"}
	elseif (gmcp.Room.Info.num == 3047) then
		fish.exits = {"nw","s"}
	elseif (gmcp.Room.Info.num == 3045) then
		fish.exits = {"n","se"}
	elseif (gmcp.Room.Info.num == 3043) then
		fish.exits = {"nw","s"}
	elseif (gmcp.Room.Info.num == 3042) then
		fish.exits = {"nw","n"}
	elseif (gmcp.Room.Info.num == 3051) then
		fish.exits = {"e","se"}
	elseif (gmcp.Room.Info.num == 3050) then
		fish.exits = {"nw"}
	elseif (gmcp.Room.Info.num == 28471) then
		fish.exits = {"nw","n","ne","e","se","s","w","d"}
	elseif (gmcp.Room.Info.num == 28473) then
		fish.exits = {"n","e"}
	elseif (gmcp.Room.Info.num == 28466) then
		fish.exits = {"d"}
	elseif (gmcp.Room.Info.num == 28467) then
		fish.exits = {"d"}
	elseif (gmcp.Room.Info.num == 28470) then
		fish.exits = {"d"}
	elseif (gmcp.Room.Info.num == 28468) then
		fish.exits = {"d"}
	elseif (gmcp.Room.Info.num == 28472) then
		fish.exits = {"d"}
	elseif (gmcp.Room.Info.num == 28476) then
		fish.exits = {"d"}
	elseif (gmcp.Room.Info.num == 28475) then
		fish.exits = {"d"}
	elseif (gmcp.Room.Info.num == 28469) then
		fish.exits = {"d"}
	elseif (gmcp.Room.Info.num == 28474) then
		fish.exits = {"d"}
	elseif (gmcp.Room.Info.num == 28461) then
		fish.exits = {"e"}
	elseif (gmcp.Room.Info.num == 28456) then
		fish.exits = {"e"}
	end
end

function fishWeight()
	local num = math.floor(fish.ounces / 16)
	local weight = fish.pounds + num
	cecho("&lt;red&gt;[&lt;white&gt;Lbs&lt;red&gt;:&lt;white&gt;" .. weight .. "&lt;red&gt;|&lt;white&gt;Gold&lt;red&gt;:&lt;white&gt;" .. weight * 4 .. "&lt;red&gt;]")
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
		</ScriptGroup>
		<Script isActive="yes" isFolder="no">
			<name>webhooks</name>
			<packageName></packageName>
			<script>function sendToDiscordWebhook(discord_username, avatarurl, message)
  local httpdone = registerAnonymousEventHandler('sysPostHttpDone', 
    function(event, rurl, response)
      if rurl == url then display(r) else return true end
    end, true)

  local httperror = registerAnonymousEventHandler('sysPostHttpError', 
    function(event, response, rurl)
      if rurl == url then display(r) else return true end
    end, true)

  local url = "https://discordapp.com/api/webhooks/975391849319641161/xVtJk-By84k1Tm9yR3Or8bdMepMInRSufOuVlkxcByX_IEK7rPHvjClFa0zMArSAah7j"
  local data = {
    username = discord_username, 
    avatar_url = avatarurl,
    content = message
  }
  local header = {
    ["Content-Type"] = "application/json",
    --["Content-Length"] = data:len()
  }
  
  postHTTP(yajl.to_string(data), url, header)
  
  killAnonymousEventHandler(httpdone)
  killAnonymousEventHandler(httperror)
end
-- 
-- function sendToDiscordWebhook(discord_username, avatarurl, message)
  -- local httpdone = registerAnonymousEventHandler('sysPostHttpDone', 
    -- function(event, rurl, response)
      -- if rurl == url then display(r) else return true end
    -- end, true)
-- 
  -- local httperror = registerAnonymousEventHandler('sysPostHttpError', 
    -- function(event, response, rurl)
      -- if rurl == url then display(r) else return true end
    -- end, true)
-- 
  -- local url = "https://discordapp.com/api/webhooks/975391849319641161/xVtJk-By84k1Tm9yR3Or8bdMepMInRSufOuVlkxcByX_IEK7rPHvjClFa0zMArSAah7j"
  -- local data = {
    -- username = discord_username, 
    -- avatar_url = avatarurl,
    -- content = message
  -- }
  -- local header = {
    -- ["Content-Type"] = "application/json",
    -- --["Content-Length"] = data:len()
  -- }
  -- 
  -- postHTTP(yajl.to_string(data), url, header)
  -- 
  -- killAnonymousEventHandler(httpdone)
  -- killAnonymousEventHandler(httperror)
-- end</script>
			<eventHandlerList />
		</Script>
	</ScriptPackage>
	<KeyPackage>
		<KeyGroup isActive="no" isFolder="yes">
			<name>batkeys</name>
			<packageName>batkeys</packageName>
			<script></script>
			<command></command>
			<keyCode>0</keyCode>
			<keyModifier>0</keyModifier>
			<KeyGroup isActive="no" isFolder="yes">
				<name>batmanbeta</name>
				<packageName>batmanbeta</packageName>
				<script></script>
				<command></command>
				<keyCode>4980813</keyCode>
				<keyModifier>3211311</keyModifier>
				<KeyGroup isActive="no" isFolder="yes">
					<name>Outrider</name>
					<packageName></packageName>
					<script></script>
					<command></command>
					<keyCode>-1</keyCode>
					<keyModifier>0</keyModifier>
					<Key isActive="yes" isFolder="no">
						<name>Right Arm Attack</name>
						<packageName></packageName>
						<script>toxins = {}

kelp_affs = 0

if (gmcp.Char.Vitals.bal ~= "1" or gmcp.Char.Vitals.eq ~= "1") then
	return
else 
pickstabtoxin()
	if target.shield and target.aura then
		send("wyrm deluge " .. target.name)
	elseif target.shield then
		send("quickdraw spear shield::target right arm::spear pierce " .. target.name)
	elseif frostheart == false then
		send("wyrm frostheart " .. target.name)
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and lynxsurge == false then
		send("quickdraw spear shield::target right arm::wyrm blacken spear::spear batter " .. target.name .. "::surge lynx")
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and leopardxsurge == false then
		send("quickdraw spear shield::target right arm::wyrm blacken spear::spear batter " .. target.name .. "::surge leopard")
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and wolverinesurge == false then
		send("quickdraw spear shield::target right arm::wyrm blacken spear::spear batter " .. target.name .. "::surge wolverine")
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and lynxsurge == true then
		send("quickdraw spear shield::target right arm::wyrm blacken spear::spear batter " .. target.name .. "::surge crow")
	elseif target.aura then
		send("quickdraw spear shield::target right arm::spear pierce " .. target.name)
	elseif table.contains(target.afflictions, "haemophilia") and table.contains(target.afflictions, "impatience") and not table.contains(target.afflictions, "addiction") and lynxsurge == false then
		send("quickdraw spear shield::target right arm::wyrm blacken spear::spear longslash " .. target.name .. "::surge lynx")
	elseif table.contains(target.afflictions, "haemophilia") and table.contains(target.afflictions, "impatience") and not table.contains(target.afflictions, "addiction") and leopardsurge == false then
		send("quickdraw spear shield::target right arm::wyrm blacken spear::spear longslash " .. target.name .. "::surge leopard")
	elseif table.contains(target.afflictions, "haemophilia") and table.contains(target.afflictions, "impatience") and not table.contains(target.afflictions, "addiction") and wolverinesurge == false then
		send("quickdraw spear shield::target right arm::wyrm blacken spear::spear longslash " .. target.name .. "::surge wolverine")
	elseif table.contains(target.afflictions, "haemophilia") and table.contains(target.afflictions, "impatience") and not table.contains(target.afflictions, "addiction") and lynxsurge == true then
		send("quickdraw spear shield::target right arm::wyrm blacken spear::spear longslash " .. target.name .. "::surge crow")
	elseif lynxsurge == false then
		send("quickdraw spear shield::target right arm::wyrm blacken spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge lynx")
	elseif leopardsurge == false then
		send("quickdraw spear shield::target right arm::wyrm blacken spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge leopard")
	elseif wolverinesurge == false then
		send("quickdraw spear shield::target right arm::wyrm blacken spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge wolverine")
	elseif lynxsurge == true then
		send("quickdraw spear shield::target right arm::wyrm blacken spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge crow")
	end
end
</script>
						<command></command>
						<keyCode>16777264</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Left Arm Attack</name>
						<packageName></packageName>
						<script>toxins = {}

kelp_affs = 0

if (gmcp.Char.Vitals.bal ~= "1" or gmcp.Char.Vitals.eq ~= "1") then
	return
else 
pickstabtoxin()
	if target.shield and target.aura then
		send("wyrm deluge " .. target.name)
	elseif target.shield then
		send("quickdraw spear shield::target left arm::spear pierce " .. target.name)
	elseif frostheart == false then
		send("wyrm frostheart " .. target.name)
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and lynxsurge == false then
		send("quickdraw spear shield::target left arm::wyrm blacken spear::spear batter " .. target.name .. "::surge lynx")
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and leopardxsurge == false then
		send("quickdraw spear shield::target left arm::wyrm blacken spear::spear batter " .. target.name .. "::surge leopard")
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and wolverinesurge == false then
		send("quickdraw spear shield::target left arm::wyrm blacken spear::spear batter " .. target.name .. "::surge wolverine")
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and lynxsurge == true then
		send("quickdraw spear shield::target left arm::wyrm blacken spear::spear batter " .. target.name .. "::surge crow")
	elseif target.aura then
		send("quickdraw spear shield::target left arm::spear pierce " .. target.name)
	elseif table.contains(target.afflictions, "haemophilia") and table.contains(target.afflictions, "impatience") and not table.contains(target.afflictions, "addiction") and lynxsurge == false then
		send("quickdraw spear shield::target left arm::wyrm blacken spear::spear longslash " .. target.name .. "::surge lynx")
	elseif table.contains(target.afflictions, "haemophilia") and table.contains(target.afflictions, "impatience") and not table.contains(target.afflictions, "addiction") and leopardsurge == false then
		send("quickdraw spear shield::target left arm::wyrm blacken spear::spear longslash " .. target.name .. "::surge leopard")
	elseif table.contains(target.afflictions, "haemophilia") and table.contains(target.afflictions, "impatience") and not table.contains(target.afflictions, "addiction") and wolverinesurge == false then
		send("quickdraw spear shield::target left arm::wyrm blacken spear::spear longslash " .. target.name .. "::surge wolverine")
	elseif table.contains(target.afflictions, "haemophilia") and table.contains(target.afflictions, "impatience") and not table.contains(target.afflictions, "addiction") and lynxsurge == true then
		send("quickdraw spear shield::target left arm::wyrm blacken spear::spear longslash " .. target.name .. "::surge crow")
	elseif lynxsurge == false then
		send("quickdraw spear shield::target left arm::wyrm blacken spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge lynx")
	elseif leopardsurge == false then
		send("quickdraw spear shield::target left arm::wyrm blacken spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge leopard")
	elseif wolverinesurge == false then
		send("quickdraw spear shield::target left arm::wyrm blacken spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge wolverine")
	elseif lynxsurge == true then
		send("quickdraw spear shield::target left arm::wyrm blacken spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge crow")
	end
end
</script>
						<command></command>
						<keyCode>16777265</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Right Leg Attack</name>
						<packageName></packageName>
						<script>toxins = {}

kelp_affs = 0

if (gmcp.Char.Vitals.bal ~= "1" or gmcp.Char.Vitals.eq ~= "1") then
	return
else 
pickstabtoxin()
	if target.shield and target.aura then
		send("wyrm deluge " .. target.name)
	elseif target.shield then
		send("quickdraw spear shield::target right leg::spear pierce " .. target.name)
	elseif frostheart == false then
		send("wyrm frostheart " .. target.name)
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and lynxsurge == false then
		send("quickdraw spear shield::target right leg::wyrm blacken spear::spear batter " .. target.name .. "::surge lynx")
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and leopardxsurge == false then
		send("quickdraw spear shield::target right leg::wyrm blacken spear::spear batter " .. target.name .. "::surge leopard")
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and wolverinesurge == false then
		send("quickdraw spear shield::target right leg::wyrm blacken spear::spear batter " .. target.name .. "::surge wolverine")
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and lynxsurge == true then
		send("quickdraw spear shield::target right leg::wyrm blacken spear::spear batter " .. target.name .. "::surge crow")
	elseif target.aura then
		send("quickdraw spear shield::target right leg::spear pierce " .. target.name)
	elseif table.contains(target.afflictions, "haemophilia") and table.contains(target.afflictions, "impatience") and not table.contains(target.afflictions, "addiction") and lynxsurge == false then
		send("quickdraw spear shield::target right leg::wyrm blacken spear::spear longslash " .. target.name .. "::surge lynx")
	elseif table.contains(target.afflictions, "haemophilia") and table.contains(target.afflictions, "impatience") and not table.contains(target.afflictions, "addiction") and leopardsurge == false then
		send("quickdraw spear shield::target right leg::wyrm blacken spear::spear longslash " .. target.name .. "::surge leopard")
	elseif table.contains(target.afflictions, "haemophilia") and table.contains(target.afflictions, "impatience") and not table.contains(target.afflictions, "addiction") and wolverinesurge == false then
		send("quickdraw spear shield::target right leg::wyrm blacken spear::spear longslash " .. target.name .. "::surge wolverine")
	elseif table.contains(target.afflictions, "haemophilia") and table.contains(target.afflictions, "impatience") and not table.contains(target.afflictions, "addiction") and lynxsurge == true then
		send("quickdraw spear shield::target right leg::wyrm blacken spear::spear longslash " .. target.name .. "::surge crow")
	elseif lynxsurge == false then
		send("quickdraw spear shield::target right leg::wyrm blacken spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge lynx")
	elseif leopardsurge == false then
		send("quickdraw spear shield::target right leg::wyrm blacken spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge leopard")
	elseif wolverinesurge == false then
		send("quickdraw spear shield::target right leg::wyrm blacken spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge wolverine")
	elseif lynxsurge == true then
		send("quickdraw spear shield::target right leg::wyrm blacken spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge crow")
	end
end
</script>
						<command></command>
						<keyCode>16777266</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Left Leg Attack</name>
						<packageName></packageName>
						<script>toxins = {}

kelp_affs = 0

if (gmcp.Char.Vitals.bal ~= "1" or gmcp.Char.Vitals.eq ~= "1") then
	return
else 
pickstabtoxin()
	if target.shield and target.aura then
		send("wyrm deluge " .. target.name)
	elseif target.shield then
		send("quickdraw spear shield::target left leg::spear pierce " .. target.name)
	elseif frostheart == false then
		send("wyrm frostheart " .. target.name)
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and lynxsurge == false then
		send("quickdraw spear shield::target left leg::wyrm blacken spear::spear batter " .. target.name .. "::surge lynx")
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and leopardxsurge == false then
		send("quickdraw spear shield::target left leg::wyrm blacken spear::spear batter " .. target.name .. "::surge leopard")
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and wolverinesurge == false then
		send("quickdraw spear shield::target left leg::wyrm blacken spear::spear batter " .. target.name .. "::surge wolverine")
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and lynxsurge == true then
		send("quickdraw spear shield::target left leg::wyrm blacken spear::spear batter " .. target.name .. "::surge crow")
	elseif target.aura then
		send("quickdraw spear shield::target left leg::spear pierce " .. target.name)
	elseif table.contains(target.afflictions, "haemophilia") and table.contains(target.afflictions, "impatience") and not table.contains(target.afflictions, "addiction") and lynxsurge == false then
		send("quickdraw spear shield::target left leg::wyrm blacken spear::spear longslash " .. target.name .. "::surge lynx")
	elseif table.contains(target.afflictions, "haemophilia") and table.contains(target.afflictions, "impatience") and not table.contains(target.afflictions, "addiction") and leopardsurge == false then
		send("quickdraw spear shield::target left leg::wyrm blacken spear::spear longslash " .. target.name .. "::surge leopard")
	elseif table.contains(target.afflictions, "haemophilia") and table.contains(target.afflictions, "impatience") and not table.contains(target.afflictions, "addiction") and wolverinesurge == false then
		send("quickdraw spear shield::target left leg::wyrm blacken spear::spear longslash " .. target.name .. "::surge wolverine")
	elseif table.contains(target.afflictions, "haemophilia") and table.contains(target.afflictions, "impatience") and not table.contains(target.afflictions, "addiction") and lynxsurge == true then
		send("quickdraw spear shield::target left leg::wyrm blacken spear::spear longslash " .. target.name .. "::surge crow")
	elseif lynxsurge == false then
		send("quickdraw spear shield::target left leg::wyrm blacken spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge lynx")
	elseif leopardsurge == false then
		send("quickdraw spear shield::target left leg::wyrm blacken spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge leopard")
	elseif wolverinesurge == false then
		send("quickdraw spear shield::target left leg::wyrm blacken spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge wolverine")
	elseif lynxsurge == true then
		send("quickdraw spear shield::target left leg::wyrm blacken spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge crow")
	end
end
</script>
						<command></command>
						<keyCode>16777267</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Chiltrans Right Arm</name>
						<packageName></packageName>
						<script>toxins = {}

kelp_affs = 0

if (gmcp.Char.Vitals.bal ~= "1" or gmcp.Char.Vitals.eq ~= "1") then
	return
else 
pickstabtoxin()
	if target.shield and target.aura then
		send("wyrm deluge " .. target.name)
	elseif target.shield then
		send("quickdraw spear shield::target right arm::spear pierce " .. target.name)
	elseif frostheart == false then
		send("wyrm frostheart " .. target.name)
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and lynxsurge == false then
		send("quickdraw spear shield::target right arm::wyrm blacken spear::spear batter " .. target.name .. "::surge lynx")
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and leopardxsurge == false then
		send("quickdraw spear shield::target right arm::wyrm blacken spear::spear batter " .. target.name .. "::surge leopard")
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and wolverinesurge == false then
		send("quickdraw spear shield::target right arm::wyrm blacken spear::spear batter " .. target.name .. "::surge wolverine")
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and lynxsurge == true then
		send("quickdraw spear shield::target right arm::wyrm blacken spear::spear batter " .. target.name .. "::surge crow")
	elseif target.aura then
		send("quickdraw spear shield::target right arm::spear pierce " .. target.name)
	elseif lynxsurge == false then
		send("quickdraw spear shield::target right arm::wyrm icecoat spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge lynx")
	elseif leopardsurge == false then
		send("quickdraw spear shield::target right arm::wyrm icecoat spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge leopard")
	elseif wolverinesurge == false then
		send("quickdraw spear shield::target right arm::wyrm icecoat spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge wolverine")
	elseif lynxsurge == true then
		send("quickdraw spear shield::target right arm::wyrm icecoat spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge crow")
	end
end
</script>
						<command></command>
						<keyCode>16777268</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Chiltrans Left Arm</name>
						<packageName></packageName>
						<script>toxins = {}

kelp_affs = 0

if (gmcp.Char.Vitals.bal ~= "1" or gmcp.Char.Vitals.eq ~= "1") then
	return
else 
pickstabtoxin()
	if target.shield and target.aura then
		send("wyrm deluge " .. target.name)
	elseif target.shield then
		send("quickdraw spear shield::target left arm::spear pierce " .. target.name)
	elseif frostheart == false then
		send("wyrm frostheart " .. target.name)
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and lynxsurge == false then
		send("quickdraw spear shield::target left arm::wyrm blacken spear::spear batter " .. target.name .. "::surge lynx")
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and leopardxsurge == false then
		send("quickdraw spear shield::target left arm::wyrm blacken spear::spear batter " .. target.name .. "::surge leopard")
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and wolverinesurge == false then
		send("quickdraw spear shield::target left arm::wyrm blacken spear::spear batter " .. target.name .. "::surge wolverine")
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and lynxsurge == true then
		send("quickdraw spear shield::target left arm::wyrm blacken spear::spear batter " .. target.name .. "::surge crow")
	elseif target.aura then
		send("quickdraw spear shield::target left arm::spear pierce " .. target.name)
	elseif lynxsurge == false then
		send("quickdraw spear shield::target left arm::wyrm icecoat spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge lynx")
	elseif leopardsurge == false then
		send("quickdraw spear shield::target left arm::wyrm icecoat spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge leopard")
	elseif wolverinesurge == false then
		send("quickdraw spear shield::target left arm::wyrm icecoat spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge wolverine")
	elseif lynxsurge == true then
		send("quickdraw spear shield::target left arm::wyrm icecoat spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge crow")
	end
end
</script>
						<command></command>
						<keyCode>16777269</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Chiltrans Right Leg</name>
						<packageName></packageName>
						<script>toxins = {}

kelp_affs = 0

if (gmcp.Char.Vitals.bal ~= "1" or gmcp.Char.Vitals.eq ~= "1") then
	return
else 
pickstabtoxin()
	if target.shield and target.aura then
		send("wyrm deluge " .. target.name)
	elseif target.shield then
		send("quickdraw spear shield::target right leg::spear pierce " .. target.name)
	elseif frostheart == false then
		send("wyrm frostheart " .. target.name)
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and lynxsurge == false then
		send("quickdraw spear shield::target right leg::wyrm blacken spear::spear batter " .. target.name .. "::surge lynx")
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and leopardxsurge == false then
		send("quickdraw spear shield::target right leg::wyrm blacken spear::spear batter " .. target.name .. "::surge leopard")
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and wolverinesurge == false then
		send("quickdraw spear shield::target right leg::wyrm blacken spear::spear batter " .. target.name .. "::surge wolverine")
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and lynxsurge == true then
		send("quickdraw spear shield::target right leg::wyrm blacken spear::spear batter " .. target.name .. "::surge crow")
	elseif target.aura then
		send("quickdraw spear shield::target right leg::spear pierce " .. target.name)
	elseif lynxsurge == false then
		send("quickdraw spear shield::target right leg::wyrm icecoat spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge lynx")
	elseif leopardsurge == false then
		send("quickdraw spear shield::target right leg::wyrm icecoat spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge leopard")
	elseif wolverinesurge == false then
		send("quickdraw spear shield::target right leg::wyrm icecoat spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge wolverine")
	elseif lynxsurge == true then
		send("quickdraw spear shield::target right leg::wyrm icecoat spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge crow")
	end
end
</script>
						<command></command>
						<keyCode>16777270</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Chiltrans Left Leg</name>
						<packageName></packageName>
						<script>toxins = {}

kelp_affs = 0

if (gmcp.Char.Vitals.bal ~= "1" or gmcp.Char.Vitals.eq ~= "1") then
	return
else 
pickstabtoxin()
	if target.shield and target.aura then
		send("wyrm deluge " .. target.name)
	elseif target.shield then
		send("quickdraw spear shield::target left leg::spear pierce " .. target.name)
	elseif frostheart == false then
		send("wyrm frostheart " .. target.name)
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and lynxsurge == false then
		send("quickdraw spear shield::target left leg::wyrm blacken spear::spear batter " .. target.name .. "::surge lynx")
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and leopardxsurge == false then
		send("quickdraw spear shield::target left leg::wyrm blacken spear::spear batter " .. target.name .. "::surge leopard")
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and wolverinesurge == false then
		send("quickdraw spear shield::target left leg::wyrm blacken spear::spear batter " .. target.name .. "::surge wolverine")
	elseif target.aura == true and table.contains(target.afflictions, "impatience") and not table.contains(target.mentalaffs, "stupidity") and lynxsurge == true then
		send("quickdraw spear shield::target left leg::wyrm blacken spear::spear batter " .. target.name .. "::surge crow")
	elseif target.aura then
		send("quickdraw spear shield::target left leg::spear pierce " .. target.name)
	elseif lynxsurge == false then
		send("quickdraw spear shield::target left leg::wyrm icecoat spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge lynx")
	elseif leopardsurge == false then
		send("quickdraw spear shield::target left leg::wyrm icecoat spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge leopard")
	elseif wolverinesurge == false then
		send("quickdraw spear shield::target left leg::wyrm icecoat spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge wolverine")
	elseif lynxsurge == true then
		send("quickdraw spear shield::target left leg::wyrm icecoat spear::spear stab " .. target.name .. " " .. toxins[1] .. "::surge crow")
	end
end
</script>
						<command></command>
						<keyCode>16777271</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
				</KeyGroup>
				<KeyGroup isActive="no" isFolder="yes">
					<name>Deathknight</name>
					<packageName></packageName>
					<script></script>
					<command></command>
					<keyCode>-1</keyCode>
					<keyModifier>0</keyModifier>
					<Key isActive="yes" isFolder="no">
						<name>Left Arm DSL</name>
						<packageName></packageName>
						<script>toxins = {}
dslaffs = {}
Toxin.dsl.queue = {"ciguatoxintree","metrazoltree","hemotoxinpurge","mercury","butisol","xeroderma","deaf","strychninetree","iodine","calotropis","ciguatoxin","bromine","aconite","atropine","vitriol","mazanor","benzene2","benzedrine2","chloroform","benzene2","benzedrine2","opium","opium"}
limb = "none"

kelp_affs = 0

if (gmcp.Char.Vitals.bal ~= "1" or gmcp.Char.Vitals.eq ~= "1") then
	return
else 
pickdsltoxin()
	DSLTIME = true
	if target.shield == false and table.contains(target.afflictions, "crippled left leg") and table.contains(target.afflictions, "crippled right leg") and table.contains(target.afflictions, "crippled left arm") and table.contains(target.afflictions, "crippled right arm") then
		expandAlias("vivi")
	elseif target.shield or target.aura then
		send("target nothing::target nothing::target nothing::quickdraw sabre shield::grip::RSL " ..target.name .. " " .. toxins[1] .. "::engage " .. target.name)
	elseif engage == false then
		send("target left arm::displace nothing::target left arm::displace nothing::target left arm::displace nothing::quickdraw sabre shield::grip::DSL " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::engage " .. target.name)
	end
end
</script>
						<command></command>
						<keyCode>16777264</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Right Arm DSL</name>
						<packageName></packageName>
						<script>toxins = {}
dslaffs = {}
Toxin.dsl.queue = {"ciguatoxintree","metrazoltree","hemotoxinpurge","mercury","butisol","xeroderma","deaf","strychninetree","iodine","calotropis","ciguatoxin","bromine","aconite","atropine","vitriol","mazanor","benzene2","benzedrine2","chloroform","benzene2","benzedrine2","opium","opium"}
limb = "none"


kelp_affs = 0

if (gmcp.Char.Vitals.bal ~= "1" or gmcp.Char.Vitals.eq ~= "1") then
	return
else 
pickdsltoxin()
	DSLTIME = true
	if target.shield == false and table.contains(target.afflictions, "crippled left leg") and table.contains(target.afflictions, "crippled right leg") and table.contains(target.afflictions, "crippled left arm") and table.contains(target.afflictions, "crippled right arm") then
		expandAlias("vivi")
elseif target.shield or target.aura then
		send("target nothing::target nothing::target nothing::quickdraw sabre shield::grip::RSL " ..target.name .. " " .. toxins[1] .. "::engage " .. target.name)
	elseif engage == false then
		send("target right arm::displace nothing::target right arm::displace nothing::target right arm::displace nothing::quickdraw sabre shield::grip::DSL " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::engage " .. target.name)
	end
end
</script>
						<command></command>
						<keyCode>16777265</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Left Leg DSL</name>
						<packageName></packageName>
						<script>toxins = {}
dslaffs = {}
Toxin.dsl.queue = {"ciguatoxintree","metrazoltree","hemotoxinpurge","mercury","butisol","xeroderma","deaf","strychninetree","iodine","calotropis","ciguatoxin","bromine","aconite","atropine","vitriol","mazanor","benzene2","benzedrine2","chloroform","benzene2","benzedrine2","opium","opium"}
limb = "none"


kelp_affs = 0

if (gmcp.Char.Vitals.bal ~= "1" or gmcp.Char.Vitals.eq ~= "1") then
	return
else 
pickdsltoxin()
	DSLTIME = true
	if target.shield == false and table.contains(target.afflictions, "crippled left leg") and table.contains(target.afflictions, "crippled right leg") and table.contains(target.afflictions, "crippled left arm") and table.contains(target.afflictions, "crippled right arm") then
		expandAlias("vivi")
	elseif target.shield or target.aura then
		send("target nothing::target nothing::target nothing::quickdraw sabre shield::grip::RSL " ..target.name .. " " .. toxins[1] .. "::engage " .. target.name)
	elseif engage == false then
		send("target left leg::displace nothing::target left leg::displace nothing::target left leg::displace nothing::quickdraw sabre shield::grip::DSL " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::engage " .. target.name)
	end
end
</script>
						<command></command>
						<keyCode>16777266</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Right Leg DSL</name>
						<packageName></packageName>
						<script>toxins = {}
dslaffs = {}
Toxin.dsl.queue = {"ciguatoxintree","metrazoltree","hemotoxinpurge","mercury","butisol","xeroderma","deaf","strychninetree","iodine","calotropis","ciguatoxin","bromine","aconite","atropine","vitriol","mazanor","benzene2","benzedrine2","chloroform","benzene2","benzedrine2","opium","opium"}
limb = "none"


kelp_affs = 0

if (gmcp.Char.Vitals.bal ~= "1" or gmcp.Char.Vitals.eq ~= "1") then
	return
else 
pickdsltoxin()
	DSLTIME = true
	if target.shield == false and table.contains(target.afflictions, "crippled left leg") and table.contains(target.afflictions, "crippled right leg") and table.contains(target.afflictions, "crippled left arm") and table.contains(target.afflictions, "crippled right arm") then
		expandAlias("vivi")
	elseif target.shield or target.aura then
		send("target nothing::target nothing::target nothing::quickdraw sabre shield::grip::RSL " ..target.name .. " " .. toxins[1] .. "::engage " .. target.name)
	elseif engage == false then
		send("target right leg::displace nothing::target right leg::displace nothing::target right leg::displace nothing::quickdraw sabre shield::grip::DSL " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::engage " .. target.name)
	end
end
</script>
						<command></command>
						<keyCode>16777267</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Left Arm FSL</name>
						<packageName></packageName>
						<script>toxins = {}
dslaffs = {}
Toxin.dsl.queue = {"ciguatoxintree","metrazoltree","hemotoxinpurge","mercury","butisol","xeroderma","deaf","strychninetree","iodine","calotropis","ciguatoxin","bromine","aconite","atropine","vitriol","mazanor","benzene2","benzedrine2","chloroform","benzene2","benzedrine2","opium","opium"}
limb = "none"


kelp_affs = 0

if (gmcp.Char.Vitals.bal ~= "1" or gmcp.Char.Vitals.eq ~= "1") then
	return
else 
pickdsltoxin()
	DSLTIME = true
	if target.shield == false and table.contains(target.afflictions, "crippled left leg") and table.contains(target.afflictions, "crippled right leg") and table.contains(target.afflictions, "crippled left arm") and table.contains(target.afflictions, "crippled right arm") then
		expandAlias("vivi")
	elseif target.shield or target.aura then
		send("target nothing::target nothing::target nothing::quickdraw sabre shield::grip::RSL " ..target.name .. " " .. toxins[1] .. "::engage " .. target.name)
	elseif engage == false then
		send("target left arm::displace nothing::target left arm::displace nothing::target left arm::displace nothing::quickdraw sabre shield::grip::FSL " .. target.name .. " torso " .. toxins[1] .. "::engage " .. target.name)
	end
end
</script>
						<command></command>
						<keyCode>16777268</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Right Arm FSL</name>
						<packageName></packageName>
						<script>toxins = {}
dslaffs = {}
Toxin.dsl.queue = {"ciguatoxintree","metrazoltree","hemotoxinpurge","mercury","butisol","xeroderma","deaf","strychninetree","iodine","calotropis","ciguatoxin","bromine","aconite","atropine","vitriol","mazanor","benzene2","benzedrine2","chloroform","benzene2","benzedrine2","opium","opium"}
limb = "none"


kelp_affs = 0

if (gmcp.Char.Vitals.bal ~= "1" or gmcp.Char.Vitals.eq ~= "1") then
	return
else 
pickdsltoxin()
	DSLTIME = true
	if target.shield == false and table.contains(target.afflictions, "crippled left leg") and table.contains(target.afflictions, "crippled right leg") and table.contains(target.afflictions, "crippled left arm") and table.contains(target.afflictions, "crippled right arm") then
		expandAlias("vivi")
	elseif target.shield or target.aura then
		send("target nothing::target nothing::target nothing::quickdraw sabre shield::grip::RSL " ..target.name .. " " .. toxins[1] .. "::engage " .. target.name)
	elseif engage == false then
		send("target right arm::displace nothing::target right arm::displace nothing::target right arm::displace nothing::quickdraw sabre shield::grip::FSL " .. target.name .. " torso " .. toxins[1] .. "::engage " .. target.name)
	end
end
</script>
						<command></command>
						<keyCode>16777269</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Left Leg FSL</name>
						<packageName></packageName>
						<script>toxins = {}
dslaffs = {}
Toxin.dsl.queue = {"ciguatoxintree","metrazoltree","hemotoxinpurge","mercury","butisol","xeroderma","deaf","strychninetree","iodine","calotropis","ciguatoxin","bromine","aconite","atropine","vitriol","mazanor","benzene2","benzedrine2","chloroform","benzene2","benzedrine2","opium","opium"}
limb = "none"


kelp_affs = 0

if (gmcp.Char.Vitals.bal ~= "1" or gmcp.Char.Vitals.eq ~= "1") then
	return
else 
pickdsltoxin()
	DSLTIME = true
	if target.shield == false and table.contains(target.afflictions, "crippled left leg") and table.contains(target.afflictions, "crippled right leg") and table.contains(target.afflictions, "crippled left arm") and table.contains(target.afflictions, "crippled right arm") then
		expandAlias("vivi")
	elseif target.shield or target.aura then
		send("target nothing::target nothing::target nothing::quickdraw sabre shield::grip::RSL " ..target.name .. " " .. toxins[1] .. "::engage " .. target.name)
	elseif engage == false then
		send("target left leg::displace nothing::target left leg::displace nothing::target left leg::displace nothing::quickdraw sabre shield::grip::FSL " .. target.name .. " torso " .. toxins[1] .. "::engage " .. target.name)
	end
end
</script>
						<command></command>
						<keyCode>16777270</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Right Leg FSL</name>
						<packageName></packageName>
						<script>toxins = {}
dslaffs = {}
Toxin.dsl.queue = {"ciguatoxintree","metrazoltree","hemotoxinpurge","mercury","butisol","xeroderma","deaf","strychninetree","iodine","calotropis","ciguatoxin","bromine","aconite","atropine","vitriol","mazanor","benzene2","benzedrine2","chloroform","benzene2","benzedrine2","opium","opium"}
limb = "none"


kelp_affs = 0

if (gmcp.Char.Vitals.bal ~= "1" or gmcp.Char.Vitals.eq ~= "1") then
	return
else 
pickdsltoxin()
	DSLTIME = true
	if target.shield == false and table.contains(target.afflictions, "crippled left leg") and table.contains(target.afflictions, "crippled right leg") and table.contains(target.afflictions, "crippled left arm") and table.contains(target.afflictions, "crippled right arm") then
		expandAlias("vivi")
	elseif engage == false then
		send("target right leg::displace nothing::target right leg::displace nothing::target right leg::displace nothing::quickdraw sabre shield::grip::FSL " .. target.name .. " torso " .. toxins[1] .. "::engage " .. target.name)
	end
end
</script>
						<command></command>
						<keyCode>16777271</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>DSL Maidenhair</name>
						<packageName></packageName>
						<script>toxins = {}
Toxin.dsl.queue = {"ciguatoxin","metrazol","hemotoxin","mercury","butisol","xeroderma","strychnine","iodine","calotropis","bromine","aconite","atropine","noctec","mazanor","benzene2","benzedrine2","vitriol","chloroform","benzene2","benzedrine2","opium","opium"}
limb = "none"


kelp_affs = 0

if (gmcp.Char.Vitals.bal ~= "1" or gmcp.Char.Vitals.eq ~= "1") then
	return
else 
pickdsltoxin()
	DSLTIME = true
	if target.shield == false and table.contains(target.afflictions, "crippled left leg") and table.contains(target.afflictions, "crippled right leg") and table.contains(target.afflictions, "crippled left arm") and table.contains(target.afflictions, "crippled right arm") then
		expandAlias("vivi")
	elseif (target.shield or target.aura) and (table.contains(target.afflictions, "mutilated left leg") or table.contains(target.afflictions, "mutilated right leg") or table.contains(target.afflictions, "mutilated left arm") or table.contains(target.afflictions, "mutilated right arm")) then
		toxins = {}
		Toxin.dsl.queue = {"calotropis","mazanor","hemotoxin","ciguatoxin","mercury","iodine","bromine","aconite","benzene2","benzedrine2","butisol","xeroderma","strychnine","metrazol","ether","botulinum","calotropis","aconite","bromine","atropine","noctec","mazanor","vitriol","chloroform","benzene2","benzedrine2","opium","opium"}
		pickdsltoxin()
		send("target nothing::quickdraw sabre shield::grip::RSL " ..target.name .. " " .. toxins[1] .. "::engage " .. target.name)
	elseif (table.contains(target.afflictions, "mutilated left leg") or table.contains(target.afflictions, "mutilated right leg") or table.contains(target.afflictions, "mutilated left arm") or table.contains(target.afflictions, "mutilated right arm")) then
		toxins = {}
		Toxin.dsl.queue = {"calotropis","mazanor","hemotoxin","ciguatoxin","mercury","iodine","bromine","aconite","benzene2","benzedrine2","butisol","xeroderma","strychnine","metrazol","ether","botulinum","calotropis","aconite","bromine","atropine","noctec","mazanor","vitriol","chloroform","benzene2","benzedrine2","opium","opium"}
		pickdsltoxin()
		send("target nothing::displace nothing::quickdraw sabre shield::grip::DSL " ..target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::engage " .. target.name)	
	elseif target.shield or target.aura then
		send("target nothing::quickdraw sabre shield::grip::RSL " ..target.name .. " " .. toxins[1] .. "::engage " .. target.name)
	elseif engage == false then
		send("target nothing::displace nothing::quickdraw sabre shield::grip::DSL " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::engage " .. target.name)
	end
end
</script>
						<command></command>
						<keyCode>47</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>DSL No Maidenhair</name>
						<packageName></packageName>
						<script>toxins = {}
Toxin.dsl.queue = {"hemotoxin","mercury","butisol","xeroderma","strychnine","iodine","calotropis","bromine","aconite","atropine","noctec","mazanor","benzene2","benzedrine2","vitriol","chloroform","benzene2","benzedrine2","opium","opium"}
limb = "none"


kelp_affs = 0

if (gmcp.Char.Vitals.bal ~= "1" or gmcp.Char.Vitals.eq ~= "1") then
	return
else 
pickdsltoxin()
	DSLTIME = true
	if target.shield == false and table.contains(target.afflictions, "crippled left leg") and table.contains(target.afflictions, "crippled right leg") and table.contains(target.afflictions, "crippled left arm") and table.contains(target.afflictions, "crippled right arm") then
		expandAlias("vivi")
	elseif (target.shield or target.aura) and (table.contains(target.afflictions, "mutilated left leg") or table.contains(target.afflictions, "mutilated right leg") or table.contains(target.afflictions, "mutilated left arm") or table.contains(target.afflictions, "mutilated right arm")) then
		toxins = {}
		Toxin.dsl.queue = {"calotropis","mazanor","hemotoxin","ciguatoxin","mercury","iodine","bromine","aconite","benzene2","benzedrine2","butisol","xeroderma","strychnine","metrazol","ether","botulinum","calotropis","aconite","bromine","atropine","noctec","mazanor","vitriol","chloroform","benzene2","benzedrine2","opium","opium"}
		pickdsltoxin()
		send("target nothing::quickdraw sabre shield::grip::RSL " ..target.name .. " " .. toxins[1] .. "::engage " .. target.name)
	elseif (table.contains(target.afflictions, "mutilated left leg") or table.contains(target.afflictions, "mutilated right leg") or table.contains(target.afflictions, "mutilated left arm") or table.contains(target.afflictions, "mutilated right arm")) then
		toxins = {}
		Toxin.dsl.queue = {"calotropis","mazanor","hemotoxin","ciguatoxin","mercury","iodine","bromine","aconite","benzene2","benzedrine2","butisol","xeroderma","strychnine","metrazol","ether","botulinum","calotropis","aconite","bromine","atropine","noctec","mazanor","vitriol","chloroform","benzene2","benzedrine2","opium","opium"}
		pickdsltoxin()
		send("target nothing::displace nothing::quickdraw sabre shield::grip::DSL " ..target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::engage " .. target.name)	
	elseif target.shield or target.aura then
		send("target nothing::quickdraw sabre shield::grip::RSL " ..target.name .. " " .. toxins[1] .. "::engage " .. target.name)
	elseif engage == false then
		send("target nothing::displace nothing::quickdraw sabre shield::grip::DSL " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::engage " .. target.name)
	end
end
</script>
						<command></command>
						<keyCode>42</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Soulquench</name>
						<packageName></packageName>
						<script>toxins = {}
Toxin.dsl.queue = {"metrazol","ciguatoxin","hemotoxin","mercury","butisol","xeroderma","strychnine","iodine","calotropis","aconite","bromine","atropine","noctec","mazanor","benzene2","benzedrine2","vitriol","chloroform","benzene2","benzedrine2","opium","opium"}
limb = "none"

kelp_affs = 0

if (gmcp.Char.Vitals.bal ~= "1" or gmcp.Char.Vitals.eq ~= "1") then
	return
else 
pickdsltoxin()
	DSLTIME = true
	if target.shield == false and table.contains(target.afflictions, "crippled left leg") and table.contains(target.afflictions, "crippled right leg") and table.contains(target.afflictions, "crippled left arm") and table.contains(target.afflictions, "crippled right arm") then
		expandAlias("vivi")
	elseif soulquenchsabre == false and target.shield == false then
		send("stand::quickdraw sabre shield::grip::soulquench sabre in " .. target.name .. "::engage " .. target.name)

	elseif (target.shield or target.aura) and (table.contains(target.afflictions, "mutilated left leg") or table.contains(target.afflictions, "mutilated right leg") or table.contains(target.afflictions, "mutilated left arm") or table.contains(target.afflictions, "mutilated right arm")) then
		toxins = {}
		Toxin.dsl.queue = {"calotropis","mazanor","hemotoxin","ciguatoxin","mercury","iodine","bromine","aconite","benzene2","benzedrine2","butisol","xeroderma","strychnine","metrazol","ether","botulinum","calotropis","aconite","bromine","atropine","noctec","mazanor","vitriol","chloroform","benzene2","benzedrine2","opium","opium"}
		pickdsltoxin()
		send("target nothing::quickdraw sabre shield::grip::RSL " ..target.name .. " " .. toxins[1] .. "::engage " .. target.name)
	elseif (table.contains(target.afflictions, "mutilated left leg") or table.contains(target.afflictions, "mutilated right leg") or table.contains(target.afflictions, "mutilated left arm") or table.contains(target.afflictions, "mutilated right arm")) then
		toxins = {}
		Toxin.dsl.queue = {"calotropis","mazanor","hemotoxin","ciguatoxin","mercury","iodine","bromine","aconite","benzene2","benzedrine2","butisol","xeroderma","strychnine","metrazol","ether","botulinum","calotropis","aconite","bromine","atropine","noctec","mazanor","vitriol","chloroform","benzene2","benzedrine2","opium","opium"}
		pickdsltoxin()
		send("target nothing::displace nothing::quickdraw sabre shield::grip::DSL " ..target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::engage " .. target.name)	
	elseif target.shield or target.aura then
		send("target nothing::quickdraw sabre shield::grip::RSL " ..target.name .. " " .. toxins[1] .. "::engage " .. target.name)
	elseif engage == false then
		send("target nothing::displace nothing::quickdraw sabre shield::grip::DSL " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::engage " .. target.name)
	end
end
</script>
						<command></command>
						<keyCode>45</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>DSL Maidenhair F11</name>
						<packageName></packageName>
						<script>toxins = {}
Toxin.dsl.queue = {"ciguatoxin","metrazol","hemotoxin","mercury","butisol","xeroderma","strychnine","iodine","calotropis","bromine","aconite","atropine","noctec","mazanor","benzene2","benzedrine2","vitriol","chloroform","benzene2","benzedrine2","opium","opium"}
limb = "none"


kelp_affs = 0

if (gmcp.Char.Vitals.bal ~= "1" or gmcp.Char.Vitals.eq ~= "1") then
	return
else 
pickdsltoxin()
	DSLTIME = true
	if target.shield == false and table.contains(target.afflictions, "crippled left leg") and table.contains(target.afflictions, "crippled right leg") and table.contains(target.afflictions, "crippled left arm") and table.contains(target.afflictions, "crippled right arm") then
		expandAlias("vivi")
	elseif soulquench == true and soulquenchsabre == false and target.shield == false then
		send("stand::quickdraw sabre shield::grip::soulquench sabre in " .. target.name .. "::engage " .. target.name)
	elseif (target.shield or target.aura) and (table.contains(target.afflictions, "mutilated left leg") or table.contains(target.afflictions, "mutilated right leg") or table.contains(target.afflictions, "mutilated left arm") or table.contains(target.afflictions, "mutilated right arm")) then
		toxins = {}
		Toxin.dsl.queue = {"calotropis","mazanor","hemotoxin","ciguatoxin","mercury","iodine","bromine","aconite","benzene2","benzedrine2","butisol","xeroderma","strychnine","metrazol","ether","botulinum","calotropis","aconite","bromine","atropine","noctec","mazanor","vitriol","chloroform","benzene2","benzedrine2","opium","opium"}
		pickdsltoxin()
		send("target nothing::quickdraw sabre shield::grip::RSL " ..target.name .. " " .. toxins[1] .. "::engage " .. target.name)
	elseif (table.contains(target.afflictions, "mutilated left leg") or table.contains(target.afflictions, "mutilated right leg") or table.contains(target.afflictions, "mutilated left arm") or table.contains(target.afflictions, "mutilated right arm")) then
		toxins = {}
		Toxin.dsl.queue = {"calotropis","mazanor","hemotoxin","ciguatoxin","mercury","iodine","bromine","aconite","benzene2","benzedrine2","butisol","xeroderma","strychnine","metrazol","ether","botulinum","calotropis","aconite","bromine","atropine","noctec","mazanor","vitriol","chloroform","benzene2","benzedrine2","opium","opium"}
		pickdsltoxin()
		send("target nothing::displace nothing::quickdraw sabre shield::grip::DSL " ..target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::engage " .. target.name)	
	elseif target.shield or target.aura then
		send("target nothing::quickdraw sabre shield::grip::RSL " ..target.name .. " " .. toxins[1] .. "::engage " .. target.name)
	elseif engage == false then
		send("target nothing::displace nothing::quickdraw sabre shield::grip::DSL " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::engage " .. target.name)
	end
end
</script>
						<command></command>
						<keyCode>16777274</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>DSL Maidenhair F12</name>
						<packageName></packageName>
						<script>toxins = {}
Toxin.dsl.queue = {"hemotoxin","mercury","butisol","xeroderma","strychnine","iodine","calotropis","bromine","aconite","atropine","noctec","mazanor","benzene2","benzedrine2","vitriol","chloroform","benzene2","benzedrine2","opium","opium"}
limb = "none"


kelp_affs = 0

if (gmcp.Char.Vitals.bal ~= "1" or gmcp.Char.Vitals.eq ~= "1") then
	return
else 
pickdsltoxin()
	DSLTIME = true
	if target.shield == false and table.contains(target.afflictions, "crippled left leg") and table.contains(target.afflictions, "crippled right leg") and table.contains(target.afflictions, "crippled left arm") and table.contains(target.afflictions, "crippled right arm") then
		expandAlias("vivi")
	elseif soulquench == true and soulquenchsabre == false and target.shield == false then
		send("stand::quickdraw sabre shield::grip::soulquench sabre in " .. target.name .. "::engage " .. target.name)

	elseif (target.shield or target.aura) and (table.contains(target.afflictions, "mutilated left leg") or table.contains(target.afflictions, "mutilated right leg") or table.contains(target.afflictions, "mutilated left arm") or table.contains(target.afflictions, "mutilated right arm")) then
		toxins = {}
		Toxin.dsl.queue = {"calotropis","mazanor","hemotoxin","ciguatoxin","mercury","iodine","bromine","aconite","benzene2","benzedrine2","butisol","xeroderma","strychnine","metrazol","ether","botulinum","calotropis","aconite","bromine","atropine","noctec","mazanor","vitriol","chloroform","benzene2","benzedrine2","opium","opium"}
		pickdsltoxin()
		send("target nothing::quickdraw sabre shield::grip::RSL " ..target.name .. " " .. toxins[1] .. "::engage " .. target.name)
	elseif (table.contains(target.afflictions, "mutilated left leg") or table.contains(target.afflictions, "mutilated right leg") or table.contains(target.afflictions, "mutilated left arm") or table.contains(target.afflictions, "mutilated right arm")) then
		toxins = {}
		Toxin.dsl.queue = {"calotropis","mazanor","hemotoxin","ciguatoxin","mercury","iodine","bromine","aconite","benzene2","benzedrine2","butisol","xeroderma","strychnine","metrazol","ether","botulinum","calotropis","aconite","bromine","atropine","noctec","mazanor","vitriol","chloroform","benzene2","benzedrine2","opium","opium"}
		pickdsltoxin()
		send("target nothing::displace nothing::quickdraw sabre shield::grip::DSL " ..target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::engage " .. target.name)	
	elseif target.shield or target.aura then
		send("target nothing::quickdraw sabre shield::grip::RSL " ..target.name .. " " .. toxins[1] .. "::engage " .. target.name)
	elseif engage == false then
		send("target nothing::displace nothing::quickdraw sabre shield::grip::DSL " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::engage " .. target.name)
	end
end
</script>
						<command></command>
						<keyCode>16777275</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Head DSL</name>
						<packageName></packageName>
						<script>toxins = {}
dslaffs = {}
Toxin.dsl.queue = {"ciguatoxintree","butisol","metrazoltree","hemotoxinpurge","mercury","xeroderma","deaf","strychninetree","iodine","calotropis","ciguatoxin","bromine","aconite","atropine","vitriol","mazanor","benzene2","benzedrine2","chloroform","benzene2","benzedrine2","opium","opium"}
limb = "head"


kelp_affs = 0

if (gmcp.Char.Vitals.bal ~= "1" or gmcp.Char.Vitals.eq ~= "1") then
	return
else 
pickdsltoxin()
	DSLTIME = true
	if target.shield == false and table.contains(target.afflictions, "crippled left leg") and table.contains(target.afflictions, "crippled right leg") and table.contains(target.afflictions, "crippled left arm") and table.contains(target.afflictions, "crippled right arm") then
		expandAlias("vivi")
elseif target.shield or target.aura then
		send("target nothing::target nothing::target nothing::quickdraw sabre shield::grip::RSL " ..target.name .. " " .. toxins[1] .. "::engage " .. target.name)
	elseif engage == false then
		send("target head::displace nothing::target head::displace nothing::target head::displace nothing::quickdraw sabre shield::grip::DSL " .. target.name .. " " .. toxins[1] .. " " .. toxins[2] .. "::engage " .. target.name)
	end
end
</script>
						<command></command>
						<keyCode>16777272</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
				</KeyGroup>
				<KeyGroup isActive="no" isFolder="yes">
					<name>New Key Group</name>
					<packageName></packageName>
					<script></script>
					<command></command>
					<keyCode>-1</keyCode>
					<keyModifier>0</keyModifier>
					<Key isActive="yes" isFolder="no">
						<name>Maidenhair Eye</name>
						<packageName></packageName>
						<script>Toxin.Evileye.queue = {"numbness","sensitivity","asthma","clumsy","vomiting","impatience","anorexia","stupid","masochism","vertigo","confusion","dementia","paranoia","addiction","peace","reckless","dizzy","plague","sleep","sleep"}

toxins = {}
aff1 = toxins[1]
aff2 = toxins[2]

if (gmcp.Char.Vitals.bal ~= "1" or gmcp.Char.Vitals.eq ~= "1") then
	return
else
	send("contemplate brishi")
	if (target.shield) then
			if (not table.contains(target.afflictions, "hemotoxin")) then
				daeggerhunttoxin = "hemotoxin"
				send("daegger hunt " .. target.name .. " hemotoxin")
			elseif (not table.contains(target.afflictions, "iodine")) and (table.contains(target.afflictions, "asthma") and table.contains(target.afflictions, "numbness")) then
				daeggerhunttoxin = "iodine"
				send("daegger hunt " .. target.name .. " iodine")
			elseif (not table.contains(target.afflictions, "butisol")) then
				daeggerhunttoxin = "butisol"
				send("daegger hunt " .. target.name .. " butisol")
			elseif (not table.contains(target.afflictions, "xeroderma")) then
				daeggerhunttoxin = "xeroderma"
				send("daegger hunt " .. target.name .. " xeroderma")
			elseif (not table.contains(target.afflictions, "calotropis") and table.contains(target.afflictions, "iodine")) then
				daeggerhunttoxin = "calotropis"
				send("daegger hunt " .. target.name .. " calotropis")
			elseif (not table.contains(target.afflictions, "metrazol")) then
				daeggerhunttoxin = "metrazol"
				send("daegger hunt " .. target.name .. " metrazol")
			elseif (not table.contains(target.afflictions, "noctec")) then
				daeggerhunttoxin = "noctec"
				send("daegger hunt " .. target.name .. " noctec")
			elseif (not table.contains(target.afflictions, "mebaral")) then
				daeggerhunttoxin = "mebaral"
				send("daegger hunt " .. target.name .. " mebaral")
			elseif (not table.contains(target.afflictions, "crippled left arm") and not table.contains(target.afflictions, "crippled right arm")) then
				daeggerhunttoxin = "benzene"
				send("daegger hunt " .. target.name .. " benzene")
			elseif (not table.contains(target.afflictions, "crippled left leg") and not table.contains(target.afflictions, "crippled right leg")) then
				daeggerhunttoxin = "benzendrine"
				send("daegger hunt " .. target.name .. " benzedrine")
			end
		send("touch hammer "..target.name)
	else
	pickEvileyeToxin()
		if (target.curseward) then
			Dstab("breach")
		elseif table.contains(target.afflictions, "asthma") and table.contains(target.afflictions, "hemotoxin") and table.contains(target.afflictions, "butisol") and kelpinfirmity == false then
			send("stare " .. target.name .. " infirmity")
			sysEcho("Attempting Kelp Infirmity!")
		elseif table.contains(target.afflictions, "clumsiness") and table.contains(target.afflictions, "hemotoxin") and table.contains(target.afflictions, "butisol") and kelpinfirmity == false then
			send("stare " .. target.name .. " infirmity")
			sysEcho("Attempting Kelp Infirmity!")
		elseif table.contains(target.afflictions, "impatience") and table.contains(target.mentalaffs, "recklessness") and table.contains(target.mentalaffs, "dizziness") and mandrakeinfirmity == false then
			send("stare " .. target.name .. " infirmity")
			sysEcho("Attempting Mandrake Infirmity!")
		elseif table.contains(target.mentalaffs, "confusion") and table.contains(target.mentalaffs, "dementia") and table.contains(target.mentalaffs, "paranoia") and wormwoodinfirmity == false then
			send("stare " .. target.name .. " infirmity")
			sysEcho("Attempting Wormwood Infirmity!")
		elseif table.contains(target.mentalaffs, "stupidity") and table.contains(target.mentalaffs, "masochism") and table.contains(target.mentalaffs, "vertigo") and orphineinfirmity == false then
			send("stare " .. target.name .. " infirmity")
		else
			Dstab("deadeye")
		end
	end
end</script>
						<command></command>
						<keyCode>16777274</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>New Key</name>
						<packageName></packageName>
						<script>Toxin.Evileye.queue = {"asthma","clumsy","vomiting","impatience","anorexia","stupid","masochism","vertigo","confusion","dementia","paranoia","addiction","peace","reckless","dizzy","plague","sleep","sleep"}

toxins = {}
aff1 = toxins[1]
aff2 = toxins[2]

if (gmcp.Char.Vitals.bal ~= "1" or gmcp.Char.Vitals.eq ~= "1") then
	return
else
	send("contemplate brishi")
	if (target.shield) then
			if (not table.contains(target.afflictions, "hemotoxin")) then
				daeggerhunttoxin = "hemotoxin"
				send("daegger hunt " .. target.name .. " hemotoxin")
			elseif (not table.contains(target.afflictions, "iodine")) and (table.contains(target.afflictions, "asthma") and table.contains(target.afflictions, "numbness")) then
				daeggerhunttoxin = "iodine"
				send("daegger hunt " .. target.name .. " iodine")
			elseif (not table.contains(target.afflictions, "butisol")) then
				daeggerhunttoxin = "butisol"
				send("daegger hunt " .. target.name .. " butisol")
			elseif (not table.contains(target.afflictions, "xeroderma")) then
				daeggerhunttoxin = "xeroderma"
				send("daegger hunt " .. target.name .. " xeroderma")
			elseif (not table.contains(target.afflictions, "calotropis") and table.contains(target.afflictions, "iodine")) then
				daeggerhunttoxin = "calotropis"
				send("daegger hunt " .. target.name .. " calotropis")
			elseif (not table.contains(target.afflictions, "metrazol")) then
				daeggerhunttoxin = "metrazol"
				send("daegger hunt " .. target.name .. " metrazol")
			elseif (not table.contains(target.afflictions, "noctec")) then
				daeggerhunttoxin = "noctec"
				send("daegger hunt " .. target.name .. " noctec")
			elseif (not table.contains(target.afflictions, "mebaral")) then
				daeggerhunttoxin = "mebaral"
				send("daegger hunt " .. target.name .. " mebaral")
			elseif (not table.contains(target.afflictions, "crippled left arm") and not table.contains(target.afflictions, "crippled right arm")) then
				daeggerhunttoxin = "benzene"
				send("daegger hunt " .. target.name .. " benzene")
			elseif (not table.contains(target.afflictions, "crippled left leg") and not table.contains(target.afflictions, "crippled right leg")) then
				daeggerhunttoxin = "benzendrine"
				send("daegger hunt " .. target.name .. " benzedrine")
			end
		send("touch hammer "..target.name)
	else
	pickEvileyeToxin()
		if (target.curseward) then
			Dstab("breach")
		elseif table.contains(target.afflictions, "asthma") and table.contains(target.afflictions, "hemotoxin") and table.contains(target.afflictions, "butisol") and kelpinfirmity == false then
			send("stare " .. target.name .. " infirmity")
			sysEcho("Attempting Kelp Infirmity!")
		elseif table.contains(target.afflictions, "clumsiness") and table.contains(target.afflictions, "hemotoxin") and table.contains(target.afflictions, "butisol") and kelpinfirmity == false then
			send("stare " .. target.name .. " infirmity")
			sysEcho("Attempting Kelp Infirmity!")
		elseif table.contains(target.afflictions, "impatience") and table.contains(target.mentalaffs, "recklessness") and table.contains(target.mentalaffs, "dizziness") and mandrakeinfirmity == false then
			send("stare " .. target.name .. " infirmity")
			sysEcho("Attempting Mandrake Infirmity!")
		elseif table.contains(target.mentalaffs, "confusion") and table.contains(target.mentalaffs, "dementia") and table.contains(target.mentalaffs, "paranoia") and wormwoodinfirmity == false then
			send("stare " .. target.name .. " infirmity")
			sysEcho("Attempting Wormwood Infirmity!")
		elseif table.contains(target.mentalaffs, "stupidity") and table.contains(target.mentalaffs, "masochism") and table.contains(target.mentalaffs, "vertigo") and orphineinfirmity == false then
			send("stare " .. target.name .. " infirmity")
		else
			Dstab("deadeye")
		end
	end
end</script>
						<command></command>
						<keyCode>16777275</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
				</KeyGroup>
			</KeyGroup>
		</KeyGroup>
	</KeyPackage>
	<VariablePackage>
		<HiddenVariables />
		<VariableGroup>
			<name>ak</name>
			<keyType>4</keyType>
			<value></value>
			<valueType>5</valueType>
			<VariableGroup>
				<name>limbs</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<VariableGroup>
					<name>myformulas</name>
					<keyType>4</keyType>
					<value></value>
					<valueType>5</valueType>
				</VariableGroup>
				<VariableGroup>
					<name>myweapons</name>
					<keyType>4</keyType>
					<value></value>
					<valueType>5</valueType>
					<VariableGroup>
						<name>a Logosian longsword</name>
						<keyType>4</keyType>
						<value></value>
						<valueType>5</valueType>
						<Variable>
							<name>4000</name>
							<keyType>3</keyType>
							<value>9</value>
							<valueType>3</valueType>
						</Variable>
						<Variable>
							<name>5000</name>
							<keyType>3</keyType>
							<value>10</value>
							<valueType>3</valueType>
						</Variable>
						<Variable>
							<name>6000</name>
							<keyType>3</keyType>
							<value>11</value>
							<valueType>3</valueType>
						</Variable>
						<Variable>
							<name>2563</name>
							<keyType>3</keyType>
							<value>7</value>
							<valueType>3</valueType>
						</Variable>
					</VariableGroup>
					<VariableGroup>
						<name>a Soulpiercer</name>
						<keyType>4</keyType>
						<value></value>
						<valueType>5</valueType>
						<Variable>
							<name>4000</name>
							<keyType>3</keyType>
							<value>9</value>
							<valueType>3</valueType>
						</Variable>
						<Variable>
							<name>5000</name>
							<keyType>3</keyType>
							<value>10</value>
							<valueType>3</valueType>
						</Variable>
						<Variable>
							<name>6000</name>
							<keyType>3</keyType>
							<value>11</value>
							<valueType>3</valueType>
						</Variable>
						<Variable>
							<name>2563</name>
							<keyType>3</keyType>
							<value>7</value>
							<valueType>3</valueType>
						</Variable>
					</VariableGroup>
				</VariableGroup>
			</VariableGroup>
			<Variable>
				<name>nodisplay</name>
				<keyType>4</keyType>
				<value>false</value>
				<valueType>1</valueType>
			</Variable>
			<Variable>
				<name>spear</name>
				<keyType>4</keyType>
				<value>a Stormspear</value>
				<valueType>4</valueType>
			</Variable>
			<Variable>
				<name>obacktrack</name>
				<keyType>4</keyType>
				<value>true</value>
				<valueType>1</valueType>
			</Variable>
			<Variable>
				<name>disableAllEchos</name>
				<keyType>4</keyType>
				<value>false</value>
				<valueType>1</valueType>
			</Variable>
			<Variable>
				<name>odirk</name>
				<keyType>4</keyType>
				<value>Thoth's fang</value>
				<valueType>4</valueType>
			</Variable>
			<Variable>
				<name>highlighttarget</name>
				<keyType>4</keyType>
				<value>true</value>
				<valueType>1</valueType>
			</Variable>
			<Variable>
				<name>owhy</name>
				<keyType>4</keyType>
				<value>true</value>
				<valueType>1</valueType>
			</Variable>
			<VariableGroup>
				<name>MovementKeys</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>Tecton</value>
					<valueType>4</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>Maya</value>
					<valueType>4</valueType>
				</Variable>
			</VariableGroup>
			<Variable>
				<name>expertdiagnose</name>
				<keyType>4</keyType>
				<value>false</value>
				<valueType>1</valueType>
			</Variable>
			<Variable>
				<name>oprotrack</name>
				<keyType>4</keyType>
				<value>true</value>
				<valueType>1</valueType>
			</Variable>
		</VariableGroup>
		<VariableGroup>
			<name>target</name>
			<keyType>4</keyType>
			<value></value>
			<valueType>5</valueType>
			<VariableGroup>
				<name>mentalaffs</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
			</VariableGroup>
			<VariableGroup>
				<name>hypnoaffs</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
			</VariableGroup>
			<Variable>
				<name>name</name>
				<keyType>4</keyType>
				<value>107818</value>
				<valueType>4</valueType>
			</Variable>
			<VariableGroup>
				<name>target</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value></value>
					<valueType>4</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value></value>
					<valueType>4</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value></value>
					<valueType>4</valueType>
				</Variable>
			</VariableGroup>
			<Variable>
				<name>smoke</name>
				<keyType>4</keyType>
				<value>none</value>
				<valueType>4</valueType>
			</Variable>
			<Variable>
				<name>herb</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>4</valueType>
			</Variable>
		</VariableGroup>
	</VariablePackage>
</MudletPackage>
